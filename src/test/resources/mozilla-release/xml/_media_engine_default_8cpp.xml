<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_media_engine_default_8cpp" kind="file">
    <compoundname>MediaEngineDefault.cpp</compoundname>
    <includes local="yes">MediaEngineDefault.h</includes>
    <includes local="yes">prmem.h</includes>
    <includes local="yes">nsITimer.h</includes>
    <includes local="yes">nsCOMPtr.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/nsDOMMediaStream.h</includes>
    <includes local="yes">nsComponentManagerUtils.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/VideoUtils.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/webrtc/MediaEngine.h</includes>
    <includes local="yes">nsIDOMFile.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/MediaStreamGraph.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/VideoSegment.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/AudioSegment.h</includes>
    <includes local="yes">C:/tools/mozilla-release/content/media/StreamBuffer.h</includes>
    <includes local="yes">nsDOMFile.h</includes>
    <includes local="yes">nsILocalFile.h</includes>
    <includes local="yes">Layers.h</includes>
    <includes local="yes">ImageContainer.h</includes>
    <includes local="yes">ImageTypes.h</includes>
    <incdepgraph>
      <node id="624">
        <label>C:/tools/mozilla-release/content/media/VideoSegment.h</label>
      </node>
      <node id="629">
        <label>Layers.h</label>
      </node>
      <node id="630">
        <label>ImageContainer.h</label>
      </node>
      <node id="620">
        <label>C:/tools/mozilla-release/content/media/VideoUtils.h</label>
      </node>
      <node id="631">
        <label>ImageTypes.h</label>
      </node>
      <node id="626">
        <label>C:/tools/mozilla-release/content/media/StreamBuffer.h</label>
      </node>
      <node id="623">
        <label>C:/tools/mozilla-release/content/media/MediaStreamGraph.h</label>
      </node>
      <node id="621">
        <label>C:/tools/mozilla-release/content/media/webrtc/MediaEngine.h</label>
      </node>
      <node id="618">
        <label>C:/tools/mozilla-release/content/media/nsDOMMediaStream.h</label>
      </node>
      <node id="613">
        <label>C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp</label>
        <link refid="MediaEngineDefault.cpp"/>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
      </node>
      <node id="627">
        <label>nsDOMFile.h</label>
      </node>
      <node id="615">
        <label>prmem.h</label>
      </node>
      <node id="622">
        <label>nsIDOMFile.h</label>
      </node>
      <node id="619">
        <label>nsComponentManagerUtils.h</label>
      </node>
      <node id="625">
        <label>C:/tools/mozilla-release/content/media/AudioSegment.h</label>
      </node>
      <node id="617">
        <label>nsCOMPtr.h</label>
      </node>
      <node id="616">
        <label>nsITimer.h</label>
      </node>
      <node id="614">
        <label>MediaEngineDefault.h</label>
      </node>
      <node id="628">
        <label>nsILocalFile.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemozilla">mozilla</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_media_engine_default_8cpp_1a19b7f1b22403d61234a92decaeb6953a" prot="public" static="no">
        <name>CHANNELS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" line="19" bodyfile="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_media_engine_default_8cpp_1a99121df9a5bf0f9bc97566fe64ff0213" prot="public" static="no">
        <name>VIDEO_RATE</name>
        <initializer>USECS_PER_S</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" line="20" bodyfile="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_media_engine_default_8cpp_1a5b972bafb3267e820993812beca1b298" prot="public" static="no">
        <name>AUDIO_RATE</name>
        <initializer>16000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" line="21" bodyfile="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MediaEngineDefault.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsCOMPtr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsDOMFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsILocalFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Layers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ImageContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ImageTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MOZ_WIDGET_ANDROID</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;AndroidBridge.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsISupportsUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNELS<sp/>1</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIDEO_RATE<sp/>USECS_PER_S</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>AUDIO_RATE<sp/>16000</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mozilla<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">NS_IMPL_THREADSAFE_ISUPPORTS1(MediaEngineDefaultVideoSource,<sp/>nsITimerCallback)</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>Cannot<sp/>be<sp/>initialized<sp/>in<sp/>the<sp/>class<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">const<sp/>MediaEngineVideoOptions<sp/>MediaEngineDefaultVideoSource::mOpts<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>DEFAULT_WIDTH,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>DEFAULT_HEIGHT,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>DEFAULT_FPS,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>kVideoCodecI420</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">MediaEngineDefaultVideoSource::MediaEngineDefaultVideoSource()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>:<sp/>mTimer(nullptr)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kReleased;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">MediaEngineDefaultVideoSource::~MediaEngineDefaultVideoSource()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">MediaEngineDefaultVideoSource::GetName(nsAString&amp;<sp/>aName)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>aName.Assign(NS_LITERAL_STRING(</highlight><highlight class="stringliteral">&quot;Default<sp/>Video<sp/>Device&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">MediaEngineDefaultVideoSource::GetUUID(nsAString&amp;<sp/>aUUID)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>aUUID.Assign(NS_LITERAL_STRING(</highlight><highlight class="stringliteral">&quot;1041FCBD-3F12-4F7B-9E9B-1EC556DD5676&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="62"><highlight class="normal">MediaEngineDefaultVideoSource::Allocate()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kReleased)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kAllocated;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="73"><highlight class="normal">MediaEngineDefaultVideoSource::Deallocate()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kStopped<sp/>&amp;&amp;<sp/>mState<sp/>!=<sp/>kAllocated)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kReleased;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaEngineVideoOptions<sp/>*</highlight></codeline>
<codeline lineno="83"><highlight class="normal">MediaEngineDefaultVideoSource::GetOptions()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;mOpts;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="89"><highlight class="normal">MediaEngineDefaultVideoSource::Start(SourceMediaStream*<sp/>aStream,<sp/>TrackID<sp/>aID)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kAllocated)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>mTimer<sp/>=<sp/>do_CreateInstance(NS_TIMER_CONTRACTID);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTimer)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>mSource<sp/>=<sp/>aStream;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>single<sp/>blank<sp/>Image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>ImageFormat<sp/>format<sp/>=<sp/>PLANAR_YCBCR;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>mImageContainer<sp/>=<sp/>layers::LayerManager::CreateImageContainer();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>nsRefPtr&lt;layers::Image&gt;<sp/>image<sp/>=<sp/>mImageContainer-&gt;CreateImage(&amp;format,<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>((DEFAULT_WIDTH<sp/>*<sp/>DEFAULT_HEIGHT)<sp/>*<sp/>3<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>mImage<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">layers::PlanarYCbCrImage*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(image.get());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>frame<sp/>=<sp/>(uint8_t*)<sp/>PR_Malloc(len);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>memset(frame,<sp/>0x80,<sp/>len);<sp/></highlight><highlight class="comment">//<sp/>Gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>lumaBpp<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>chromaBpp<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>layers::PlanarYCbCrImage::Data<sp/>data;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>data.mYChannel<sp/>=<sp/>frame;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>data.mYSize<sp/>=<sp/>gfxIntSize(DEFAULT_WIDTH,<sp/>DEFAULT_HEIGHT);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>data.mYStride<sp/>=<sp/>DEFAULT_WIDTH<sp/>*<sp/>lumaBpp<sp/>/<sp/>8.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>data.mCbCrStride<sp/>=<sp/>DEFAULT_WIDTH<sp/>*<sp/>chromaBpp<sp/>/<sp/>8.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>data.mCbChannel<sp/>=<sp/>frame<sp/>+<sp/>DEFAULT_HEIGHT<sp/>*<sp/>data.mYStride;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>data.mCrChannel<sp/>=<sp/>data.mCbChannel<sp/>+<sp/>DEFAULT_HEIGHT<sp/>*<sp/>data.mCbCrStride<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>data.mCbCrSize<sp/>=<sp/>gfxIntSize(DEFAULT_WIDTH<sp/>/<sp/>2,<sp/>DEFAULT_HEIGHT<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>data.mPicX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>data.mPicY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>data.mPicSize<sp/>=<sp/>gfxIntSize(DEFAULT_WIDTH,<sp/>DEFAULT_HEIGHT);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>data.mStereoMode<sp/>=<sp/>STEREO_MODE_MONO;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SetData<sp/>copies<sp/>data,<sp/>so<sp/>we<sp/>can<sp/>free<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>mImage-&gt;SetData(data);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>PR_Free(frame);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AddTrack<sp/>takes<sp/>ownership<sp/>of<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>VideoSegment<sp/>*segment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VideoSegment();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>segment-&gt;AppendFrame(image.forget(),<sp/>USECS_PER_S<sp/>/<sp/>DEFAULT_FPS,<sp/>gfxIntSize(DEFAULT_WIDTH,<sp/>DEFAULT_HEIGHT));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>mSource-&gt;AddTrack(aID,<sp/>VIDEO_RATE,<sp/>0,<sp/>segment);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>aren&apos;t<sp/>going<sp/>to<sp/>add<sp/>any<sp/>more<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>mSource-&gt;AdvanceKnownTracksTime(STREAM_TIME_MAX);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>TrackID<sp/>so<sp/>we<sp/>can<sp/>end<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>mTrackID<sp/>=<sp/>aID;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>timer<sp/>for<sp/>subsequent<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>mTimer-&gt;InitWithCallback(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>1000<sp/>/<sp/>DEFAULT_FPS,<sp/>nsITimer::TYPE_REPEATING_SLACK);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kStarted;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="152"><highlight class="normal">MediaEngineDefaultVideoSource::Stop()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kStarted)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTimer)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>mTimer-&gt;Cancel();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>mTimer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>mSource-&gt;EndTrack(mTrackID);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>mSource-&gt;Finish();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kStopped;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="172"><highlight class="normal">MediaEngineDefaultVideoSource::Snapshot(uint32_t<sp/>aDuration,<sp/>nsIDOMFile**<sp/>aFile)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>*aFile<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MOZ_WIDGET_ANDROID</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_NOT_IMPLEMENTED;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AndroidBridge::Bridge())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_UNEXPECTED;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>nsAutoString<sp/>filePath;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>AndroidBridge::Bridge()-&gt;ShowFilePickerForMimeType(filePath,<sp/>NS_LITERAL_STRING(</highlight><highlight class="stringliteral">&quot;image/*&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIFile&gt;<sp/>file;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>NS_NewLocalFile(filePath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>getter_AddRefs(file));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>NS_ADDREF(*aFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>nsDOMFileFile(file));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">NS_IMETHODIMP</highlight></codeline>
<codeline lineno="196"><highlight class="normal">MediaEngineDefaultVideoSource::Notify(nsITimer*<sp/>aTimer)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>VideoSegment<sp/>segment;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>nsRefPtr&lt;layers::PlanarYCbCrImage&gt;<sp/>image<sp/>=<sp/>mImage;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>segment.AppendFrame(image.forget(),<sp/>USECS_PER_S<sp/>/<sp/>DEFAULT_FPS,<sp/>gfxIntSize(DEFAULT_WIDTH,<sp/>DEFAULT_HEIGHT));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>mSource-&gt;AppendToTrack(mTrackID,<sp/>&amp;segment);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">MediaEngineDefaultVideoSource::NotifyPull(MediaStreamGraph*<sp/>aGraph,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamTime<sp/>aDesiredTime)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>-<sp/>we<sp/>push<sp/>video<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">NS_IMPL_THREADSAFE_ISUPPORTS1(MediaEngineDefaultAudioSource,<sp/>nsITimerCallback)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">MediaEngineDefaultAudioSource::MediaEngineDefaultAudioSource()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>:<sp/>mTimer(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kReleased;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">MediaEngineDefaultAudioSource::~MediaEngineDefaultAudioSource()</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">MediaEngineDefaultAudioSource::NotifyPull(MediaStreamGraph*<sp/>aGraph,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamTime<sp/>aDesiredTime)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>-<sp/>we<sp/>push<sp/>audio<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">MediaEngineDefaultAudioSource::GetName(nsAString&amp;<sp/>aName)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>aName.Assign(NS_LITERAL_STRING(</highlight><highlight class="stringliteral">&quot;Default<sp/>Audio<sp/>Device&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">MediaEngineDefaultAudioSource::GetUUID(nsAString&amp;<sp/>aUUID)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>aUUID.Assign(NS_LITERAL_STRING(</highlight><highlight class="stringliteral">&quot;B7CBD7C1-53EF-42F9-8353-73F61C70C092&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="251"><highlight class="normal">MediaEngineDefaultAudioSource::Allocate()</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kReleased)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kAllocated;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="262"><highlight class="normal">MediaEngineDefaultAudioSource::Deallocate()</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kStopped<sp/>&amp;&amp;<sp/>mState<sp/>!=<sp/>kAllocated)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kReleased;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="272"><highlight class="normal">MediaEngineDefaultAudioSource::Start(SourceMediaStream*<sp/>aStream,<sp/>TrackID<sp/>aID)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kAllocated)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>mTimer<sp/>=<sp/>do_CreateInstance(NS_TIMER_CONTRACTID);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTimer)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>mSource<sp/>=<sp/>aStream;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AddTrack<sp/>will<sp/>take<sp/>ownership<sp/>of<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>AudioSegment*<sp/>segment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AudioSegment();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>segment-&gt;Init(CHANNELS);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>mSource-&gt;AddTrack(aID,<sp/>AUDIO_RATE,<sp/>0,<sp/>segment);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>aren&apos;t<sp/>going<sp/>to<sp/>add<sp/>any<sp/>more<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>mSource-&gt;AdvanceKnownTracksTime(STREAM_TIME_MAX);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>TrackID<sp/>so<sp/>we<sp/>can<sp/>finish<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>mTrackID<sp/>=<sp/>aID;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>Audio<sp/>frame<sp/>per<sp/>Video<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>mTimer-&gt;InitWithCallback(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>1000<sp/>/<sp/>MediaEngineDefaultVideoSource::DEFAULT_FPS,<sp/>nsITimer::TYPE_REPEATING_SLACK);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kStarted;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="304"><highlight class="normal">MediaEngineDefaultAudioSource::Stop()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mState<sp/>!=<sp/>kStarted)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTimer)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>mTimer-&gt;Cancel();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>mTimer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>mSource-&gt;EndTrack(mTrackID);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>mSource-&gt;Finish();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>mState<sp/>=<sp/>kStopped;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="324"><highlight class="normal">MediaEngineDefaultAudioSource::Snapshot(uint32_t<sp/>aDuration,<sp/>nsIDOMFile**<sp/>aFile)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_NOT_IMPLEMENTED;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">NS_IMETHODIMP</highlight></codeline>
<codeline lineno="330"><highlight class="normal">MediaEngineDefaultAudioSource::Notify(nsITimer*<sp/>aTimer)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>AudioSegment<sp/>segment;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>segment.Init(CHANNELS);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>segment.InsertNullDataAtStart(AUDIO_RATE/100);<sp/></highlight><highlight class="comment">//<sp/>10ms<sp/>of<sp/>fake<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>mSource-&gt;AppendToTrack(mTrackID,<sp/>&amp;segment);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">MediaEngineDefault::EnumerateVideoDevices(nsTArray&lt;nsRefPtr&lt;MediaEngineVideoSource&gt;<sp/>&gt;*<sp/>aVSources)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mMutex);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>int32_t<sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>int32_t<sp/>len<sp/>=<sp/>mVSources.Length();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>nsRefPtr&lt;MediaEngineVideoSource&gt;<sp/>source<sp/>=<sp/>mVSources.ElementAt(i);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>aVSources-&gt;AppendElement(source);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;IsAvailable())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>streams<sp/>are<sp/>currently<sp/>busy,<sp/>just<sp/>make<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>nsRefPtr&lt;MediaEngineVideoSource&gt;<sp/>newSource<sp/>=</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MediaEngineDefaultVideoSource();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>mVSources.AppendElement(newSource);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>aVSources-&gt;AppendElement(newSource);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">MediaEngineDefault::EnumerateAudioDevices(nsTArray&lt;nsRefPtr&lt;MediaEngineAudioSource&gt;<sp/>&gt;*<sp/>aASources)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mMutex);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>int32_t<sp/>len<sp/>=<sp/>mASources.Length();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>nsRefPtr&lt;MediaEngineAudioSource&gt;<sp/>source<sp/>=<sp/>mASources.ElementAt(i);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;IsAvailable())<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aASources-&gt;AppendElement(source);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>streams<sp/>are<sp/>currently<sp/>busy,<sp/>just<sp/>make<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aASources-&gt;Length()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>nsRefPtr&lt;MediaEngineAudioSource&gt;<sp/>newSource<sp/>=</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MediaEngineDefaultAudioSource();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>mASources.AppendElement(newSource);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>aASources-&gt;AppendElement(newSource);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mozilla</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/tools/mozilla-release/content/media/webrtc/MediaEngineDefault.cpp"/>
  </compounddef>
</doxygen>
