<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_video_utils_8cpp" kind="file">
    <compoundname>VideoUtils.cpp</compoundname>
    <includes local="yes">VideoUtils.h</includes>
    <includes local="yes">MediaResource.h</includes>
    <includes local="yes">nsTimeRanges.h</includes>
    <includes local="yes">nsMathUtils.h</includes>
    <includes local="yes">prtypes.h</includes>
    <includes local="yes">mozilla/StandardInteger.h</includes>
    <incdepgraph>
      <node id="445">
        <label>nsTimeRanges.h</label>
      </node>
      <node id="447">
        <label>prtypes.h</label>
      </node>
      <node id="444">
        <label>MediaResource.h</label>
      </node>
      <node id="443">
        <label>VideoUtils.h</label>
      </node>
      <node id="442">
        <label>C:/tools/mozilla-release/content/media/VideoUtils.cpp</label>
        <link refid="VideoUtils.cpp"/>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>mozilla/StandardInteger.h</label>
      </node>
      <node id="446">
        <label>nsMathUtils.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_video_utils_8cpp_1ac8260b1e1f8220d9a62c2e8187797eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CheckedInt64</type>
        <definition>CheckedInt64 FramesToUsecs</definition>
        <argsstring>(int64_t aFrames, uint32_t aRate)</argsstring>
        <name>FramesToUsecs</name>
        <param>
          <type>int64_t</type>
          <declname>aFrames</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>aRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="15" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_video_utils_8cpp_1af108b851185fe86e6303caabba063586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CheckedInt64</type>
        <definition>CheckedInt64 UsecsToFrames</definition>
        <argsstring>(int64_t aUsecs, uint32_t aRate)</argsstring>
        <name>UsecsToFrames</name>
        <param>
          <type>int64_t</type>
          <declname>aUsecs</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>aRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="21" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_video_utils_8cpp_1ab7cb7226eca69cc276752d5272b6d12c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t ConditionDimension</definition>
        <argsstring>(float aValue)</argsstring>
        <name>ConditionDimension</name>
        <param>
          <type>float</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="26" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_video_utils_8cpp_1a3939c2bf4ecc7570edfa146363b3b08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScaleDisplayByAspectRatio</definition>
        <argsstring>(nsIntSize &amp;aDisplay, float aAspectRatio)</argsstring>
        <name>ScaleDisplayByAspectRatio</name>
        <param>
          <type>nsIntSize &amp;</type>
          <declname>aDisplay</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aAspectRatio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="34" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_video_utils_8cpp_1a1ef2f267be6978ee92b361db78dbaf67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t BytesToTime</definition>
        <argsstring>(int64_t offset, int64_t length, int64_t durationUs)</argsstring>
        <name>BytesToTime</name>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>durationUs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="44" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="_video_utils_8cpp_1afafd98d1d9b1b75ce18329a9516f09f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetEstimatedBufferedTimeRanges</definition>
        <argsstring>(mozilla::MediaResource *aStream, int64_t aDurationUsecs, nsTimeRanges *aOutBuffered)</argsstring>
        <name>GetEstimatedBufferedTimeRanges</name>
        <param>
          <type>mozilla::MediaResource *</type>
          <declname>aStream</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>aDurationUsecs</declname>
        </param>
        <param>
          <type>nsTimeRanges *</type>
          <declname>aOutBuffered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp" line="55" bodyfile="C:/tools/mozilla-release/content/media/VideoUtils.cpp" bodystart="52" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>file,<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VideoUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MediaResource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsTimeRanges.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsMathUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prtypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mozilla/StandardInteger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>from<sp/>number<sp/>of<sp/>audio<sp/>frames<sp/>to<sp/>microseconds,<sp/>given<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>audio<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">CheckedInt64<sp/>FramesToUsecs(int64_t<sp/>aFrames,<sp/>uint32_t<sp/>aRate)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CheckedInt64(aFrames)<sp/>*<sp/>USECS_PER_S)<sp/>/<sp/>aRate;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>from<sp/>microseconds<sp/>to<sp/>number<sp/>of<sp/>audio<sp/>frames,<sp/>given<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>audio<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">CheckedInt64<sp/>UsecsToFrames(int64_t<sp/>aUsecs,<sp/>uint32_t<sp/>aRate)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CheckedInt64(aUsecs)<sp/>*<sp/>aRate)<sp/>/<sp/>USECS_PER_S;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>ConditionDimension(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aValue)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>exclude<sp/>NaNs<sp/>and<sp/>too-big<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aValue<sp/>&gt;<sp/>1.0<sp/>&amp;&amp;<sp/>aValue<sp/>&lt;=<sp/>INT32_MAX)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int32_t(NS_round(aValue));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScaleDisplayByAspectRatio(nsIntSize&amp;<sp/>aDisplay,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aAspectRatio)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aAspectRatio<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>intrinsic<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>aDisplay.width<sp/>=<sp/>ConditionDimension(aAspectRatio<sp/>*<sp/>aDisplay.width);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>intrinsic<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>aDisplay.height<sp/>=<sp/>ConditionDimension(aDisplay.height<sp/>/<sp/>aAspectRatio);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/>BytesToTime(int64_t<sp/>offset,<sp/>int64_t<sp/>length,<sp/>int64_t<sp/>durationUs)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>NS_ASSERTION(length<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>positive<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>double(offset)<sp/>/<sp/>double(length);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int64_t(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(durationUs)<sp/>*<sp/>r);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetEstimatedBufferedTimeRanges(mozilla::MediaResource*<sp/>aStream,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>aDurationUsecs,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsTimeRanges*<sp/>aOutBuffered)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>cache<sp/>if<sp/>the<sp/>media<sp/>takes<sp/>0us<sp/>to<sp/>play.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aDurationUsecs<sp/>&lt;=<sp/>0<sp/>||<sp/>!aStream<sp/>||<sp/>!aOutBuffered)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>completely<sp/>cached<sp/>files.<sp/><sp/>This<sp/>also<sp/>handles<sp/>local<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aStream-&gt;IsDataCachedToEndOfResource(0))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>aOutBuffered-&gt;Add(0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(aDurationUsecs)<sp/>/<sp/>USECS_PER_S);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>int64_t<sp/>totalBytes<sp/>=<sp/>aStream-&gt;GetLength();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can&apos;t<sp/>determine<sp/>the<sp/>total<sp/>size,<sp/>pretend<sp/>that<sp/>we<sp/>have<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>buffered.<sp/>This<sp/>will<sp/>put<sp/>us<sp/>in<sp/>a<sp/>state<sp/>of<sp/>eternally-low-on-undecoded-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>not<sp/>great,<sp/>but<sp/>about<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalBytes<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>int64_t<sp/>startOffset<sp/>=<sp/>aStream-&gt;GetNextCachedData(0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startOffset<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>endOffset<sp/>=<sp/>aStream-&gt;GetCachedDataEnd(startOffset);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bytes<sp/>[startOffset..endOffset]<sp/>are<sp/>cached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(startOffset<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Integer<sp/>underflow<sp/>in<sp/>GetBuffered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(endOffset<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Integer<sp/>underflow<sp/>in<sp/>GetBuffered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>startUs<sp/>=<sp/>BytesToTime(startOffset,<sp/>totalBytes,<sp/>aDurationUsecs);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>endUs<sp/>=<sp/>BytesToTime(endOffset,<sp/>totalBytes,<sp/>aDurationUsecs);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startUs<sp/>!=<sp/>endUs)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aOutBuffered-&gt;Add(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(startUs)<sp/>/<sp/>USECS_PER_S,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(endUs)<sp/>/<sp/>USECS_PER_S);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>startOffset<sp/>=<sp/>aStream-&gt;GetNextCachedData(endOffset);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/tools/mozilla-release/content/media/VideoUtils.cpp"/>
  </compounddef>
</doxygen>
