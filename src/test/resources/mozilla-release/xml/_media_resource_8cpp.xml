<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_media_resource_8cpp" kind="file">
    <compoundname>MediaResource.cpp</compoundname>
    <includes local="yes">MediaResource.h</includes>
    <includes local="yes">mozilla/Mutex.h</includes>
    <includes local="yes">nsDebug.h</includes>
    <includes local="yes">MediaDecoder.h</includes>
    <includes local="yes">nsNetUtil.h</includes>
    <includes local="yes">nsThreadUtils.h</includes>
    <includes local="yes">nsIFile.h</includes>
    <includes local="yes">nsIFileChannel.h</includes>
    <includes local="yes">nsIHttpChannel.h</includes>
    <includes local="yes">nsISeekableStream.h</includes>
    <includes local="yes">nsIInputStream.h</includes>
    <includes local="yes">nsIOutputStream.h</includes>
    <includes local="yes">nsIRequestObserver.h</includes>
    <includes local="yes">nsIStreamListener.h</includes>
    <includes local="yes">nsIScriptSecurityManager.h</includes>
    <includes local="yes">nsCrossSiteListenerProxy.h</includes>
    <includes local="yes">nsHTMLMediaElement.h</includes>
    <includes local="yes">nsError.h</includes>
    <includes local="yes">nsICachingChannel.h</includes>
    <includes local="yes">nsURILoader.h</includes>
    <includes local="yes">nsIAsyncVerifyRedirectCallback.h</includes>
    <includes local="yes">mozilla/Util.h</includes>
    <includes local="yes">nsContentUtils.h</includes>
    <includes local="yes">nsHostObjectProtocolHandler.h</includes>
    <incdepgraph>
      <node id="249">
        <label>nsError.h</label>
      </node>
      <node id="255">
        <label>nsHostObjectProtocolHandler.h</label>
      </node>
      <node id="253">
        <label>mozilla/Util.h</label>
      </node>
      <node id="239">
        <label>nsIFileChannel.h</label>
      </node>
      <node id="231">
        <label>C:/tools/mozilla-release/content/media/MediaResource.cpp</label>
        <link refid="MediaResource.cpp"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>nsThreadUtils.h</label>
      </node>
      <node id="236">
        <label>nsNetUtil.h</label>
      </node>
      <node id="240">
        <label>nsIHttpChannel.h</label>
      </node>
      <node id="241">
        <label>nsISeekableStream.h</label>
      </node>
      <node id="244">
        <label>nsIRequestObserver.h</label>
      </node>
      <node id="238">
        <label>nsIFile.h</label>
      </node>
      <node id="233">
        <label>mozilla/Mutex.h</label>
      </node>
      <node id="232">
        <label>MediaResource.h</label>
      </node>
      <node id="243">
        <label>nsIOutputStream.h</label>
      </node>
      <node id="235">
        <label>MediaDecoder.h</label>
      </node>
      <node id="248">
        <label>nsHTMLMediaElement.h</label>
      </node>
      <node id="252">
        <label>nsIAsyncVerifyRedirectCallback.h</label>
      </node>
      <node id="245">
        <label>nsIStreamListener.h</label>
      </node>
      <node id="250">
        <label>nsICachingChannel.h</label>
      </node>
      <node id="254">
        <label>nsContentUtils.h</label>
      </node>
      <node id="234">
        <label>nsDebug.h</label>
      </node>
      <node id="251">
        <label>nsURILoader.h</label>
      </node>
      <node id="247">
        <label>nsCrossSiteListenerProxy.h</label>
      </node>
      <node id="246">
        <label>nsIScriptSecurityManager.h</label>
      </node>
      <node id="242">
        <label>nsIInputStream.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmozilla_1_1_copy_segment_closure" prot="public">mozilla::CopySegmentClosure</innerclass>
    <innerclass refid="classmozilla_1_1_data_ended" prot="public">mozilla::DataEnded</innerclass>
    <innerclass refid="classmozilla_1_1_file_media_resource" prot="public">mozilla::FileMediaResource</innerclass>
    <innerclass refid="classmozilla_1_1_loaded_event" prot="public">mozilla::LoadedEvent</innerclass>
    <innernamespace refid="namespacemozilla">mozilla</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_media_resource_8cpp_1ad285b8d43b6e90320e33e7438e3e171b" prot="public" static="no">
        <name>LOG</name>
        <param><defname>msg</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/MediaResource.cpp" line="41" bodyfile="C:/tools/mozilla-release/content/media/MediaResource.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_media_resource_8cpp_1a9527dfe33d9b1b9cc7b3294548b7b196" prot="public" static="no">
        <name>CMLOG</name>
        <param><defname>msg</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/MediaResource.cpp" line="42" bodyfile="C:/tools/mozilla-release/content/media/MediaResource.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_media_resource_8cpp_1a96796132e9b305dea627d3840297165c" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t HTTP_OK_CODE</definition>
        <argsstring></argsstring>
        <name>HTTP_OK_CODE</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/MediaResource.cpp" line="45" bodyfile="C:/tools/mozilla-release/content/media/MediaResource.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_media_resource_8cpp_1abfb8905175b9450e0a3ef6024714bbfa" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t HTTP_PARTIAL_RESPONSE_CODE</definition>
        <argsstring></argsstring>
        <name>HTTP_PARTIAL_RESPONSE_CODE</name>
        <initializer>= 206</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/tools/mozilla-release/content/media/MediaResource.cpp" line="46" bodyfile="C:/tools/mozilla-release/content/media/MediaResource.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>Mode:<sp/>C++;<sp/>tab-width:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>2<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>ts=2<sp/>sw=2<sp/>sts=2<sp/>et<sp/>cindent:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>License,<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>file,<sp/>You<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MediaResource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mozilla/Mutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsDebug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MediaDecoder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsNetUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsThreadUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIFileChannel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIHttpChannel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsISeekableStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIInputStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIOutputStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIRequestObserver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIStreamListener.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIScriptSecurityManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsCrossSiteListenerProxy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsHTMLMediaElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsError.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsICachingChannel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsURILoader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsIAsyncVerifyRedirectCallback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mozilla/Util.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>DebugOnly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsContentUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nsHostObjectProtocolHandler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PR_LOGGING</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal">PRLogModuleInfo*<sp/>gMediaResourceLog;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG(msg,<sp/>...)<sp/>PR_LOG(gMediaResourceLog,<sp/>PR_LOG_DEBUG,<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg,<sp/>##__VA_ARGS__))</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Debug<sp/>logging<sp/>macro<sp/>with<sp/>object<sp/>pointer<sp/>and<sp/>class<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMLOG(msg,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG(&quot;%p<sp/>[ChannelMediaResource]:<sp/>&quot;<sp/>msg,<sp/>this,<sp/>##__VA_ARGS__)</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LOG(msg,<sp/>...)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CMLOG(msg,<sp/>...)</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>HTTP_OK_CODE<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>HTTP_PARTIAL_RESPONSE_CODE<sp/>=<sp/>206;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mozilla<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">ChannelMediaResource::ChannelMediaResource(MediaDecoder*<sp/>aDecoder,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>nsIChannel*<sp/>aChannel,<sp/>nsIURI*<sp/>aURI)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>:<sp/>MediaResource(aDecoder,<sp/>aChannel,<sp/>aURI),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>mOffset(0),<sp/>mSuspendCount(0),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>mReopenOnError(false),<sp/>mIgnoreClose(false),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>mCacheStream(this),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>mLock(</highlight><highlight class="stringliteral">&quot;ChannelMediaResource.mLock&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>mIgnoreResume(false),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>mSeekingForMetadata(false),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mByteRangeDownloads(false),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>mByteRangeFirstOpen(true),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>mSeekOffsetMonitor(</highlight><highlight class="stringliteral">&quot;media.dashseekmonitor&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>mSeekOffset(-1)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PR_LOGGING</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gMediaResourceLog)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>gMediaResourceLog<sp/>=<sp/>PR_NewLogModule(</highlight><highlight class="stringliteral">&quot;MediaResource&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">ChannelMediaResource::~ChannelMediaResource()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mListener)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kill<sp/>its<sp/>reference<sp/>to<sp/>us<sp/>since<sp/>we&apos;re<sp/>going<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>mListener-&gt;Revoke();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ChannelMediaResource::Listener<sp/>just<sp/>observes<sp/>the<sp/>channel<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forwards<sp/>notifications<sp/>to<sp/>the<sp/>ChannelMediaResource.<sp/>We<sp/>use<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>listener<sp/>objects<sp/>so<sp/>that<sp/>when<sp/>we<sp/>open<sp/>a<sp/>new<sp/>stream<sp/>for<sp/>a<sp/>seek<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>disconnect<sp/>the<sp/>old<sp/>listener<sp/>from<sp/>the<sp/>ChannelMediaResource<sp/>and<sp/>hook<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>new<sp/>listener,<sp/>so<sp/>notifications<sp/>from<sp/>the<sp/>old<sp/>channel<sp/>are<sp/>discarded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>don&apos;t<sp/>confuse<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">NS_IMPL_ISUPPORTS4(ChannelMediaResource::Listener,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIRequestObserver,<sp/>nsIStreamListener,<sp/>nsIChannelEventSink,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIInterfaceRequestor)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="90"><highlight class="normal">ChannelMediaResource::Listener::OnStartRequest(nsIRequest*<sp/>aRequest,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsISupports*<sp/>aContext)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mResource)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource-&gt;OnStartRequest(aRequest);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="99"><highlight class="normal">ChannelMediaResource::Listener::OnStopRequest(nsIRequest*<sp/>aRequest,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsISupports*<sp/>aContext,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsresult<sp/>aStatus)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mResource)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource-&gt;OnStopRequest(aRequest,<sp/>aStatus);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="109"><highlight class="normal">ChannelMediaResource::Listener::OnDataAvailable(nsIRequest*<sp/>aRequest,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsISupports*<sp/>aContext,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIInputStream*<sp/>aStream,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>aOffset,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aCount)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mResource)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResource-&gt;OnDataAvailable(aRequest,<sp/>aStream,<sp/>aCount);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="121"><highlight class="normal">ChannelMediaResource::Listener::AsyncOnChannelRedirect(nsIChannel*<sp/>aOldChannel,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIChannel*<sp/>aNewChannel,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aFlags,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIAsyncVerifyRedirectCallback*<sp/>cb)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>NS_OK;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mResource)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>mResource-&gt;OnChannelRedirect(aOldChannel,<sp/>aNewChannel,<sp/>aFlags);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>cb-&gt;OnRedirectVerifyCallback(NS_OK);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="138"><highlight class="normal">ChannelMediaResource::Listener::GetInterface(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nsIID<sp/>&amp;<sp/>aIID,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**aResult)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QueryInterface(aIID,<sp/>aResult);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="144"><highlight class="normal">ChannelMediaResource::OnStartRequest(nsIRequest*<sp/>aRequest)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mChannel.get()<sp/>==<sp/>aRequest,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>channel!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(owner,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(element,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>nsresult<sp/>status;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>aRequest-&gt;GetStatus(&amp;status);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element-&gt;ShouldCheckAllowOrigin())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>request<sp/>was<sp/>cancelled<sp/>by<sp/>nsCORSListenerProxy<sp/>due<sp/>to<sp/>failing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>CORS<sp/>security<sp/>check,<sp/>send<sp/>an<sp/>error<sp/>through<sp/>to<sp/>the<sp/>media<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>NS_ERROR_DOM_BAD_URI)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;NetworkError();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_DOM_BAD_URI;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIHttpChannel&gt;<sp/>hc<sp/>=<sp/>do_QueryInterface(aRequest);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>seekable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hc)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>responseStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>hc-&gt;GetResponseStatus(&amp;responseStatus);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>succeeded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>hc-&gt;GetRequestSucceeded(&amp;succeeded);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!succeeded<sp/>&amp;&amp;<sp/>NS_SUCCEEDED(status))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTTP-level<sp/>error<sp/>(e.g.<sp/>4xx);<sp/>treat<sp/>this<sp/>as<sp/>a<sp/>fatal<sp/>network-level<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>might<sp/>get<sp/>this<sp/>on<sp/>a<sp/>seek.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note<sp/>that<sp/>lower-level<sp/>errors<sp/>indicated<sp/>by<sp/>NS_FAILED(status)<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handled<sp/>in<sp/>OnStopRequest.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>416<sp/>error<sp/>should<sp/>treated<sp/>as<sp/>EOF<sp/>here...<sp/>it&apos;s<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>don&apos;t<sp/>get<sp/>Content-Length,<sp/>we<sp/>read<sp/>N<sp/>bytes,<sp/>then<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suspend<sp/>and<sp/>resume,<sp/>the<sp/>resume<sp/>reopens<sp/>the<sp/>channel<sp/>and<sp/>we<sp/>seek<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>N,<sp/>but<sp/>there<sp/>are<sp/>no<sp/>more<sp/>bytes,<sp/>so<sp/>we<sp/>get<sp/>a<sp/>416</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Requested<sp/>Range<sp/>Not<sp/>Satisfiable&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(responseStatus<sp/>!=<sp/>HTTP_REQUESTED_RANGE_NOT_SATISFIABLE_CODE)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;NetworkError();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>disconnects<sp/>our<sp/>listener<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>any<sp/>more<sp/>data.<sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>certainly<sp/>don&apos;t<sp/>want<sp/>an<sp/>error<sp/>page<sp/>to<sp/>end<sp/>up<sp/>in<sp/>our<sp/>cache!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>nsAutoCString<sp/>ranges;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>hc-&gt;GetResponseHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;Accept-Ranges&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acceptsRanges<sp/>=<sp/>ranges.EqualsLiteral(</highlight><highlight class="stringliteral">&quot;bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOffset<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>duration<sp/>headers<sp/>from<sp/>known<sp/>Ogg<sp/>content<sp/>systems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>case<sp/>of<sp/>multiple<sp/>options<sp/>for<sp/>obtaining<sp/>the<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>order<sp/>of<sp/>precedence<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>The<sp/>Media<sp/>resource<sp/>metadata<sp/>if<sp/>possible<sp/>(done<sp/>by<sp/>the<sp/>decoder<sp/>itself).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>Content-Duration<sp/>message<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>X-AMZ-Meta-Content-Duration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4)<sp/>X-Content-Duration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5)<sp/>Perform<sp/>a<sp/>seek<sp/>in<sp/>the<sp/>decoder<sp/>to<sp/>find<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsAutoCString<sp/>durationText;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsresult<sp/>ec<sp/>=<sp/>NS_OK;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>hc-&gt;GetResponseHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;Content-Duration&quot;</highlight><highlight class="normal">),<sp/>durationText);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>hc-&gt;GetResponseHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;X-AMZ-Meta-Content-Duration&quot;</highlight><highlight class="normal">),<sp/>durationText);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>hc-&gt;GetResponseHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;X-Content-Duration&quot;</highlight><highlight class="normal">),<sp/>durationText);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(rv))<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>durationText.ToDouble(&amp;ec);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec<sp/>==<sp/>NS_OK<sp/>&amp;&amp;<sp/>duration<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;SetDuration(duration);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;SetInfinite(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>response<sp/>code<sp/>for<sp/>byte-range<sp/>requests<sp/>(seeking,<sp/>chunk<sp/>requests).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mByteRange.IsNull()<sp/>&amp;&amp;<sp/>(responseStatus<sp/>==<sp/>HTTP_PARTIAL_RESPONSE_CODE))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Byte<sp/>range<sp/>requests<sp/>should<sp/>get<sp/>partial<sp/>response<sp/>codes<sp/>and<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accept<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!acceptsRanges)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMLOG(</highlight><highlight class="stringliteral">&quot;Error!<sp/>HTTP_PARTIAL_RESPONSE_CODE<sp/>received<sp/>but<sp/>server<sp/>says<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;range<sp/>requests<sp/>are<sp/>not<sp/>accepted!<sp/>Channel[%p]&quot;</highlight><highlight class="normal">,<sp/>hc.get());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;NetworkError();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>Content-Range<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rangeStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rangeEnd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rangeTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>ParseContentRangeHeader(hc,<sp/>rangeStart,<sp/>rangeEnd,<sp/>rangeTotal);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Content-Range<sp/>header<sp/>text<sp/>should<sp/>be<sp/>parse-able.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMLOG(</highlight><highlight class="stringliteral">&quot;Error<sp/>processing<sp/>\&apos;Content-Range&apos;<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HTTP_PARTIAL_RESPONSE_CODE:<sp/>rv[%x]channel<sp/>[%p]&quot;</highlight><highlight class="normal">,<sp/>rv,<sp/>hc.get());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;NetworkError();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>some<sp/>warnings<sp/>if<sp/>the<sp/>ranges<sp/>are<sp/>unexpected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>These<sp/>could<sp/>be<sp/>error<sp/>conditions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_WARN_IF_FALSE(mByteRange.mStart<sp/>==<sp/>rangeStart,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;response<sp/>range<sp/>start<sp/>does<sp/>not<sp/>match<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_WARN_IF_FALSE(mOffset<sp/>==<sp/>rangeStart,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;response<sp/>range<sp/>start<sp/>does<sp/>not<sp/>match<sp/>current<sp/>offset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_WARN_IF_FALSE(mByteRange.mEnd<sp/>==<sp/>rangeEnd,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;response<sp/>range<sp/>end<sp/>does<sp/>not<sp/>match<sp/>request&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>media<sp/>cache<sp/>about<sp/>the<sp/>length<sp/>and<sp/>start<sp/>offset<sp/>of<sp/>data<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>If<sp/>aRangeTotal<sp/>==<sp/>-1,<sp/>then<sp/>the<sp/>total<sp/>bytes<sp/>is<sp/>unknown<sp/>at<sp/>this<sp/>stage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>now,<sp/>tell<sp/>the<sp/>decoder<sp/>that<sp/>the<sp/>stream<sp/>is<sp/>infinite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeTotal<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCacheStream.NotifyDataLength(rangeTotal);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;SetInfinite(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCacheStream.NotifyDataStarted(rangeStart);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOffset<sp/>=<sp/>rangeStart;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acceptsRanges<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((mOffset<sp/>&gt;<sp/>0)<sp/>||<sp/>!mByteRange.IsNull())</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(responseStatus<sp/>==<sp/>HTTP_OK_CODE))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>an<sp/>OK<sp/>response<sp/>but<sp/>we<sp/>were<sp/>seeking,<sp/>or<sp/>requesting<sp/>a<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range,<sp/>then<sp/>we<sp/>have<sp/>to<sp/>assume<sp/>that<sp/>seeking<sp/>doesn&apos;t<sp/>work.<sp/>We<sp/>also<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>tell<sp/>the<sp/>cache<sp/>that<sp/>it&apos;s<sp/>getting<sp/>data<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCacheStream.NotifyDataStarted(0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>server<sp/>claimed<sp/>it<sp/>supported<sp/>range<sp/>requests.<sp/><sp/>It<sp/>lied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acceptsRanges<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOffset<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(responseStatus<sp/>==<sp/>HTTP_OK_CODE<sp/>||</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responseStatus<sp/>==<sp/>HTTP_PARTIAL_RESPONSE_CODE))<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>weren&apos;t<sp/>seeking<sp/>and<sp/>got<sp/>a<sp/>valid<sp/>response<sp/>status,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>length<sp/>of<sp/>the<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>cl<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hc-&gt;GetContentLength(&amp;cl);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCacheStream.NotifyDataLength(cl);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>we<sp/>probably<sp/>should<sp/>examine<sp/>the<sp/>Content-Range<sp/>header<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>server<sp/>gave<sp/>us<sp/>a<sp/>range<sp/>which<sp/>is<sp/>not<sp/>quite<sp/>what<sp/>we<sp/>asked<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>an<sp/>HTTP_OK_CODE<sp/>response<sp/>to<sp/>our<sp/>byte<sp/>range<sp/>request,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>server<sp/>isn&apos;t<sp/>sending<sp/>Accept-Ranges:bytes<sp/>then<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>seeking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>seekable<sp/>=</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseStatus<sp/>==<sp/>HTTP_PARTIAL_RESPONSE_CODE<sp/>||<sp/>acceptsRanges;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seekable)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;SetInfinite(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>mDecoder-&gt;SetSeekable(seekable);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>mCacheStream.SetSeekable(seekable);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsICachingChannel&gt;<sp/>cc<sp/>=<sp/>do_QueryInterface(aRequest);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fromCache<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>cc-&gt;IsFromCache(&amp;fromCache);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(rv)<sp/>&amp;&amp;<sp/>!fromCache)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc-&gt;SetCacheAsFile(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannelStatistics.Start(TimeStamp::Now());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>mReopenOnError<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>seeking<sp/>to<sp/>get<sp/>metadata,<sp/>because<sp/>we<sp/>are<sp/>playing<sp/>an<sp/>OGG<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>if<sp/>the<sp/>channel<sp/>gets<sp/>closed<sp/>without<sp/>us<sp/>suspending<sp/>it<sp/>explicitly.<sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>want<sp/>to<sp/>tell<sp/>the<sp/>element<sp/>that<sp/>the<sp/>download<sp/>has<sp/>finished<sp/>whereas<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>happended<sp/>to<sp/>have<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>media<sp/>while<sp/>seeking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>mIgnoreClose<sp/>=<sp/>mSeekingForMetadata;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSuspendCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-suspend<sp/>the<sp/>channel<sp/>if<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>suspended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>call<sp/>PossiblySuspend<sp/>here<sp/>since<sp/>the<sp/>channel<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>definitely<sp/>in<sp/>the<sp/>right<sp/>state<sp/>for<sp/>us<sp/>in<sp/>OnStartRequest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;Suspend();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>mIgnoreResume<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fires<sp/>an<sp/>initial<sp/>progress<sp/>event<sp/>and<sp/>sets<sp/>up<sp/>the<sp/>stall<sp/>counter<sp/>so<sp/>stall<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fire<sp/>if<sp/>no<sp/>download<sp/>occurs<sp/>within<sp/>the<sp/>required<sp/>time<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>mDecoder-&gt;Progress(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="348"><highlight class="normal">ChannelMediaResource::ParseContentRangeHeader(nsIHttpChannel<sp/>*<sp/>aHttpChan,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&amp;<sp/>aRangeStart,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&amp;<sp/>aRangeEnd,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&amp;<sp/>aRangeTotal)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>NS_ENSURE_ARG(aHttpChan);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>nsAutoCString<sp/>rangeStr;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>aHttpChan-&gt;GetResponseHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;Content-Range&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeStr);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>NS_ENSURE_FALSE(rangeStr.IsEmpty(),<sp/>NS_ERROR_ILLEGAL_VALUE);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>range<sp/>header:<sp/>e.g.<sp/>Content-Range:<sp/>bytes<sp/>7000-7999/8000.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>int32_t<sp/>spacePos<sp/>=<sp/>rangeStr.Find(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>int32_t<sp/>dashPos<sp/>=<sp/>rangeStr.Find(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>spacePos);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>int32_t<sp/>slashPos<sp/>=<sp/>rangeStr.Find(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dashPos);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>nsAutoCString<sp/>aRangeStartText;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>rangeStr.Mid(aRangeStartText,<sp/>spacePos+1,<sp/>dashPos-(spacePos+1));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>aRangeStart<sp/>=<sp/>aRangeStartText.ToInteger64(&amp;rv);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(0<sp/>&lt;=<sp/>aRangeStart,<sp/>NS_ERROR_ILLEGAL_VALUE);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>nsAutoCString<sp/>aRangeEndText;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>rangeStr.Mid(aRangeEndText,<sp/>dashPos+1,<sp/>slashPos-(dashPos+1));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>aRangeEnd<sp/>=<sp/>aRangeEndText.ToInteger64(&amp;rv);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(aRangeStart<sp/>&lt;<sp/>aRangeEnd,<sp/>NS_ERROR_ILLEGAL_VALUE);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>nsAutoCString<sp/>aRangeTotalText;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>rangeStr.Right(aRangeTotalText,<sp/>rangeStr.Length()-(slashPos+1));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aRangeTotalText[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>aRangeTotal<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>aRangeTotal<sp/>=<sp/>aRangeTotalText.ToInteger64(&amp;rv);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(aRangeEnd<sp/>&lt;<sp/>aRangeTotal,<sp/>NS_ERROR_ILLEGAL_VALUE);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>CMLOG(</highlight><highlight class="stringliteral">&quot;Received<sp/>bytes<sp/>[%d]<sp/>to<sp/>[%d]<sp/>of<sp/>[%d]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aRangeStart,<sp/>aRangeEnd,<sp/>aRangeTotal);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="395"><highlight class="normal">ChannelMediaResource::OnStopRequest(nsIRequest*<sp/>aRequest,<sp/>nsresult<sp/>aStatus)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mChannel.get()<sp/>==<sp/>aRequest,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>channel!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mSuspendCount<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;How<sp/>can<sp/>OnStopRequest<sp/>fire<sp/>while<sp/>we&apos;re<sp/>suspended?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannelStatistics.Stop(TimeStamp::Now());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>were<sp/>loading<sp/>a<sp/>byte<sp/>range,<sp/>notify<sp/>decoder<sp/>and<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>this<sp/>for<sp/>unterminated<sp/>byte<sp/>range<sp/>requests,<sp/>e.g.<sp/>seeking<sp/>for<sp/>whole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>downloads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mByteRangeDownloads)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>mDecoder-&gt;NotifyDownloadEnded(aStatus);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>aStatus<sp/>might<sp/>have<sp/>succeeded<sp/>---<sp/>this<sp/>might<sp/>be<sp/>a<sp/>normal<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>even<sp/>in<sp/>situations<sp/>where<sp/>the<sp/>server<sp/>cut<sp/>us<sp/>off<sp/>because<sp/>we<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>suspended.<sp/>So<sp/>we<sp/>need<sp/>to<sp/>&quot;reopen<sp/>on<sp/>error&quot;<sp/>in<sp/>that<sp/>case<sp/>too.<sp/>The<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cases<sp/>where<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>reopen<sp/>are<sp/>when<sp/>*we*<sp/>closed<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>don&apos;t<sp/>reopen<sp/>if<sp/>we<sp/>need<sp/>to<sp/>seek<sp/>and<sp/>we<sp/>don&apos;t<sp/>think<sp/>we<sp/>can...<sp/>that<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cause<sp/>us<sp/>to<sp/>just<sp/>re-read<sp/>the<sp/>stream,<sp/>which<sp/>would<sp/>be<sp/>really<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mReopenOnError<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aStatus<sp/>!=<sp/>NS_ERROR_PARSED_DATA_CACHED<sp/>&amp;&amp;<sp/>aStatus<sp/>!=<sp/>NS_BINDING_ABORTED<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mOffset<sp/>==<sp/>0<sp/>||<sp/>mCacheStream.IsSeekable()))<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>stream<sp/>did<sp/>close<sp/>normally,<sp/>then<sp/>if<sp/>the<sp/>server<sp/>is<sp/>seekable<sp/>we&apos;ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>seek<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>resource<sp/>and<sp/>get<sp/>an<sp/>HTTP<sp/>416<sp/>error<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>nothing<sp/>there,<sp/>so<sp/>this<sp/>isn&apos;t<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>CacheClientSeek(mOffset,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(rv))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>reopen/reseek<sp/>fails,<sp/>just<sp/>fall<sp/>through<sp/>and<sp/>treat<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>as<sp/>fatal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mIgnoreClose)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>mCacheStream.NotifyDataEnded(aStatus);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>this<sp/>request<sp/>back<sp/>into<sp/>the<sp/>foreground.<sp/><sp/>This<sp/>is<sp/>necessary<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requests<sp/>owned<sp/>by<sp/>video<sp/>documents<sp/>to<sp/>ensure<sp/>the<sp/>load<sp/>group<sp/>fires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnStopRequest<sp/>when<sp/>restoring<sp/>from<sp/>session<sp/>history.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>nsLoadFlags<sp/>loadFlags;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugOnly&lt;nsresult&gt;<sp/>rv<sp/>=<sp/>mChannel-&gt;GetLoadFlags(&amp;loadFlags);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;GetLoadFlags()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loadFlags<sp/>&amp;<sp/>nsIRequest::LOAD_BACKGROUND)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModifyLoadFlags(loadFlags<sp/>&amp;<sp/>~nsIRequest::LOAD_BACKGROUND);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="452"><highlight class="normal">ChannelMediaResource::OnChannelRedirect(nsIChannel*<sp/>aOld,<sp/>nsIChannel*<sp/>aNew,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aFlags)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>mChannel<sp/>=<sp/>aNew;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>SetupChannelHeaders();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="structmozilla_1_1_copy_segment_closure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmozilla_1_1_copy_segment_closure" kindref="compound">CopySegmentClosure</ref><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIPrincipal&gt;<sp/>mPrincipal;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>ChannelMediaResource*<sp/><sp/>mResource;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NS_METHOD</highlight></codeline>
<codeline lineno="466"><highlight class="normal">ChannelMediaResource::CopySegmentToCache(nsIInputStream<sp/>*aInStream,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*aClosure,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aFromSegment,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aToOffset,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aCount,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*aWriteCount)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="structmozilla_1_1_copy_segment_closure" kindref="compound">CopySegmentClosure</ref>*<sp/>closure<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structmozilla_1_1_copy_segment_closure" kindref="compound">CopySegmentClosure</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(aClosure);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>closure-&gt;mResource-&gt;mDecoder-&gt;NotifyDataArrived(aFromSegment,<sp/>aCount,<sp/>closure-&gt;mResource-&gt;mOffset);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>track<sp/>of<sp/>where<sp/>we&apos;re<sp/>up<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>closure-&gt;mResource-&gt;mOffset<sp/>+=<sp/>aCount;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>LOG(</highlight><highlight class="stringliteral">&quot;%p<sp/>[ChannelMediaResource]:<sp/>CopySegmentToCache<sp/>new<sp/>mOffset<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closure-&gt;mResource,<sp/>closure-&gt;mResource-&gt;mOffset);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>closure-&gt;mResource-&gt;mCacheStream.NotifyDataReceived(aCount,<sp/>aFromSegment,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closure-&gt;mPrincipal);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>*aWriteCount<sp/>=<sp/>aCount;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="488"><highlight class="normal">ChannelMediaResource::OnDataAvailable(nsIRequest*<sp/>aRequest,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIInputStream*<sp/>aStream,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aCount)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mChannel.get()<sp/>==<sp/>aRequest,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>channel!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannelStatistics.AddBytes(aCount);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>CopySegmentClosure<sp/>closure;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>nsIScriptSecurityManager*<sp/>secMan<sp/>=<sp/>nsContentUtils::GetSecurityManager();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(secMan<sp/>&amp;&amp;<sp/>mChannel)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>secMan-&gt;GetChannelPrincipal(mChannel,<sp/>getter_AddRefs(closure.mPrincipal));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>closure.mResource<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count<sp/>=<sp/>aCount;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>read;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>aStream-&gt;ReadSegments(CopySegmentToCache,<sp/>&amp;closure,<sp/>count,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;read);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(read<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>0<sp/>bytes<sp/>while<sp/>data<sp/>was<sp/>available?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>read;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>|OpenByteRange|</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>For<sp/>terminated<sp/>byte<sp/>range<sp/>requests,<sp/>use<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>Callback<sp/>is<sp/>|MediaDecoder|::|NotifyByteRangeDownloaded|().</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>See<sp/>|CacheClientSeek|<sp/>also.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="527"><highlight class="normal">ChannelMediaResource::OpenByteRange(nsIStreamListener**<sp/>aStreamListener,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaByteRange<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>aByteRange)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>mByteRangeDownloads<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>mByteRange<sp/>=<sp/>aByteRange;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenByteRange<sp/>may<sp/>be<sp/>called<sp/>multiple<sp/>times;<sp/>same<sp/>URL,<sp/>different<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>first<sp/>call<sp/>using<sp/>this<sp/>URL,<sp/>forward<sp/>to<sp/>Open<sp/>for<sp/>some<sp/>init.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mByteRangeFirstOpen)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>mByteRangeFirstOpen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Open(aStreamListener);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>subsequent<sp/>calls,<sp/>ensure<sp/>channel<sp/>is<sp/>recreated<sp/>with<sp/>correct<sp/>byte<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>RecreateChannel();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OpenChannel(aStreamListener);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal">nsresult<sp/>ChannelMediaResource::Open(nsIStreamListener<sp/>**aStreamListener)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>mCacheStream.Init();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mOffset<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Who<sp/>set<sp/>mOffset<sp/>already?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mChannel)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we&apos;re<sp/>a<sp/>clone,<sp/>the<sp/>decoder<sp/>might<sp/>ask<sp/>us<sp/>to<sp/>Open<sp/>even<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>haven&apos;t<sp/>established<sp/>an<sp/>mChannel<sp/>(because<sp/>we<sp/>might<sp/>not<sp/>need<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(!aStreamListener,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>already<sp/>been<sp/>given<sp/>a<sp/>channel<sp/>if<sp/>we&apos;re<sp/>to<sp/>return<sp/>a<sp/>stream<sp/>listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OpenChannel(aStreamListener);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">nsresult<sp/>ChannelMediaResource::OpenChannel(nsIStreamListener**<sp/>aStreamListener)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(mChannel,<sp/>NS_ERROR_NULL_POINTER);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!mListener,<sp/></highlight><highlight class="stringliteral">&quot;Listener<sp/>should<sp/>have<sp/>been<sp/>removed<sp/>by<sp/>now&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aStreamListener)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>*aStreamListener<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>mListener<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Listener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(mListener,<sp/>NS_ERROR_OUT_OF_MEMORY);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aStreamListener)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>*aStreamListener<sp/>=<sp/>mListener;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ADDREF(*aStreamListener);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;SetNotificationCallbacks(mListener.get());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>nsCOMPtr&lt;nsIStreamListener&gt;<sp/>listener<sp/>=<sp/>mListener.get();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>if<sp/>we&apos;re<sp/>loading<sp/>cross<sp/>domain,<sp/>that<sp/>the<sp/>server<sp/>is<sp/>sending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>authorizing<sp/>Access-Control<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(owner,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(element,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element-&gt;ShouldCheckAllowOrigin())<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsRefPtr&lt;nsCORSListenerProxy&gt;<sp/>crossSiteListener<sp/>=</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>nsCORSListenerProxy(mListener,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;NodePrincipal(),</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>crossSiteListener-&gt;Init(mChannel);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listener<sp/>=<sp/>crossSiteListener;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(crossSiteListener,<sp/>NS_ERROR_OUT_OF_MEMORY);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>nsContentUtils::GetSecurityManager()-&gt;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckLoadURIWithPrincipal(element-&gt;NodePrincipal(),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mURI,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIScriptSecurityManager::STANDARD);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>SetupChannelHeaders();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>mChannel-&gt;AsyncOpen(listener,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>media<sp/>element<sp/>that<sp/>we<sp/>are<sp/>fetching<sp/>data<sp/>from<sp/>a<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;DownloadResumed(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::SetupChannelHeaders()</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>use<sp/>a<sp/>byte<sp/>range<sp/>request<sp/>even<sp/>if<sp/>we&apos;re<sp/>reading<sp/>from<sp/>the<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>resource.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>enables<sp/>us<sp/>to<sp/>detect<sp/>if<sp/>the<sp/>stream<sp/>supports<sp/>byte<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>requests,<sp/>and<sp/>therefore<sp/>seeking,<sp/>early.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIHttpChannel&gt;<sp/>hc<sp/>=<sp/>do_QueryInterface(mChannel);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hc)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>|mByteRange|<sp/>for<sp/>a<sp/>specific<sp/>chunk,<sp/>or<sp/>|mOffset|<sp/>if<sp/>seeking<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complete<sp/>file<sp/>download.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>nsAutoCString<sp/>rangeString(</highlight><highlight class="stringliteral">&quot;bytes=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mByteRange.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rangeString.AppendInt(mByteRange.mStart);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOffset<sp/>=<sp/>mByteRange.mStart;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rangeString.AppendInt(mOffset);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>rangeString.Append(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mByteRange.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rangeString.AppendInt(mByteRange.mEnd);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>hc-&gt;SetRequestHeader(NS_LITERAL_CSTRING(</highlight><highlight class="stringliteral">&quot;Range&quot;</highlight><highlight class="normal">),<sp/>rangeString,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>Accept<sp/>header<sp/>for<sp/>video<sp/>and<sp/>audio<sp/>types<sp/>only<sp/>(Bug<sp/>489071)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;SetRequestHeaders(hc);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(mOffset<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>know<sp/>how<sp/>to<sp/>seek<sp/>on<sp/>this<sp/>channel<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">nsresult<sp/>ChannelMediaResource::Close()</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>mCacheStream.Close();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">already_AddRefed&lt;nsIPrincipal&gt;<sp/>ChannelMediaResource::GetCurrentPrincipal()</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIPrincipal&gt;<sp/>principal<sp/>=<sp/>mCacheStream.GetCurrentPrincipal();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>principal.forget();</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ChannelMediaResource::CanClone()</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.IsAvailableForSharing();</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">MediaResource*<sp/>ChannelMediaResource::CloneData(MediaDecoder*<sp/>aDecoder)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mCacheStream.IsAvailableForSharing(),<sp/></highlight><highlight class="stringliteral">&quot;Stream<sp/>can&apos;t<sp/>be<sp/>cloned&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>ChannelMediaResource*<sp/>resource<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ChannelMediaResource(aDecoder,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>mURI);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>the<sp/>clone<sp/>is<sp/>treated<sp/>as<sp/>suspended<sp/>by<sp/>the<sp/>cache,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>channel.<sp/>If<sp/>the<sp/>cache<sp/>needs<sp/>to<sp/>read<sp/>data<sp/>from<sp/>the<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>call<sp/>CacheClientResume<sp/>(or<sp/>CacheClientSeek<sp/>with<sp/>aResume<sp/>true)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>recreate<sp/>the<sp/>channel.<sp/>This<sp/>way,<sp/>if<sp/>all<sp/>of<sp/>the<sp/>media<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>already<sp/>in<sp/>the<sp/>cache<sp/>we<sp/>don&apos;t<sp/>create<sp/>an<sp/>unneccesary<sp/>HTTP<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>perform<sp/>a<sp/>useless<sp/>HTTP<sp/>transaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>resource-&gt;mSuspendCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>resource-&gt;mCacheStream.InitAsClone(&amp;mCacheStream);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>resource-&gt;mChannelStatistics<sp/>=<sp/>mChannelStatistics;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>resource-&gt;mChannelStatistics.Stop(TimeStamp::Now());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resource;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::CloseChannel()</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannelStatistics.Stop(TimeStamp::Now());</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mListener)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>mListener-&gt;Revoke();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>mListener<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mChannel)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSuspendCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resume<sp/>the<sp/>channel<sp/>before<sp/>we<sp/>cancel<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PossiblyResume();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>status<sp/>we<sp/>use<sp/>here<sp/>won&apos;t<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>decoder,<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>already<sp/>revoked<sp/>the<sp/>listener.<sp/>It<sp/>can<sp/>however<sp/>be<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>DocumentViewerImpl::LoadComplete<sp/>if<sp/>our<sp/>channel<sp/>is<sp/>the<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>kicked<sp/>off<sp/>creation<sp/>of<sp/>a<sp/>video<sp/>document.<sp/>We<sp/>don&apos;t<sp/>want<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>document<sp/>load<sp/>to<sp/>think<sp/>there<sp/>was<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NS_ERROR_PARSED_DATA_CACHED<sp/>is<sp/>the<sp/>best<sp/>thing<sp/>we<sp/>have<sp/>for<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;Cancel(NS_ERROR_PARSED_DATA_CACHED);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">nsresult<sp/>ChannelMediaResource::ReadFromCache(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>aOffset,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aCount)</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.ReadFromCache(aBuffer,<sp/>aOffset,<sp/>aCount);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal">nsresult<sp/>ChannelMediaResource::Read(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aCount,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t*<sp/>aBytes)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.Read(aBuffer,<sp/>aCount,<sp/>aBytes);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">nsresult<sp/>ChannelMediaResource::Seek(int32_t<sp/>aWhence,<sp/>int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>|aOffset|,<sp/>because<sp/>Media<sp/>Cache<sp/>may<sp/>request<sp/>a<sp/>diff<sp/>offset<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mByteRangeDownloads)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>ReentrantMonitorAutoEnter<sp/>mon(mSeekOffsetMonitor);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>mSeekOffset<sp/>=<sp/>aOffset;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.Seek(aWhence,<sp/>aOffset);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::StartSeekingForMetadata()</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>mSeekingForMetadata<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::EndSeekingForMetadata()</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>mSeekingForMetadata<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal">int64_t<sp/>ChannelMediaResource::Tell()</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.Tell();</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">nsresult<sp/>ChannelMediaResource::GetCachedRanges(nsTArray&lt;MediaByteRange&gt;&amp;<sp/>aRanges)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.GetCachedRanges(aRanges);</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::Suspend(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aCloseImmediately)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutting<sp/>down;<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutting<sp/>down;<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mChannel)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aCloseImmediately<sp/>&amp;&amp;<sp/>mCacheStream.IsSeekable())<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kill<sp/>off<sp/>our<sp/>channel<sp/>right<sp/>now,<sp/>but<sp/>don&apos;t<sp/>tell<sp/>anyone<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIgnoreClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;DownloadSuspended();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSuspendCount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mChannelStatistics.Stop(TimeStamp::Now());</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PossiblySuspend();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;DownloadSuspended();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>++mSuspendCount;</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChannelMediaResource::Resume()</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mSuspendCount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>resumes!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutting<sp/>down;<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutting<sp/>down;<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mSuspendCount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Resume<sp/>without<sp/>previous<sp/>Suspend!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>--mSuspendCount;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSuspendCount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mChannel)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>wake<sp/>up<sp/>our<sp/>existing<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mChannelStatistics.Start(TimeStamp::Now());</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>error<sp/>occurs<sp/>after<sp/>Resume,<sp/>assume<sp/>it&apos;s<sp/>because<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timed<sp/>out<sp/>the<sp/>connection<sp/>and<sp/>we<sp/>should<sp/>reopen<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mReopenOnError<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PossiblyResume();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;DownloadResumed();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>totalLength<sp/>=<sp/>mCacheStream.GetLength();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>mOffset<sp/>is<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>stream,<sp/>then<sp/>we<sp/>shouldn&apos;t<sp/>try<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seek<sp/>to<sp/>it.<sp/>The<sp/>seek<sp/>will<sp/>fail<sp/>and<sp/>be<sp/>wasted<sp/>anyway.<sp/>We<sp/>can<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>channel<sp/>dead;<sp/>if<sp/>the<sp/>media<sp/>cache<sp/>wants<sp/>to<sp/>read<sp/>some<sp/>other<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>future,<sp/>it<sp/>will<sp/>call<sp/>CacheClientSeek<sp/>itself<sp/>which<sp/>will<sp/>reopen<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalLength<sp/>&lt;<sp/>0<sp/>||<sp/>mOffset<sp/>&lt;<sp/>totalLength)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>(or<sp/>may<sp/>be)<sp/>data<sp/>to<sp/>read<sp/>at<sp/>mOffset,<sp/>so<sp/>start<sp/>reading<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>recreate<sp/>the<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CacheClientSeek(mOffset,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;DownloadResumed();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="872"><highlight class="normal">ChannelMediaResource::RecreateChannel()</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>nsLoadFlags<sp/>loadFlags<sp/>=</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>nsICachingChannel::LOAD_BYPASS_LOCAL_CACHE_IF_BUSY<sp/>|</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>(mLoadInBackground<sp/>?<sp/>nsIRequest::LOAD_BACKGROUND<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>is<sp/>being<sp/>shut<sp/>down,<sp/>so<sp/>don&apos;t<sp/>bother<sp/>opening<sp/>a<sp/>new<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>is<sp/>being<sp/>shut<sp/>down,<sp/>so<sp/>don&apos;t<sp/>bother<sp/>opening<sp/>a<sp/>new<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsILoadGroup&gt;<sp/>loadGroup<sp/>=<sp/>element-&gt;GetDocumentLoadGroup();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(loadGroup,<sp/>NS_ERROR_NULL_POINTER);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>NS_NewChannel(getter_AddRefs(mChannel),</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mURI,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadGroup,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadFlags);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>cached<sp/>the<sp/>Content-Type,<sp/>which<sp/>should<sp/>not<sp/>change.<sp/>Give<sp/>a<sp/>hint<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>channel<sp/>to<sp/>avoid<sp/>a<sp/>sniffing<sp/>failure,<sp/>which<sp/>would<sp/>be<sp/>expected<sp/>because<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>probably<sp/>seeking<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>bitstream,<sp/>and<sp/>sniffing<sp/>relies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>presence<sp/>of<sp/>a<sp/>magic<sp/>number<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>nsAutoCString<sp/>contentType;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>element-&gt;GetMimeType(contentType);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!contentType.IsEmpty(),</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;When<sp/>recreating<sp/>a<sp/>channel,<sp/>we<sp/>should<sp/>know<sp/>the<sp/>Content-Type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>mChannel-&gt;SetContentType(contentType);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal">ChannelMediaResource::DoNotifyDataReceived()</highlight></codeline>
<codeline lineno="913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>mDataReceivedEvent.Revoke();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>mDecoder-&gt;NotifyBytesDownloaded();</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal">ChannelMediaResource::CacheClientNotifyDataReceived()</highlight></codeline>
<codeline lineno="920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>can<sp/>be<sp/>called<sp/>with<sp/>the<sp/>media<sp/>cache<sp/>lock<sp/>held,<sp/>so<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>or<sp/>do<sp/>anything<sp/>which<sp/>might<sp/>try<sp/>to<sp/>acquire<sp/>a<sp/>lock!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDataReceivedEvent.IsPending())</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>mDataReceivedEvent<sp/>=<sp/>NS_NewNonOwningRunnableMethod(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ChannelMediaResource::DoNotifyDataReceived);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>NS_DispatchToMainThread(mDataReceivedEvent.get(),<sp/>NS_DISPATCH_NORMAL);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932" refid="classmozilla_1_1_data_ended" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmozilla_1_1_data_ended" kindref="compound">DataEnded</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>nsRunnable<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><ref refid="classmozilla_1_1_data_ended" kindref="compound">DataEnded</ref>(MediaDecoder*<sp/>aDecoder,<sp/>nsresult<sp/>aStatus)<sp/>:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>mDecoder(aDecoder),<sp/>mStatus(aStatus)<sp/>{}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>NS_IMETHOD<sp/>Run()<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>mDecoder-&gt;NotifyDownloadEnded(mStatus);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>nsRefPtr&lt;MediaDecoder&gt;<sp/>mDecoder;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>nsresult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStatus;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">};</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">ChannelMediaResource::CacheClientNotifyDataEnded(nsresult<sp/>aStatus)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>can<sp/>be<sp/>called<sp/>with<sp/>the<sp/>media<sp/>cache<sp/>lock<sp/>held,<sp/>so<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>or<sp/>do<sp/>anything<sp/>which<sp/>might<sp/>try<sp/>to<sp/>acquire<sp/>a<sp/>lock!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIRunnable&gt;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmozilla_1_1_data_ended" kindref="compound">DataEnded</ref>(mDecoder,<sp/>aStatus);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>NS_DispatchToMainThread(event,<sp/>NS_DISPATCH_NORMAL);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal">ChannelMediaResource::CacheClientNotifyPrincipalChanged()</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>mDecoder-&gt;NotifyPrincipalChanged();</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="965"><highlight class="normal">ChannelMediaResource::CacheClientSeek(int64_t<sp/>aOffset,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aResume)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aResume)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(mSuspendCount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>resumes!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>mess<sp/>with<sp/>the<sp/>channel,<sp/>since<sp/>we&apos;re<sp/>making<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>--mSuspendCount;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>For<sp/>chunked<sp/>downloads,<sp/>e.g.<sp/>DASH,<sp/>we<sp/>need<sp/>to<sp/>determine<sp/>which<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>contains<sp/>the<sp/>requested<sp/>offset,<sp/>|mOffset|.<sp/>This<sp/>is<sp/>either<sp/>previously</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>requested<sp/>in<sp/>|Seek|<sp/>or<sp/>updated<sp/>to<sp/>the<sp/>most<sp/>recent<sp/>bytes<sp/>downloaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>the<sp/>process<sp/>below<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1<sp/>-<sp/>Query<sp/>decoder<sp/>for<sp/>chunk<sp/>containing<sp/>desired<sp/>offset,<sp/>|mOffset|.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>silently<sp/>if<sp/>the<sp/>offset<sp/>is<sp/>not<sp/>available;<sp/>suggests<sp/>decoder<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yet<sp/>to<sp/>get<sp/>range<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>with<sp/>NetworkError<sp/>for<sp/>all<sp/>other<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2<sp/>-<sp/>Adjust<sp/>|mByteRange|.mStart<sp/>to<sp/>|aOffset|,<sp/>requested<sp/>by<sp/>media<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>seeking,<sp/>the<sp/>media<sp/>cache<sp/>always<sp/>requests<sp/>the<sp/>start<sp/>of<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>adjust<sp/>the<sp/>first<sp/>chunk<sp/>of<sp/>a<sp/>seek.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>E.g.<sp/>For<sp/>&quot;DASH-WebM<sp/>On<sp/>Demand&quot;<sp/>this<sp/>means<sp/>the<sp/>first<sp/>chunk<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>seeking<sp/>will<sp/>most<sp/>likely<sp/>be<sp/>larger<sp/>than<sp/>the<sp/>subsegment<sp/>(cluster).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>3<sp/>-<sp/>Call<sp/>|OpenByteRange|<sp/>requesting<sp/>|mByteRange|<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mByteRangeDownloads)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Query<sp/>decoder<sp/>for<sp/>chunk<sp/>containing<sp/>desired<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>nsresult<sp/>rv;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReentrantMonitorAutoEnter<sp/>mon(mSeekOffsetMonitor);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>media<sp/>cache<sp/>can<sp/>only<sp/>request<sp/>an<sp/>equal<sp/>or<sp/>smaller<sp/>offset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>be<sp/>trying<sp/>to<sp/>include<sp/>the<sp/>start<sp/>of<sp/>a<sp/>cache<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(aOffset<sp/>&lt;=<sp/>mSeekOffset,<sp/>NS_ERROR_ILLEGAL_VALUE);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>mDecoder-&gt;GetByteRangeForSeek(mSeekOffset,<sp/>mByteRange);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSeekOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rv<sp/>==<sp/>NS_ERROR_NOT_AVAILABLE)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>decoder<sp/>will<sp/>request<sp/>correct<sp/>bytes<sp/>when<sp/>range<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>becomes<sp/>available.<sp/>Return<sp/>silently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv)<sp/>||<sp/>mByteRange.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decoder<sp/>reported<sp/>an<sp/>error<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>handle<sp/>here;<sp/>just<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDecoder-&gt;NetworkError();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Media<sp/>cache<sp/>may<sp/>decrease<sp/>offset<sp/>to<sp/>start<sp/>of<sp/>cache<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>start<sp/>of<sp/>byte<sp/>range<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>mByteRange.mStart<sp/>=<sp/>mOffset<sp/>=<sp/>aOffset;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OpenByteRange(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>mByteRange);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>mOffset<sp/>=<sp/>aOffset;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSuspendCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>existing<sp/>channel<sp/>to<sp/>force<sp/>the<sp/>channel<sp/>to<sp/>be<sp/>recreated<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>correct<sp/>offset<sp/>upon<sp/>resume.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mChannel)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIgnoreClose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseChannel();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>RecreateChannel();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OpenChannel(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">ChannelMediaResource::CacheClientSuspend()</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>Suspend(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>mDecoder-&gt;NotifySuspendedStatusChanged();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal">nsresult</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">ChannelMediaResource::CacheClientResume()</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>Resume();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>mDecoder-&gt;NotifySuspendedStatusChanged();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">ChannelMediaResource::GetNextCachedData(int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.GetNextCachedData(aOffset);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">ChannelMediaResource::GetCachedDataEnd(int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.GetCachedDataEnd(aOffset);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal">ChannelMediaResource::IsDataCachedToEndOfResource(int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.IsDataCachedToEndOfStream(aOffset);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal">ChannelMediaResource::EnsureCacheUpToDate()</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>mCacheStream.EnsureCacheUpdate();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal">ChannelMediaResource::IsSuspendedByCache(MediaResource**<sp/>aActiveResource)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.AreAllStreamsForResourceSuspended(aActiveResource);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal">ChannelMediaResource::IsSuspended()</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSuspendCount<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal">ChannelMediaResource::SetReadMode(MediaCacheStream::ReadMode<sp/>aMode)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>mCacheStream.SetReadMode(aMode);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">ChannelMediaResource::SetPlaybackRate(uint32_t<sp/>aBytesPerSecond)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>mCacheStream.SetPlaybackRate(aBytesPerSecond);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">ChannelMediaResource::Pin()</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>mCacheStream.Pin();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">ChannelMediaResource::Unpin()</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>mCacheStream.Unpin();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal">ChannelMediaResource::GetDownloadRate(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>aIsReliable)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChannelStatistics.GetRate(TimeStamp::Now(),<sp/>aIsReliable);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal">int64_t</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">ChannelMediaResource::GetLength()</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCacheStream.GetLength();</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">ChannelMediaResource::PossiblySuspend()</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>mChannel-&gt;IsPending(&amp;isPending);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(rv)<sp/>&amp;&amp;<sp/>isPending)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;Suspend();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>mIgnoreResume<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>mIgnoreResume<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal">ChannelMediaResource::PossiblyResume()</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mIgnoreResume)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;Resume();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>mIgnoreResume<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="classmozilla_1_1_file_media_resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmozilla_1_1_file_media_resource" kindref="compound">FileMediaResource</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MediaResource<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><ref refid="classmozilla_1_1_file_media_resource" kindref="compound">FileMediaResource</ref>(MediaDecoder*<sp/>aDecoder,<sp/>nsIChannel*<sp/>aChannel,<sp/>nsIURI*<sp/>aURI)<sp/>:<sp/>MediaResource(aDecoder,<sp/>aChannel,<sp/>aURI),<sp/>mSize(-1),<sp/>mLock(</highlight><highlight class="stringliteral">&quot;FileMediaResource.mLock&quot;</highlight><highlight class="normal">),<sp/>mSizeInitialized(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>~<ref refid="classmozilla_1_1_file_media_resource" kindref="compound">FileMediaResource</ref>()</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>nsresult<sp/>Open(nsIStreamListener**<sp/>aStreamListener);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>nsresult<sp/>Close();</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Suspend(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aCloseImmediately)<sp/>{}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Resume()<sp/>{}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>already_AddRefed&lt;nsIPrincipal&gt;<sp/>GetCurrentPrincipal();</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CanClone();</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>MediaResource*<sp/>CloneData(MediaDecoder*<sp/>aDecoder);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>nsresult<sp/>ReadFromCache(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,<sp/>int64_t<sp/>aOffset,<sp/>uint32_t<sp/>aCount);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>methods<sp/>are<sp/>called<sp/>off<sp/>the<sp/>main<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>SetReadMode(MediaCacheStream::ReadMode<sp/>aMode)<sp/>{}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>SetPlaybackRate(uint32_t<sp/>aBytesPerSecond)<sp/>{}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>nsresult<sp/>Read(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,<sp/>uint32_t<sp/>aCount,<sp/>uint32_t*<sp/>aBytes);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>nsresult<sp/>Seek(int32_t<sp/>aWhence,<sp/>int64_t<sp/>aOffset);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>StartSeekingForMetadata()<sp/>{};</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>EndSeekingForMetadata()<sp/>{};</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>Tell();</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Pin()<sp/>{}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Unpin()<sp/>{}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>GetDownloadRate(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>aIsReliable)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>data&apos;s<sp/>all<sp/>already<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>*aIsReliable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>100*1024*1024;<sp/></highlight><highlight class="comment">//<sp/>arbitray,<sp/>use<sp/>100MB/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>GetLength()<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInput)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSizeInitialized<sp/>?<sp/>mSize<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>GetNextCachedData(int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInput)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(aOffset<sp/>&lt;<sp/>mSize)<sp/>?<sp/>aOffset<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>int64_t<sp/>GetCachedDataEnd(int64_t<sp/>aOffset)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInput)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aOffset;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_MAX(aOffset,<sp/>mSize);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>IsDataCachedToEndOfResource(int64_t<sp/>aOffset)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>IsSuspendedByCache(MediaResource**<sp/>aActiveResource)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aActiveResource)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*aActiveResource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>IsSuspended()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>nsresult<sp/>GetCachedRanges(nsTArray&lt;MediaByteRange&gt;&amp;<sp/>aRanges);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensures<sp/>mSize<sp/>is<sp/>initialized,<sp/>if<sp/>it<sp/>can<sp/>be.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mLock<sp/>must<sp/>be<sp/>held<sp/>when<sp/>this<sp/>is<sp/>called,<sp/>and<sp/>mInput<sp/>must<sp/>be<sp/>non-null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>file<sp/>size,<sp/>or<sp/>-1<sp/>if<sp/>not<sp/>known.<sp/>Immutable<sp/>after<sp/>Open().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>be<sp/>used<sp/>from<sp/>any<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>int64_t<sp/>mSize;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>lock<sp/>handles<sp/>synchronisation<sp/>between<sp/>calls<sp/>to<sp/>Close()<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Read,<sp/>Seek,<sp/>etc<sp/>calls.<sp/>Close<sp/>must<sp/>not<sp/>be<sp/>called<sp/>while<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>or<sp/>Seek<sp/>is<sp/>in<sp/>progress<sp/>since<sp/>it<sp/>resets<sp/>various<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>to<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>lock<sp/>protects<sp/>mSeekable,<sp/>mInput,<sp/>mSize,<sp/>and<sp/>mSizeInitialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>Mutex<sp/>mLock;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Seekable<sp/>stream<sp/>interface<sp/>to<sp/>file.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>from<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsISeekableStream&gt;<sp/>mSeekable;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>stream<sp/>for<sp/>the<sp/>media<sp/>data.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>from<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thread.<sp/>This<sp/>is<sp/>annulled<sp/>when<sp/>the<sp/>decoder<sp/>is<sp/>being<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>can<sp/>be<sp/>shut<sp/>down<sp/>while<sp/>we&apos;re<sp/>calculating<sp/>buffered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ranges<sp/>or<sp/>seeking,<sp/>so<sp/>this<sp/>must<sp/>be<sp/>null-checked<sp/>before<sp/>it&apos;s<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIInputStream&gt;<sp/><sp/>mInput;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;ve<sp/>attempted<sp/>to<sp/>initialize<sp/>mSize.<sp/>Note<sp/>that<sp/>mSize<sp/>can<sp/>be<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>mSizeInitialized<sp/>is<sp/>true<sp/>if<sp/>we<sp/>tried<sp/>and<sp/>failed<sp/>to<sp/>get<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mSizeInitialized;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="classmozilla_1_1_loaded_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmozilla_1_1_loaded_event" kindref="compound">LoadedEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>nsRunnable</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><ref refid="classmozilla_1_1_loaded_event" kindref="compound">LoadedEvent</ref>(MediaDecoder*<sp/>aDecoder)<sp/>:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>mDecoder(aDecoder)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>MOZ_COUNT_CTOR(<ref refid="classmozilla_1_1_loaded_event" kindref="compound">LoadedEvent</ref>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>~<ref refid="classmozilla_1_1_loaded_event" kindref="compound">LoadedEvent</ref>()</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>MOZ_COUNT_DTOR(<ref refid="classmozilla_1_1_loaded_event" kindref="compound">LoadedEvent</ref>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>NS_IMETHOD<sp/>Run()<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>mDecoder-&gt;NotifyDownloadEnded(NS_OK);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/>nsRefPtr&lt;MediaDecoder&gt;<sp/>mDecoder;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FileMediaResource::EnsureSizeInitialized()</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/>mLock.AssertCurrentThreadOwns();</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>NS_ASSERTION(mInput,<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>file<sp/>input<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSizeInitialized)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>mSizeInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>file<sp/>size<sp/>and<sp/>inform<sp/>the<sp/>decoder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>uint64_t<sp/>size;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>nsresult<sp/>res<sp/>=<sp/>mInput-&gt;Available(&amp;size);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(res)<sp/>&amp;&amp;<sp/>size<sp/>&lt;=<sp/>INT64_MAX)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>mSize<sp/>=<sp/>(int64_t)size;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>nsCOMPtr&lt;nsIRunnable&gt;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LoadedEvent(mDecoder);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_DispatchToMainThread(event,<sp/>NS_DISPATCH_NORMAL);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal">nsresult<sp/>FileMediaResource::GetCachedRanges(nsTArray&lt;MediaByteRange&gt;&amp;<sp/>aRanges)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInput)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSize<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>aRanges.AppendElement(MediaByteRange(0,<sp/>mSize));</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal">nsresult<sp/>FileMediaResource::Open(nsIStreamListener**<sp/>aStreamListener)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aStreamListener)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>*aStreamListener<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>NS_OK;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aStreamListener)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>channel<sp/>is<sp/>already<sp/>open.<sp/>We<sp/>need<sp/>a<sp/>synchronous<sp/>stream<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implements<sp/>nsISeekableStream,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>find<sp/>the<sp/>underlying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>and<sp/>reopen<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>nsCOMPtr&lt;nsIFileChannel&gt;<sp/>fc(do_QueryInterface(mChannel));</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nsCOMPtr&lt;nsIFile&gt;<sp/>file;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>fc-&gt;GetFile(getter_AddRefs(file));</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>NS_NewLocalFileInputStream(getter_AddRefs(mInput),<sp/>file);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsBlobURI(mURI))<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>NS_GetStreamForBlobURI(mURI,<sp/>getter_AddRefs(mInput));</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>we<sp/>never<sp/>load<sp/>a<sp/>local<sp/>file<sp/>from<sp/>some<sp/>page<sp/>on<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>web<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(owner,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_TRUE(element,<sp/>NS_ERROR_FAILURE);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>nsContentUtils::GetSecurityManager()-&gt;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckLoadURIWithPrincipal(element-&gt;NodePrincipal(),</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mURI,</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsIScriptSecurityManager::STANDARD);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>mChannel-&gt;Open(getter_AddRefs(mInput));</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/>rv);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>mSeekable<sp/>=<sp/>do_QueryInterface(mInput);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mSeekable)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>The<sp/>file<sp/>may<sp/>just<sp/>be<sp/>a<sp/>.url<sp/>or<sp/>similar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shortcut<sp/>that<sp/>points<sp/>to<sp/>a<sp/>Web<sp/>site.<sp/>We<sp/>need<sp/>to<sp/>fix<sp/>this<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doing<sp/>an<sp/>async<sp/>open<sp/>and<sp/>waiting<sp/>until<sp/>we<sp/>locate<sp/>the<sp/>real<sp/>resource,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>using<sp/>that<sp/>(if<sp/>it&apos;s<sp/>still<sp/>a<sp/>file!).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal">nsresult<sp/>FileMediaResource::Close()</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mChannel)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel-&gt;Cancel(NS_ERROR_PARSED_DATA_CACHED);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>mChannel<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>mInput<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>mSeekable<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_OK;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal">already_AddRefed&lt;nsIPrincipal&gt;<sp/>FileMediaResource::GetCurrentPrincipal()</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIPrincipal&gt;<sp/>principal;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>nsIScriptSecurityManager*<sp/>secMan<sp/>=<sp/>nsContentUtils::GetSecurityManager();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!secMan<sp/>||<sp/>!mChannel)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>secMan-&gt;GetChannelPrincipal(mChannel,<sp/>getter_AddRefs(principal));</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>principal.forget();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FileMediaResource::CanClone()</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">MediaResource*<sp/>FileMediaResource::CloneData(MediaDecoder*<sp/>aDecoder)</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>is<sp/>being<sp/>shut<sp/>down,<sp/>so<sp/>we<sp/>can&apos;t<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>is<sp/>being<sp/>shut<sp/>down,<sp/>so<sp/>we<sp/>can&apos;t<sp/>clone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsILoadGroup&gt;<sp/>loadGroup<sp/>=<sp/>element-&gt;GetDocumentLoadGroup();</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>NS_ENSURE_TRUE(loadGroup,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIChannel&gt;<sp/>channel;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_NewChannel(getter_AddRefs(channel),<sp/>mURI,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>loadGroup,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_FAILED(rv))</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FileMediaResource(aDecoder,<sp/>channel,<sp/>mURI);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal">nsresult<sp/>FileMediaResource::ReadFromCache(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,<sp/>int64_t<sp/>aOffset,<sp/>uint32_t<sp/>aCount)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInput<sp/>||<sp/>!mSeekable)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>nsresult<sp/>res<sp/>=<sp/>mSeekable-&gt;Tell(&amp;offset);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(res,res);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>mSeekable-&gt;Seek(nsISeekableStream::NS_SEEK_SET,<sp/>aOffset);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(res,res);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytesToRead<sp/>=<sp/>aCount<sp/>-<sp/>bytesRead;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>mInput-&gt;Read(aBuffer,<sp/>bytesToRead,<sp/>&amp;x);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>bytesRead<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bytesRead<sp/>!=<sp/>aCount<sp/>&amp;&amp;<sp/>res<sp/>==<sp/>NS_OK);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>read<sp/>head<sp/>to<sp/>original<sp/>position<sp/>so<sp/>we<sp/>don&apos;t<sp/>disturb<sp/>any<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>nsresult<sp/>seekres<sp/>=<sp/>mSeekable-&gt;Seek(nsISeekableStream::NS_SEEK_SET,<sp/>offset);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>read<sp/>failed<sp/>in<sp/>the<sp/>loop<sp/>above,<sp/>we<sp/>want<sp/>to<sp/>return<sp/>its<sp/>failure<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(res,res);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Else<sp/>we<sp/>succeed<sp/>if<sp/>the<sp/>reset-seek<sp/>succeeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seekres;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal">nsresult<sp/>FileMediaResource::Read(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aBuffer,<sp/>uint32_t<sp/>aCount,<sp/>uint32_t*<sp/>aBytes)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInput)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mInput-&gt;Read(aBuffer,<sp/>aCount,<sp/>aBytes);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal">nsresult<sp/>FileMediaResource::Seek(int32_t<sp/>aWhence,<sp/>int64_t<sp/>aOffset)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mSeekable)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_ERROR_FAILURE;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSeekable-&gt;Seek(aWhence,<sp/>aOffset);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal">int64_t<sp/>FileMediaResource::Tell()</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!NS_IsMainThread(),<sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>call<sp/>on<sp/>main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>MutexAutoLock<sp/>lock(mLock);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mSeekable)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>EnsureSizeInitialized();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>int64_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>mSeekable-&gt;Tell(&amp;offset);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal">MediaResource*</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">MediaResource::Create(MediaDecoder*<sp/>aDecoder,<sp/>nsIChannel*<sp/>aChannel)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_IsMainThread(),</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MediaResource::Open<sp/>called<sp/>on<sp/>non-main<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>channel<sp/>was<sp/>redirected,<sp/>we<sp/>want<sp/>the<sp/>post-redirect<sp/>URI;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>if<sp/>the<sp/>URI<sp/>scheme<sp/>was<sp/>expanded,<sp/>say<sp/>from<sp/>chrome:<sp/>to<sp/>jar:file:,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>the<sp/>original<sp/>URI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIURI&gt;<sp/>uri;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>nsresult<sp/>rv<sp/>=<sp/>NS_GetFinalChannelURI(aChannel,<sp/>getter_AddRefs(uri));</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>NS_ENSURE_SUCCESS(rv,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsIFileChannel&gt;<sp/>fc<sp/>=<sp/>do_QueryInterface(aChannel);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc<sp/>||<sp/>IsBlobURI(uri))<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FileMediaResource(aDecoder,<sp/>aChannel,<sp/>uri);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ChannelMediaResource(aDecoder,<sp/>aChannel,<sp/>uri);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MediaResource::MoveLoadsToBackground()<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>NS_ASSERTION(!mLoadInBackground,<sp/></highlight><highlight class="stringliteral">&quot;Why<sp/>are<sp/>you<sp/>calling<sp/>this<sp/>more<sp/>than<sp/>once?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>mLoadInBackground<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mChannel)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>channel,<sp/>resource<sp/>is<sp/>probably<sp/>already<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>MediaDecoderOwner*<sp/>owner<sp/>=<sp/>mDecoder-&gt;GetMediaOwner();</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!owner)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_WARNING(</highlight><highlight class="stringliteral">&quot;Null<sp/>owner<sp/>in<sp/>MediaResource::MoveLoadsToBackground()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>nsHTMLMediaElement*<sp/>element<sp/>=<sp/>owner-&gt;GetMediaElement();</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!element)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_WARNING(</highlight><highlight class="stringliteral">&quot;Null<sp/>element<sp/>in<sp/>MediaResource::MoveLoadsToBackground()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NS_SUCCEEDED(mChannel-&gt;IsPending(&amp;isPending))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isPending)<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>nsLoadFlags<sp/>loadFlags;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugOnly&lt;nsresult&gt;<sp/>rv<sp/>=<sp/>mChannel-&gt;GetLoadFlags(&amp;loadFlags);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;GetLoadFlags()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>loadFlags<sp/>|=<sp/>nsIRequest::LOAD_BACKGROUND;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>ModifyLoadFlags(loadFlags);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MediaResource::ModifyLoadFlags(nsLoadFlags<sp/>aFlags)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>nsCOMPtr&lt;nsILoadGroup&gt;<sp/>loadGroup;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/>DebugOnly&lt;nsresult&gt;<sp/>rv<sp/>=<sp/>mChannel-&gt;GetLoadGroup(getter_AddRefs(loadGroup));</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;GetLoadGroup()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>nsresult<sp/>status;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>mChannel-&gt;GetStatus(&amp;status);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>(NS_FAILED(status)),<sp/>the<sp/>channel<sp/>won&apos;t<sp/>be<sp/>in<sp/>the<sp/>load<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loadGroup<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_SUCCEEDED(status))<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>loadGroup-&gt;RemoveRequest(mChannel,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>status);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;RemoveRequest()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>rv<sp/>=<sp/>mChannel-&gt;SetLoadFlags(aFlags);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;SetLoadFlags()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loadGroup<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NS_SUCCEEDED(status))<sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>rv<sp/>=<sp/>loadGroup-&gt;AddRequest(mChannel,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_ASSERTION(NS_SUCCEEDED(rv),<sp/></highlight><highlight class="stringliteral">&quot;AddRequest()<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mozilla</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/tools/mozilla-release/content/media/MediaResource.cpp"/>
  </compounddef>
</doxygen>
