<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_memory_util_8m" kind="file">
    <compoundname>MemoryUtil.m</compoundname>
    <includes refid="_memory_util_8h" local="yes">MemoryUtil.h</includes>
    <includes local="no">mach/mach.h</includes>
    <incdepgraph>
      <node id="1444">
        <label>mach/mach.h</label>
      </node>
      <node id="1442">
        <label>MemoryUtil.h</label>
        <link refid="_memory_util_8h"/>
        <childnode refid="1443" relation="include">
        </childnode>
      </node>
      <node id="1441">
        <label>Classes/MemoryUtil.m</label>
        <link refid="MemoryUtil.m"/>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
      </node>
      <node id="1443">
        <label>Foundation/Foundation.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MemoryUtil.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MyCamera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Umeda<sp/>Masatoshi<sp/>on<sp/>09/11/11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>2009<sp/>__MyCompanyName__.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_memory_util_8h" kindref="compound">MemoryUtil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mach/mach.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="interface_memory_util" kindref="compound">MemoryUtil</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">+<sp/>(void)<ref refid="interface_memory_util_1a52068456f150d67a1eb33c075cb0cc39" kindref="member">showMemoryInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vm_statistics<sp/>a_vm_info;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_msg_type_number_t<sp/>a_count<sp/>=<sp/>HOST_VM_INFO_COUNT;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>host_statistics(<sp/>mach_host_self(),<sp/>HOST_VM_INFO,<sp/>(host_info_t)&amp;a_vm_info<sp/>,&amp;a_count);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freeSize<sp/>=<sp/>a_vm_info.free_count<sp/>*<sp/>vm_page_size;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wireSize<sp/>=<sp/>a_vm_info.wire_count<sp/>*<sp/>vm_page_size;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activeSize<sp/>=<sp/>a_vm_info.active_count<sp/>*<sp/>vm_page_size;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inactiveSize<sp/>=<sp/>a_vm_info.inactive_count<sp/>*<sp/>vm_page_size;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">task_basic_info<sp/>t_info;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_msg_type_number_t<sp/>t_info_count<sp/>=<sp/>TASK_BASIC_INFO_COUNT;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_info(current_task(),<sp/>TASK_BASIC_INFO,<sp/>(task_info_t)&amp;t_info,<sp/>&amp;t_info_count)!=<sp/>KERN_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;%s():<sp/>Error<sp/>in<sp/>task_info():<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>メモリ使用量(bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>vm_size_t<sp/>rss<sp/>=<sp/>t_info.resident_size;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;used=%u<sp/>free=%u<sp/>total=%u&quot;</highlight><highlight class="normal">,<sp/>rss,<sp/>freeSize,<sp/>wireSize<sp/>+<sp/>activeSize<sp/>+<sp/>inactiveSize);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;wire=%u<sp/>active=%u<sp/>inactive=%u&quot;</highlight><highlight class="normal">,<sp/>wireSize,<sp/>activeSize,<sp/>inactiveSize);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Documents/workspace/UmlPad/Classes/MemoryUtil.m"/>
  </compounddef>
</doxygen>
