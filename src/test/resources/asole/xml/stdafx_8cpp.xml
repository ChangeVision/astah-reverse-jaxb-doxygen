<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="stdafx_8cpp" kind="file">
    <compoundname>stdafx.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="resource_8h" local="yes">resource.h</includes>
    <includes refid="quotedlg_8h" local="yes">quotedlg.h</includes>
    <incdepgraph>
      <node id="359">
        <label>quotedlg.h</label>
        <link refid="quotedlg_8h"/>
      </node>
      <node id="351">
        <label>afxcmn.h</label>
      </node>
      <node id="356">
        <label>float.h</label>
      </node>
      <node id="348">
        <label>afxole.h</label>
      </node>
      <node id="347">
        <label>afxext.h</label>
      </node>
      <node id="353">
        <label>shlwapi.h</label>
      </node>
      <node id="358">
        <label>resource.h</label>
        <link refid="resource_8h"/>
      </node>
      <node id="355">
        <label>atlimage.h</label>
      </node>
      <node id="352">
        <label>afxsock.h</label>
      </node>
      <node id="354">
        <label>atlpath.h</label>
      </node>
      <node id="343">
        <label>stdafx.cpp</label>
        <link refid="stdafx.cpp"/>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
      </node>
      <node id="357">
        <label>math.h</label>
      </node>
      <node id="349">
        <label>afxdisp.h</label>
      </node>
      <node id="350">
        <label>afxdtctl.h</label>
      </node>
      <node id="345">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
      </node>
      <node id="346">
        <label>afxwin.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" prot="public" static="no">
        <name>msgbox</name>
        <initializer><ref refid="class_c_quote_dlg_1a5ee31c58276aae222180b4d39c137b94" kindref="member">CQuoteDlg::show</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="14" column="11" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1ac7a0220332b669be579c79750d4046e9" prot="public" static="no">
        <name>DFLT_DPH</name>
        <initializer>((double)72 / <ref refid="stdafx_8h_1acc6a55d2db07ef85ff769e24cafe2565" kindref="member">HIM_INCH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="16" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1a105c42716562b4c41530809dbb39afdd" prot="public" static="no">
        <name>BUT_STYLE</name>
        <param><defname>h</defname></param>
        <initializer>(::GetWindowLong(h, GWL_STYLE) &amp; 0x0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1035" column="9"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1abc911db9e5f2333023386e06d0813e30" prot="public" static="no">
        <name>BUT_IS_PUSH</name>
        <param><defname>h</defname></param>
        <initializer>(<ref refid="stdafx_8cpp_1a105c42716562b4c41530809dbb39afdd" kindref="member">BUT_STYLE</ref>(h) == BS_PUSHBUTTON)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1036" column="9"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1a72491116f302cd9e2a54f213690a0405" prot="public" static="no">
        <name>BUT_IS_DEFP</name>
        <param><defname>h</defname></param>
        <initializer>(<ref refid="stdafx_8cpp_1a105c42716562b4c41530809dbb39afdd" kindref="member">BUT_STYLE</ref>(h) == BS_DEFPUSHBUTTON)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1037" column="9"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1ac168d2851e33ac31f55a21a691038a2e" prot="public" static="no">
        <name>BUT_BE_PUSH</name>
        <param><defname>h</defname></param>
        <initializer>(::SendMessage(h, BM_SETSTYLE, BS_PUSHBUTTON, TRUE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1038" column="9"/>
      </memberdef>
      <memberdef kind="define" id="stdafx_8cpp_1a4cf92e1a7a101f5f69f88c33692db8a6" prot="public" static="no">
        <name>BUT_BE_DEFP</name>
        <param><defname>h</defname></param>
        <initializer>(::SendMessage(h, BM_SETSTYLE, BS_DEFPUSHBUTTON, TRUE))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1039" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stdafx_8cpp_1a421233625edb1a669e22977053f51a26" prot="public" static="yes" mutable="no">
        <type>const TCHAR</type>
        <definition>const TCHAR cantloadmsg[]</definition>
        <argsstring>[]</argsstring>
        <name>cantloadmsg</name>
        <initializer>= _T(&quot;cannot load message string&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="18" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stdafx_8cpp_1ae43ec467b43e79db7260a90474f9fd65" prot="public" static="yes" mutable="no">
        <type>CString</type>
        <definition>CString moduleDir</definition>
        <argsstring></argsstring>
        <name>moduleDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="20" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stdafx_8cpp_1a95de9f782bf5d0bf975a8d0e1dfd8016" prot="public" static="yes" mutable="no">
        <type>CString</type>
        <definition>CString logfilePath</definition>
        <argsstring></argsstring>
        <name>logfilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="21" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xfree</definition>
        <argsstring>(void *buf)</argsstring>
        <name>xfree</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="25" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xmalloc</definition>
        <argsstring>(int sz)</argsstring>
        <name>xmalloc</name>
        <param>
          <type>int</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="40" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="40" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a42d7580aee445057e895ac789aa3ac35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* xrealloc</definition>
        <argsstring>(void *buf, int sz)</argsstring>
        <name>xrealloc</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="59" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="59" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a74298ba04a76c428f9d983f323da7b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LPWSTR</type>
        <definition>LPWSTR cstr2wstr</definition>
        <argsstring>(LPCSTR src)</argsstring>
        <name>cstr2wstr</name>
        <param>
          <type>LPCSTR</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="76" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="76" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a9b180da132f41adc6a1e35bd07ae8be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbufone" kindref="compound">bufone</ref> *</type>
        <definition>bufone* tstr2utf</definition>
        <argsstring>(LPCTSTR src)</argsstring>
        <name>tstr2utf</name>
        <param>
          <type>LPCTSTR</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="120" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="120" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a9c670a18a63398acd36578ca96250159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LPTSTR</type>
        <definition>LPTSTR utf2tstr</definition>
        <argsstring>(LPCSTR src)</argsstring>
        <name>utf2tstr</name>
        <param>
          <type>LPCSTR</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="214" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="214" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool loadString</definition>
        <argsstring>(CString &amp;s, UINT id, LPCTSTR defstr)</argsstring>
        <name>loadString</name>
        <param>
          <type>CString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>id</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>defstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="305" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="305" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a9ca1172c8e5850474961042a743b5922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CString &amp;</type>
        <definition>CString&amp; loadAppTitle</definition>
        <argsstring>(CString &amp;s)</argsstring>
        <name>loadAppTitle</name>
        <param>
          <type>CString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="320" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="320" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xfail</definition>
        <argsstring>(LPCTSTR msg)</argsstring>
        <name>xfail</name>
        <param>
          <type>LPCTSTR</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="340" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a6bcf537b48bdfd11d53f2c9485af85cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xfail</definition>
        <argsstring>(UINT msgid)</argsstring>
        <name>xfail</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="349" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="349" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ac13962a471d4c6d9e5444de17733d82b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xfailf</definition>
        <argsstring>(LPCTSTR fmt,...)</argsstring>
        <name>xfailf</name>
        <param>
          <type>LPCTSTR</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="358" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="358" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a222b89e2a6675af0b432462726e590f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xfailf</definition>
        <argsstring>(UINT msgid,...)</argsstring>
        <name>xfailf</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="374" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="374" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwarn</definition>
        <argsstring>(LPCTSTR msg, int moreflags)</argsstring>
        <name>xwarn</name>
        <param>
          <type>LPCTSTR</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>moreflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="394" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="394" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a8e80be09a956d6f0c4a7cab0ccbd2c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwarn</definition>
        <argsstring>(UINT msgid, int moreflags)</argsstring>
        <name>xwarn</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>moreflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="403" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="403" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1aa1fb887a27469341fa20794ce94e2e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwarnf</definition>
        <argsstring>(LPCTSTR fmt,...)</argsstring>
        <name>xwarnf</name>
        <param>
          <type>LPCTSTR</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="412" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="412" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ac9b58aa15a2dea7e478fd13a48b76f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwarnf</definition>
        <argsstring>(UINT msgid,...)</argsstring>
        <name>xwarnf</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="428" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="428" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ae7c3c0fb0d22466438ffa64d6064bb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xinfo</definition>
        <argsstring>(LPCTSTR msg)</argsstring>
        <name>xinfo</name>
        <param>
          <type>LPCTSTR</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="448" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="448" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a8f92cb81c52a269ff57fb7122252498f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xinfo</definition>
        <argsstring>(UINT msgid)</argsstring>
        <name>xinfo</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="457" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="457" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ab02584f340fd7c0843afe44a4e532754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xinfof</definition>
        <argsstring>(LPCTSTR fmt,...)</argsstring>
        <name>xinfof</name>
        <param>
          <type>LPCTSTR</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="466" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="466" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1af23cf5696a92877ac9fdbea671a3f511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xinfof</definition>
        <argsstring>(UINT msgid,...)</argsstring>
        <name>xinfof</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="482" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="482" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1aeadc514b84b7e651f94cc139b0ab6343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xyorn</definition>
        <argsstring>(LPCTSTR msg)</argsstring>
        <name>xyorn</name>
        <param>
          <type>LPCTSTR</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="502" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="502" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a83a85c2db4fb92caeaca9f79cd41818d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xyornf</definition>
        <argsstring>(LPCTSTR fmt,...)</argsstring>
        <name>xyornf</name>
        <param>
          <type>LPCTSTR</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="513" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="513" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a9d8615168bd8cb356437286db5014f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xyorn</definition>
        <argsstring>(UINT msgid)</argsstring>
        <name>xyorn</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="530" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="530" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a848105b8c62441b1a6be5ef5ae30f584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xyornf</definition>
        <argsstring>(UINT msgid,...)</argsstring>
        <name>xyornf</name>
        <param>
          <type>UINT</type>
          <declname>msgid</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="541" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="541" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a77b5e6f3d4c9cef91e731b03642357db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool stoi</definition>
        <argsstring>(LPCTSTR str, int *valp, int base)</argsstring>
        <name>stoi</name>
        <param>
          <type>LPCTSTR</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>valp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="565" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="565" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ishigo</definition>
        <argsstring>(double v, int uord)</argsstring>
        <name>ishigo</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="594" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="594" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a409bdd9221abd388e406a7cccd48ec7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getLogpDpi</definition>
        <argsstring>(HDC hdc, int *xdpip, int *ydpip)</argsstring>
        <name>getLogpDpi</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xdpip</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ydpip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LOGPIXESから得られるDPIを。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="639" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="639" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1aeddf8ebeff5df59c8efbaa411cc8d702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getRealDpi</definition>
        <argsstring>(HDC hdc, int *xdpip, int *ydpip)</argsstring>
        <name>getRealDpi</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xdpip</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ydpip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>寸法情報から得られるDPIを。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="676" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="676" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a9c1ed4694033d2c65c01ba015e32d824" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void getdph</definition>
        <argsstring>(HDC hdc, double *xdph, double *ydph)</argsstring>
        <name>getdph</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xdph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ydph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HIMETRICとデバイスpxとの係数 (px / himet) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="727" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="727" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a4768b2340093f3f3b92e5bb513c62302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dpi2him</definition>
        <argsstring>(int dpi, CRect *rcp, int uord)</argsstring>
        <name>dpi2him</name>
        <param>
          <type>int</type>
          <declname>dpi</declname>
        </param>
        <param>
          <type>CRect *</type>
          <declname>rcp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="751" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="751" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ad8f78f97fa211cd669d4056c544b8ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dp2him</definition>
        <argsstring>(HDC hdc, CSize *szp, int uord)</argsstring>
        <name>dp2him</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>CSize *</type>
          <declname>szp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="769" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="769" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a33821d1b432d9ce12bd11ffc897fbb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dp2him</definition>
        <argsstring>(HDC hdc, CRect *rcp, int uord)</argsstring>
        <name>dp2him</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>CRect *</type>
          <declname>rcp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="781" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="781" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a4cb7b6aa2db8e93ff3f5909748034e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void him2dp</definition>
        <argsstring>(HDC hdc, CSize *szp, int uord)</argsstring>
        <name>him2dp</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>CSize *</type>
          <declname>szp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="796" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="796" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a55d7d324151221812be6908bcc201460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void him2dp</definition>
        <argsstring>(HDC hdc, CRect *rcp, int uord)</argsstring>
        <name>him2dp</name>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
        </param>
        <param>
          <type>CRect *</type>
          <declname>rcp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="808" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="808" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1abd045addc368d92ad721aa2760b04919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xlseek</definition>
        <argsstring>(HANDLE h, int off, int wh)</argsstring>
        <name>xlseek</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>off</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="835" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="835" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a771d71c7b895038aa04e125e2884b369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xread</definition>
        <argsstring>(HANDLE h, void *buf, int nbytes)</argsstring>
        <name>xread</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="855" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="855" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a31fe7830b838fb6c00f61a3a798fac49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwrite</definition>
        <argsstring>(HANDLE h, const void *buf, int nbytes)</argsstring>
        <name>xwrite</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="877" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="877" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a4c2db485a0440ed9eaaad1abdd040ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwriteExact</definition>
        <argsstring>(HANDLE h, const void *buf, int nbytes)</argsstring>
        <name>xwriteExact</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="899" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="899" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a6dd46a6a30b2ab934fb7ce25f0c4cb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xwriteTxt</definition>
        <argsstring>(HANDLE h, LPCTSTR txt)</argsstring>
        <name>xwriteTxt</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="929" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="929" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a10ff99f74c586e76c36436999b57753e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE xclose</definition>
        <argsstring>(HANDLE h)</argsstring>
        <name>xclose</name>
        <param>
          <type>HANDLE</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="951" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="951" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ae297ffeedde8d45fe75b2b07a503899a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE xopen</definition>
        <argsstring>(LPCTSTR path, int mode)</argsstring>
        <name>xopen</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="971" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="971" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1aa03474f5f8dce4a81df668ba886232d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pathExists</definition>
        <argsstring>(LPCTSTR path, bool *sys)</argsstring>
        <name>pathExists</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="991" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="991" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a2b00d9784a993d3f92c5ab1ea1bcfe70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_but_style</definition>
        <argsstring>(HWND hwnd, bool defpush)</argsstring>
        <name>set_but_style</name>
        <param>
          <type>HWND</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defpush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1027" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1027" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a0c5fabf49a462bb8a8772a21d59633e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HWND</type>
        <definition>HWND enableCtl</definition>
        <argsstring>(HWND hdlg, int idc, int enables)</argsstring>
        <name>enableCtl</name>
        <param>
          <type>HWND</type>
          <declname>hdlg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1058" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1058" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1abb31d6fa5d4ca4964575a4c54ce2f596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flog_</definition>
        <argsstring>(LPCTSTR fmt,...)</argsstring>
        <name>flog_</name>
        <param>
          <type>LPCTSTR</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1094" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1094" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a5dc47b217e2d80c456a2568b801181c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flog_emh_</definition>
        <argsstring>(const ENHMETAHEADER *hp, LPCTSTR title)</argsstring>
        <name>flog_emh_</name>
        <param>
          <type>const ENHMETAHEADER *</type>
          <declname>hp</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1160" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1160" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1acb986edb095c592d5b9ca482e197c62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flog_emf_</definition>
        <argsstring>(HENHMETAFILE hemf, LPCTSTR title)</argsstring>
        <name>flog_emf_</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1205" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1205" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1a4265e3d4cb91c9bcab2f6101be95770b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const CString &amp;</type>
        <definition>const CString&amp; getModuleDir</definition>
        <argsstring>()</argsstring>
        <name>getModuleDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1219" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1219" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="stdafx_8cpp_1ab4d577e9695a45344997446e6b4a8dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initSome</definition>
        <argsstring>(void)</argsstring>
        <name>initSome</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" line="1226" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp" bodystart="1226" bodyend="1292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Change<sp/>Vision<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>comment(exestr,<sp/>&quot;%Z%%Y%%M%<sp/>%I%<sp/>20%E%<sp/>%U%&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>_DEBUG</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="quotedlg_8h" kindref="compound">quotedlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>msgbox<sp/><sp/>CQuoteDlg::show</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFLT_DPH<sp/><sp/><sp/><sp/>((double)72<sp/>/<sp/>HIM_INCH)<sp/>//<sp/>72dpi<sp/>0.02835</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/><sp/>cantloadmsg[]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;cannot<sp/>load<sp/>message<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CString<sp/><sp/>moduleDir;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CString<sp/><sp/>logfilePath;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>save;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapFree(GetProcessHeap(),<sp/>0,<sp/>buf);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(save);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a48e21199a00cda5d461fd56e9494249a" kindref="member">OSE_INVAL</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>HeapAlloc(GetProcessHeap(),<sp/>HEAP_ZERO_MEMORY,<sp/>sz))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="stdafx_8cpp_1a42d7580aee445057e895ac789aa3ac35" kindref="member">xrealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(sz);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a48e21199a00cda5d461fd56e9494249a" kindref="member">OSE_INVAL</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HeapReAlloc()<sp/>は<sp/>SetLastError()<sp/>してくれるらしいです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HeapReAlloc(GetProcessHeap(),<sp/>HEAP_ZERO_MEMORY,<sp/>buf,<sp/>sz);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">LPWSTR</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="stdafx_8cpp_1a74298ba04a76c428f9d983f323da7b68" kindref="member">cstr2wstr</ref>(LPCSTR<sp/>src)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>len,<sp/>nc,<sp/>n;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>LPWSTR<sp/><sp/><sp/><sp/><sp/><sp/>buf;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a48e21199a00cda5d461fd56e9494249a" kindref="member">OSE_INVAL</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>lstrlenA(src))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(LPWSTR)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*buf));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nc<sp/>=<sp/>MultiByteToWideChar(CP_ACP,<sp/>0,<sp/>src,<sp/>len,<sp/>NULL,<sp/>0))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*buf)))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf<sp/>=<sp/>(LPWSTR)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>((nc<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*buf)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>MultiByteToWideChar(CP_ACP,<sp/>0,<sp/>src,<sp/>len,<sp/>buf,<sp/>nc))<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>nc)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>buf[nc]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="structbufone" kindref="compound">bufone</ref><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="stdafx_8cpp_1a9b180da132f41adc6a1e35bd07ae8be1" kindref="member">tstr2utf</ref>(LPCTSTR<sp/>src)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbufone" kindref="compound">bufone</ref><sp/><sp/><sp/><sp/><sp/><sp/>*bop<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LPCWSTR<sp/><sp/><sp/><sp/><sp/>wstr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LPWSTR<sp/><sp/><sp/><sp/><sp/><sp/>wstr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>wlen,<sp/>nb,<sp/>n;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a48e21199a00cda5d461fd56e9494249a" kindref="member">OSE_INVAL</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*src)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bop<sp/>=<sp/>(<ref refid="structbufone" kindref="compound">bufone</ref><sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(<ref refid="structbufone_1a92c951b9a2926c017a43d4a74d4e1b8d" kindref="member">bufone::hdrlen</ref>()<sp/>+<sp/>1))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bop-&gt;<ref refid="structbufone_1ae7ecd567373d045f921638ebfecbeea1" kindref="member">init</ref>(0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bop;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>wstr<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wstr<sp/>=<sp/><ref refid="stdafx_8cpp_1a74298ba04a76c428f9d983f323da7b68" kindref="member">cstr2wstr</ref>(src))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>wlen<sp/>=<sp/>lstrlenW(wstr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>nb<sp/>=<sp/>WideCharToMultiByte(CP_UTF8,<sp/>0,<sp/>wstr,<sp/>wlen,<sp/>NULL,<sp/>0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nb<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nb<sp/>&gt;=<sp/><ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref><sp/>-<sp/><ref refid="structbufone_1a92c951b9a2926c017a43d4a74d4e1b8d" kindref="member">bufone::hdrlen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="structbufone_1a92c951b9a2926c017a43d4a74d4e1b8d" kindref="member">bufone::hdrlen</ref>()<sp/>+<sp/>nb<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bop<sp/>=<sp/>(<ref refid="structbufone" kindref="compound">bufone</ref><sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(n))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>bop-&gt;<ref refid="structbufone_1ae7ecd567373d045f921638ebfecbeea1" kindref="member">init</ref>(nb);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>bop-&gt;<ref refid="structbufone_1a16b585f15c3ac10081449317ef926112" kindref="member">buf</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>WideCharToMultiByte(CP_UTF8,<sp/>0,<sp/>wstr,<sp/>wlen,<sp/>buf,<sp/>nb,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(bop);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>nb)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(bop);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>buf[nb]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>bop-&gt;<ref refid="structbufone_1ae7ecd567373d045f921638ebfecbeea1" kindref="member">init</ref>(n);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bop;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">LPTSTR</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="stdafx_8cpp_1a9c670a18a63398acd36578ca96250159" kindref="member">utf2tstr</ref>(LPCSTR<sp/>src)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>len,<sp/>nc,<sp/>n;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>LPWSTR<sp/><sp/><sp/><sp/><sp/><sp/>wstr;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LPSTR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstr;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a48e21199a00cda5d461fd56e9494249a" kindref="member">OSE_INVAL</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>lstrlenA(src))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(LPTSTR)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TCHAR));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nc<sp/>=<sp/>MultiByteToWideChar(CP_UTF8,<sp/>0,<sp/>src,<sp/>len,<sp/>NULL,<sp/>0))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wstr)))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wstr<sp/>=<sp/>(LPWSTR)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>((nc<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*wstr)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>MultiByteToWideChar(CP_UTF8,<sp/>0,<sp/>src,<sp/>len,<sp/>wstr,<sp/>nc))<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>nc)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>wstr[n]<sp/>=<sp/>wstr[nc]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wstr;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>nc<sp/>=<sp/>WideCharToMultiByte(CP_ACP,<sp/>0,<sp/>wstr,<sp/>len,<sp/>NULL,<sp/>0,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nc<sp/>&gt;=<sp/><ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cstr<sp/>=<sp/>(LPSTR)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(nc<sp/>+<sp/>1))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>WideCharToMultiByte(CP_ACP,<sp/>0,<sp/>wstr,<sp/>len,<sp/>cstr,<sp/>nc,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(cstr);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>nc)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(cstr);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>cstr[n]<sp/>=<sp/>cstr[nc]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(wstr);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cstr;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(CString<sp/>&amp;s,<sp/>UINT<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>LPCTSTR<sp/>defstr)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.LoadString(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defstr<sp/>&amp;&amp;<sp/>*defstr)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>defstr;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.Empty();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">CString<sp/>&amp;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="stdafx_8cpp_1a9ca1172c8e5850474961042a743b5922" kindref="member">loadAppTitle</ref>(CString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>appstr;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>appstr<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>AfxGetAppName();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>appstr;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!appstr.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>appstr;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" kindref="member">xfail</ref>(LPCTSTR<sp/>msg)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" kindref="member">xfail</ref>(UINT<sp/>msgid)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msgid,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="stdafx_8cpp_1ac13962a471d4c6d9e5444de17733d82b" kindref="member">xfailf</ref>(LPCTSTR<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(s,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="stdafx_8cpp_1ac13962a471d4c6d9e5444de17733d82b" kindref="member">xfailf</ref>(UINT<sp/>msgid,<sp/>...)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>LPCTSTR<sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>cantloadmsg;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>fmt,<sp/>s;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(fmt,<sp/>msgid))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msgid);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONSTOP);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(LPCTSTR<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>moreflags)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONEXCLAMATION<sp/>|<sp/>moreflags);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(UINT<sp/>msgid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>moreflags)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msgid,<sp/>MB_OK<sp/>|<sp/>MB_ICONEXCLAMATION<sp/>|<sp/>moreflags);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="stdafx_8cpp_1aa1fb887a27469341fa20794ce94e2e44" kindref="member">xwarnf</ref>(LPCTSTR<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(s,<sp/>MB_OK<sp/>|<sp/>MB_ICONEXCLAMATION);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="stdafx_8cpp_1aa1fb887a27469341fa20794ce94e2e44" kindref="member">xwarnf</ref>(UINT<sp/>msgid,<sp/>...)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>LPCTSTR<sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>cantloadmsg;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>fmt,<sp/>s;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(fmt,<sp/>msgid))<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msgid);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONEXCLAMATION);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><ref refid="stdafx_8cpp_1ae7c3c0fb0d22466438ffa64d6064bb7f" kindref="member">xinfo</ref>(LPCTSTR<sp/>msg)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONINFORMATION);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="stdafx_8cpp_1ae7c3c0fb0d22466438ffa64d6064bb7f" kindref="member">xinfo</ref>(UINT<sp/>msgid)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msgid,<sp/>MB_OK<sp/>|<sp/>MB_ICONINFORMATION);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="stdafx_8cpp_1ab02584f340fd7c0843afe44a4e532754" kindref="member">xinfof</ref>(LPCTSTR<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(s,<sp/>MB_OK<sp/>|<sp/>MB_ICONINFORMATION);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="stdafx_8cpp_1ab02584f340fd7c0843afe44a4e532754" kindref="member">xinfof</ref>(UINT<sp/>msgid,<sp/>...)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>LPCTSTR<sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>cantloadmsg;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>fmt,<sp/>s;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(fmt,<sp/>msgid))<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msgid);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_OK<sp/>|<sp/>MB_ICONINFORMATION);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="stdafx_8cpp_1aeadc514b84b7e651f94cc139b0ab6343" kindref="member">xyorn</ref>(LPCTSTR<sp/>msg)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_YESNO<sp/>|<sp/>MB_ICONQUESTION);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>IDYES;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><ref refid="stdafx_8cpp_1a83a85c2db4fb92caeaca9f79cd41818d" kindref="member">xyornf</ref>(LPCTSTR<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(s,<sp/>MB_YESNO<sp/>|<sp/>MB_ICONQUESTION);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>IDYES;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><ref refid="stdafx_8cpp_1aeadc514b84b7e651f94cc139b0ab6343" kindref="member">xyorn</ref>(UINT<sp/>msgid)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msgid,<sp/>MB_YESNO<sp/>|<sp/>MB_ICONQUESTION);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>IDYES;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="stdafx_8cpp_1a83a85c2db4fb92caeaca9f79cd41818d" kindref="member">xyornf</ref>(UINT<sp/>msgid,<sp/>...)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>LPCTSTR<sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>cantloadmsg;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>fmt,<sp/>s;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(fmt,<sp/>msgid))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ap,<sp/>msgid);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.FormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="stdafx_8cpp_1a1d4d785907b6635842648258272d7bac" kindref="member">msgbox</ref>(msg,<sp/>MB_YESNO<sp/>|<sp/>MB_ICONQUESTION);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>==<sp/>IDYES;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><ref refid="stdafx_8cpp_1a77b5e6f3d4c9cef91e731b03642357db" kindref="member">stoi</ref>(LPCTSTR<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*valp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valp)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*valp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>_tcstol(str,<sp/>&amp;end,<sp/>base);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valp)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*valp<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>||<sp/>*end<sp/>||<sp/>end<sp/>&lt;=<sp/>str)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>major<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="stdafx_8h_1afa1799e4211e30956da00fc82b089add" kindref="member">MY_INT_MIN</ref>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1afa1799e4211e30956da00fc82b089add" kindref="member">MY_INT_MIN</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_finite(v))</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>modf(v,<sp/>&amp;major);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uord<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_finite(v))</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major<sp/>=<sp/>major;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major--;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major++;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uord<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_finite(v))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major<sp/>=<sp/>major;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;=<sp/>-0.5)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major--;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;=<sp/>0.5)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major++;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(major<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)MY_INT_MIN)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1afa1799e4211e30956da00fc82b089add" kindref="member">MY_INT_MIN</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(major<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)MY_INT_MAX)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1a9bf1951b813311cbd01af095e393dbdb" kindref="member">MY_INT_MAX</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_finite(major))</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)major;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><ref refid="stdafx_8cpp_1a409bdd9221abd388e406a7cccd48ec7e" kindref="member">getLogpDpi</ref>(HDC<sp/>hdc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xdpip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ydpip)</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>0,<sp/>xdpi<sp/>=<sp/>0,<sp/>ydpi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>これはマルチモニタ環境でも統一値になるらしいです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdc<sp/>=<sp/>GetDC(NULL))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdpi<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ydpi<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dpi<sp/>=<sp/>xdpi)<sp/>&gt;<sp/>ydpi)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>ydpi;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdpip)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdpip<sp/>=<sp/>xdpi;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ydpip)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydpip<sp/>=<sp/>ydpi;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dpi;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="stdafx_8cpp_1aeddf8ebeff5df59c8efbaa411cc8d702" kindref="member">getRealDpi</ref>(HDC<sp/>hdc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xdpip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ydpip)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>0,<sp/>xdpi<sp/>=<sp/>0,<sp/>ydpi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hlp<sp/>=<sp/>0,<sp/>hpx<sp/>=<sp/>0,<sp/>hmm<sp/>=<sp/>0,<sp/>vlp<sp/>=<sp/>0,<sp/>vpx<sp/>=<sp/>0,<sp/>vmm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hlp<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>HORZRES);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>HORZSIZE);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlp<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vpx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>VERTRES);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmm<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>VERTSIZE);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdc<sp/>=<sp/>GetDC(NULL))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hlp<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>HORZRES);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hmm<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>HORZSIZE);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlp<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vpx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>VERTRES);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmm<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>VERTSIZE);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hlp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>hlp;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vlp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/>vlp;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dpi<sp/>=<sp/>xdpi)<sp/>&gt;<sp/>ydpi)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>ydpi;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdpip)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdpip<sp/>=<sp/>xdpi;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ydpip)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydpip<sp/>=<sp/>ydpi;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dpi;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">getdph(HDC<sp/>hdc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xdph,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ydph)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0,<sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdc<sp/>=<sp/>GetDC(NULL))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yy<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>*xdph<sp/>=<sp/>(double)xx<sp/>/<sp/><ref refid="stdafx_8h_1acc6a55d2db07ef85ff769e24cafe2565" kindref="member">HIM_INCH</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>*ydph<sp/>=<sp/>(double)yy<sp/>/<sp/><ref refid="stdafx_8h_1acc6a55d2db07ef85ff769e24cafe2565" kindref="member">HIM_INCH</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><ref refid="stdafx_8cpp_1a4768b2340093f3f3b92e5bb513c62302" kindref="member">dpi2him</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dpi,<sp/>CRect<sp/>*rcp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dph;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dpi<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>dph<sp/>=<sp/>(double)dpi<sp/>/<sp/><ref refid="stdafx_8h_1acc6a55d2db07ef85ff769e24cafe2565" kindref="member">HIM_INCH</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;left<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;left<sp/>/<sp/>dph,<sp/>uord);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;top<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;top<sp/>/<sp/>dph,<sp/>uord);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;right<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;right<sp/>/<sp/>dph,<sp/>uord);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;bottom<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;bottom<sp/>/<sp/>dph,<sp/>uord);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="stdafx_8cpp_1ad8f78f97fa211cd669d4056c544b8ccc" kindref="member">dp2him</ref>(HDC<sp/>hdc,<sp/>CSize<sp/>*szp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xdph<sp/>=<sp/>0,<sp/>ydph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>getdph(hdc,<sp/>&amp;xdph,<sp/>&amp;ydph);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>szp-&gt;cx<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)szp-&gt;cx<sp/>/<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>szp-&gt;cy<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)szp-&gt;cy<sp/>/<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><ref refid="stdafx_8cpp_1ad8f78f97fa211cd669d4056c544b8ccc" kindref="member">dp2him</ref>(HDC<sp/>hdc,<sp/>CRect<sp/>*rcp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xdph<sp/>=<sp/>0,<sp/>ydph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>getdph(hdc,<sp/>&amp;xdph,<sp/>&amp;ydph);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;left<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;left<sp/>/<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;top<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;top<sp/>/<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;right<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;right<sp/>/<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;bottom<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;bottom<sp/>/<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><ref refid="stdafx_8cpp_1a4cb7b6aa2db8e93ff3f5909748034e2b" kindref="member">him2dp</ref>(HDC<sp/>hdc,<sp/>CSize<sp/>*szp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xdph<sp/>=<sp/>0,<sp/>ydph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>getdph(hdc,<sp/>&amp;xdph,<sp/>&amp;ydph);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>szp-&gt;cx<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)szp-&gt;cx<sp/>*<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>szp-&gt;cy<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)szp-&gt;cy<sp/>*<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><ref refid="stdafx_8cpp_1a4cb7b6aa2db8e93ff3f5909748034e2b" kindref="member">him2dp</ref>(HDC<sp/>hdc,<sp/>CRect<sp/>*rcp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uord)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xdph<sp/>=<sp/>0,<sp/>ydph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>getdph(hdc,<sp/>&amp;xdph,<sp/>&amp;ydph);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;left<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;left<sp/>*<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;top<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;top<sp/>*<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;right<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;right<sp/>*<sp/>xdph,<sp/>uord);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>rcp-&gt;bottom<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rcp-&gt;bottom<sp/>*<sp/>ydph,<sp/>uord);</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ファイル入出力</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>2GBまでに制限</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FILE_BEGIN<sp/><sp/>SEEK_SET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FILE_CURRENT<sp/><sp/><sp/><sp/>SEEK_CUR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FILE_END<sp/><sp/><sp/><sp/>SEEK_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><ref refid="stdafx_8cpp_1abd045addc368d92ad721aa2760b04919" kindref="member">xlseek</ref>(HANDLE<sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wh)</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/><sp/><sp/>loff,<sp/>lres;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>loff.QuadPart<sp/>=<sp/>off;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>lres.QuadPart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SetFilePointerEx(h,<sp/>loff,<sp/>&amp;lres,<sp/>wh))</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lres.QuadPart<sp/>&lt;<sp/>0<sp/>||<sp/>(LONGLONG)MY_INT_MAX<sp/>&lt;<sp/>lres.QuadPart)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)lres.QuadPart;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><ref refid="stdafx_8cpp_1a771d71c7b895038aa04e125e2884b369" kindref="member">xread</ref>(HANDLE<sp/>h,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>dw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ReadFile(h,<sp/>buf,<sp/>nbytes,<sp/>&amp;dw,<sp/>NULL))</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dw<sp/>&gt;<sp/>(DWORD)nbytes)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dw;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><ref refid="stdafx_8cpp_1a31fe7830b838fb6c00f61a3a798fac49" kindref="member">xwrite</ref>(HANDLE<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>dw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WriteFile(h,<sp/>buf,<sp/>nbytes,<sp/>&amp;dw,<sp/>NULL))</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dw<sp/>&gt;<sp/>(DWORD)nbytes)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dw;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><ref refid="stdafx_8cpp_1a4c2db485a0440ed9eaaad1abdd040ede" kindref="member">xwriteExact</ref>(HANDLE<sp/>h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>dw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(0);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!WriteFile(h,<sp/>buf,<sp/>nbytes,<sp/>&amp;dw,<sp/>NULL))</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dw<sp/>&gt;<sp/>(DWORD)nbytes)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a18a2177f978dcca5e301eaaf1d936890" kindref="member">OSE_NXIO</ref>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dw<sp/>!=<sp/>(DWORD)nbytes)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetLastError()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a1cbb7f284b9af0e5ea4252b1fdfc9488" kindref="member">OSE_NOSPC</ref>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dw;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><ref refid="stdafx_8cpp_1a6dd46a6a30b2ab934fb7ce25f0c4cb4c" kindref="member">xwriteTxt</ref>(HANDLE<sp/>h,<sp/>LPCTSTR<sp/>txt)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>nbytes;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!txt<sp/>||<sp/>!*txt)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nbytes<sp/>=<sp/>lstrlen(txt))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>&gt;<sp/>MY_INT_MAX<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*txt))<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(<ref refid="stdafx_8h_1a54961a0fbdbd7e1d9aaa20d3bbfe3c11" kindref="member">OSE_NOMEM</ref>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>nbytes<sp/>*=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*txt);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1a4c2db485a0440ed9eaaad1abdd040ede" kindref="member">xwriteExact</ref>(h,<sp/>txt,<sp/>nbytes);</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><ref refid="stdafx_8cpp_1a10ff99f74c586e76c36436999b57753e" kindref="member">xclose</ref>(HANDLE<sp/>h)</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>save;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>save<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle(h);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(save);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8h_1ac4be7a3847d2f545e32ff98d6ef4fdd4" kindref="member">BAD_HANDLE</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*<sp/><sp/>mode</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*<sp/><sp/>0<sp/><sp/><sp/>read<sp/>only<sp/><sp/>(no<sp/>create)</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*<sp/><sp/>1<sp/><sp/><sp/>read<sp/>write<sp/>(create<sp/>if<sp/>not<sp/>exist)</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*<sp/><sp/>-1<sp/><sp/>read<sp/>write<sp/>/<sp/>truncate</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><ref refid="stdafx_8cpp_1ae297ffeedde8d45fe75b2b07a503899a" kindref="member">xopen</ref>(LPCTSTR<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/>h;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>CreateFile(</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>?<sp/>(GENERIC_READ<sp/>|<sp/>GENERIC_WRITE)<sp/>:<sp/>GENERIC_READ,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>?<sp/>0<sp/>:<sp/>FILE_SHARE_READ,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mode<sp/>==<sp/>0)<sp/>?<sp/>OPEN_EXISTING<sp/>:</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mode<sp/>&gt;=<sp/>0)<sp/>?<sp/>OPEN_ALWAYS<sp/>:<sp/>CREATE_ALWAYS),</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_ATTRIBUTE_NORMAL,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><ref refid="stdafx_8cpp_1aa03474f5f8dce4a81df668ba886232d2" kindref="member">pathExists</ref>(LPCTSTR<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*sys)</highlight></codeline>
<codeline lineno="992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>a;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sys)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sys<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path<sp/>||<sp/>!*path)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(0);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>=<sp/>GetFileAttributes(path))<sp/>!=<sp/>(DWORD)-1)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>&amp;<sp/>FILE_ATTRIBUTE_SYSTEM)<sp/>&amp;&amp;<sp/>sys)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sys<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>種類までは見ません。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(GetLastError())<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_FILE_NOT_FOUND:</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_PATH_NOT_FOUND:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal">set_but_style(HWND<sp/>hwnd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>defpush)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/><sp/>butclass[]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[16];</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>style<sp/>&amp;<sp/>0x0f<sp/>というのは、実値群から取り出したものです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUT_STYLE(h)<sp/><sp/><sp/><sp/>(::GetWindowLong(h,<sp/>GWL_STYLE)<sp/>&amp;<sp/>0x0f)</highlight></codeline>
<codeline lineno="1036"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BUT_IS_PUSH(h)<sp/><sp/>(BUT_STYLE(h)<sp/>==<sp/>BS_PUSHBUTTON)</highlight></codeline>
<codeline lineno="1037"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BUT_IS_DEFP(h)<sp/><sp/>(BUT_STYLE(h)<sp/>==<sp/>BS_DEFPUSHBUTTON)</highlight></codeline>
<codeline lineno="1038"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BUT_BE_PUSH(h)<sp/><sp/>(::SendMessage(h,<sp/>BM_SETSTYLE,<sp/>BS_PUSHBUTTON,<sp/>TRUE))</highlight></codeline>
<codeline lineno="1039"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BUT_BE_DEFP(h)<sp/><sp/>(::SendMessage(h,<sp/>BM_SETSTYLE,<sp/>BS_DEFPUSHBUTTON,<sp/>TRUE))</highlight></codeline>
<codeline lineno="1040"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>*buf<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&apos;¥0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>GetClassName(hwnd,<sp/>buf,<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(buf));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lstrcmp(buf,<sp/>butclass))</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defpush)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1abc911db9e5f2333023386e06d0813e30" kindref="member">BUT_IS_PUSH</ref>(hwnd))</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a4cf92e1a7a101f5f69f88c33692db8a6" kindref="member">BUT_BE_DEFP</ref>(hwnd);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1a72491116f302cd9e2a54f213690a0405" kindref="member">BUT_IS_DEFP</ref>(hwnd))</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1ac168d2851e33ac31f55a21a691038a2e" kindref="member">BUT_BE_PUSH</ref>(hwnd);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal">HWND</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><ref refid="stdafx_8cpp_1a0c5fabf49a462bb8a8772a21d59633e5" kindref="member">enableCtl</ref>(HWND<sp/>hdlg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enables)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hctl,<sp/>hnext;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsWindow(hdlg))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hctl<sp/>=<sp/>GetDlgItem(hdlg,<sp/>idc))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>hnext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enables<sp/>&amp;&amp;<sp/>GetFocus()<sp/>==<sp/>hctl)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hnext<sp/>=<sp/>GetNextDlgTabItem(hdlg,<sp/>hctl,<sp/>FALSE))<sp/>==<sp/>hctl)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hnext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>EnableWindow(hctl,<sp/>enables<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hnext)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFocus(hnext);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enables)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_but_style(hctl,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hnext)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_but_style(hnext,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hctl;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><ref refid="stdafx_8cpp_1abb31d6fa5d4ca4964575a4c54ce2f596" kindref="member">flog_</ref>(LPCTSTR<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>nbytes;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/>h;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>save,<sp/>dw;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/><sp/><sp/>loff;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>SYSTEMTIME<sp/><sp/>st;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="1104"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CStringA<sp/><sp/><sp/><sp/>sa;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>save<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>dw<sp/>=<sp/>nbytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>loff.QuadPart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>GetLocalTime(&amp;st);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>s.Format(_T(</highlight><highlight class="stringliteral">&quot;%04u/%02u/%02u<sp/>%02u:%02u:%02u<sp/>%lu<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.wYear,<sp/>st.wMonth,<sp/>st.wDay,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.wHour,<sp/>st.wMinute,<sp/>st.wSecond,<sp/>GetCurrentProcessId());</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>s.AppendFormatV(fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;¥r¥n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="1125"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sa<sp/>=<sp/>(LPCTSTR)s;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/>sa.GetLength();</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1128"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/>s.GetLength()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TCHAR);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1130"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>CreateFile(</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERIC_WRITE,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_SHARE_READ,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">#ifdef<sp/><sp/>_DEBUG</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN_ALWAYS,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN_EXISTING,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_ATTRIBUTE_NORMAL,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>!=<sp/><ref refid="stdafx_8h_1ac4be7a3847d2f545e32ff98d6ef4fdd4" kindref="member">BAD_HANDLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFilePointerEx(h,<sp/>loff,<sp/>NULL,<sp/>FILE_END);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>UNI_CODE</highlight></codeline>
<codeline lineno="1148"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteFile(h,<sp/>(LPCSTR)sa,<sp/>nbytes,<sp/>&amp;dw,<sp/>NULL);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1150"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteFile(h,<sp/>(LPCTSTR)s,<sp/>nbytes,<sp/>&amp;dw,<sp/>NULL);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(h);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(save);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><ref refid="stdafx_8cpp_1a5dc47b217e2d80c456a2568b801181c6" kindref="member">flog_emh_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ENHMETAHEADER<sp/>*hp,<sp/>LPCTSTR<sp/>title)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dpi;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;ENHMETAHEADER<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>title<sp/>?<sp/>title<sp/>:<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>iType=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;iType);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nSize=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nSize);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclBounds.left=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclBounds.left);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclBounds.top=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclBounds.top);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclBounds.right=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclBounds.right);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclBounds.bottom=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclBounds.bottom);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclFrame.left=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclFrame.left);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclFrame.top=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclFrame.top);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclFrame.right=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclFrame.right);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>rclFrame.bottom=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;rclFrame.bottom);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>dSignature=%#lx&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;dSignature);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nVersion=%#lx&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nVersion);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nBytes=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nBytes);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nRecords=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nRecords);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nDescription=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nDescription);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>offDescription=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;offDescription);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>nPalEntries=%lu&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;nPalEntries);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>szlDevice.cx=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;szlDevice.cx);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>szlDevice.cy=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;szlDevice.cy);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>szlMillimeters.cx=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;szlMillimeters.cx);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>szlMillimeters.cy=%ld&quot;</highlight><highlight class="normal">),<sp/>hp-&gt;szlMillimeters.cy);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp-&gt;szlDevice.cx<sp/>&lt;=<sp/>0<sp/>||<sp/>hp-&gt;szlMillimeters.cx<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>xdpi=???&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>(double)hp-&gt;szlDevice.cx<sp/>/<sp/>hp-&gt;szlMillimeters.cx<sp/>*<sp/>25.4;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>xdpi=%f&quot;</highlight><highlight class="normal">),<sp/>dpi);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp-&gt;szlDevice.cy<sp/>&lt;=<sp/>0<sp/>||<sp/>hp-&gt;szlMillimeters.cy<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>ydpi=???&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi<sp/>=<sp/>(double)hp-&gt;szlDevice.cy<sp/>/<sp/>hp-&gt;szlMillimeters.cy<sp/>*<sp/>25.4;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/>ydpi=%f&quot;</highlight><highlight class="normal">),<sp/>dpi);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><ref refid="stdafx_8cpp_1acb986edb095c592d5b9ca482e197c62d" kindref="member">flog_emf_</ref>(HENHMETAFILE<sp/>hemf,<sp/>LPCTSTR<sp/>title)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hemf)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetEnhMetaFileHeader(hemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1a33fce670b308878728f7036c6b47959b" kindref="member">flog_emh</ref>(&amp;emh,<sp/>title);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CString<sp/>&amp;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><ref refid="stdafx_8cpp_1a4265e3d4cb91c9bcab2f6101be95770b" kindref="member">getModuleDir</ref>()</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moduleDir;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><ref refid="stdafx_8cpp_1ab4d577e9695a45344997446e6b4a8dfd" kindref="member">initSome</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>CWinApp<sp/><sp/><sp/><sp/><sp/>*app<sp/>=<sp/>AfxGetApp();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>off;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p,<sp/>buf[_MAX_PATH<sp/>+<sp/>32];</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(app<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>moduleDir.Empty();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(buf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>GetModuleFileName(AfxGetInstanceHandle(),<sp/>buf,<sp/>_MAX_PATH);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0<sp/>||<sp/>_MAX_PATH<sp/>&lt;=<sp/>n)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcpy(buf,<sp/><ref refid="stdafx_8h_1a933700ef40a7a96bc693ba95b9d4952a" kindref="member">DIR_CURRENT</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[_MAX_PATH<sp/>-<sp/>1]<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&apos;¥0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>moduleDir<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>moduleDir.ReverseFind(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moduleDir<sp/>+=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moduleDir.Delete(off<sp/>+<sp/>1,<sp/>moduleDir.GetLength()<sp/>-<sp/>off<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CStringは、一応MBの面倒も見る。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ピリオドはSJIS的に問題無しの前提。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>lstrlen(buf))<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(off<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!lstrcmpi(buf<sp/>+<sp/>off,<sp/>_T(</highlight><highlight class="stringliteral">&quot;.exe&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath.Delete(logfilePath.GetLength()<sp/>-<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcpy(buf<sp/>+<sp/>off,<sp/>_T(</highlight><highlight class="stringliteral">&quot;.ini&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath<sp/>=<sp/>moduleDir;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath<sp/>+=<sp/><ref refid="stdafx_8h_1a4551cd7177171b60a150fef61d1b1a7e" kindref="member">THE_APP_NAME</ref>;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfilePath<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcat(lstrcpy(buf,<sp/>moduleDir),<sp/><ref refid="stdafx_8h_1a4551cd7177171b60a150fef61d1b1a7e" kindref="member">THE_APP_NAME</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcat(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;.ini&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>SetFileAttributes(logfilePath,<sp/>FILE_ATTRIBUTE_NORMAL);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>SetFileAttributes(buf,<sp/>FILE_ATTRIBUTE_NORMAL);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>_tcsdup(buf))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(app-&gt;m_pszProfileName)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)app-&gt;m_pszProfileName);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;m_pszProfileName<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(app-&gt;m_pszRegistryKey)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)app-&gt;m_pszRegistryKey);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;m_pszRegistryKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/stdafx.cpp"/>
  </compounddef>
</doxygen>
