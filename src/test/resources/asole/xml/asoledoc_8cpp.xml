<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="asoledoc_8cpp" kind="file">
    <compoundname>asoledoc.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="resource_8h" local="yes">resource.h</includes>
    <includes refid="confval_8h" local="yes">confval.h</includes>
    <includes refid="mystream_8h" local="yes">mystream.h</includes>
    <includes refid="ipframe_8h" local="yes">ipframe.h</includes>
    <includes refid="mainfrm_8h" local="yes">mainfrm.h</includes>
    <includes refid="srvritem_8h" local="yes">srvritem.h</includes>
    <includes refid="aboutdlg_8h" local="yes">aboutdlg.h</includes>
    <includes refid="asoledoc_8h" local="yes">asoledoc.h</includes>
    <incdepgraph>
      <node id="64">
        <label>afxcmn.h</label>
      </node>
      <node id="69">
        <label>float.h</label>
      </node>
      <node id="61">
        <label>afxole.h</label>
      </node>
      <node id="60">
        <label>afxext.h</label>
      </node>
      <node id="66">
        <label>shlwapi.h</label>
      </node>
      <node id="71">
        <label>resource.h</label>
        <link refid="resource_8h"/>
      </node>
      <node id="68">
        <label>atlimage.h</label>
      </node>
      <node id="65">
        <label>afxsock.h</label>
      </node>
      <node id="72">
        <label>confval.h</label>
        <link refid="confval_8h"/>
      </node>
      <node id="67">
        <label>atlpath.h</label>
      </node>
      <node id="79">
        <label>asoledoc.h</label>
        <link refid="asoledoc_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>mystream.h</label>
        <link refid="mystream_8h"/>
      </node>
      <node id="81">
        <label>astahman.h</label>
        <link refid="astahman_8h"/>
      </node>
      <node id="78">
        <label>aboutdlg.h</label>
        <link refid="aboutdlg_8h"/>
      </node>
      <node id="77">
        <label>srvritem.h</label>
        <link refid="srvritem_8h"/>
      </node>
      <node id="74">
        <label>ipframe.h</label>
        <link refid="ipframe_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>mainfrm.h</label>
        <link refid="mainfrm_8h"/>
      </node>
      <node id="70">
        <label>math.h</label>
      </node>
      <node id="80">
        <label>afxoleserverdocex.h</label>
      </node>
      <node id="62">
        <label>afxdisp.h</label>
      </node>
      <node id="63">
        <label>afxdtctl.h</label>
      </node>
      <node id="56">
        <label>asoledoc.cpp</label>
        <link refid="asoledoc.cpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
      </node>
      <node id="59">
        <label>afxwin.h</label>
      </node>
      <node id="75">
        <label>afxoleipframewndex.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="asoledoc_8cpp_1a004da52b774657ee31141668c4022bf7" prot="public" static="no">
        <name>archive_cause</name>
        <initializer>CArchiveException::badIndex</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="20" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="asoledoc_8cpp_1ae27453e34ae98b4f9baaa25c20e06258" prot="public" static="no">
        <name>ICON_WH</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="575" column="9"/>
      </memberdef>
      <memberdef kind="define" id="asoledoc_8cpp_1a3d7ff8f6d5c61b54d5862b8dc8ffbfb8" prot="public" static="no">
        <name>DOC_MARK</name>
        <initializer>(0x4c4f5341)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="1182" column="9"/>
      </memberdef>
      <memberdef kind="define" id="asoledoc_8cpp_1afd004a1889bdff0503bdb38be86526f2" prot="public" static="no">
        <name>DOC_FORM</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="1183" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="asoledoc_8cpp_1a9053e9475024679a2d1872a6e372b944" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int isdots</definition>
        <argsstring>(LPCTSTR name, int len)</argsstring>
        <name>isdots</name>
        <param>
          <type>LPCTSTR</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>「.」か「..」かの確認。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="28" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a601756c64f7353b392f0c423825530fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int reformpath</definition>
        <argsstring>(CString &amp;path, CString &amp;drv, strmob &amp;strs, int isfile)</argsstring>
        <name>reformpath</name>
        <param>
          <type>CString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>drv</declname>
        </param>
        <param>
          <type><ref refid="stdafx_8h_1ade5eab86553c52d77f7d0e2283bc0091" kindref="member">strmob</ref> &amp;</type>
          <declname>strs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>絶対パスを正規化風にパスコンポ分解。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="43" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="43" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1aa01eda14f0a581b1b7d755b3c8b8aba0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int abs2rel</definition>
        <argsstring>(CString &amp;rpath, CString &amp;apath, CString &amp;bpath)</argsstring>
        <name>abs2rel</name>
        <param>
          <type>CString &amp;</type>
          <declname>rpath</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>apath</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>bpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>パスを相対化します。 前提: エンコ的に不正な文字コードを含まない事。 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rpath</parametername>
</parameternamelist>
<parameterdescription>
<para>結果格納場所 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apath</parametername>
</parameternamelist>
<parameterdescription>
<para>astaファイルのフルパス、処理中に更新 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bpath</parametername>
</parameternamelist>
<parameterdescription>
<para>文書ファイル在ディレクトリのフルパス、処理中に更新（捨て） </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1=パス不正で絶対のまま 0=絶対のまま 1=相対化したか無視 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="185" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="185" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1ad05fbac7db0eb9fb3d254e013414b892" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void getEmfDpis</definition>
        <argsstring>(HENHMETAFILE hemf, int *xdpi, int *ydpi)</argsstring>
        <name>getEmfDpis</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>xdpi</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ydpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="270" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="270" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a5e6f9e1c26f694d21e0400fb79b97310" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mendEmf</definition>
        <argsstring>(HENHMETAFILE *hemfp, int xdpi=0, int ydpi=0)</argsstring>
        <name>mendEmf</name>
        <param>
          <type>HENHMETAFILE *</type>
          <declname>hemfp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xdpi</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>ydpi</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="294" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="294" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1aafe1fc48c527523935c222e971a80782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HENHMETAFILE</type>
        <definition>static HENHMETAFILE replayEmf</definition>
        <argsstring>(HENHMETAFILE ohemf, int xdpi, int ydpi)</argsstring>
        <name>replayEmf</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>ohemf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xdpi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ydpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="372" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="372" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a1647490a0c129ec46505fd96ea3071bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HMETAFILE</type>
        <definition>static HMETAFILE releaseMf</definition>
        <argsstring>(HMETAFILE hmf)</argsstring>
        <name>releaseMf</name>
        <param>
          <type>HMETAFILE</type>
          <declname>hmf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="435" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="435" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a6ee9353234f0b007ce263523c4d8ffea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HMETAFILE</type>
        <definition>static HMETAFILE dupMf</definition>
        <argsstring>(HMETAFILE hmf)</argsstring>
        <name>dupMf</name>
        <param>
          <type>HMETAFILE</type>
          <declname>hmf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="445" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="445" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a7bdd93c4039db2468117ca32e38e173c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HMETAFILE</type>
        <definition>static HMETAFILE emf2mf</definition>
        <argsstring>(HENHMETAFILE hemf, CRect *rcp, HDC hdc=NULL)</argsstring>
        <name>emf2mf</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <param>
          <type>CRect *</type>
          <declname>rcp</declname>
        </param>
        <param>
          <type>HDC</type>
          <declname>hdc</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enhmeta を meta に変換。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="478" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="478" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1aec0bab3bafd4726087b771e4e5183a87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HENHMETAFILE</type>
        <definition>static HENHMETAFILE createMiniEmf</definition>
        <argsstring>(CRect *emrcp)</argsstring>
        <name>createMiniEmf</name>
        <param>
          <type>CRect *</type>
          <declname>emrcp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="556" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="556" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1aad87214d616d578657cc4342d3350ea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HENHMETAFILE</type>
        <definition>static HENHMETAFILE releaseEmf</definition>
        <argsstring>(HENHMETAFILE hemf)</argsstring>
        <name>releaseEmf</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="615" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="615" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a6772a724185a13440e50931c3b771e56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int getEmfBuf</definition>
        <argsstring>(HENHMETAFILE hemf, BYTE **bufp)</argsstring>
        <name>getEmfBuf</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <param>
          <type>BYTE **</type>
          <declname>bufp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="625" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="625" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1af22c73317de185cbfe930b73c9ee4133" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HENHMETAFILE</type>
        <definition>static HENHMETAFILE dupEmf</definition>
        <argsstring>(HENHMETAFILE hemf)</argsstring>
        <name>dupEmf</name>
        <param>
          <type>HENHMETAFILE</type>
          <declname>hemf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hemfの複製を作成します。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="665" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="665" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1adb8090faad7b36e5bbaf01056299cbe4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HENHMETAFILE</type>
        <definition>static HENHMETAFILE img2hemf</definition>
        <argsstring>(int dpi, uchar_t *mbuf, int mlen)</argsstring>
        <name>img2hemf</name>
        <param>
          <type>int</type>
          <declname>dpi</declname>
        </param>
        <param>
          <type><ref refid="stdafx_8h_1a124ea0f8f4a23a0a286b5582137f0b8d" kindref="member">uchar_t</ref> *</type>
          <declname>mbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="685" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="685" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="asoledoc_8cpp_1a2d737b3ffd150c8316166bbf772d8285" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int findfile</definition>
        <argsstring>(CString &amp;fpath, LPCTSTR fname, CString &amp;dirpath)</argsstring>
        <name>findfile</name>
        <param>
          <type>CString &amp;</type>
          <declname>fpath</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>dirpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" line="832" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp" bodystart="832" bodyend="869"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Change<sp/>Vision<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>comment(exestr,<sp/>&quot;%Z%%Y%%M%<sp/>%I%<sp/>20%E%<sp/>%U%&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="confval_8h" kindref="compound">confval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="mystream_8h" kindref="compound">mystream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="ipframe_8h" kindref="compound">ipframe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="mainfrm_8h" kindref="compound">mainfrm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="srvritem_8h" kindref="compound">srvritem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="aboutdlg_8h" kindref="compound">aboutdlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="asoledoc_8h" kindref="compound">asoledoc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>_DEBUG</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>archive_cause<sp/><sp/><sp/>CArchiveException::badIndex</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">isdots(LPCTSTR<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>name[0]<sp/>==<sp/>_T(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>name[0]<sp/>==<sp/>_T(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>name[1]<sp/>==<sp/>_T(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">reformpath(CString<sp/>&amp;path,<sp/>CString<sp/>&amp;drv,<sp/><ref refid="classmob" kindref="compound">strmob</ref><sp/>&amp;strs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isfile)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>len,<sp/>off,<sp/>idx;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>c;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>xpath;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pathにはエンコ的に不正コードが無い前提です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>受け付けるのは、この形式だけです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isfile時</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>X:¥file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>X:¥dir¥file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>¥¥machine¥dir¥file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>X:¥</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>X:¥dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>¥¥machine¥dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>¥¥machine¥dir¥subdir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>パスコンポ中に「.」や「..」が有れば、拒絶します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>なお<sp/>¥¥?¥C:¥dir¥abc.txt<sp/>¥¥?¥UNC¥machine¥dir¥abc.txt<sp/>の形式も</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>拒絶します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ただ、FS的に不正な文字やマシン名は見ていません。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drv<sp/>=<sp/>¥¥machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drv<sp/>=<sp/>C:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>path.GetLength())<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>path.GetAt(0))<sp/>==<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.GetAt(1)<sp/>!=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.GetAt(2)<sp/>==<sp/>_T(</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>path.Find(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>,<sp/>2))<sp/>&lt;<sp/>0<sp/>||<sp/>off<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(off<sp/>&gt;=<sp/>len<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drv<sp/>=<sp/>path.Left(off);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.Delete(0,<sp/>off);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_T(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>_T(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>-=<sp/>_T(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>-<sp/>_T(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>_T(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>||<sp/>_T(</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>c)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.GetAt(1)<sp/>!=<sp/>_T(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.GetAt(2)<sp/>!=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drv<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drv<sp/>+=<sp/>_T(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.Delete(0,<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.IsEmpty()<sp/>||<sp/>path.GetAt(0)<sp/>!=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PathCanonicalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>連続するDIRSEPを１つにしています。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(len<sp/>=<sp/>0,<sp/>idx<sp/>=<sp/>1;<sp/>idx<sp/>&lt;<sp/>path.GetLength();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>path.Find(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>,<sp/>idx))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/>path.GetLength();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdots((LPCTSTR)path<sp/>+<sp/>idx,<sp/>off<sp/>-<sp/>idx))</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(off<sp/>&lt;=<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.Delete(idx,<sp/>1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdots((LPCTSTR)path<sp/>+<sp/>idx,<sp/>off<sp/>-<sp/>idx))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>off<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>¥¥machine¥dir[¥file]<sp/>形式の場合、必要コンポ数をチェック</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>(isfile<sp/>?<sp/>2<sp/>:<sp/>1))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後がDIRSEPではない<sp/>:<sp/>!isfileならDIRSEP追加</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後がDIRSEP<sp/>:<sp/>isfileであればNG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>path.GetLength())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isfile)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>+=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isfile)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>malformed;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astahと同様に行うため、逆順にパスコンポを格納します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>strs.<ref refid="classmob_1a35c26ac377803add70b00c82ae497136" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>xpath<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>xpath.GetLength())<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>xpath.ReverseFind(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(off<sp/>&lt;<sp/>len<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strs.<ref refid="classmob_1acc3d675b29d0f0dfbe41635ebba1f57f" kindref="member">add</ref>((LPCTSTR)xpath<sp/>+<sp/>off<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath.Delete(off,<sp/>len<sp/>-<sp/>off);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strs.<ref refid="classmob_1aa556fe01ed5e20e286095fbeeaf18d80" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/>malformed:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>path.Empty();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>drv.Empty();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>strs.<ref refid="classmob_1a35c26ac377803add70b00c82ae497136" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">abs2rel(CString<sp/>&amp;rpath,<sp/>CString<sp/>&amp;apath,<sp/>CString<sp/>&amp;bpath)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ax,<sp/>bx;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>adrv,<sp/>bdrv;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmob" kindref="compound">strmob</ref><sp/><sp/><sp/><sp/><sp/><sp/>acs,<sp/>bcs;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>rpath.Empty();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astaファイルにDIRSEPが無い時、astah<sp/>側で未保存と判断し、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>何も警告しない方針とする。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(apath.IsEmpty()<sp/>||<sp/>apath.Find(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apath.Empty();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reformpath(apath,<sp/>adrv,<sp/>acs,<sp/>1)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apath.Empty();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reformpath(bpath,<sp/>bdrv,<sp/>bcs,<sp/>0)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apath.Insert(0,<sp/>adrv);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astahではドライブレターのため、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最初の１文字が違えば相対化を諦める仕様となっている。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>しかし、¥¥machine¥dir¥<sp/>の場合はそのまま相対化している。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(例)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>¥¥mac1¥dir<sp/>から<sp/>¥¥mac2¥dir¥file<sp/>への相対パス</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>..¥..¥mac2¥dir¥file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>それはそれでopenできるが、ドライブレターの違いで</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相対化を諦めるのに、マシン名の違いで諦めないというのは、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>不自然なため、ここではマシン名の違いでも諦める。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>マシン名の英文字大小について。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>試した所、全角と半角は区別されるが、半角または全角同士の</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>英文字大小は区別されない。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>なので、CompareNoCase()でなくCollateNoCase()を使用する。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adrv.CollateNoCase(bdrv))<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apath.Insert(0,<sp/>adrv);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astahと同様の実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ただし、危険な所は改修</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>AddFileDialog.java<sp/>and<sp/>HyperlinkUtil.java</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ax<sp/>=<sp/>acs.<ref refid="classmob_1aa556fe01ed5e20e286095fbeeaf18d80" kindref="member">size</ref>()<sp/>-<sp/>1)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apath.Insert(0,<sp/>adrv);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>bcs.<ref refid="classmob_1aa556fe01ed5e20e286095fbeeaf18d80" kindref="member">size</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ax<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>bx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!acs.<ref refid="classmob_1a2f71e4e009d25afdcdd0a8709b81319a" kindref="member">get</ref>(ax).CollateNoCase(bcs.<ref refid="classmob_1a2f71e4e009d25afdcdd0a8709b81319a" kindref="member">get</ref>(bx)))<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax--;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx--;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>bx<sp/>&gt;=<sp/>0;<sp/>bx--)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/><ref refid="stdafx_8h_1a2556c9e6abefcadd792d6f4d35aedb69" kindref="member">DIRSEP_STR</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(;<sp/>ax<sp/>&gt;=<sp/>1;<sp/>ax--)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath<sp/>+=<sp/>acs.<ref refid="classmob_1a2f71e4e009d25afdcdd0a8709b81319a" kindref="member">get</ref>(ax);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath<sp/>+=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(ax<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>rpath<sp/>+=<sp/>acs.<ref refid="classmob_1a2f71e4e009d25afdcdd0a8709b81319a" kindref="member">get</ref>(0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>apath.Insert(0,<sp/>adrv);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">getEmfDpis(HENHMETAFILE<sp/>hemf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xdpi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ydpi)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0,<sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetEnhMetaFileHeader(hemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(emh.szlDevice.cx<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>emh.szlMillimeters.cx<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)emh.szlDevice.cx<sp/>/</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emh.szlMillimeters.cx<sp/>*<sp/><ref refid="stdafx_8h_1af51c390a89ae21b82893479480bd8134" kindref="member">MM_PER_INCH</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(emh.szlDevice.cy<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>emh.szlMillimeters.cy<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)emh.szlDevice.cy<sp/>/</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emh.szlMillimeters.cy<sp/>*<sp/><ref refid="stdafx_8h_1af51c390a89ae21b82893479480bd8134" kindref="member">MM_PER_INCH</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>*xdpi<sp/>=<sp/>(xx<sp/>&gt;<sp/>0)<sp/>?<sp/>xx<sp/>:<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>*ydpi<sp/>=<sp/>(yy<sp/>&gt;<sp/>0)<sp/>?<sp/>yy<sp/>:<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">mendEmf(HENHMETAFILE<sp/>*hemfp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xdpi<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ydpi<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf,<sp/>hemf2;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sz,<sp/>n,<sp/>px,<sp/>mm;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>*emhp;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hemfp)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hemf<sp/>=<sp/>*hemfp)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xdpi<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ydpi<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydpi<sp/>=<sp/><ref refid="stdafx_8h_1a151767e8c213edcb2145bbe230475575" kindref="member">DFLT_DPI</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UINTですが、unsigned域のサイズはNG扱い</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sz<sp/>=<sp/>GetEnhMetaFileBits(hemf,<sp/>0,<sp/>NULL))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&gt;<sp/><ref refid="astahman_8h_1a951795536b01488fdc57b906f547c91d" kindref="member">EMFBUFSZ_MAX</ref>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf<sp/>=<sp/>(BYTE<sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(sz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>GetEnhMetaFileBits(hemf,<sp/>sz,<sp/>buf))<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*emhp))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp<sp/>=<sp/>(ENHMETAHEADER<sp/>*)buf;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rclBounds<sp/>rclFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astah<sp/>の<sp/>0x0100<sp/>は間違い</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp-&gt;nVersion<sp/>=<sp/>0x010000;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((px<sp/>=<sp/>emhp-&gt;szlDevice.cx)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>1280;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>mm<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)px<sp/>/<sp/>xdpi<sp/>*<sp/><ref refid="stdafx_8h_1af51c390a89ae21b82893479480bd8134" kindref="member">MM_PER_INCH</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp-&gt;szlDevice.cx<sp/>=<sp/>px;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp-&gt;szlMillimeters.cx<sp/>=<sp/>mm;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((px<sp/>=<sp/>emhp-&gt;szlDevice.cy)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>px<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>mm<sp/>=<sp/><ref refid="stdafx_8cpp_1ae514b6a2bc94b0e26299b9ccb69ad7c5" kindref="member">ishigo</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)px<sp/>/<sp/>ydpi<sp/>*<sp/><ref refid="stdafx_8h_1af51c390a89ae21b82893479480bd8134" kindref="member">MM_PER_INCH</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp-&gt;szlDevice.cy<sp/>=<sp/>px;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>emhp-&gt;szlMillimeters.cy<sp/>=<sp/>mm;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>hemf2<sp/>=<sp/>SetEnhMetaFileBits(n,<sp/>buf);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hemf2)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteEnhMetaFile(hemf);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>*hemfp<sp/>=<sp/>hemf2;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HENHMETAFILE</highlight></codeline>
<codeline lineno="372"><highlight class="normal">replayEmf(HENHMETAFILE<sp/>ohemf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xdpi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ydpi)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/>hdc,<sp/>hdcRef;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc,<sp/>drc;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetEnhMetaFileHeader(ohemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.left<sp/>=<sp/>emh.rclFrame.left;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.top<sp/>=<sp/>emh.rclFrame.top;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.right<sp/>=<sp/>emh.rclFrame.right;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.bottom<sp/>=<sp/>emh.rclFrame.bottom;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.OffsetRect(-rc.left,<sp/>-rc.top);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>実際に渡す時は、本当は<sp/>DC<sp/>は<sp/>DVTARGET<sp/>の</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_AfxOleCreateDC(lpFormatEtc-&gt;ptd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdcRef<sp/>=<sp/>GetDC(NULL))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>CreateEnhMetaFile(hdcRef,<sp/>NULL,<sp/>&amp;rc,<sp/>NULL);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdcRef);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hdc)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>SetMapMode(hdc,<sp/>MM_ANISOTROPIC);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWindowOrgEx(hdc,<sp/>0,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewportOrgEx(hdc,<sp/>0,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>drc<sp/>=<sp/>rc;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a4cb7b6aa2db8e93ff3f5909748034e2b" kindref="member">him2dp</ref>(hdc,<sp/>&amp;drc);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWindowExtEx(hdc,<sp/>drc.Width(),<sp/>drc.Height(),<sp/>NULL);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewportExtEx(hdc,<sp/>drc.Width(),<sp/>drc.Height(),<sp/>NULL);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>PlayEnhMetaFile(hdc,<sp/>ohemf,<sp/>&amp;drc);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hemf<sp/>=<sp/>CloseEnhMetaFile(hdc))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteEnhMetaFile(hemf);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>mendEmf(&amp;hemf,<sp/>xdpi,<sp/>ydpi);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hemf;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HMETAFILE</highlight></codeline>
<codeline lineno="435"><highlight class="normal">releaseMf(HMETAFILE<sp/>hmf)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hmf)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteMetaFile(hmf);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HMETAFILE</highlight></codeline>
<codeline lineno="445"><highlight class="normal">dupMf(HMETAFILE<sp/>hmf)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>HMETAFILE<sp/><sp/><sp/>h;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sz;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sz<sp/>=<sp/>GetMetaFileBitsEx(hmf,<sp/>0,<sp/>NULL))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf<sp/>=<sp/>(BYTE<sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(sz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetMetaFileBitsEx(hmf,<sp/>sz,<sp/>buf)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((h<sp/>=<sp/>SetMetaFileBitsEx(sz,<sp/>buf))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HMETAFILE</highlight></codeline>
<codeline lineno="478"><highlight class="normal">emf2mf(HENHMETAFILE<sp/>hemf,<sp/>CRect<sp/>*rcp,<sp/>HDC<sp/>hdc<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>HMETAFILE<sp/><sp/><sp/>hmf;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sz,<sp/>got;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcp)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;SetRect(0,<sp/>0,<sp/>1000,<sp/>1000);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hemf<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetEnhMetaFileHeader(hemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;left<sp/>=<sp/>emh.rclFrame.left;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;top<sp/>=<sp/>emh.rclFrame.top;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;right<sp/>=<sp/>emh.rclFrame.right;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;bottom<sp/>=<sp/>emh.rclFrame.bottom;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hemf)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcp)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp-&gt;OffsetRect(-rcp-&gt;left,<sp/>-rcp-&gt;top);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>got<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetMapMode(hdc)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdc<sp/>=<sp/>GetDC(NULL))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astah側から受信したEMFが不正な場合がある。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>そのため、一旦EMFから情報を取得し、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AstahDiagram側でEMFを再構築して問題の解決を図っている。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>GetWinMetaFileBits(hemf,<sp/>0,<sp/>NULL,<sp/>MM_ANISOTROPIC,<sp/>hdc);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf<sp/>=<sp/>(BYTE<sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(sz))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>GetWinMetaFileBits(hemf,<sp/>sz,<sp/>buf,<sp/>MM_ANISOTROPIC,<sp/>hdc);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>hmf<sp/>=<sp/>SetMetaFileBitsEx(sz,<sp/>buf);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmf;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HENHMETAFILE</highlight></codeline>
<codeline lineno="556"><highlight class="normal">createMiniEmf(CRect<sp/>*emrcp)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/>hdc,<sp/>hmc;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>HICON<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hicon;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xx,<sp/>yy;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>CSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz(1000,<sp/>1000);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>hicon<sp/>=</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LoadIcon(AfxGetInstanceHandle(),<sp/>MAKEINTRESOURCE(<ref refid="resource_8h_1a551bcaca309eee4bd5f381e66a4f8169" kindref="member">IDR_ASOLETYPE</ref>));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>DestroyIcon()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>emrcp-&gt;SetRect(0,<sp/>0,<sp/>sz.cx,<sp/>sz.cy);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hdc<sp/>=<sp/>GetDC(NULL))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ICON_WH<sp/><sp/><sp/><sp/><sp/>(32)</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hicon)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz.cx<sp/>=<sp/>sz.cy<sp/>=<sp/><ref refid="asoledoc_8cpp_1ae27453e34ae98b4f9baaa25c20e06258" kindref="member">ICON_WH</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1ad8f78f97fa211cd669d4056c544b8ccc" kindref="member">dp2him</ref>(hdc,<sp/>&amp;sz);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emrcp-&gt;SetRect(0,<sp/>0,<sp/>sz.cx,<sp/>sz.cy);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmc<sp/>=<sp/>CreateEnhMetaFile(hdc,<sp/>NULL,<sp/>emrcp,<sp/>NULL))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>GetDeviceCaps(hmc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>GetDeviceCaps(hmc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hicon)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>*emrcp;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillRect(hmc,<sp/>&amp;rc,<sp/>(HBRUSH)GetStockObject(WHITE_BRUSH));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawIconEx(hmc,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hicon,<sp/>ICON_WH,<sp/>ICON_WH,<sp/>0,<sp/>NULL,<sp/>DI_NORMAL);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>*emrcp;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a4cb7b6aa2db8e93ff3f5909748034e2b" kindref="member">him2dp</ref>(hmc,<sp/>&amp;rc);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillRect(hmc,<sp/>&amp;rc,<sp/>(HBRUSH)GetStockObject(LTGRAY_BRUSH));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc.InflateRect(-rc.Width()<sp/>/<sp/>4,<sp/>-rc.Height()<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillRect(hmc,<sp/>&amp;rc,<sp/>(HBRUSH)GetStockObject(DKGRAY_BRUSH));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>CloseEnhMetaFile(hmc);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hdc);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>mendEmf(&amp;hemf,<sp/>xx,<sp/>yy);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hemf;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HENHMETAFILE</highlight></codeline>
<codeline lineno="615"><highlight class="normal">releaseEmf(HENHMETAFILE<sp/>hemf)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hemf)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteEnhMetaFile(hemf);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">getEmfBuf(HENHMETAFILE<sp/>hemf,<sp/>BYTE<sp/>**bufp)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sz;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufp)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bufp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hemf)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UINTですが、unsigned域のサイズはNG扱い</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sz<sp/>=<sp/>GetEnhMetaFileBits(hemf,<sp/>0,<sp/>NULL))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&gt;<sp/><ref refid="astahman_8h_1a951795536b01488fdc57b906f547c91d" kindref="member">EMFBUFSZ_MAX</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufp)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf<sp/>=<sp/>(BYTE<sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(sz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetEnhMetaFileBits(hemf,<sp/>sz,<sp/>buf)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bufp<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HENHMETAFILE</highlight></codeline>
<codeline lineno="665"><highlight class="normal">dupEmf(HENHMETAFILE<sp/>hemf)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>h<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sz;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sz<sp/>=<sp/>getEmfBuf(hemf,<sp/>&amp;buf))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>SetEnhMetaFileBits(sz,<sp/>buf);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(buf);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HENHMETAFILE</highlight></codeline>
<codeline lineno="685"><highlight class="normal">img2hemf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dpi,<sp/><ref refid="stdafx_8h_1a124ea0f8f4a23a0a286b5582137f0b8d" kindref="member">uchar_t</ref><sp/>*mbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mlen)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_my_stream" kindref="compound">CMyStream</ref><sp/><sp/><sp/>*msp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((msp<sp/>=<sp/><ref refid="class_c_my_stream_1a9e741f271071976e1fbcf2d780723da0" kindref="member">CMyStream::newOne</ref>(mbuf,<sp/>mlen))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/>hrc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>0,<sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CImage<sp/><sp/><sp/><sp/><sp/><sp/>img;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GDI+<sp/>の初期化と後始末が毎回実行される。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(img.Load(msp)))<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc.right<sp/>=<sp/>xx<sp/>=<sp/>img.GetWidth();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc.bottom<sp/>=<sp/>yy<sp/>=<sp/>img.GetHeight();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1ad8f78f97fa211cd669d4056c544b8ccc" kindref="member">dp2him</ref>(NULL,<sp/>&amp;rc);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hrc<sp/>=<sp/>GetDC(NULL))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>CreateEnhMetaFile(hrc,<sp/>NULL,<sp/>&amp;rc,<sp/>NULL);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseDC(NULL,<sp/>hrc);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSX);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>GetDeviceCaps(hdc,<sp/>LOGPIXELSY);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>大きい場合は、divblt()のような処理が必要なるが、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>現状では大きすぎて失敗した場合は、エラーメッセージを出力する</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>img.BitBlt(hdc,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>CloseEnhMetaFile(hdc);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>releaseEmf(hemf);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mendEmf(&amp;hemf,<sp/>xx,<sp/>yy);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;Delete();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdc)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>CloseEnhMetaFile(hdc);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>releaseEmf(hemf);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>msp-&gt;<ref refid="class_c_my_stream_1aa454db1d01f492d4d2b8d5f8db06e06d" kindref="member">invalidate</ref>();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>msp-&gt;<ref refid="class_c_my_stream_1a92efba04a2cdc8fc4381f12681e2945e" kindref="member">Release</ref>();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>&apos;delete&apos;<sp/>msp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hemf;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="class_c_asole_doc_1a6d972147e9ff48e386096dafa95d0364" kindref="member">CAsoleDoc::getContainerFilePath</ref>(CString<sp/>*fpathp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getdir)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>LPOLECLIENTSITE<sp/>csp<sp/>=<sp/>GetClientSite();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>OLEGETMONIKER<sp/><sp/><sp/>assign<sp/>=<sp/>OLEGETMONIKER_ONLYIFTHERE;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>OLEWHICHMK<sp/><sp/>which<sp/>=<sp/>OLEWHICHMK_CONTAINER;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>IMoniker<sp/><sp/><sp/><sp/>*mkp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>LPOLESTR<sp/><sp/><sp/><sp/>name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>wpath;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>off;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/><sp/><sp/><sp/><sp/>hr;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenOfficeの場合、仕様上フルパスが取得できない</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fpathp)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpathp<sp/>=<sp/>&amp;wpath;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>fpathp-&gt;Empty();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>!<ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref><sp/>||<sp/>!<ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>init<sp/>fail&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((csp<sp/>=<sp/>GetClientSite())<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>no<sp/>client<sp/>site&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>csp-&gt;GetMoniker(assign,<sp/>which,<sp/>&amp;mkp);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr)<sp/>||<sp/>!mkp)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>GetMoniker()<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>mkp-&gt;GetDisplayName(<ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref>,<sp/>NULL,<sp/>&amp;name);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr)<sp/>||<sp/>!name)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>GetDisplayName()<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mkp-&gt;Release();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fpathp<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;Delete();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>E_FAIL;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpathp-&gt;Empty();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref>-&gt;Free(name);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>mkp-&gt;Release();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>string<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;getContainerFilePath:<sp/>NAME<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>(LPCTSTR)*fpathp);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>セパレータの有無で判断</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((off<sp/>=<sp/>fpathp-&gt;ReverseFind(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getdir)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpathp-&gt;Empty();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getdir)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpathp-&gt;Delete(off<sp/>+<sp/>1,<sp/>fpathp-&gt;GetLength()<sp/>-<sp/>off<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fpathp-&gt;IsEmpty()<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">findfile(CString<sp/>&amp;fpath,<sp/>LPCTSTR<sp/>fname,<sp/>CString<sp/>&amp;dirpath)</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>len;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yes;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>CFileFind<sp/><sp/><sp/>ff;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>dirpath.GetLength();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yes<sp/>=<sp/>ff.FindFile(dirpath<sp/>+<sp/>_T(</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">));<sp/>yes;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yes<sp/>=<sp/>ff.FindNextFile();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ff.IsDots())</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ff.IsDirectory())<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirpath<sp/>+=<sp/>ff.GetFileName();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirpath<sp/>+=<sp/><ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(findfile(fpath,<sp/>fname,<sp/>dirpath)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff.Close();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirpath.Delete(len,<sp/>dirpath.GetLength()<sp/>-<sp/>len);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ff.GetFileName().CollateNoCase(fname)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpath<sp/>=<sp/>ff.GetFilePath();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff.Close();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>ff.Close();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><ref refid="class_c_asole_doc_1ac425d7cf905962569a5fe5aa4a27296c" kindref="member">CAsoleDoc::pathForOpening</ref>(CString<sp/>&amp;xpath)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>xpath.Empty();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>パスが無い場合でもastahに接続。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>また、astahファイルが無くても、警告メッセージ後に接続。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>接続済みであれば、astahから図を新たに流し込めるため。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;pathForOpening:<sp/>empty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>明確指定されて絶対パスを使うケース。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>流し込まれた際、相対関係無しだったと見て、絶対パスで処理を行う。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>&amp;<sp/><ref refid="confval_8h_1abf0bb6fdaf6f9d51a178a28346a6c2be" kindref="member">CV_FLAG_REL</ref>)<sp/>||<sp/><ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1aa03474f5f8dce4a81df668ba886232d2" kindref="member">pathExists</ref>(<ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a79aca1cc5fac386de5cd1243136e441d" kindref="member">IDS_WARN_OPEN1</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath<sp/>=<sp/><ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;pathForOpening:<sp/>abs=&quot;</highlight><highlight class="normal">),<sp/>(LPCTSTR)<ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>以降、相対パスを使うケース。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ダメだった場合、仕様として、絶対パスでのリカバリは行わない。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1a6d972147e9ff48e386096dafa95d0364" kindref="member">getContainerFilePath</ref>(&amp;xpath,<sp/>1)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a2ecce39867ae3bd6029e830988d22ce9" kindref="member">IDS_WARN_OPEN2</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>xpath<sp/>+=<sp/><ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;pathForOpening:<sp/>rel1=%s&quot;</highlight><highlight class="normal">),<sp/>(LPCTSTR)xpath);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>このままastahに渡すと、astah側でそのまま「¥..¥abc.asta」といった形で</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>で使用されるため、正規化を行う。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>なお、「C:¥..¥..¥..¥dir¥abc.asta」の正規化は「C:¥dir¥abc.asta」となる。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPath<sp/><sp/><sp/><sp/><sp/><sp/><sp/>path(xpath);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.Canonicalize();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath<sp/>=<sp/>(LPCTSTR)path;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CAtlException<sp/>*)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath.Empty();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;Delete();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath.Empty();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpath.IsEmpty())</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a5312a028882cf7613ae34f38966c03d3" kindref="member">IDS_WARN_OPEN3</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;pathForOpening:<sp/>rel2=%s&quot;</highlight><highlight class="normal">),<sp/>(LPCTSTR)xpath);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1aa03474f5f8dce4a81df668ba886232d2" kindref="member">pathExists</ref>(xpath)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath.Empty();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a79aca1cc5fac386de5cd1243136e441d" kindref="member">IDS_WARN_OPEN1</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><ref refid="class_c_asole_doc_1a6037f58368219549e67169c9b19b4eb8" kindref="member">CAsoleDoc::saveNow</ref>()</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>document<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>SetModifiedFlag();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateModifiedFlag();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateAllViews(NULL);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateAllItems(NULL);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>インプレースでない場合、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>コンテナ次第では描画内容を更新してくれない事があるため。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>SaveEmbedding();</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><ref refid="class_c_asole_doc_1a9b34e5fc95b68c6fe9e74a50d4573c62" kindref="member">CAsoleDoc::onRecvPict</ref>(<ref refid="class_c_astah_man" kindref="compound">CAstahMan</ref><sp/>*amp,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPCTSTR<sp/>fpath,<sp/>LPCTSTR<sp/>imgid,<sp/>LPCTSTR<sp/>label,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dpi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<sp/><ref refid="stdafx_8h_1a124ea0f8f4a23a0a286b5582137f0b8d" kindref="member">uchar_t</ref><sp/>*mbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mlen)</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>NULL,<sp/>hemff<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xdpi<sp/>=<sp/>0,<sp/>ydpi<sp/>=<sp/>0,<sp/>absrel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>dpath;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAsyncSocket<sp/>の仕様により、callbackはUIスレッド</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(fmt)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_c_astah_listener_1ac654d81563f10f5b9c3c7a1738f18b39a16e85886e2c3b400b44dcc5b179c1eae" kindref="member">FMT_EMF</ref>:</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hemff<sp/>=<sp/>SetEnhMetaFileBits(mlen,<sp/>mbuf))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getEmfDpis(hemff,<sp/>&amp;xdpi,<sp/>&amp;ydpi);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>replayEmf(hemff,<sp/>xdpi,<sp/>ydpi);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemff<sp/>=<sp/>releaseEmf(hemff);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_c_astah_listener_1ac654d81563f10f5b9c3c7a1738f18b39a450781ae5434d6218ba5f8c1635882be" kindref="member">FMT_JPG</ref>:</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_c_astah_listener_1ac654d81563f10f5b9c3c7a1738f18b39a49ba007e2d0c9da304328fe6e086d3e9" kindref="member">FMT_PNG</ref>:</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>img2hemf(dpi,<sp/>mbuf,<sp/>mlen);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hemf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" kindref="member">xfail</ref>(<ref refid="resource_8h_1aff59aa11a1412e710d5fd9a63fb4298f" kindref="member">IDS_FAIL_EMF</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetEnhMetaFileHeader(hemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>releaseEmf(hemf);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" kindref="member">xfail</ref>(<ref refid="resource_8h_1aff59aa11a1412e710d5fd9a63fb4298f" kindref="member">IDS_FAIL_EMF</ref>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref><sp/>=<sp/>releaseMf(<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>releaseEmf(<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>hemf;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref>.SetRect(emh.rclFrame.left,<sp/>emh.rclFrame.top,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emh.rclFrame.right,<sp/>emh.rclFrame.bottom);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>図IDを取得しておく必要がある</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>.Empty();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1ab3965acb415ffe2b2eda458ae86cb9cc" kindref="member">fpath</ref>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1ad39416cb64d6a3e58c1b21edb29a8695" kindref="member">imgid</ref>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1a15f205668caca120bcdbc85b465fba44" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>できるなら相対化を行う。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>その際、コンテナ側パスを取得して行う。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>もっとも、その後で「save<sp/>as」等行われても追従できないが、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astahも同様の仕様である。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6d972147e9ff48e386096dafa95d0364" kindref="member">getContainerFilePath</ref>(&amp;dpath,<sp/>1);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>absrel<sp/>=<sp/>abs2rel(<ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>,<sp/><ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>,<sp/>dpath);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;rpath=%s<sp/>fpath=%s&quot;</highlight><highlight class="normal">),<sp/>(LPCTSTR)<ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>,<sp/>(LPCTSTR)<ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6037f58368219549e67169c9b19b4eb8" kindref="member">saveNow</ref>();</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>パス保存できない状況</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>○<sp/>astahのファイルパスが無い（未保存）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>○<sp/>officeのファイルパスが無い（未保存、または取得不可能）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>○<sp/>内部処理で失敗</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相対パス保存できない状況</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>○<sp/>前述３点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>○<sp/>ドライブやコンピュータ名が異なる</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ここでは、相対パス指定オンで、astahファイルパスがあるが、</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相対化できなかった場合のみ、警告を出す。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astahファイルが未保存の場合は、出さない。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相対モードである時、相対化に失敗したなら、警告を出す。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>&amp;<sp/>CV_FLAG_REL)<sp/>&amp;&amp;<sp/>absrel<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="quotedlg_8cpp_1a89b672412220445fc2a953aca9f289fc" kindref="member">setFrameToFore</ref>();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a0d6f98ca34d160e075c98e18761e1274" kindref="member">IDS_WARN_RELFAIL</ref>,<sp/>MB_TOPMOST);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><ref refid="class_c_asole_doc_1a3df9c8e352c0bff5534412135559ad91" kindref="member">CAsoleDoc::onStatus</ref>(<ref refid="class_c_astah_man" kindref="compound">CAstahMan</ref><sp/>*amp)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sts;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>txt;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sts<sp/>=<sp/>amp-&gt;<ref refid="class_c_astah_man_1a77f6d15ec8d571144c9ab4dc22033cfb" kindref="member">getStatus</ref>())<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(txt,<sp/><ref refid="resource_8h_1ac42d0bd13c0abca36015aa1d5c4ed70b" kindref="member">IDS_STAT_DISC</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;disconnected&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sts<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(txt,<sp/><ref refid="resource_8h_1a8e2ab77cba9ae094c89074c6dbb8057d" kindref="member">IDS_STAT_PROG</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;connecting&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a1952f5fae0398977a2277ae3e666c512" kindref="member">loadString</ref>(txt,<sp/><ref refid="resource_8h_1a82696f07709685b526695b3901a61a63" kindref="member">IDS_STAT_ESTA</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;connected&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;onStatus<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>sts);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_in_place_frame_1a3fb9e4ade1cef8f7068918caf9d5fcaa" kindref="member">CInPlaceFrame::showStatus</ref>(txt);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_main_frame_1a712ef738ed7141fa79be6c192a8390c2" kindref="member">CMainFrame::showStatus</ref>(txt);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><ref refid="class_c_asole_doc_1afbbe2add7197a2aca7fa50fc71418a73" kindref="member">CAsoleDoc::onTimer</ref>()</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1a36b4c3afef103ac2b1febbaab7570a71" kindref="member">onTimer</ref>();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal">HENHMETAFILE</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><ref refid="class_c_asole_doc_1a0f10d4bebcc5d446560cc7e9888cc511" kindref="member">CAsoleDoc::getEmf</ref>(CRect<sp/>*rcp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dups)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcp)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rcp<sp/>=<sp/><ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dups)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dupEmf(<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal">HMETAFILE</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><ref refid="class_c_asole_doc_1aeb154d0eb6a181f560ed3920b3473df5" kindref="member">CAsoleDoc::getMf</ref>(CRect<sp/>*rcp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dups,<sp/>HDC<sp/>hdc)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcp)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rcp<sp/>=<sp/><ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dups<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMETAFILE<sp/><sp/><sp/>hmf;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hemf<sp/>=<sp/><ref refid="class_c_asole_doc_1a0f10d4bebcc5d446560cc7e9888cc511" kindref="member">getEmf</ref>(NULL,<sp/>0))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hmf<sp/>=<sp/>emf2mf(hemf,<sp/>NULL,<sp/>hdc))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmf;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hemf<sp/>=<sp/><ref refid="class_c_asole_doc_1a0f10d4bebcc5d446560cc7e9888cc511" kindref="member">getEmf</ref>(NULL,<sp/>0))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref><sp/>=<sp/>emf2mf(hemf,<sp/>NULL))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dups)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dupMf(<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal">COleServerItem<sp/>*</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><ref refid="class_c_asole_doc_1aab4f1a738bff5571e7b0518402bd46d4" kindref="member">CAsoleDoc::OnGetEmbeddedItem</ref>()</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnGetEmbeddedItem:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAsoleDoc<sp/>サーバー実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OnGetEmbeddedItem<sp/>はドキュメントと関連付けられている<sp/>COleServerItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>を得るためにフレームワークから必要な時にだけ呼ばれます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_srvr_item" kindref="compound">CAsoleSrvrItem</ref><sp/><sp/>*item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_asole_srvr_item" kindref="compound">CAsoleSrvrItem</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_VALID(item);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><ref refid="class_c_asole_doc_1a2f2e4921b3445997d689ddc59f422d8f" kindref="member">CAsoleDoc::Serialize</ref>(CArchive<sp/>&amp;ar)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOC_MARK<sp/><sp/><sp/><sp/>(0x4c4f5341)</highlight></codeline>
<codeline lineno="1183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DOC_FORM<sp/><sp/><sp/><sp/>(3)</highlight></codeline>
<codeline lineno="1184"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>docmark<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>docform<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>HENHMETAFILE<sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/>emrc(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a4b48f8266f0fcfea880624133ddffc2e" kindref="member">rpath</ref>,<sp/><ref refid="class_c_asole_doc_1ab3965acb415ffe2b2eda458ae86cb9cc" kindref="member">fpath</ref>,<sp/><ref refid="class_c_asole_doc_1ad39416cb64d6a3e58c1b21edb29a8695" kindref="member">imgid</ref>,<sp/><ref refid="class_c_asole_doc_1a15f205668caca120bcdbc85b465fba44" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ar.IsStoring())<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::Serialize:save&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intのバイトオーダとか問題ないか確認</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hemf<sp/>null<sp/>ならゼロ記録</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mlen<sp/>=<sp/>getEmfBuf(<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>,<sp/>&amp;mbuf))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxThrowMemoryException();</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>fpath=%s<sp/>imgid=%s<sp/>mlen=%d&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPCTSTR)<ref refid="class_c_asole_doc_1ad01ba212387eb4e484a265bd64b19220" kindref="member">ad_fpath</ref>,<sp/>(LPCTSTR)<ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>,<sp/>mlen);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docmark<sp/>=<sp/><ref refid="asoledoc_8cpp_1a3d7ff8f6d5c61b54d5862b8dc8ffbfb8" kindref="member">DOC_MARK</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docform<sp/>=<sp/><ref refid="asoledoc_8cpp_1afd004a1889bdff0503bdb38be86526f2" kindref="member">DOC_FORM</ref>;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&lt;&lt;<sp/>docmark<sp/>&lt;&lt;<sp/>docform;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&lt;&lt;<sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>&lt;&lt;<sp/><ref refid="class_c_asole_doc_1a3c23a6bcc9acc02607606f7df44077f4" kindref="member">ad_rpath</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&lt;&lt;<sp/>ad_fpath<sp/>&lt;&lt;<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref><sp/>&lt;&lt;<sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref><sp/>&lt;&lt;<sp/>mlen;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar.Write(mbuf,<sp/>mlen);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(mbuf);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::Serialize:load&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>この時点ではコンテナファイルパスが無い</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>docmark<sp/>=<sp/>docform<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&gt;&gt;<sp/>docmark;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docmark<sp/>==<sp/>DOC_MARK)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&gt;&gt;<sp/>docform;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docform<sp/>==<sp/>DOC_FORM)<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&gt;&gt;<sp/>flags<sp/>&gt;&gt;<sp/><ref refid="class_c_asole_doc_1a4b48f8266f0fcfea880624133ddffc2e" kindref="member">rpath</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&gt;&gt;<sp/>fpath<sp/>&gt;&gt;<sp/>imgid<sp/>&gt;&gt;<sp/>label<sp/>&gt;&gt;<sp/>mlen;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;Delete();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docmark<sp/>=<sp/>docform<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>fpath=%s<sp/>imgid=%s<sp/>mlen=%d&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPCTSTR)fpath,<sp/>(LPCTSTR)imgid,<sp/>mlen);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docmark<sp/>!=<sp/>DOC_MARK<sp/>||<sp/>docform<sp/>&lt;<sp/>DOC_FORM)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath.Empty();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpath.Empty();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgid.Empty();</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.Empty();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fpath<sp/>を極々簡単にチェック。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>fpath.ReverseFind(<ref refid="stdafx_8h_1a2c89f3449c0cc91f289ecbef54188d8d" kindref="member">DIRSEP</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpath.Empty();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>fpath.GetLength()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpath.Empty();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fpath.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath.Empty();</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mlen<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>createMiniEmf(&amp;emrc);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mlen<sp/>&gt;<sp/><ref refid="astahman_8h_1a951795536b01488fdc57b906f547c91d" kindref="member">EMFBUFSZ_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxThrowMemoryException();</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mbuf<sp/>=<sp/>(BYTE<sp/>*)<ref refid="stdafx_8cpp_1a5d3e095b3fb6561fc5773a572197880d" kindref="member">xmalloc</ref>(mlen))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxThrowMemoryException();</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENHMETAHEADER<sp/><sp/><sp/>emh;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ar.Read(mbuf,<sp/>mlen)<sp/>==<sp/>mlen)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>SetEnhMetaFileBits(mlen,<sp/>mbuf);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(CException<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;Delete();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a15634687fc57d437006658399cbf98b1" kindref="member">xfree</ref>(mbuf);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hemf)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxThrowArchiveException(<ref refid="asoledoc_8cpp_1a004da52b774657ee31141668c4022bf7" kindref="member">archive_cause</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;emh,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetEnhMetaFileHeader(hemf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(emh),<sp/>&amp;emh)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemf<sp/>=<sp/>releaseEmf(hemf);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxThrowArchiveException(<ref refid="asoledoc_8cpp_1a004da52b774657ee31141668c4022bf7" kindref="member">archive_cause</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emrc.SetRect(emh.rclFrame.left,<sp/>emh.rclFrame.top,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emh.rclFrame.right,<sp/>emh.rclFrame.bottom);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref><sp/>=<sp/>releaseMf(<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>releaseEmf(<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_rpath.Empty();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_fpath.Empty();</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>.Empty();</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>.Empty();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>hemf;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref><sp/>=<sp/>emrc;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1a15f205668caca120bcdbc85b465fba44" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1ad39416cb64d6a3e58c1b21edb29a8695" kindref="member">imgid</ref>;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_fpath<sp/>=<sp/><ref refid="class_c_asole_doc_1ab3965acb415ffe2b2eda458ae86cb9cc" kindref="member">fpath</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_rpath<sp/>=<sp/><ref refid="class_c_asole_doc_1a4b48f8266f0fcfea880624133ddffc2e" kindref="member">rpath</ref>;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>=<sp/>flags<sp/>&amp;<sp/><ref refid="confval_8h_1a08362f2703f441d645c0f275557ad180" kindref="member">CV_FLAG_MASK</ref>;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><ref refid="class_c_asole_doc_1afd1d9adde9e15b56e0604b82289b8b1a" kindref="member">CAsoleDoc::OnSetHostNames</ref>(LPCTSTR<sp/>cname,<sp/>LPCTSTR<sp/>dname)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::OnSetHostNames(cname,<sp/>dname);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnSetHostNames:<sp/>dname=%s&quot;</highlight><highlight class="normal">),<sp/>dname);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cname)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1a21154ea42b7b5af9da4792de18a2930a" kindref="member">cname</ref>;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref>.Empty();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dname)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1a7c0f75b96304ac83ce92066ae2ee1b04" kindref="member">dname</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref>.Empty();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><ref refid="class_c_asole_doc_1aef9c7ba8f83c479aefc2547af112238d" kindref="member">CAsoleDoc::DeleteContents</ref>()</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::DeleteContents:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>.Empty();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>.Empty();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_fpath.Empty();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_rpath.Empty();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::DeleteContents();</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><ref refid="class_c_asole_doc_1a81dd9f1c6f74189d01be936f69c018d7" kindref="member">CAsoleDoc::OnCloseDocument</ref>()</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnCloseDocument:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::OnCloseDocument();</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calls<sp/>DeleteContents()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><ref refid="class_c_asole_doc_1a8499661c39a5edc07da6695caaf56ea2" kindref="member">CAsoleDoc::OnOpenDocument</ref>(LPCTSTR<sp/>fpath)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnOpenDocument:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!COleServerDocEx::OnOpenDocument(fpath))</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><ref refid="class_c_asole_doc_1a03da32059d8d36994676049cb4325eed" kindref="member">CAsoleDoc::OnNewDocument</ref>()</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnNewDocument:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!COleServerDocEx::OnNewDocument())</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>.Empty();</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>.Empty();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_fpath.Empty();</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_rpath.Empty();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>=<sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1aba9c02de59f80e1765aa22058ed544e8" kindref="member">getXflags</ref>();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><ref refid="class_c_asole_doc_1a809cd6088f31b1d4a37b48930330fd1e" kindref="member">CAsoleDoc::openEditor</ref>(BOOL<sp/>shows)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>xpath;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shows)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hide<sp/>editor<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1ac425d7cf905962569a5fe5aa4a27296c" kindref="member">pathForOpening</ref>(xpath);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a3df9c8e352c0bff5534412135559ad91" kindref="member">onStatus</ref>(&amp;<ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1a77f6d15ec8d571144c9ab4dc22033cfb" kindref="member">getStatus</ref>()<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>established,<sp/>report</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>接続前、送信前、という事もあります</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1aeeec5bef354160cee90d61ff682243cd" kindref="member">setName</ref>(<ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref>,<sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref>,<sp/>xpath,<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>,<sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1ae5bd015ffdc84b603d0c0e4d6779b558" kindref="member">prepare</ref>(<ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref>,<sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref>,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath,<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>,<sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="stdafx_8cpp_1a616fbd611a4915e1a535ab9122e6644e" kindref="member">xfail</ref>(<ref refid="resource_8h_1a22661a4d130ac886fc6f3c98eff175c2" kindref="member">IDS_CONN_CANT</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><ref refid="class_c_asole_doc_1a729e821f1471e600c52563bd67d79712" kindref="member">CAsoleDoc::requestUpdate</ref>()</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ad_fpath.IsEmpty()<sp/>||<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>.IsEmpty())</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a3c8ed6681eef6f52d2186d68e3837db8" kindref="member">IDS_WARN_NOFILE</ref>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1a792b9db1130824c0334ea3d27fb624a1" kindref="member">markRequestUpdate</ref>();</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1a809cd6088f31b1d4a37b48930330fd1e" kindref="member">openEditor</ref>(TRUE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><ref refid="class_c_asole_doc_1acab7cb3dbb6bed1766d9a18a0227040b" kindref="member">CAsoleDoc::OnShowDocument</ref>(BOOL<sp/>shows)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stdafx_8h_1acc93613d406017e99744bc9d133d1eb0" kindref="member">flog</ref>(_T(</highlight><highlight class="stringliteral">&quot;Doc::OnShowDocument:%d&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)shows);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::OnShowDocument(shows);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a809cd6088f31b1d4a37b48930330fd1e" kindref="member">openEditor</ref>(shows);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><ref refid="class_c_asole_doc_1a1c45919baf7542ddd450eb797031a95c" kindref="member">CAsoleDoc::OnAppConnect</ref>()</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>status;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>xpath;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1ac425d7cf905962569a5fe5aa4a27296c" kindref="member">pathForOpening</ref>(xpath);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>=<sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1a77f6d15ec8d571144c9ab4dc22033cfb" kindref="member">getStatus</ref>())<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1aeadc514b84b7e651f94cc139b0ab6343" kindref="member">xyorn</ref>(<ref refid="resource_8h_1a6ff8fb7506984a81f834240c59115890" kindref="member">IDS_CONN_INQ</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1ae5bd015ffdc84b603d0c0e4d6779b558" kindref="member">prepare</ref>(<ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref>,<sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref>,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath,<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>,<sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stdafx_8cpp_1aeadc514b84b7e651f94cc139b0ab6343" kindref="member">xyorn</ref>(<ref refid="resource_8h_1a4ef1f36c9493aece6d443795dedbc5f7" kindref="member">IDS_CONN_PRG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1ae5bd015ffdc84b603d0c0e4d6779b558" kindref="member">prepare</ref>(<ref refid="class_c_asole_doc_1ac448200acd0a51056bdc8571b75585b6" kindref="member">ad_cname</ref>,<sp/><ref refid="class_c_asole_doc_1a75412df303513ea8f90accc8da57fb61" kindref="member">ad_dname</ref>,</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xpath,<sp/><ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>,<sp/><ref refid="class_c_asole_doc_1a6990d82741bf85f4aa4576c945170225" kindref="member">ad_label</ref>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1ae7c3c0fb0d22466438ffa64d6064bb7f" kindref="member">xinfo</ref>(<ref refid="resource_8h_1aec1e799d9631153443babdccebf5701b" kindref="member">IDS_CONN_DON</ref>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><ref refid="class_c_asole_doc_1a10c0cddc875642a82e14a2273d1fc739" kindref="member">CAsoleDoc::OnUpdateAppUpdate</ref>(CCmdUI<sp/>*cui)</highlight></codeline>
<codeline lineno="1507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>cui-&gt;Enable(!ad_fpath.IsEmpty()<sp/>&amp;&amp;<sp/>!<ref refid="class_c_asole_doc_1a8b27e842e3d97ac353654d3634ebc0c6" kindref="member">ad_imgid</ref>.IsEmpty());</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><ref refid="class_c_asole_doc_1a10c88cc1f6af0c1d29605bed52fdcf08" kindref="member">CAsoleDoc::OnAppUpdate</ref>()</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a729e821f1471e600c52563bd67d79712" kindref="member">requestUpdate</ref>();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><ref refid="class_c_asole_doc_1a4932b5211833ba971cb1b4e04d31164f" kindref="member">CAsoleDoc::OnAppSetting</ref>()</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res,<sp/>absrel;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>dpath;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1ab8172c7a4db3b9e51effc360556805dc" kindref="member">showConfDlg</ref>(&amp;<ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6d972147e9ff48e386096dafa95d0364" kindref="member">getContainerFilePath</ref>(&amp;dpath,<sp/>1);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>absrel<sp/>=<sp/>abs2rel(ad_rpath,<sp/>ad_fpath,<sp/>dpath);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6037f58368219549e67169c9b19b4eb8" kindref="member">saveNow</ref>();</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>保存が必要、という説明</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>&amp;<sp/>CV_FLAG_REL)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1ae7c3c0fb0d22466438ffa64d6064bb7f" kindref="member">xinfo</ref>(<ref refid="resource_8h_1ae82df520b75c81900e36ad7e241b7d8c" kindref="member">IDS_INFO_RELDESC</ref>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>相対モードである時、相対化に失敗したなら、警告</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>&amp;<sp/>CV_FLAG_REL)<sp/>&amp;&amp;<sp/>absrel<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="quotedlg_8cpp_1a89b672412220445fc2a953aca9f289fc" kindref="member">setFrameToFore</ref>();</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1aba3e043b8a637ec87f4ced01478ca47a" kindref="member">xwarn</ref>(<ref refid="resource_8h_1a0d6f98ca34d160e075c98e18761e1274" kindref="member">IDS_WARN_RELFAIL</ref>,<sp/>MB_TOPMOST);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a1c45919baf7542ddd450eb797031a95c" kindref="member">OnAppConnect</ref>();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><ref refid="class_c_asole_doc_1a8c6ab1d800dbc1744b52e6afe21e5c3a" kindref="member">CAsoleDoc::OnAppAbout</ref>()</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_about_dlg" kindref="compound">CAboutDlg</ref><sp/><sp/><sp/>dlg(<ref refid="quotedlg_8cpp_1ac13d6867629cbe6ad4dc338bc5ee9d81" kindref="member">getFrameWnd</ref>());</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>dlg.DoModal();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>_DEBUG</highlight></codeline>
<codeline lineno="1561"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1566"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal">CAsoleDoc::AssertValid()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1568"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::AssertValid();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal">CAsoleDoc::Dump(CDumpContext<sp/>&amp;dc)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1579"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>COleServerDocEx::Dump(dc);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1584"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><ref refid="class_c_asole_doc_1a1a903eb4e463a85e4a56072e71d16c01" kindref="member">CAsoleDoc::‾CAsoleDoc</ref>()</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1adf834f63af40b9d8069ff70c1217070e" kindref="member">setListener</ref>(NULL);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1aaa0794ad1cdd75a7bfec6b2cc1f43511" kindref="member">dispose</ref>();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref><sp/>=<sp/>releaseMf(<ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref>);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>releaseEmf(<ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref>);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref>)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref>-&gt;Release();</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref>)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref>-&gt;Release();</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><ref refid="class_c_asole_doc_1a6cc2904210673557027fe42fd547b61c" kindref="member">CAsoleDoc::CAsoleDoc</ref>()</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a8cdc962e76fa654a847b9b0e9329eb89" kindref="member">ad_refc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1abce3b5a6f4c740d676f6d955f7032dee" kindref="member">ad_hmf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref>.SetRectEmpty();</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1adb8f79184b1b79ad192b8d1b221be56b" kindref="member">ad_flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>初期用hemfを作成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a6b40076287f27317c9402047e625809f" kindref="member">ad_hemf</ref><sp/>=<sp/>createMiniEmf(&amp;<ref refid="class_c_asole_doc_1a2b7223af5e564f1dd2a224c1a1c98c7b" kindref="member">ad_emrc</ref>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>フルパスを得る都合</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>CoGetMalloc(1,<sp/>&amp;<ref refid="class_c_asole_doc_1afc7662289cacad13bc1818fff89032e3" kindref="member">ad_malloc</ref>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateBindCtx(0,<sp/>&amp;<ref refid="class_c_asole_doc_1a2d9fbd1e499cd75923c2ac642c53fb06" kindref="member">ad_bindctx</ref>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>リスナ登録</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc_1a32ff77b98091e6bc5d5bf3fba39bdd50" kindref="member">ad_man</ref>.<ref refid="class_c_astah_man_1adf834f63af40b9d8069ff70c1217070e" kindref="member">setListener</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref><sp/>*</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><ref refid="class_c_asole_doc_1a35f02df41e8ce225ef7428825ac559ed" kindref="member">CAsoleDoc::getActive</ref>()</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref><sp/><sp/><sp/>*doc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>CFrameWnd<sp/><sp/><sp/>*fp;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fp<sp/>=<sp/>(CFrameWnd<sp/>*)AfxGetMainWnd())<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>(<ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref><sp/>*)fp-&gt;GetActiveDocument();</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>doc;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal">IMPLEMENT_DYNCREATE(<ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref>,<sp/>COleServerDocEx)</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref>,<sp/>COleServerDocEx)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_COMMAND(<ref refid="resource_8h_1a0f2fb03bb7c7b68b354fef74473441c1" kindref="member">ID_APP_CONNECT</ref>,<sp/>OnAppConnect)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_UPDATE_COMMAND_UI(<ref refid="resource_8h_1ad7c2b660039b02ab8cdf7d39790568fd" kindref="member">ID_APP_UPDATE</ref>,<sp/>OnUpdateAppUpdate)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_COMMAND(ID_APP_UPDATE,<sp/>OnAppUpdate)</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_COMMAND(<ref refid="resource_8h_1a8906fe7d01e8d2334eccde04c7e62703" kindref="member">ID_APP_SETTING</ref>,<sp/>OnAppSetting)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_COMMAND(ID_APP_ABOUT,<sp/>OnAppAbout)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/asoledoc.cpp"/>
  </compounddef>
</doxygen>
