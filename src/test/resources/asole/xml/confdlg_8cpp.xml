<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="confdlg_8cpp" kind="file">
    <compoundname>confdlg.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="resource_8h" local="yes">resource.h</includes>
    <includes refid="confval_8h" local="yes">confval.h</includes>
    <includes refid="ipframe_8h" local="yes">ipframe.h</includes>
    <includes refid="mainfrm_8h" local="yes">mainfrm.h</includes>
    <includes refid="asoledoc_8h" local="yes">asoledoc.h</includes>
    <includes refid="confdlg_8h" local="yes">confdlg.h</includes>
    <incdepgraph>
      <node id="158">
        <label>afxcmn.h</label>
      </node>
      <node id="163">
        <label>float.h</label>
      </node>
      <node id="155">
        <label>afxole.h</label>
      </node>
      <node id="154">
        <label>afxext.h</label>
      </node>
      <node id="150">
        <label>confdlg.cpp</label>
        <link refid="confdlg.cpp"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>shlwapi.h</label>
      </node>
      <node id="165">
        <label>resource.h</label>
        <link refid="resource_8h"/>
      </node>
      <node id="162">
        <label>atlimage.h</label>
      </node>
      <node id="159">
        <label>afxsock.h</label>
      </node>
      <node id="166">
        <label>confval.h</label>
        <link refid="confval_8h"/>
      </node>
      <node id="161">
        <label>atlpath.h</label>
      </node>
      <node id="170">
        <label>asoledoc.h</label>
        <link refid="asoledoc_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>astahman.h</label>
        <link refid="astahman_8h"/>
      </node>
      <node id="167">
        <label>ipframe.h</label>
        <link refid="ipframe_8h"/>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>mainfrm.h</label>
        <link refid="mainfrm_8h"/>
      </node>
      <node id="164">
        <label>math.h</label>
      </node>
      <node id="171">
        <label>afxoleserverdocex.h</label>
      </node>
      <node id="156">
        <label>afxdisp.h</label>
      </node>
      <node id="157">
        <label>afxdtctl.h</label>
      </node>
      <node id="152">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
      </node>
      <node id="153">
        <label>afxwin.h</label>
      </node>
      <node id="173">
        <label>confdlg.h</label>
        <link refid="confdlg_8h"/>
      </node>
      <node id="168">
        <label>afxoleipframewndex.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="confdlg_8cpp_1a21fd1efaf089bf455e63b0ed10033136" prot="public" static="no">
        <name>dlgitem</name>
        <param><defname>i</defname></param>
        <initializer>::GetDlgItem(GetSafeHwnd(), i)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="18" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1a492ceec60cab1067f82dd6986b33dc56" prot="public" static="no">
        <name>limitText</name>
        <param><defname>i</defname></param>
        <param><defname>n</defname></param>
        <initializer>::SendMessage(<ref refid="confdlg_8cpp_1a21fd1efaf089bf455e63b0ed10033136" kindref="member">dlgitem</ref>(i), EM_LIMITTEXT, n, 0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="20" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1afc2bfdeb30b3e09a395811a1512f5691" prot="public" static="no">
        <name>checked</name>
        <param><defname>i</defname></param>
        <initializer>(IsDlgButtonChecked(i) != BST_UNCHECKED)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="22" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" prot="public" static="no">
        <name>checkit</name>
        <param><defname>i</defname></param>
        <param><defname>y</defname></param>
        <initializer>CheckDlgButton(i, (y) ? BST_CHECKED : BST_UNCHECKED)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="23" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1a775d4c50a4c146313601972fbaa138f0" prot="public" static="no">
        <name>enableit</name>
        <param><defname>i</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="stdafx_8h_1a0c5fabf49a462bb8a8772a21d59633e5" kindref="member">enableCtl</ref>(GetSafeHwnd(), i, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="25" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1ac38dd99ef6c9138f66e8a7ea1416be05" prot="public" static="no">
        <name>showit</name>
        <param><defname>i</defname></param>
        <param><defname>y</defname></param>
        <initializer>::ShowWindow(<ref refid="confdlg_8cpp_1a21fd1efaf089bf455e63b0ed10033136" kindref="member">dlgitem</ref>(i), (y) ? SW_SHOW : SW_HIDE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="27" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="confdlg_8cpp_1a9275ec299e58abecc77b040fc4214468" prot="public" static="no">
        <name>MY_TIMER_ID</name>
        <initializer>(12321)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="29" column="9" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="confdlg_8cpp_1a9b46ad08a9b49f4aa1148a0306970756" prot="public" static="yes" mutable="no">
        <type>const TCHAR</type>
        <definition>const TCHAR regpath_port[]</definition>
        <argsstring>[]</argsstring>
        <name>regpath_port</name>
        <initializer>=


	_T(&quot;port&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="31" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="confdlg_8cpp_1a683eeea711d7a480b16ce40f80d0754d" prot="public" static="yes" mutable="no">
        <type>const TCHAR</type>
        <definition>const TCHAR regpath_xflags[]</definition>
        <argsstring>[]</argsstring>
        <name>regpath_xflags</name>
        <initializer>=


	_T(&quot;xflags&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="35" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="confdlg_8cpp_1ad13107658eb6af608429a76459a7d8f9" prot="public" static="yes" mutable="no">
        <type>HWND</type>
        <definition>HWND dlgHwnd</definition>
        <argsstring></argsstring>
        <name>dlgHwnd</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="42" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="confdlg_8cpp_1a4de0ed5c066059b77e21e5743962c6fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int getRegStr</definition>
        <argsstring>(LPCTSTR path, LPTSTR val, int nchars)</argsstring>
        <name>getRegStr</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>LPTSTR</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="46" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="46" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="confdlg_8cpp_1ab47c9415c5d10eda34c128cf642e4d09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int putRegStr</definition>
        <argsstring>(LPCTSTR path, LPCTSTR val)</argsstring>
        <name>putRegStr</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>LPCTSTR</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="136" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="136" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="confdlg_8cpp_1a9a28dc79af6dc89bcadd1f2ae4ad6059" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int getRegInt</definition>
        <argsstring>(LPCTSTR path, int *val)</argsstring>
        <name>getRegInt</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="206" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="206" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="confdlg_8cpp_1ab921466f8de128bec0b862305ef10e1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int putRegInt</definition>
        <argsstring>(LPCTSTR path, int val)</argsstring>
        <name>putRegInt</name>
        <param>
          <type>LPCTSTR</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" line="224" column="1" bodyfile="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp" bodystart="224" bodyend="231"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Change<sp/>Vision<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>comment(exestr,<sp/>&quot;%Z%%Y%%M%<sp/>%I%<sp/>20%E%<sp/>%U%&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="confval_8h" kindref="compound">confval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="ipframe_8h" kindref="compound">ipframe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="mainfrm_8h" kindref="compound">mainfrm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="asoledoc_8h" kindref="compound">asoledoc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&quot;<ref refid="confdlg_8h" kindref="compound">confdlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>_DEBUG</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dlgitem(i)<sp/><sp/>::GetDlgItem(GetSafeHwnd(),<sp/>i)</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>limitText(i,<sp/>n)<sp/>::SendMessage(dlgitem(i),<sp/>EM_LIMITTEXT,<sp/>n,<sp/>0);</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>checked(i)<sp/><sp/>(IsDlgButtonChecked(i)<sp/>!=<sp/>BST_UNCHECKED)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>checkit(i,<sp/>y)<sp/><sp/><sp/>CheckDlgButton(i,<sp/>(y)<sp/>?<sp/>BST_CHECKED<sp/>:<sp/>BST_UNCHECKED)</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>enableit(i,<sp/>y)<sp/><sp/>enableCtl(GetSafeHwnd(),<sp/>i,<sp/>y)</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>showit(i,<sp/>y)<sp/><sp/><sp/><sp/>::ShowWindow(dlgitem(i),<sp/>(y)<sp/>?<sp/>SW_SHOW<sp/>:<sp/>SW_HIDE)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MY_TIMER_ID<sp/>(12321)</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/><sp/>regpath_port[]<sp/>=</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Software¥¥JavaSoft¥¥Prefs¥¥&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(&quot;com¥¥change_vision¥¥astah¥¥extension¥¥plugin¥¥asolet¥¥actions¥¥&quot;)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(&quot;port&quot;);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">static<sp/>const<sp/>TCHAR<sp/><sp/>regpath_xflags[]<sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(&quot;Software¥¥JavaSoft¥¥Prefs¥¥&quot;)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(&quot;com¥¥change_vision¥¥astah¥¥extension¥¥plugin¥¥asolet¥¥actions¥¥&quot;)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>_T(&quot;xflags&quot;);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MTは考慮しません。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">static<sp/>HWND<sp/>dlgHwnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">getRegStr(LPCTSTR<sp/>path,<sp/>LPTSTR<sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchars)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkey<sp/>=<sp/>HKEY_CURRENT_USER;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkeyx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*str;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*sep;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>n;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/>nb;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[40];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pathにはマルチバイト文字は無いものと前提します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!val<sp/>||<sp/>nchars<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>nb<sp/>=<sp/>nchars<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*val);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(val,<sp/>0,<sp/>nb);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nchars<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((str<sp/>=<sp/>path)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sep<sp/>=<sp/>_tcschr(str,<sp/>_T(</highlight><highlight class="stringliteral">&apos;¥¥&apos;</highlight><highlight class="normal">)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>sep<sp/>-<sp/>str)<sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(name)<sp/>&lt;=<sp/>n)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcpyn(name,<sp/>str,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>RegOpenKeyEx(hkey,<sp/>name,<sp/>0,<sp/>KEY_READ,<sp/>&amp;hkeyx);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkey<sp/>=<sp/>hkeyx;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkeyx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>sep<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sep<sp/>=<sp/>str;<sp/>*sep;<sp/>sep++)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>sep<sp/>-<sp/>str)<sp/>&gt;=<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(name))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>lstrcpyn(name,<sp/>str,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>name[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>REG_NONE;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>RegQueryValueEx(hkey,<sp/>name,<sp/>NULL,<sp/>&amp;type,<sp/>(BYTE<sp/>*)val,<sp/>&amp;nb);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>REG_MULTI_SZ<sp/>REG_EXPAND_SZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/>REG_SZ)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>val[nchars<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/>failout:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">putRegStr(LPCTSTR<sp/>path,<sp/>LPCTSTR<sp/>val)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkey<sp/>=<sp/>HKEY_CURRENT_USER;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkeyx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*str;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR<sp/>*sep;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>n;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[40];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>マルチバイト文字は無いものと前提します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((str<sp/>=<sp/>path)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sep<sp/>=<sp/>_tcschr(str,<sp/>_T(</highlight><highlight class="stringliteral">&apos;¥¥&apos;</highlight><highlight class="normal">)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>sep<sp/>-<sp/>str)<sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(name)<sp/>&lt;=<sp/>n)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lstrcpyn(name,<sp/>str,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>RegCreateKeyEx(hkey,<sp/>name,<sp/>0,<sp/>NULL,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REG_OPTION_NON_VOLATILE,<sp/>KEY_WRITE,<sp/>NULL,<sp/>&amp;hkeyx,<sp/>NULL);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkey<sp/>=<sp/>hkeyx;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hkeyx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>sep<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sep<sp/>=<sp/>str;<sp/>*sep;<sp/>sep++)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>sep<sp/>-<sp/>str)<sp/>&gt;=<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(name))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>lstrcpyn(name,<sp/>str,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>name[n]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>val<sp/>?<sp/>((lstrlen(val)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*val))<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>RegSetValueEx(hkey,<sp/>name,<sp/>0,<sp/>REG_SZ,<sp/>(CONST<sp/>BYTE<sp/>*)val,<sp/>n);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failout;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/>failout:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hkey<sp/>!=<sp/>HKEY_CURRENT_USER)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(hkey);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">getRegInt(LPCTSTR<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[30];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getRegStr(path,<sp/>buf,<sp/><ref refid="stdafx_8h_1aab9623b1a50fc803c490ba3df672035b" kindref="member">asz</ref>(buf))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="stdafx_8cpp_1a77b5e6f3d4c9cef91e731b03642357db" kindref="member">stoi</ref>(buf,<sp/>val))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">putRegInt(LPCTSTR<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[30];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>wsprintf(buf,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/>val);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>putRegStr(path,<sp/>buf);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="class_c_conf_dlg_1a94408db5065d4cb8db620f1d092112be" kindref="member">CConfDlg::save</ref>()</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>astah任せなのでportは記録しない</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>putRegInt(regpath_xflags,<sp/><ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="class_c_conf_dlg_1aafe0ee184ddebb7d5d632d46e309e9db" kindref="member">CConfDlg::load</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xflags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>getRegInt(regpath_port,<sp/>&amp;port);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>getRegInt(regpath_xflags,<sp/>&amp;xflags);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/><ref refid="confval_8h_1af7b7467832da9ce1471c639d2ec6d950" kindref="member">CV_PORT_DEF</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>&lt;<sp/><ref refid="confval_8h_1afe4d600411de8a46d86bacc7447d8f5d" kindref="member">CV_PORT_MIN</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/><ref refid="confval_8h_1afe4d600411de8a46d86bacc7447d8f5d" kindref="member">CV_PORT_MIN</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>&gt;<sp/><ref refid="confval_8h_1a99da58aa17302fb706c14d2668925a5c" kindref="member">CV_PORT_MAX</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/><ref refid="confval_8h_1a99da58aa17302fb706c14d2668925a5c" kindref="member">CV_PORT_MAX</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1ac5356ccab1d4796fc1ba62aa7ea5eb9b" kindref="member">cd_port</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref><sp/>=<sp/>xflags<sp/>&amp;<sp/><ref refid="confval_8h_1a08362f2703f441d645c0f275557ad180" kindref="member">CV_FLAG_MASK</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="class_c_conf_dlg_1a48064631080a8c1416f01a729ac7d68d" kindref="member">CConfDlg::DoDataExchange</ref>(CDataExchange<sp/>*pDX)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::DoDataExchange(pDX);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">HBRUSH</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="class_c_conf_dlg_1a218bd1990f8dae1b8e47b3e276963799" kindref="member">CConfDlg::OnCtlColor</ref>(CDC<sp/>*dcp,<sp/>CWnd<sp/>*wp,<sp/>UINT<sp/>ctlcolor)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>HBRUSH<sp/><sp/><sp/><sp/><sp/><sp/>hbr;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>hbr<sp/>=<sp/>CDialog::OnCtlColor(dcp,<sp/>wp,<sp/>ctlcolor);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(wp-&gt;GetDlgCtrlID())<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="resource_8h_1a640e6521be00c5bf926d2a642a0c8866" kindref="member">IDC_DNAME</ref>:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref>.IsEmpty())</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcp-&gt;SetTextColor(RGB(255,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbr;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="class_c_conf_dlg_1ad1a117e240974f07fb1af392188cfe5d" kindref="member">CConfDlg::OnPortStd</ref>()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="class_c_conf_dlg_1aac890d65c0bfe39a34bde826e79cfb6c" kindref="member">CConfDlg::OnCancel</ref>()</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnCancel();</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="class_c_conf_dlg_1a68164eb2673c8b2d13751f71e3a979a3" kindref="member">CConfDlg::OnOK</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="confdlg_8cpp_1afc2bfdeb30b3e09a395811a1512f5691" kindref="member">checked</ref>(<ref refid="resource_8h_1a7fd9fce72c7be48221808b07da2a8499" kindref="member">IDC_X_REL_YES</ref>))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref><sp/>|=<sp/><ref refid="confval_8h_1abf0bb6fdaf6f9d51a178a28346a6c2be" kindref="member">CV_FLAG_REL</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref><sp/>&amp;=<sp/>‾CV_FLAG_REL;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="confdlg_8cpp_1afc2bfdeb30b3e09a395811a1512f5691" kindref="member">checked</ref>(<ref refid="resource_8h_1a54e96927f4b716b2499c2ccff1093c5a" kindref="member">IDC_REL_YES</ref>))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a76330ab4794f042edf65842e6ff18e7f" kindref="member">cd_flags</ref><sp/>|=<sp/><ref refid="confval_8h_1abf0bb6fdaf6f9d51a178a28346a6c2be" kindref="member">CV_FLAG_REL</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a76330ab4794f042edf65842e6ff18e7f" kindref="member">cd_flags</ref><sp/>&amp;=<sp/>‾CV_FLAG_REL;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a94408db5065d4cb8db620f1d092112be" kindref="member">save</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnOK();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="class_c_conf_dlg_1a9b528238d4530ae9080c8f6bc9222b09" kindref="member">CConfDlg::obtainPaths</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>force)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_asole_doc" kindref="compound">CAsoleDoc</ref><sp/><sp/><sp/>*doc<sp/>=<sp/><ref refid="class_c_asole_doc_1a35f02df41e8ce225ef7428825ac559ed" kindref="member">CAsoleDoc::getActive</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>dname,<sp/>rpath,<sp/>fpath;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="class_c_asole_doc_1a6d972147e9ff48e386096dafa95d0364" kindref="member">getContainerFilePath</ref>(&amp;dname,<sp/>1);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>rpath<sp/>=<sp/>doc-&gt;<ref refid="class_c_asole_doc_1a4b48f8266f0fcfea880624133ddffc2e" kindref="member">rpath</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>fpath<sp/>=<sp/>doc-&gt;<ref refid="class_c_asole_doc_1ab3965acb415ffe2b2eda458ae86cb9cc" kindref="member">fpath</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(force<sp/>||<sp/>dname.Compare(<ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref>))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref><sp/>=<sp/>dname;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref>.IsEmpty())</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDlgItemText(<ref refid="resource_8h_1a640e6521be00c5bf926d2a642a0c8866" kindref="member">IDC_DNAME</ref>,<sp/><ref refid="class_c_conf_dlg_1abf280aa67d405e8dc123169fbb541f82" kindref="member">cd_notdir</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDlgItemText(<ref refid="resource_8h_1a640e6521be00c5bf926d2a642a0c8866" kindref="member">IDC_DNAME</ref>,<sp/><ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rpath.IsEmpty())</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpath<sp/>=<sp/>fpath;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(force<sp/>||<sp/>rpath.Compare(<ref refid="class_c_conf_dlg_1a35ea0ba3d7008c1e0d00aa522a15afbc" kindref="member">cd_rpath</ref>))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a35ea0ba3d7008c1e0d00aa522a15afbc" kindref="member">cd_rpath</ref><sp/>=<sp/>rpath;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDlgItemText(<ref refid="resource_8h_1ae7acf35fefcced07fb4e8b6680e4f974" kindref="member">IDC_RPATH</ref>,<sp/><ref refid="class_c_conf_dlg_1a35ea0ba3d7008c1e0d00aa522a15afbc" kindref="member">cd_rpath</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="class_c_conf_dlg_1a041e3875399746d9e4430222a1ae8e06" kindref="member">CConfDlg::OnTimer</ref>(UINT_PTR<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="confdlg_8cpp_1a9275ec299e58abecc77b040fc4214468" kindref="member">MY_TIMER_ID</ref>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CDialog::OnTimer(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a9b528238d4530ae9080c8f6bc9222b09" kindref="member">obtainPaths</ref>(0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="class_c_conf_dlg_1ae4c760bc8022879b86c0d95d1fa79150" kindref="member">CConfDlg::OnDestroy</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>KillTimer(<ref refid="confdlg_8cpp_1a9275ec299e58abecc77b040fc4214468" kindref="member">MY_TIMER_ID</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnDestroy();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>dlgHwnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="class_c_conf_dlg_1acf41be1af5b3f0f91f266d3ce26b2791" kindref="member">CConfDlg::init</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1ac5356ccab1d4796fc1ba62aa7ea5eb9b" kindref="member">cd_port</ref><sp/>=<sp/><ref refid="confval_8h_1af7b7467832da9ce1471c639d2ec6d950" kindref="member">CV_PORT_DEF</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1abf280aa67d405e8dc123169fbb541f82" kindref="member">cd_notdir</ref>.Empty();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a34a9d38465a048f81a19f75a7c40b79b" kindref="member">cd_dname</ref>.Empty();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a9b839791caacf3ce8ef9e791152bcfc5" kindref="member">cd_fpath</ref>.Empty();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a35ea0ba3d7008c1e0d00aa522a15afbc" kindref="member">cd_rpath</ref>.Empty();</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="class_c_conf_dlg_1ad841d9cb206af48711612f5778795e80" kindref="member">CConfDlg::OnInitDialog</ref>()</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnInitDialog();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1acf41be1af5b3f0f91f266d3ce26b2791" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CString<sp/><sp/><sp/><sp/><sp/>s;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowText(s);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdafx_8cpp_1a9ca1172c8e5850474961042a743b5922" kindref="member">loadAppTitle</ref>(s);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowText(s);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>GetDlgItemText(<ref refid="resource_8h_1a640e6521be00c5bf926d2a642a0c8866" kindref="member">IDC_DNAME</ref>,<sp/><ref refid="class_c_conf_dlg_1abf280aa67d405e8dc123169fbb541f82" kindref="member">cd_notdir</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1aafe0ee184ddebb7d5d632d46e309e9db" kindref="member">load</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a492ceec60cab1067f82dd6986b33dc56" kindref="member">limitText</ref>(<ref refid="resource_8h_1a574f1300495ff98df6df2d9fa6aee8c3" kindref="member">IDC_PORT</ref>,<sp/><ref refid="confval_8h_1a504cb428741f8f73bbf2227d0b91f036" kindref="member">CV_PORT_KET</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDlgItemInt(<ref refid="resource_8h_1a574f1300495ff98df6df2d9fa6aee8c3" kindref="member">IDC_PORT</ref>,<sp/><ref refid="class_c_conf_dlg_1ac5356ccab1d4796fc1ba62aa7ea5eb9b" kindref="member">cd_port</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>::SendMessage(<ref refid="confdlg_8cpp_1a21fd1efaf089bf455e63b0ed10033136" kindref="member">dlgitem</ref>(<ref refid="resource_8h_1a574f1300495ff98df6df2d9fa6aee8c3" kindref="member">IDC_PORT</ref>),<sp/>EM_SETREADONLY,<sp/>TRUE,<sp/>0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1ac38dd99ef6c9138f66e8a7ea1416be05" kindref="member">showit</ref>(<ref refid="resource_8h_1a5d385596578938347f96ea9c6999efe0" kindref="member">IDC_PORT_STD</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a775d4c50a4c146313601972fbaa138f0" kindref="member">enableit</ref>(<ref refid="resource_8h_1a5d385596578938347f96ea9c6999efe0" kindref="member">IDC_PORT_STD</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1ac38dd99ef6c9138f66e8a7ea1416be05" kindref="member">showit</ref>(<ref refid="resource_8h_1acd6916a88529a32908e91f1883b3b1be" kindref="member">IDC_PORT_FIX</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_conf_dlg_1a7b9d90a732a9d72c874a0f7dd23599d4" kindref="member">cd_xflags</ref><sp/>&amp;<sp/><ref refid="confval_8h_1abf0bb6fdaf6f9d51a178a28346a6c2be" kindref="member">CV_FLAG_REL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a7fd9fce72c7be48221808b07da2a8499" kindref="member">IDC_X_REL_YES</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a3a0068a6b0389c268653e9da85b31dfc" kindref="member">IDC_X_REL_NOT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a3a0068a6b0389c268653e9da85b31dfc" kindref="member">IDC_X_REL_NOT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a7fd9fce72c7be48221808b07da2a8499" kindref="member">IDC_X_REL_YES</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_conf_dlg_1a9b528238d4530ae9080c8f6bc9222b09" kindref="member">obtainPaths</ref>(1);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_conf_dlg_1a76330ab4794f042edf65842e6ff18e7f" kindref="member">cd_flags</ref><sp/>&amp;<sp/>CV_FLAG_REL)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a54e96927f4b716b2499c2ccff1093c5a" kindref="member">IDC_REL_YES</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a1c30b6c3ffd63d78dff3dea83690d953" kindref="member">IDC_REL_NOT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a1c30b6c3ffd63d78dff3dea83690d953" kindref="member">IDC_REL_NOT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="confdlg_8cpp_1a0fadc2a7f09779cb347ce5e851bc54a3" kindref="member">checkit</ref>(<ref refid="resource_8h_1a54e96927f4b716b2499c2ccff1093c5a" kindref="member">IDC_REL_YES</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>officeより上にウィンドウを表示</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>タスクバーにはウィンドウを表示しない</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetWindowPos(GetSafeHwnd(),<sp/>HWND_TOPMOST,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWP_NOMOVE<sp/>|<sp/>SWP_NOSIZE);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>SetTimer(<ref refid="confdlg_8cpp_1a9275ec299e58abecc77b040fc4214468" kindref="member">MY_TIMER_ID</ref>,<sp/>1000,<sp/>NULL);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><ref refid="class_c_conf_dlg_1a70a3a681e5e6768fe5344c4082b690b5" kindref="member">CConfDlg::OnCreate</ref>(LPCREATESTRUCT<sp/>csp)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CDialog::OnCreate(csp)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>dlgHwnd<sp/>=<sp/>GetSafeHwnd();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">INT_PTR</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="class_c_conf_dlg_1a54b8539b592b421511970becc5d9e9f0" kindref="member">CConfDlg::DoModal</ref>()</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::IsWindow(dlgHwnd))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IDCANCEL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>dlgHwnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CDialog::DoModal();</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><ref refid="class_c_conf_dlg_1a65b117497a6f651eb16433a7d0e139ec" kindref="member">CConfDlg::‾CConfDlg</ref>()</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><ref refid="class_c_conf_dlg_1a972d5f5c7ed57ceaa6a82c6ec32a7235" kindref="member">CConfDlg::CConfDlg</ref>(CWnd<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog(IDD,<sp/>parent)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>cd_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">CWnd<sp/>*</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="class_c_conf_dlg_1a886615c89c68d30755610884003279e5" kindref="member">CConfDlg::activeWnd</ref>()</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::IsWindow(dlgHwnd))</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromHandlePermanent(dlgHwnd);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="class_c_conf_dlg_1ac2d6f6481138231b105dc51e319c4c06" kindref="member">CConfDlg::show</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::IsWindow(dlgHwnd))<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(how<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::EnableWindow(dlgHwnd,<sp/>FALSE);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(how<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::EnableWindow(dlgHwnd,<sp/>TRUE);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><ref refid="class_c_conf_dlg_1a600f59a9ec04bd6b3ddf840f96fc6fe2" kindref="member">CConfDlg::destroy</ref>()</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::IsWindow(dlgHwnd))</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::DestroyWindow(dlgHwnd);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_c_conf_dlg" kindref="compound">CConfDlg</ref>,<sp/>CDialog)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CTLCOLOR()</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(<ref refid="resource_8h_1a5d385596578938347f96ea9c6999efe0" kindref="member">IDC_PORT_STD</ref>,<sp/>OnPortStd)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_TIMER()</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_DESTROY()</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CREATE()</highlight></codeline>
<codeline lineno="519"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Documents/workspace/asole/AstahDiagram/AstahDiagram/confdlg.cpp"/>
  </compounddef>
</doxygen>
