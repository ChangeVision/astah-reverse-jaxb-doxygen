<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_test_plug_in_exception" kind="class" prot="public">
    <compoundname>TestPlugInException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::runtime_error</basecompoundref>
    <includes refid="_test_plug_in_exception_8h" local="no">TestPlugInException.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5" prot="public" static="no">
        <name>Cause</name>
        <enumvalue id="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5aea27b550564d4000da0f449d71eff1a4" prot="public">
          <name>failedToLoadDll</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5ac837fa9c29b4fb0fb18e5ec2a79a199f" prot="public">
          <name>failedToCopyDll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5a0c5c10b557727dd6dd28da1c2da641a6" prot="public">
          <name>failedToGetInterfaceFunction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5ad927923bb9e9b6c5d860abbcdebd7e32" prot="public">
          <name>failedToMakeTest</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="20" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" bodystart="19" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_plug_in_exception_1aa2007300636c626c77ea5587c8d63472" prot="private" static="no" mutable="no">
        <type><ref refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5" kindref="member">Cause</ref></type>
        <definition>Cause TestPlugInException::m_cause</definition>
        <argsstring></argsstring>
        <name>m_cause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="50" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_plug_in_exception_1aa89d0392dd26da6a64f16a6e4a368dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestPlugInException::TestPlugInException</definition>
        <argsstring>(std::string message, Cause cause)</argsstring>
        <name>TestPlugInException</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5" kindref="member">Cause</ref></type>
          <declname>cause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="29" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_test_plug_in_exception_1a75c32c3662d0ceff17137139be5b00b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestPlugInException::TestPlugInException</definition>
        <argsstring>(const TestPlugInException &amp;copy)</argsstring>
        <name>TestPlugInException</name>
        <param>
          <type>const <ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="35" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_test_plug_in_exception_1a27b373b8e2c6952d87d55d12eeea2a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TestPlugInException::‾TestPlugInException</definition>
        <argsstring>()</argsstring>
        <name>‾TestPlugInException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_test_plug_in_exception_1adbed5e61ebd67be9db7be505c9dc2610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref> &amp;</type>
        <definition>TestPlugInException &amp; TestPlugInException::operator=</definition>
        <argsstring>(const TestPlugInException &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference on this object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.cpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_test_plug_in_exception_1aedbc0db86be6b9f4f08f62496f98dd64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5" kindref="member">Cause</ref></type>
        <definition>TestPlugInException::Cause TestPlugInException::getCause</definition>
        <argsstring>() const </argsstring>
        <name>getCause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="47" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>¥class <ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref> ¥brief This class represents a failure of using the test plug-in. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="261">
        <label>std::runtime_error</label>
        <childnode refid="262" relation="public-inheritance">
        </childnode>
      </node>
      <node id="260">
        <label>TestPlugInException</label>
        <link refid="class_test_plug_in_exception"/>
        <childnode refid="261" relation="public-inheritance">
        </childnode>
      </node>
      <node id="262">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="264">
        <label>std::runtime_error</label>
        <childnode refid="265" relation="public-inheritance">
        </childnode>
      </node>
      <node id="263">
        <label>TestPlugInException</label>
        <link refid="class_test_plug_in_exception"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="265">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" line="17" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInException.h" bodystart="16" bodyend="51"/>
    <listofallmembers>
      <member refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>Cause</name></member>
      <member refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5ac837fa9c29b4fb0fb18e5ec2a79a199f" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>failedToCopyDll</name></member>
      <member refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5a0c5c10b557727dd6dd28da1c2da641a6" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>failedToGetInterfaceFunction</name></member>
      <member refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5aea27b550564d4000da0f449d71eff1a4" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>failedToLoadDll</name></member>
      <member refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5ad927923bb9e9b6c5d860abbcdebd7e32" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>failedToMakeTest</name></member>
      <member refid="class_test_plug_in_exception_1aedbc0db86be6b9f4f08f62496f98dd64" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>getCause</name></member>
      <member refid="class_test_plug_in_exception_1aa2007300636c626c77ea5587c8d63472" prot="private" virt="non-virtual"><scope>TestPlugInException</scope><name>m_cause</name></member>
      <member refid="class_test_plug_in_exception_1adbed5e61ebd67be9db7be505c9dc2610" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>operator=</name></member>
      <member refid="class_test_plug_in_exception_1aa89d0392dd26da6a64f16a6e4a368dec" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>TestPlugInException</name></member>
      <member refid="class_test_plug_in_exception_1a75c32c3662d0ceff17137139be5b00b2" prot="public" virt="non-virtual"><scope>TestPlugInException</scope><name>TestPlugInException</name></member>
      <member refid="class_test_plug_in_exception_1a27b373b8e2c6952d87d55d12eeea2a9b" prot="public" virt="virtual"><scope>TestPlugInException</scope><name>‾TestPlugInException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
