<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_test_plug_in_8cpp" kind="file">
    <compoundname>TestPlugIn.cpp</compoundname>
    <includes refid="testpluginrunner_2_std_afx_8h" local="yes">StdAfx.h</includes>
    <includes refid="_test_plug_in_8h" local="yes">TestPlugIn.h</includes>
    <includes local="no">cppunit/TestCase.h</includes>
    <includes local="no">cppunit/plugin/DynamicLibraryManagerException.h</includes>
    <includes local="no">cppunit/extensions/TestFactoryRegistry.h</includes>
    <includes refid="_test_plug_in_exception_8h" local="yes">TestPlugInException.h</includes>
    <incdepgraph>
      <node id="564">
        <label>TestPlugIn.h</label>
        <link refid="_test_plug_in_8h"/>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>afxcmn.h</label>
      </node>
      <node id="570">
        <label>cppunit/extensions/TestFactoryRegistry.h</label>
      </node>
      <node id="560">
        <label>afxext.h</label>
      </node>
      <node id="558">
        <label>StdAfx.h</label>
        <link refid="testpluginrunner_2_std_afx_8h"/>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
      </node>
      <node id="572">
        <label>stdexcept</label>
      </node>
      <node id="569">
        <label>cppunit/plugin/DynamicLibraryManagerException.h</label>
      </node>
      <node id="571">
        <label>TestPlugInException.h</label>
        <link refid="_test_plug_in_exception_8h"/>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
      </node>
      <node id="565">
        <label>string</label>
      </node>
      <node id="557">
        <label>src/msvc6/testpluginrunner/TestPlugIn.cpp</label>
        <link refid="TestPlugIn.cpp"/>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
      </node>
      <node id="568">
        <label>cppunit/TestCase.h</label>
      </node>
      <node id="566">
        <label>cppunit/test.h</label>
      </node>
      <node id="561">
        <label>afxdisp.h</label>
      </node>
      <node id="567">
        <label>cppunit/plugin/PlugInManager.h</label>
      </node>
      <node id="562">
        <label>afxdtctl.h</label>
      </node>
      <node id="559">
        <label>afxwin.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_null_test" prot="public">NullTest</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>file<sp/>TestPlugIn.cpp<sp/>for<sp/>class<sp/>TestPlugIn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)Copyright<sp/>2000,<sp/>Baptiste<sp/>Lepilleur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/>2001/06/23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testpluginrunner_2_std_afx_8h" kindref="compound">StdAfx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_plug_in_8h" kindref="compound">TestPlugIn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/TestCase.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/plugin/DynamicLibraryManagerException.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/extensions/TestFactoryRegistry.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_plug_in_exception_8h" kindref="compound">TestPlugInException.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]<sp/>=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="class_test_plug_in_1a43992c41c0e348ac7ef0736313dc8649" kindref="member">TestPlugIn::TestPlugIn</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>fileName<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileName(<sp/>fileName<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>m_copyFileName<sp/>=<sp/>m_fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-hotrunner&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_test_plug_in_1a1118da543934630156a0b212c046890a" kindref="member">TestPlugIn::â€¾TestPlugIn</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>deleteDllCopy();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">TestPlugIn::deleteDllCopy()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>m_manager.unload(<sp/>m_copyFileName<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>::DeleteFile(<sp/>m_copyFileName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_null_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_null_test" kindref="compound">NullTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CPPUNIT_NS::TestCase</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_null_test" kindref="compound">NullTest</ref>(<sp/>std::string<sp/>name<sp/>)<sp/>:<sp/>TestCase(<sp/>name<sp/>)<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>â€¾NullTest()<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_dll_plug_in_tester_2_dll_plug_in_tester_8cpp_1a8ce0b186f643b016745c2387caabd51b" kindref="member">runTests</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>CPPUNIT_ASSERT_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load&quot;</highlight><highlight class="normal"><sp/>+<sp/>getName(),<sp/>FALSE<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">CPPUNIT_NS::Test<sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="class_test_plug_in_1af7b0c2cb12d136c227a8949b360f8908" kindref="member">TestPlugIn::makeTest</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>reloadDll();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CPPUNIT_NS::TestFactoryRegistry::getRegistry().makeTest();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">TestPlugIn::reloadDll()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>m_manager.unload(<sp/>m_copyFileName<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>makeDllCopy();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>loadDll();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal">TestPlugIn::makeDllCopy()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>::CopyFile(<sp/>m_fileName.c_str(),<sp/>m_copyFileName.c_str(),<sp/>FALSE<sp/>)<sp/>==<sp/>FALSE<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>copy<sp/>DLL&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_fileName<sp/>+</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_copyFileName,<sp/><ref refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5ac837fa9c29b4fb0fb18e5ec2a79a199f" kindref="member">TestPlugInException::failedToCopyDll</ref><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">TestPlugIn::loadDll()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_manager.load(<sp/>m_copyFileName<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>CPPUNIT_NS::DynamicLibraryManagerException<sp/>&amp;e<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref>(<sp/>e.what(),<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_plug_in_exception_1ac560dcaf567ed6aea8b5a6725ee711f5aea27b550564d4000da0f449d71eff1a4" kindref="member">TestPlugInException::failedToLoadDll</ref><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugIn.cpp"/>
  </compounddef>
</doxygen>
