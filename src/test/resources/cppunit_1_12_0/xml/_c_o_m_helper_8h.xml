<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_c_o_m_helper_8h" kind="file">
    <compoundname>COMHelper.h</compoundname>
    <includes local="no">new</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">comdef.h</includes>
    <includes local="no">comip.h</includes>
    <includedby refid="_d_s_add_in_8cpp" local="yes">src/msvc6/DSPlugIn/DSAddIn.cpp</includedby>
    <includedby refid="_d_s_add_in_8h" local="yes">src/msvc6/DSPlugIn/DSAddIn.h</includedby>
    <incdepgraph>
      <node id="343">
        <label>src/msvc6/DSPlugIn/COMHelper.h</label>
        <link refid="COMHelper.h"/>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
      </node>
      <node id="346">
        <label>comdef.h</label>
      </node>
      <node id="345">
        <label>typeinfo</label>
      </node>
      <node id="347">
        <label>comip.h</label>
      </node>
      <node id="344">
        <label>new</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="348">
        <label>src/msvc6/DSPlugIn/COMHelper.h</label>
        <link refid="COMHelper.h"/>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
      </node>
      <node id="350">
        <label>src/msvc6/DSPlugIn/DSAddIn.h</label>
        <link refid="_d_s_add_in_8h"/>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>src/msvc6/DSPlugIn/DSPlugIn.cpp</label>
        <link refid="_d_s_plug_in_8cpp"/>
      </node>
      <node id="349">
        <label>src/msvc6/DSPlugIn/DSAddIn.cpp</label>
        <link refid="_d_s_add_in_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower" prot="public">COMUtility::COMExceptionThrower</innerclass>
    <innernamespace refid="namespace_c_o_m_utility">COMUtility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COMHelper_h</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COMHelper_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>push)</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable:<sp/>4786)</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable:<sp/>4290)</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;comdef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;comip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespace_c_o_m_utility" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">COMUtility</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>simple<sp/>template<sp/>to<sp/>reduce<sp/>the<sp/>typing<sp/>effort<sp/>when<sp/>doing<sp/>reinterpret&lt;void**&gt;<sp/>casts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Interface&gt;</highlight></codeline>
<codeline lineno="19" refid="namespace_c_o_m_utility_1a22b0498e850d704af18ecdaaddbc4ce5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="namespace_c_o_m_utility_1a22b0498e850d704af18ecdaaddbc4ce5" kindref="member">ppvoid</ref>(<sp/>Interface<sp/>**ppInterface)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ppInterface);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Interface&gt;</highlight></codeline>
<codeline lineno="26" refid="namespace_c_o_m_utility_1a1f136460fa6c1e19e828ad9490f81b84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GUID*<sp/><ref refid="namespace_c_o_m_utility_1a1f136460fa6c1e19e828ad9490f81b84" kindref="member">piid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interface*<sp/>pInterface)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__uuidof(<sp/>pInterface);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>used<sp/>with<sp/>_com_ptr_t,<sp/>uses<sp/>function<sp/>overloading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterfacePtr&gt;</highlight></codeline>
<codeline lineno="33" refid="namespace_c_o_m_utility_1a3d977dd0eec59e9cad75679d7789e43e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>GUID*<sp/><ref refid="namespace_c_o_m_utility_1a1f136460fa6c1e19e828ad9490f81b84" kindref="member">piid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterfacePtr&amp;<sp/>pInterface)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/>GUID*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;pInterface.GetIID());</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Interface&gt;</highlight></codeline>
<codeline lineno="40" refid="namespace_c_o_m_utility_1a829f2599203783d65826f7fd1b1f515f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/><ref refid="namespace_c_o_m_utility_1a829f2599203783d65826f7fd1b1f515f" kindref="member">riid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Interface*<sp/>pInterface)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*__uuidof(<sp/>pInterface);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>used<sp/>with<sp/>_com_ptr_t,<sp/>use<sp/>function<sp/>overloading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterfacePtr&gt;</highlight></codeline>
<codeline lineno="47" refid="namespace_c_o_m_utility_1af7eb312e947b4703e0e082644b090843" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GUID&amp;<sp/><ref refid="namespace_c_o_m_utility_1a829f2599203783d65826f7fd1b1f515f" kindref="member">riid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterfacePtr&amp;<sp/>pInterface)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pInterface.GetIID();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>used<sp/>for<sp/>regular<sp/>COM<sp/>interface<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rawTargetInterface,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rawSourceInterface&gt;</highlight></codeline>
<codeline lineno="55" refid="namespace_c_o_m_utility_1ac481efeb7b61576dd6214ff400d5e3e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>rawTargetInterface*<sp/><ref refid="namespace_c_o_m_utility_1ac481efeb7b61576dd6214ff400d5e3e8" kindref="member">interface_cast</ref>(<sp/>rawSourceInterface*<sp/>pSrcInterface)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<sp/>std::bad_cast)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>rawTargetInterface*<sp/>pTargetInterface<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SUCCEEDED(<sp/>pSrcInterface-&gt;QueryInterface(<sp/>__uuidof(<sp/>pTargetInterface),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void**&gt;(&amp;pTargetInterface))))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pTargetInterface;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::bad_cast();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-throwing<sp/>versions<sp/>of<sp/>the<sp/>same<sp/>-<sp/>need<sp/>to<sp/>use<sp/>parameter<sp/>std::nothrow<sp/>on<sp/>function<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rawTargetInterface,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rawSourceInterface&gt;</highlight></codeline>
<codeline lineno="69" refid="namespace_c_o_m_utility_1a4b8a018f249377fc045386b5b484c4f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>rawTargetInterface*<sp/><ref refid="namespace_c_o_m_utility_1ac481efeb7b61576dd6214ff400d5e3e8" kindref="member">interface_cast</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::nothrow_t&amp;,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawSourceInterface*<sp/>pSrcInterface)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>rawTargetInterface*<sp/>pTargetInterface<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>pSrcInterface-&gt;QueryInterface(<sp/>__uuidof(<sp/>pTargetInterface),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void**&gt;(&amp;pTargetInterface));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pTargetInterface;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Is<sp/>probably<sp/>best<sp/>used<sp/>as<sp/>a<sp/>static<sp/>member<sp/>of<sp/>the<sp/>class,<sp/>so<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accessible<sp/>everywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower" kindref="compound">COMExceptionThrower</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85" refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1a15781aa2ccb5b0effeb8d728520df3f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1a15781aa2ccb5b0effeb8d728520df3f2" kindref="member">COMExceptionThrower</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="86" refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1a7695000f4c9e97b95963c44625727a3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1a7695000f4c9e97b95963c44625727a3b" kindref="member">‾COMExceptionThrower</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1ace1dc5293a79f11290e69abfa22af68b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1ace1dc5293a79f11290e69abfa22af68b" kindref="member">COMExceptionThrower</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HRESULT<sp/>errCode)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1aee290fd55abd55544eca860cd9b0ce0b" kindref="member">operator=</ref>(<sp/>errCode);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>regular<sp/>copy<sp/>constructor<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1a15781aa2ccb5b0effeb8d728520df3f2" kindref="member">COMExceptionThrower</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower" kindref="compound">COMExceptionThrower</ref>&amp;);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98" refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1aee290fd55abd55544eca860cd9b0ce0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower" kindref="compound">COMExceptionThrower</ref>&amp;<sp/><ref refid="class_c_o_m_utility_1_1_c_o_m_exception_thrower_1aee290fd55abd55544eca860cd9b0ce0b" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HRESULT<sp/>errCode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<sp/>_com_error)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>FAILED(<sp/>errCode))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_com_raise_error(<sp/>errCode);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>COMUtility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>pop)<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>COMHelper_h</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/DSPlugIn/COMHelper.h"/>
  </compounddef>
</doxygen>
