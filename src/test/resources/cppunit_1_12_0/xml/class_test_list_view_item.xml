<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_test_list_view_item" kind="class" prot="public">
    <compoundname>TestListViewItem</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QListViewItem</basecompoundref>
    <includes refid="_test_list_view_item_8h" local="no">TestListViewItem.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_list_view_item_1a14f553795a1c2caf3afdbccd6307229f" prot="private" static="no" mutable="no">
        <type>::Test *</type>
        <definition>::Test* TestListViewItem::_test</definition>
        <argsstring></argsstring>
        <name>_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_list_view_item_1a96a92a645b940b5061d56bac2ad80903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestListViewItem::TestListViewItem</definition>
        <argsstring>(::Test *test, QListViewItem *parent)</argsstring>
        <name>TestListViewItem</name>
        <param>
          <type>::Test *</type>
          <declname>test</declname>
        </param>
        <param>
          <type>QListViewItem *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_test_list_view_item" kindref="compound">TestListViewItem</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="21" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.cpp" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_test_list_view_item_1a8f95ef536eec0d897966c3b52db12e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TestListViewItem::‾TestListViewItem</definition>
        <argsstring>()</argsstring>
        <name>‾TestListViewItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="26" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_test_list_view_item_1a92cddbc74a355e555cb7916675538672" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Test *</type>
        <definition>Test * TestListViewItem::test</definition>
        <argsstring>() const </argsstring>
        <name>test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="28" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_list_view_item_1a63123dc9285164609de3d0404e694875" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestListViewItem::TestListViewItem</definition>
        <argsstring>(const TestListViewItem &amp;copy)</argsstring>
        <name>TestListViewItem</name>
        <param>
          <type>const <ref refid="class_test_list_view_item" kindref="compound">TestListViewItem</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_test_list_view_item_1a3d7ad7abfc4a37e2ea6931024ee89fa8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestListViewItem::operator=</definition>
        <argsstring>(const TestListViewItem &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_test_list_view_item" kindref="compound">TestListViewItem</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>¥class <ref refid="class_test_list_view_item" kindref="compound">TestListViewItem</ref> ¥brief This class represents an list item pointing to a Test. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="254">
        <label>TestListViewItem</label>
        <link refid="class_test_list_view_item"/>
        <childnode refid="255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="255">
        <label>QListViewItem</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="256">
        <label>TestListViewItem</label>
        <link refid="class_test_list_view_item"/>
        <childnode refid="257" relation="public-inheritance">
        </childnode>
      </node>
      <node id="257">
        <label>QListViewItem</label>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" line="17" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestListViewItem.h" bodystart="16" bodyend="39"/>
    <listofallmembers>
      <member refid="class_test_list_view_item_1a14f553795a1c2caf3afdbccd6307229f" prot="private" virt="non-virtual"><scope>TestListViewItem</scope><name>_test</name></member>
      <member refid="class_test_list_view_item_1a3d7ad7abfc4a37e2ea6931024ee89fa8" prot="private" virt="non-virtual"><scope>TestListViewItem</scope><name>operator=</name></member>
      <member refid="class_test_list_view_item_1a92cddbc74a355e555cb7916675538672" prot="public" virt="non-virtual"><scope>TestListViewItem</scope><name>test</name></member>
      <member refid="class_test_list_view_item_1a96a92a645b940b5061d56bac2ad80903" prot="public" virt="non-virtual"><scope>TestListViewItem</scope><name>TestListViewItem</name></member>
      <member refid="class_test_list_view_item_1a63123dc9285164609de3d0404e694875" prot="private" virt="non-virtual"><scope>TestListViewItem</scope><name>TestListViewItem</name></member>
      <member refid="class_test_list_view_item_1a8f95ef536eec0d897966c3b52db12e82" prot="public" virt="virtual"><scope>TestListViewItem</scope><name>‾TestListViewItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
