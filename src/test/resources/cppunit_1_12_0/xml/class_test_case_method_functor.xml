<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_test_case_method_functor" kind="class" prot="public">
    <compoundname>TestCaseMethodFunctor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Functor</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_test_case_method_functor_1a7e82dac874a97fd3528725706c921d6c" prot="public" static="no">
        <type>void(TestCase::*</type>
        <definition>typedef void(TestCase::* TestCaseMethodFunctor::Method)()</definition>
        <argsstring>)()</argsstring>
        <name>Method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="21" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_case_method_functor_1a86d707540087d99448787fdc05ae618e" prot="private" static="no" mutable="no">
        <type>TestCase *</type>
        <definition>TestCase* TestCaseMethodFunctor::m_target</definition>
        <argsstring></argsstring>
        <name>m_target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_case_method_functor_1abd8757571aa7777dc046c76727967054" prot="private" static="no" mutable="no">
        <type><ref refid="class_test_case_method_functor_1a7e82dac874a97fd3528725706c921d6c" kindref="member">Method</ref></type>
        <definition>Method TestCaseMethodFunctor::m_method</definition>
        <argsstring></argsstring>
        <name>m_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="38" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_case_method_functor_1a854e6f42ff0f83db6fb91944917e51c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TestCaseMethodFunctor::TestCaseMethodFunctor</definition>
        <argsstring>(TestCase *target, Method method)</argsstring>
        <name>TestCaseMethodFunctor</name>
        <param>
          <type>TestCase *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_test_case_method_functor_1a7e82dac874a97fd3528725706c921d6c" kindref="member">Method</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="23" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_test_case_method_functor_1ad5a8eb9890f9f8ab07596abc64a0fffa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestCaseMethodFunctor::operator()</definition>
        <argsstring>() const </argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Â¥brief Functor to call test case method (Implementation).</para><para>Implementation detail. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="241">
        <label>Functor</label>
      </node>
      <node id="240">
        <label>TestCaseMethodFunctor</label>
        <link refid="class_test_case_method_functor"/>
        <childnode refid="241" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="243">
        <label>Functor</label>
      </node>
      <node id="242">
        <label>TestCaseMethodFunctor</label>
        <link refid="class_test_case_method_functor"/>
        <childnode refid="243" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" line="19" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/cppunit/TestCase.cpp" bodystart="18" bodyend="39"/>
    <listofallmembers>
      <member refid="class_test_case_method_functor_1abd8757571aa7777dc046c76727967054" prot="private" virt="non-virtual"><scope>TestCaseMethodFunctor</scope><name>m_method</name></member>
      <member refid="class_test_case_method_functor_1a86d707540087d99448787fdc05ae618e" prot="private" virt="non-virtual"><scope>TestCaseMethodFunctor</scope><name>m_target</name></member>
      <member refid="class_test_case_method_functor_1a7e82dac874a97fd3528725706c921d6c" prot="public" virt="non-virtual"><scope>TestCaseMethodFunctor</scope><name>Method</name></member>
      <member refid="class_test_case_method_functor_1ad5a8eb9890f9f8ab07596abc64a0fffa" prot="public" virt="non-virtual"><scope>TestCaseMethodFunctor</scope><name>operator()</name></member>
      <member refid="class_test_case_method_functor_1a854e6f42ff0f83db6fb91944917e51c2" prot="public" virt="non-virtual"><scope>TestCaseMethodFunctor</scope><name>TestCaseMethodFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
