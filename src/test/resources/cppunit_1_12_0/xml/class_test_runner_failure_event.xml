<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_test_runner_failure_event" kind="class" prot="public">
    <compoundname>TestRunnerFailureEvent</compoundname>
    <basecompoundref refid="class_test_runner_thread_event" prot="public" virt="non-virtual">TestRunnerThreadEvent</basecompoundref>
    <includes refid="_test_runner_failure_event_8h" local="no">TestRunnerFailureEvent.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_runner_failure_event_1a4348d8d987bb4556e615e36e48dfa31f" prot="private" static="no" mutable="no">
        <type><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref> *</type>
        <definition>TestFailureInfo* TestRunnerFailureEvent::_failure</definition>
        <argsstring></argsstring>
        <name>_failure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_runner_failure_event_1ae66f6f9afe914c1c18e0fff7258d751f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TestRunnerFailureEvent::_numberOfFailure</definition>
        <argsstring></argsstring>
        <name>_numberOfFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_runner_failure_event_1ad29b12258aec9d7575368b533a74b3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestRunnerFailureEvent::TestRunnerFailureEvent</definition>
        <argsstring>(TestFailureInfo *failure, int numberOfFailure)</argsstring>
        <name>TestRunnerFailureEvent</name>
        <param>
          <type><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref> *</type>
          <declname>failure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfFailure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="21" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_failure_event_1abbb31936e30dc5debecfffd57d35bbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TestRunnerFailureEvent::‾TestRunnerFailureEvent</definition>
        <argsstring>()</argsstring>
        <name>‾TestRunnerFailureEvent</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="25" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_runner_failure_event_1aff2bd1175e8e8aaf7c9e2678bfdc6f90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestRunnerFailureEvent::TestRunnerFailureEvent</definition>
        <argsstring>(const TestRunnerFailureEvent &amp;copy)</argsstring>
        <name>TestRunnerFailureEvent</name>
        <param>
          <type>const <ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_failure_event_1ab1d0ec6e1722aecf8b73a47eb0a98142" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestRunnerFailureEvent::operator=</definition>
        <argsstring>(const TestRunnerFailureEvent &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_failure_event_1a68ac7fd4f2211bb40e2fed17c1c75399" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TestRunnerFailureEvent::process</definition>
        <argsstring>(TestRunnerModelThreadInterface *target)</argsstring>
        <name>process</name>
        <reimplements refid="class_test_runner_thread_event_1a07a00f7da095922d7a629ab53f27c72b">process</reimplements>
        <param>
          <type><ref refid="class_test_runner_model_thread_interface" kindref="compound">TestRunnerModelThreadInterface</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="34" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>¥class <ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref> ¥brief This class represents a new TestCase failure event. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="333">
        <label>TestRunnerThreadEvent</label>
        <link refid="class_test_runner_thread_event"/>
        <childnode refid="334" relation="public-inheritance">
        </childnode>
      </node>
      <node id="332">
        <label>TestRunnerFailureEvent</label>
        <link refid="class_test_runner_failure_event"/>
        <childnode refid="333" relation="public-inheritance">
        </childnode>
      </node>
      <node id="334">
        <label>QCustomEvent</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="336">
        <label>TestRunnerThreadEvent</label>
        <link refid="class_test_runner_thread_event"/>
        <childnode refid="337" relation="public-inheritance">
        </childnode>
      </node>
      <node id="335">
        <label>TestRunnerFailureEvent</label>
        <link refid="class_test_runner_failure_event"/>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
      </node>
      <node id="337">
        <label>QCustomEvent</label>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" line="17" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h" bodystart="16" bodyend="39"/>
    <listofallmembers>
      <member refid="class_test_runner_failure_event_1a4348d8d987bb4556e615e36e48dfa31f" prot="private" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>_failure</name></member>
      <member refid="class_test_runner_failure_event_1ae66f6f9afe914c1c18e0fff7258d751f" prot="private" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>_numberOfFailure</name></member>
      <member refid="class_test_runner_failure_event_1ab1d0ec6e1722aecf8b73a47eb0a98142" prot="private" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>operator=</name></member>
      <member refid="class_test_runner_failure_event_1a68ac7fd4f2211bb40e2fed17c1c75399" prot="private" virt="virtual"><scope>TestRunnerFailureEvent</scope><name>process</name></member>
      <member refid="class_test_runner_failure_event_1ad29b12258aec9d7575368b533a74b3c2" prot="public" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>TestRunnerFailureEvent</name></member>
      <member refid="class_test_runner_failure_event_1aff2bd1175e8e8aaf7c9e2678bfdc6f90" prot="private" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>TestRunnerFailureEvent</name></member>
      <member refid="class_test_runner_thread_event_1a57590c2202fbc440d75148939bdde3eb" prot="public" virt="non-virtual"><scope>TestRunnerFailureEvent</scope><name>TestRunnerThreadEvent</name></member>
      <member refid="class_test_runner_failure_event_1abbb31936e30dc5debecfffd57d35bbf9" prot="public" virt="virtual"><scope>TestRunnerFailureEvent</scope><name>‾TestRunnerFailureEvent</name></member>
      <member refid="class_test_runner_thread_event_1a4a43cc0b2d4777e9d079d96af81879f2" prot="public" virt="virtual"><scope>TestRunnerFailureEvent</scope><name>‾TestRunnerThreadEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
