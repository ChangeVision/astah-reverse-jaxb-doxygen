<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_test_runner_thread_event" kind="class" prot="public" abstract="yes">
    <compoundname>TestRunnerThreadEvent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QCustomEvent</basecompoundref>
    <derivedcompoundref refid="class_test_runner_failure_event" prot="public" virt="non-virtual">TestRunnerFailureEvent</derivedcompoundref>
    <derivedcompoundref refid="class_test_runner_test_case_run_event" prot="public" virt="non-virtual">TestRunnerTestCaseRunEvent</derivedcompoundref>
    <derivedcompoundref refid="class_test_runner_thread_finished_event" prot="public" virt="non-virtual">TestRunnerThreadFinishedEvent</derivedcompoundref>
    <includes refid="_test_runner_thread_event_8h" local="no">TestRunnerThreadEvent.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_runner_thread_event_1a57590c2202fbc440d75148939bdde3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestRunnerThreadEvent::TestRunnerThreadEvent</definition>
        <argsstring>()</argsstring>
        <name>TestRunnerThreadEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="class_test_runner_thread_event" kindref="compound">TestRunnerThreadEvent</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="20" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_thread_event_1a4a43cc0b2d4777e9d079d96af81879f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TestRunnerThreadEvent::‾TestRunnerThreadEvent</definition>
        <argsstring>()</argsstring>
        <name>‾TestRunnerThreadEvent</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="23" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_thread_event_1a07a00f7da095922d7a629ab53f27c72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TestRunnerThreadEvent::process</definition>
        <argsstring>(TestRunnerModelThreadInterface *target)=0</argsstring>
        <name>process</name>
        <reimplementedby refid="class_test_runner_thread_finished_event_1a93fa96a25048d6a57a65d4bddf98232f">process</reimplementedby>
        <reimplementedby refid="class_test_runner_test_case_run_event_1aebae867a3d2354c72d3c9dabf994b7d1">process</reimplementedby>
        <reimplementedby refid="class_test_runner_failure_event_1a68ac7fd4f2211bb40e2fed17c1c75399">process</reimplementedby>
        <param>
          <type><ref refid="class_test_runner_model_thread_interface" kindref="compound">TestRunnerModelThreadInterface</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="25" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_test_runner_thread_event_1aea7ba29b77d52f0c62daa4588ab2700f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestRunnerThreadEvent::TestRunnerThreadEvent</definition>
        <argsstring>(const TestRunnerThreadEvent &amp;copy)</argsstring>
        <name>TestRunnerThreadEvent</name>
        <param>
          <type>const <ref refid="class_test_runner_thread_event" kindref="compound">TestRunnerThreadEvent</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_test_runner_thread_event_1aca4017597027da157c66ffb73590762d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestRunnerThreadEvent::operator=</definition>
        <argsstring>(const TestRunnerThreadEvent &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_test_runner_thread_event" kindref="compound">TestRunnerThreadEvent</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Prevents the use of the copy operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="32" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>¥class <ref refid="class_test_runner_thread_event" kindref="compound">TestRunnerThreadEvent</ref> ¥brief This class represents an event send by the test runner thread. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="361">
        <label>TestRunnerThreadEvent</label>
        <link refid="class_test_runner_thread_event"/>
        <childnode refid="362" relation="public-inheritance">
        </childnode>
      </node>
      <node id="364">
        <label>TestRunnerTestCaseRunEvent</label>
        <link refid="class_test_runner_test_case_run_event"/>
        <childnode refid="361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="363">
        <label>TestRunnerFailureEvent</label>
        <link refid="class_test_runner_failure_event"/>
        <childnode refid="361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="365">
        <label>TestRunnerThreadFinishedEvent</label>
        <link refid="class_test_runner_thread_finished_event"/>
        <childnode refid="361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="362">
        <label>QCustomEvent</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="366">
        <label>TestRunnerThreadEvent</label>
        <link refid="class_test_runner_thread_event"/>
        <childnode refid="367" relation="public-inheritance">
        </childnode>
      </node>
      <node id="367">
        <label>QCustomEvent</label>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" line="16" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThreadEvent.h" bodystart="15" bodyend="33"/>
    <listofallmembers>
      <member refid="class_test_runner_thread_event_1aca4017597027da157c66ffb73590762d" prot="private" virt="non-virtual"><scope>TestRunnerThreadEvent</scope><name>operator=</name></member>
      <member refid="class_test_runner_thread_event_1a07a00f7da095922d7a629ab53f27c72b" prot="public" virt="pure-virtual"><scope>TestRunnerThreadEvent</scope><name>process</name></member>
      <member refid="class_test_runner_thread_event_1a57590c2202fbc440d75148939bdde3eb" prot="public" virt="non-virtual"><scope>TestRunnerThreadEvent</scope><name>TestRunnerThreadEvent</name></member>
      <member refid="class_test_runner_thread_event_1aea7ba29b77d52f0c62daa4588ab2700f" prot="private" virt="non-virtual"><scope>TestRunnerThreadEvent</scope><name>TestRunnerThreadEvent</name></member>
      <member refid="class_test_runner_thread_event_1a4a43cc0b2d4777e9d079d96af81879f2" prot="public" virt="virtual"><scope>TestRunnerThreadEvent</scope><name>‾TestRunnerThreadEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
