<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="cdx_c_dynamic_controls_manager_8cpp" kind="file">
    <compoundname>cdxCDynamicControlsManager.cpp</compoundname>
    <includes local="yes">stdafx.h</includes>
    <includes refid="cdx_c_dynamic_controls_manager_8h" local="yes">cdxCDynamicControlsManager.h</includes>
    <includes local="no">winuser.h</includes>
    <includes local="no">afxmt.h</includes>
    <incdepgraph>
      <node id="778">
        <label>stdafx.h</label>
      </node>
      <node id="783">
        <label>afxmt.h</label>
      </node>
      <node id="781">
        <label>afxpriv.h</label>
      </node>
      <node id="780">
        <label>cdxCSizeIconCtrl.h</label>
        <link refid="cdx_c_size_icon_ctrl_8h"/>
      </node>
      <node id="779">
        <label>cdxCDynamicControlsManager.h</label>
        <link refid="cdx_c_dynamic_controls_manager_8h"/>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="777">
        <label>src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp</label>
        <link refid="cdxCDynamicControlsManager.cpp"/>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
      </node>
      <node id="782">
        <label>winuser.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1aab361a45c357d7555d2b9fa29e08c937" prot="public" static="no">
        <name>OBM_SIZE</name>
        <initializer>32766</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="17" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a20adb7acb665efc8ad213383d5aab12a" prot="public" static="no">
        <name>REGVAL_NOSTATE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="33" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a3901b35142c12986bdc8f9fce456629d" prot="public" static="no">
        <name>REGVAL_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="34" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a61dc71cabfd97d88307276e8ad9bde40" prot="public" static="no">
        <name>REGVAL_HIDDEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="35" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" prot="public" static="no">
        <name>REGVAL_MAXIMIZED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="36" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" prot="public" static="no">
        <name>REGVAL_ICONIC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="37" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" prot="public" static="no">
        <name>REGVAL_INVALID</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="38" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_controls_manager_8cpp_1a519de1df4ec14efe8f28995e65256964" prot="public" static="no">
        <name>REGVAL_VALID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="39" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1a8b82c5ad8abde6cea5b6429580dfafe9" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Left</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Left</name>
        <initializer>=	_T(&quot;Left&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1ace1d3d45698b651085d158aa51daaed0" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Right</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Right</name>
        <initializer>=	_T(&quot;Right&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1a09497cd027e84d63fba8a9c3f89053fd" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Top</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Top</name>
        <initializer>=	_T(&quot;Top&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1ae0bdb6a1ac813fd29d76b412e42a46da" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Bottom</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Bottom</name>
        <initializer>=	_T(&quot;Bottom&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1a7e250b3fcb094c6e2396f25cd2c440b6" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Visible</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Visible</name>
        <initializer>=	_T(&quot;Visibility&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1af256eea0cbf34f941db94bdb025aa1fa" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_State</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_State</name>
        <initializer>=	_T(&quot;State&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_controls_manager_8cpp_1a6d55e13422b294e55e44478341cf264d" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Valid</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Valid</name>
        <initializer>=	_T(&quot;(valid)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>cdxCDynamicControlsManager.cpp:<sp/>implementation<sp/>of<sp/>the<sp/>cdxCDynamicControlsManager<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>should<sp/>define<sp/>OEMRESOURCE</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>in<sp/>your<sp/>project<sp/>settings<sp/>(C/C++,<sp/>General)<sp/>!</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdafx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cdx_c_dynamic_controls_manager_8h" kindref="compound">cdxCDynamicControlsManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;winuser.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;afxmt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OBM_SIZE</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OBM_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32766</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>message(&quot;***<sp/>NOTE:<sp/>cdxCDynamicControlsManager.cpp:<sp/>Please<sp/>define<sp/>OEMRESOURCE<sp/>in<sp/>your<sp/>project<sp/>settings<sp/>!&quot;)</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>taken<sp/>from<sp/>WinresRc.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>used<sp/>for<sp/>any<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]<sp/>=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>Some<sp/>static<sp/>variables</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_NOSTATE<sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_HIDDEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_MAXIMIZED<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_ICONIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_INVALID<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>registry<sp/>value<sp/>names</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>(for<sp/>StoreWindowPosition()/RestoreWindowPosition())</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LPCTSTR<sp/><sp/>lpszRegVal_Left<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Right<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Bottom<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Bottom&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Visible<sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Visibility&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_State<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;State&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Valid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;(valid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">//<sp/>cdxCDynamicControlsManager::ControlData::ControlEntry</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">//<sp/>construction/destruction</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">cdxCDynamicControlsManager::ControlData::ControlEntry::ControlEntry(CWnd<sp/>&amp;<sp/>ctrl,<sp/>ControlData<sp/>&amp;<sp/>rMaster)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">:<sp/><sp/><sp/>m_rMaster(rMaster),<sp/>m_rCtrl(ctrl)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pNext<sp/>=<sp/>rMaster.m_pCtrl)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>rMaster.m_pCtrl<sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pPrev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raise<sp/>total<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>++rMaster.m_rMaster.m_iTotalCnt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">cdxCDynamicControlsManager::ControlData::ControlEntry::‾ControlEntry()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pPrev)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pPrev-&gt;m_pNext<sp/>=<sp/>m_pNext)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_pPrev;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(<sp/>m_rMaster.m_pCtrl<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_rMaster.m_pCtrl<sp/>=<sp/>m_pNext)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>NULL;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<sp/>m_rMaster.m_rMaster.m_iTotalCnt<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_rMaster.m_rMaster.m_iTotalCnt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">//<sp/>cdxCDynamicControlsManager::ControlData</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">//<sp/>construction/destruction</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>constructor</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>copies<sp/>all<sp/>paramaters<sp/>and<sp/>gets<sp/>the<sp/>controls<sp/>initial<sp/>position<sp/>using</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>GetWindowPos().</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>NOTE<sp/>that<sp/>the<sp/>constructor<sp/>need<sp/>ctrl.m_hWnd<sp/>to<sp/>exist<sp/>(in<sp/>contrast<sp/>to</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>Add()</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">cdxCDynamicControlsManager::ControlData::ControlData(<ref refid="classcdx_c_dynamic_controls_manager" kindref="compound">cdxCDynamicControlsManager</ref><sp/>&amp;<sp/>rMaster,<sp/>CWnd<sp/>&amp;<sp/>ctrl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PositionSetup<sp/>&amp;<sp/>rPosSetup)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">:<sp/><sp/><sp/>m_rMaster(rMaster),<sp/>m_pCtrl(NULL),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pNext(NULL),<sp/>m_pPrev(NULL),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_posSetup(rPosSetup)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(ctrl.m_hWnd));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>control<sp/>must<sp/>have<sp/>already<sp/>been<sp/>created<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(rPosSetup.IsValid());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>initial<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>ctrl.GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rectOriginal<sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ControlEntry(ctrl,*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(m_pCtrl<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>us<sp/>to<sp/>the<sp/>cdxCDynamicControlsManager&apos;s<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pNext<sp/>=<sp/>m_rMaster.m_pFirst)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pPrev<sp/>=<sp/><sp/><sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rMaster.m_pFirst<sp/><sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>detach<sp/>from<sp/>list</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>The<sp/>m_Ctrl<sp/>deletes<sp/>all<sp/>children<sp/>by<sp/>itself</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">cdxCDynamicControlsManager::ControlData::‾ControlData()</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>all<sp/>control<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(m_pCtrl)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pCtrl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unlink<sp/>from<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pPrev)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pPrev-&gt;m_pNext<sp/>=<sp/>m_pNext)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_pPrev;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(m_rMaster.m_pFirst<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_rMaster.m_pFirst<sp/>=<sp/>m_pNext)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pNext-&gt;m_pPrev<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">//<sp/>cdxCDynamicControlsManager::ControlData<sp/>virtuals</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>checks<sp/>whether<sp/>the<sp/>CWnd<sp/>is<sp/>part<sp/>of<sp/>this<sp/>control<sp/>data</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cdxCDynamicControlsManager::ControlData::IsMember(CWnd<sp/>&amp;<sp/>ctrl)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlEntry<sp/>*pEntry<sp/>=<sp/>m_pCtrl;<sp/>pEntry;<sp/>pEntry<sp/>=<sp/>pEntry-&gt;GetNext())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*pEntry<sp/>==<sp/>ctrl)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>removes<sp/>a<sp/>CWnd<sp/>from<sp/>this<sp/>chain</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cdxCDynamicControlsManager::ControlData::Rem(CWnd<sp/>&amp;<sp/>ctrl)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ControlEntry<sp/>*pEntry<sp/>=<sp/>m_pCtrl;<sp/>pEntry;<sp/>pEntry<sp/>=<sp/>pEntry-&gt;GetNext())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*pEntry<sp/>==<sp/>ctrl)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pEntry;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>Get<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">CRect<sp/>cdxCDynamicControlsManager::ControlData::GetCurrentPosition()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsUsed())</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>sub-controls<sp/>have<sp/>been<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CRect(0,0,0,0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>m_pCtrl-&gt;GetCWnd().GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CRect(wpl.rcNormalPosition);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>modify<sp/>initial<sp/>setup</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>function<sp/>does<sp/>not<sp/>move<sp/>the<sp/>controls.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>You<sp/>habe<sp/>to<sp/>call<sp/>cdxCDynamicControlsManager::ReorganizeControls<sp/>past</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>using<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cdxCDynamicControlsManager::ControlData::Modify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CRect<sp/>&amp;<sp/>rectOriginal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PositionSetup<sp/>&amp;<sp/>rSetup)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((rectOriginal.left<sp/>&gt;<sp/>rectOriginal.right)<sp/>||</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rectOriginal.top<sp/>&gt;<sp/>rectOriginal.bottom)<sp/>||</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!rSetup.IsValid())</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>function<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rectOriginal<sp/><sp/>=<sp/><sp/><sp/>rectOriginal;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>m_posSetup<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>rSetup;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="comment">//<sp/>cdxCDynamicControlsManager</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment">//<sp/>handling<sp/>events<sp/>from<sp/>CWnd</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>this<sp/>function<sp/>initializes<sp/>the<sp/>following<sp/>members:</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>m_pWnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>window<sp/>handle</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>m_szCurrent<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>current<sp/>window&apos;s<sp/>size</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>m_szMin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>minimum<sp/>window&apos;s<sp/>size<sp/>(taken<sp/>from<sp/>current<sp/>size)</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>m_szMax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>maximum<sp/>window&apos;s<sp/>size<sp/>(set<sp/>to<sp/>(0,0)<sp/>&lt;=&gt;<sp/>don&apos;t<sp/>change<sp/>maximum)</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>m_wndSizeIcon<sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>icon<sp/>(if<sp/>wanted)</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>parameters:</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>rWnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>the<sp/>window<sp/>to<sp/>supervise</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>fd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>in<sp/>which<sp/>directions<sp/>can<sp/>we<sp/>size<sp/>the<sp/>window<sp/>(does<sp/>only<sp/>apply<sp/>to<sp/>user-sizing)</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>bSizeIcon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>do<sp/>you<sp/>want<sp/>a<sp/>sizable<sp/>icon<sp/>?</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>pBaseClientSize-<sp/>if<sp/>non-zero,<sp/>this<sp/>defines<sp/>the<sp/>real<sp/>(normal)<sp/>size<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>relative<sp/>to<sp/>all<sp/>furher<sp/>calculations<sp/>will<sp/>be<sp/>made.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>zero,<sp/>the<sp/>current<sp/>window&apos;s<sp/>size<sp/>will<sp/>be<sp/>taken.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a707306d81d8068425a32f74fd1c6271d" kindref="member">cdxCDynamicControlsManager::DoInitWindow</ref>(CWnd<sp/>&amp;<sp/>rWnd,<sp/>Freedom<sp/>fd,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSizeIcon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CSize<sp/>*<sp/>pBaseClientSize)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(m_pWnd<sp/>==<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>MUST<sp/>NOT<sp/>call<sp/>this<sp/>function<sp/>twice<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rWnd<sp/>MUST<sp/>already<sp/>exist<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pWnd<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>&amp;rWnd;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Freedom<sp/><sp/><sp/>=<sp/><sp/><sp/>fd;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>current&apos;s<sp/>window<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pWnd-&gt;GetWindowRect(&amp;rect);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectClient;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pWnd-&gt;GetClientRect(&amp;rectClient);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pBaseClientSize)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szClientRelative.cx<sp/><sp/><sp/>=<sp/><sp/><sp/>rectClient.Width();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szClientRelative.cy<sp/><sp/><sp/>=<sp/><sp/><sp/>rectClient.Height();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szMin.cx<sp/><sp/>=<sp/><sp/><sp/>rect.Width();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szMin.cy<sp/><sp/>=<sp/><sp/><sp/>rect.Height();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT((pBaseClientSize-&gt;cx<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(pBaseClientSize-&gt;cy<sp/>&gt;<sp/>0));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szClientRelative<sp/><sp/>=<sp/><sp/><sp/>*pBaseClientSize;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szMin.cx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_szClientRelative.cx<sp/>+<sp/>(rect.Width()<sp/>-<sp/>rectClient.Width());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_szMin.cy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_szClientRelative.cy<sp/>+<sp/>(rect.Height()<sp/>-<sp/>rectClient.Height());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>m_szMax.cx<sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>m_szMax.cy<sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>icon<sp/>if<sp/>wanted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSizeIcon)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERIFY(<sp/>m_pWndSizeIcon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_size_icon_ctrl" kindref="compound">cdxCSizeIconCtrl</ref><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERIFY(<sp/>m_pWndSizeIcon-&gt;<ref refid="classcdx_c_size_icon_ctrl_1a19556fbe139226e2f08a0c09965029c9" kindref="member">Create</ref>(m_pWnd,<ref refid="classcdx_c_dynamic_controls_manager_1ada4797f44668c8eb61541f45f5ba7a28" kindref="member">m_idSizeIcon</ref>)<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>creates<sp/>my<sp/>control;<sp/>id<sp/>is<sp/>SIZE_CONTROL_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a3adc4ee96000ae96357898a9aef633d3" kindref="member">AddSzControl</ref>(*m_pWndSizeIcon,<ref refid="classcdx_c_dynamic_controls_manager_1aa6bc5b117f02223f25d9bffdded3464daed3d7412dc18c3a1cc6988a655468f41" kindref="member">mdRepos</ref>,<ref refid="classcdx_c_dynamic_controls_manager_1aa6bc5b117f02223f25d9bffdded3464daed3d7412dc18c3a1cc6988a655468f41" kindref="member">mdRepos</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWndSizeIcon-&gt;ShowWindow(SW_SHOW);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>-<sp/>show<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>fill<sp/>in<sp/>MINMAXINFO<sp/>as<sp/>requested</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>Call<sp/>your<sp/>CWnd&apos;s<sp/>OnGetMinMaxInfo<sp/>first<sp/>!</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>changed<sp/>due<sp/>to<sp/>a<sp/>but<sp/>report<sp/>by<sp/>Michel<sp/>Wassink<sp/>&lt;mww@mitutoyo.nl&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ac0208a921b3dd73d083ca583f371a2d4" kindref="member">cdxCDynamicControlsManager::DoOnGetMinMaxInfo</ref>(MINMAXINFO<sp/>FAR*<sp/>lpMMI)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classcdx_c_dynamic_controls_manager_1a7fcd305637c51e7a3a16e7334382cb72" kindref="member">IsReady</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="classcdx_c_dynamic_controls_manager_1a92e0f5dfb11ab5268aa65969d158848c" kindref="member">IsDisabled</ref>())</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMinTrackSize.x<sp/>=<sp/><sp/><sp/>m_szMin.cx;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMinTrackSize.y<sp/>=<sp/><sp/><sp/>m_szMin.cy;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Freedom<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_controls_manager_1a40fd71de72c1a4fe58f4cbe18f2127d5a7aadba7d40c5567884a45235bbadc0d1" kindref="member">fdHoriz</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_szMax.cx)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMaxTrackSize.x<sp/>=<sp/><sp/><sp/>m_szMax.cx;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMaxTrackSize.x<sp/>=<sp/><sp/><sp/>m_szMin.cx;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Freedom<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_controls_manager_1a40fd71de72c1a4fe58f4cbe18f2127d5a97cab45f4d94f14b60ec88feaccd1910" kindref="member">fdVert</ref>)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_szMax.cy)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMaxTrackSize.y<sp/>=<sp/><sp/><sp/>m_szMax.cy;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpMMI-&gt;ptMaxTrackSize.y<sp/>=<sp/><sp/><sp/>m_szMin.cy;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>handle<sp/>OnSize<sp/>-<sp/>we<sp/>can&apos;t<sp/>rely<sp/>on<sp/>cx,cy<sp/>being<sp/>client<sp/>dimensions</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>as<sp/>stated<sp/>in<sp/>the<sp/>documentation<sp/>...</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a37bf8e0a332be0a68a0db925752824d1" kindref="member">cdxCDynamicControlsManager::DoOnSize</ref>(UINT<sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classcdx_c_dynamic_controls_manager_1a7fcd305637c51e7a3a16e7334382cb72" kindref="member">IsReady</ref>()<sp/>&amp;&amp;<sp/>(nType<sp/>!=<sp/>SIZE_MINIMIZED)<sp/>&amp;&amp;<sp/>!<ref refid="classcdx_c_dynamic_controls_manager_1a92e0f5dfb11ab5268aa65969d158848c" kindref="member">IsDisabled</ref>())</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1aa1d93836dcc0f420eb3d78aa07301f71" kindref="member">ReorganizeControls</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>free<sp/>all<sp/>memory</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>after<sp/>having<sp/>called<sp/>this<sp/>function,<sp/>you<sp/>can<sp/>reuse<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>although<sp/>I<sp/>wouldn&apos;t<sp/>recommend<sp/>to<sp/>do<sp/>so<sp/>:)</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ae8a73ff07394f5a8c6a846ed85b84abc" kindref="member">cdxCDynamicControlsManager::DoDestroyWindow</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(m_pFirst)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1abe66bb1bcce44f88944d57892eac0147" kindref="member">OnDeleteControlPosition</ref>(*m_pFirst);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pFirst;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pWndSizeIcon)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(::IsWindow(m_pWndSizeIcon-&gt;m_hWnd))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWndSizeIcon-&gt;DestroyWindow();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_pWndSizeIcon;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWndSizeIcon<sp/><sp/>=<sp/><sp/><sp/>NULL;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pWnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">//<sp/>control<sp/>positioning</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>Reposition<sp/>(without<sp/>current<sp/>rectangle<sp/>size)</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>rectWin<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>window<sp/>rectangle<sp/>(including<sp/>border)</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>rectClient<sp/><sp/><sp/>-<sp/><sp/><sp/>window<sp/>rectangle<sp/>(client<sp/>area)</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>since<sp/>release<sp/>6,<sp/>rectClient.left<sp/>and<sp/>.top<sp/>might<sp/>be<sp/>&gt;<sp/>zero</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(for<sp/>scrolling)</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>bRedraw<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>invalidate<sp/>&amp;<sp/>update<sp/>window</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a70ab8582352e28607eec70a51deb961d" kindref="member">cdxCDynamicControlsManager::ReorganizeControlsAdvanced</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CRect<sp/>&amp;<sp/>rectWin,<sp/>CRect<sp/>rectClient,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRedraw)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="classcdx_c_dynamic_controls_manager_1a7fcd305637c51e7a3a16e7334382cb72" kindref="member">IsReady</ref>());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_controls_manager_1a8125e887d1b70b3e05e7bc6e5310a4c4" kindref="member">GetTotalChildCnt</ref>())</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>won&apos;t<sp/>go<sp/>smaller<sp/>with<sp/>the<sp/>whole<sp/>window<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_szMin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rectWin.Width()<sp/>&lt;<sp/>m_szMin.cx)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectClient.right<sp/><sp/><sp/><sp/>+=<sp/><sp/>(m_szMin.cx<sp/>-<sp/>rectWin.Width());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rectWin.Height()<sp/>&lt;<sp/>m_szMin.cy)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectClient.bottom<sp/><sp/><sp/>+=<sp/><sp/>(m_szMin.cy<sp/>-<sp/>rectWin.Height());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>new<sp/>replace<sp/>all<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>CSize<sp/><sp/><sp/>szDelta;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/>=<sp/><sp/><sp/>rectClient.Width()<sp/>-<sp/>m_szClientRelative.cx;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/>=<sp/><sp/><sp/>rectClient.Height()<sp/>-<sp/>m_szClientRelative.cy;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>CPoint<sp/><sp/>pntOffset<sp/><sp/><sp/>=<sp/><sp/><sp/>rectClient.TopLeft();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>newly<sp/>added<sp/>code<sp/>by<sp/>Rodger<sp/>Bernstein</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>AFX_SIZEPARENTPARAMS<sp/>layout;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a6a209795cf7e600943b3ec64f2f6c279" kindref="member">ControlData</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sz;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bManual<sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(<sp/>layout.hDWP<sp/>=<sp/>::BeginDeferWindowPos(<ref refid="classcdx_c_dynamic_controls_manager_1a8125e887d1b70b3e05e7bc6e5310a4c4" kindref="member">GetTotalChildCnt</ref>())<sp/>))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE(_T(</highlight><highlight class="stringliteral">&quot;***<sp/>ERROR[cdxCDynamicControlsManager::ReorganizeControlsAdvanced()]:<sp/>BeginDeferWindowPos()<sp/>failed.¥n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(sz<sp/>=<sp/>m_pFirst;<sp/>sz;<sp/>sz<sp/>=<sp/>sz-&gt;GetNext())</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz-&gt;OnSize(szDelta,<sp/>&amp;layout,<sp/>&amp;pntOffset);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!::EndDeferWindowPos(layout.hDWP))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE(_T(</highlight><highlight class="stringliteral">&quot;***<sp/>ERROR[cdxCDynamicControlsManager::ReorganizeControlsAdvanced()]:<sp/>EndDeferWindowPos()<sp/>failed.¥n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bManual<sp/>=<sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bManual)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(sz<sp/>=<sp/>m_pFirst;<sp/>sz;<sp/>sz<sp/>=<sp/>sz-&gt;GetNext())</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz-&gt;OnSize(szDelta,<sp/>NULL);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRedraw<sp/>&amp;&amp;<sp/>m_pWnd-&gt;IsWindowVisible())</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWnd-&gt;RedrawWindow(NULL,<sp/>NULL,<sp/>RDW_UPDATENOW<sp/>|<sp/>RDW_NOERASE);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="comment">//<sp/>misc</highlight></codeline>
<codeline lineno="470"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>change<sp/>minimum<sp/>and<sp/>maximum<sp/>height<sp/>of<sp/>window.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>szMin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>new<sp/>minimum<sp/>size<sp/>(use<sp/>GetMinSize()<sp/>to<sp/>leave<sp/>it<sp/>as<sp/>being<sp/>before)</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>szMax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>new<sp/>maximum<sp/>size<sp/>(<sp/>&quot;<sp/><sp/>GetMaxSize()<sp/>&quot;)</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>to<sp/>CSize(0,0)<sp/>if<sp/>you<sp/>don&apos;t<sp/>want<sp/>a<sp/>maximum<sp/>size.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>bResizeIfNecessary<sp/><sp/><sp/>-<sp/><sp/><sp/>call<sp/>FixWindowSize()<sp/>past<sp/>calculating<sp/>new<sp/>sizes.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>returns<sp/>false<sp/>if<sp/>szMin<sp/>and<sp/>szMax<sp/>are<sp/>illegal<sp/>(e.g.<sp/>szMin<sp/>&gt;<sp/>szMax)</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a98be881c887866d3f34c570a311cd938" kindref="member">cdxCDynamicControlsManager::SetMinMaxSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CSize<sp/>&amp;<sp/>szMin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CSize<sp/>&amp;<sp/>szMax,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResizeIfNecessary)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="classcdx_c_dynamic_controls_manager_1a7fcd305637c51e7a3a16e7334382cb72" kindref="member">IsReady</ref>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DoInitWindow()<sp/>not<sp/>called<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((szMax.cx<sp/>&amp;&amp;<sp/>(szMin.cx<sp/>&gt;<sp/>szMax.cx))<sp/>||</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(szMax.cy<sp/>&amp;&amp;<sp/>(szMin.cy<sp/>&gt;<sp/>szMax.cy)))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>m_szMin<sp/>=<sp/><sp/><sp/>szMin;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>m_szMax<sp/>=<sp/><sp/><sp/>szMax;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bResizeIfNecessary)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a24db7d0e92f0a2e480b872af87b2e251" kindref="member">FixWindowSize</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>this<sp/>function<sp/>ensure<sp/>that<sp/>the<sp/>window&apos;s<sp/>size<sp/>is<sp/>between<sp/>m_szMin<sp/>and<sp/>m_szMax.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>returns<sp/>true<sp/>if<sp/>window<sp/>size<sp/>has<sp/>been<sp/>changed</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a24db7d0e92f0a2e480b872af87b2e251" kindref="member">cdxCDynamicControlsManager::FixWindowSize</ref>()</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="classcdx_c_dynamic_controls_manager_1a7fcd305637c51e7a3a16e7334382cb72" kindref="member">IsReady</ref>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>DoInitWindow()<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>CSize<sp/><sp/><sp/>szCurrent<sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ad245afc966a8cf31cbf2ff1a410f1c00" kindref="member">GetWindowSize</ref>(*m_pWnd),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_szMax.cx<sp/>&amp;&amp;<sp/>(szCurrent.cx<sp/>&gt;<sp/>m_szMax.cx))</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_szMax.cx<sp/>-<sp/>szCurrent.cx;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(szCurrent.cx<sp/>&lt;<sp/>m_szMin.cx)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/>=<sp/><sp/><sp/>m_szMin.cx<sp/>-<sp/>szCurrent.cx;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_szMax.cy<sp/>&amp;&amp;<sp/>(szCurrent.cy<sp/>&gt;<sp/>m_szMax.cy))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>m_szMax.cy<sp/>-<sp/>szCurrent.cy;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(szCurrent.cy<sp/>&lt;<sp/>m_szMin.cy)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/>=<sp/><sp/><sp/>m_szMin.cy<sp/>-<sp/>szCurrent.cy;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!szDelta.cx<sp/>&amp;&amp;<sp/>!szDelta.cy)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1aaafd537e47032ec11095cfcb5d212d68" kindref="member">StretchWindow</ref>(*m_pWnd,szDelta);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>hide<sp/>and<sp/>show<sp/>icon</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1a3a72a7d08e56838f69bf486ee55b8311" kindref="member">cdxCDynamicControlsManager::HideSizeIcon</ref>()</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pWndSizeIcon<sp/>&amp;&amp;<sp/>::IsWindow(m_pWndSizeIcon-&gt;m_hWnd))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWndSizeIcon-&gt;ShowWindow(SW_HIDE);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ac0649d70eb4799c82db83db9b9c67e34" kindref="member">cdxCDynamicControlsManager::ShowSizeIcon</ref>()</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pWndSizeIcon<sp/>&amp;&amp;<sp/>::IsWindow(m_pWndSizeIcon-&gt;m_hWnd))</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pWndSizeIcon-&gt;ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="comment">//<sp/>static<sp/>functions:<sp/>window<sp/>sizing</highlight></codeline>
<codeline lineno="557"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>stretches<sp/>the<sp/>window<sp/>by<sp/>szDelta<sp/>(i.e.<sp/>if<sp/>szDelta<sp/>is<sp/>100,<sp/>the<sp/>window<sp/>is<sp/>enlarged<sp/>by<sp/>100<sp/>pixels)</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>stretching<sp/>means<sp/>that<sp/>the<sp/>center<sp/>point<sp/>of<sp/>the<sp/>window<sp/>remains</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>returns<sp/>false<sp/>if<sp/>the<sp/>window<sp/>would<sp/>be<sp/>smaller<sp/>than<sp/>(1,1)</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>function<sp/>does<sp/>NOT<sp/>care<sp/>of<sp/>the<sp/>min/max<sp/>dimensions<sp/>of<sp/>a<sp/>window</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>MoveWindow()<sp/>if<sp/>you<sp/>need<sp/>to<sp/>take<sp/>care<sp/>of<sp/>it.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1aaafd537e47032ec11095cfcb5d212d68" kindref="member">cdxCDynamicControlsManager::StretchWindow</ref>(CWnd<sp/>&amp;<sp/>rWnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CSize<sp/>&amp;<sp/>szDelta)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>rWnd.GetWindowPlacement(&amp;wpl);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/><sp/>szDelta.cx<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/><sp/>(szDelta.cx<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/><sp/>szDelta.cy<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>+=<sp/><sp/>(szDelta.cy<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>wpl.flags<sp/><sp/><sp/>=<sp/><sp/><sp/>SW_SHOWNA|SW_SHOWNOACTIVATE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((wpl.rcNormalPosition.left<sp/>&gt;=<sp/>wpl.rcNormalPosition.right)<sp/>||</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wpl.rcNormalPosition.top<sp/>&gt;=<sp/>wpl.rcNormalPosition.bottom))</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>rWnd.SetWindowPos(<sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/>-<sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>-<sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWP_NOACTIVATE|SWP_NOOWNERZORDER|SWP_NOZORDER)<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>stretch<sp/>window<sp/>by<sp/>a<sp/>percent<sp/>value</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>the<sp/>algorithm<sp/>calculates<sp/>the<sp/>new<sp/>size<sp/>for<sp/>both<sp/>dimensions<sp/>by:</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/><sp/>newWid<sp/>=<sp/>oldWid<sp/>+<sp/>(oldWid<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>iAddPcnt<sp/>may<sp/>even<sp/>be<sp/>nagtive,<sp/>but<sp/>it<sp/>MUST<sp/>be<sp/>greater<sp/>than<sp/>-100.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>function<sp/>does<sp/>NOT<sp/>care<sp/>of<sp/>the<sp/>min/max<sp/>dimensions<sp/>of<sp/>a<sp/>window</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>will<sp/>return<sp/>false<sp/>if<sp/>the<sp/>new<sp/>size<sp/>would<sp/>be<sp/>empty.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1aaafd537e47032ec11095cfcb5d212d68" kindref="member">cdxCDynamicControlsManager::StretchWindow</ref>(CWnd<sp/>&amp;<sp/>rWnd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAddPcnt)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>CSize<sp/><sp/><sp/>szDelta<sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ad245afc966a8cf31cbf2ff1a410f1c00" kindref="member">GetWindowSize</ref>(rWnd);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/>=<sp/><sp/><sp/>(szDelta.cx<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/>=<sp/><sp/><sp/>(szDelta.cy<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1aaafd537e47032ec11095cfcb5d212d68" kindref="member">StretchWindow</ref>(rWnd,szDelta);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/>get<sp/>current<sp/>window&apos;s<sp/>size</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">CSize<sp/><ref refid="classcdx_c_dynamic_controls_manager_1ad245afc966a8cf31cbf2ff1a410f1c00" kindref="member">cdxCDynamicControlsManager::GetWindowSize</ref>(CWnd<sp/>&amp;<sp/>rWnd)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/><sp/><sp/>rect;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>rWnd.GetWindowRect(&amp;rect);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CSize(rect.Width(),rect.Height());</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="comment">//<sp/>static<sp/>functions:<sp/>window<sp/>&amp;<sp/>registry</highlight></codeline>
<codeline lineno="641"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/>stores<sp/>a<sp/>window&apos;s<sp/>position<sp/>and<sp/>visiblity<sp/>to<sp/>the<sp/>registry.</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*<sp/><sp/>return<sp/>false<sp/>if<sp/>any<sp/>error<sp/>occured</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1af6fd515578486d81f15206d83e98f847" kindref="member">cdxCDynamicControlsManager::StoreWindowPosition</ref>(CWnd<sp/>&amp;<sp/>rWnd,<sp/>LPCTSTR<sp/>lpszProfile)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd)<sp/>&amp;&amp;<sp/>lpszProfile<sp/>&amp;&amp;<sp/>*lpszProfile);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>an<sp/>empty<sp/>profile<sp/>section<sp/>string;<sp/>see<sp/>CWinApp::GetProfileInt()<sp/>for<sp/>further<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>rWnd.GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/>bVisible<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>rWnd.IsWindowVisible();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rWnd.IsIconic())</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" kindref="member">REGVAL_ICONIC</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rWnd.IsZoomed())</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" kindref="member">REGVAL_MAXIMIZED</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Valid,<sp/><sp/><sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" kindref="member">REGVAL_INVALID</ref>)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>invalidate<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Top,<sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Bottom,<sp/><sp/>wpl.rcNormalPosition.bottom)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Visible,<sp/>bVisible<sp/>?<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a3901b35142c12986bdc8f9fce456629d" kindref="member">REGVAL_VISIBLE</ref><sp/>:<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a61dc71cabfd97d88307276e8ad9bde40" kindref="member">REGVAL_HIDDEN</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_State,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AfxGetApp()-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>lpszRegVal_Valid,<sp/><sp/><sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a519de1df4ec14efe8f28995e65256964" kindref="member">REGVAL_VALID</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>load<sp/>the<sp/>registry<sp/>data<sp/>stored<sp/>by<sp/>StoreWindowPosition()</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*<sp/>returns<sp/>true<sp/>if<sp/>data<sp/>have<sp/>been<sp/>found<sp/>in<sp/>the<sp/>registry</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_controls_manager_1ada2f51922cebd5f119acaf912b583bd7" kindref="member">cdxCDynamicControlsManager::RestoreWindowPosition</ref>(CWnd<sp/>&amp;<sp/>rWnd,<sp/>LPCTSTR<sp/>lpszProfile,<sp/>UINT<sp/>restoreFlags)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(::IsWindow(rWnd.m_hWnd)<sp/>&amp;&amp;<sp/>lpszProfile<sp/>&amp;&amp;<sp/>*lpszProfile);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>use<sp/>an<sp/>empty<sp/>profile<sp/>section<sp/>string;<sp/>see<sp/>CWinApp::GetProfileInt()<sp/>for<sp/>further<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>we<sp/>check<sp/>whether<sp/>the<sp/>position<sp/>had<sp/>been<sp/>saved<sp/>successful<sp/>any<sp/>time<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,lpszRegVal_Valid,<ref refid="cdx_c_dynamic_controls_manager_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" kindref="member">REGVAL_INVALID</ref>)<sp/>!=<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a519de1df4ec14efe8f28995e65256964" kindref="member">REGVAL_VALID</ref><sp/>)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>old<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>rWnd.GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iState<sp/><sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_State,<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>window&apos;s<sp/>previous<sp/>normal<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_Top,<sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_Bottom,<sp/><sp/>wpl.rcNormalPosition.bottom);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wpl.rcNormalPosition.left<sp/>&gt;<sp/>wpl.rcNormalPosition.right)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/><sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.right;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.left;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/>=<sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wpl.rcNormalPosition.top<sp/>&gt;<sp/>wpl.rcNormalPosition.bottom)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/><sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.bottom;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.top;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>restore<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_SHOWNA;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(restoreFlags<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_controls_manager_1ad10efc55547883f91ccd6b50e6c2cd70a75911a064aca469c91cf88dccf09a358" kindref="member">rflg_state</ref>)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iState<sp/>==<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" kindref="member">REGVAL_MAXIMIZED</ref>)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_MAXIMIZE;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iState<sp/>==<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" kindref="member">REGVAL_ICONIC</ref>)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_MINIMIZE;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>MoveWindow()<sp/>which<sp/>takes<sp/>care<sp/>of<sp/>WM_GETMINMAXINFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>rWnd.MoveWindow(<sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left,wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/>-<sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>-<sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>==<sp/>SW_SHOWNA);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showCmd<sp/>!=<sp/>SW_SHOWNA)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>updated<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERIFY(<sp/>rWnd.GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.showCmd<sp/>=<sp/><sp/><sp/>showCmd;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rWnd.SetWindowPlacement(&amp;wpl);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visiblity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(restoreFlags<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_controls_manager_1ad10efc55547883f91ccd6b50e6c2cd70a86ec030ae74277ae03c2ce27aec83aa3" kindref="member">rflg_visibility</ref>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp()-&gt;GetProfileInt(lpszProfile,<sp/>lpszRegVal_Visible,<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/><ref refid="cdx_c_dynamic_controls_manager_8cpp_1a3901b35142c12986bdc8f9fce456629d" kindref="member">REGVAL_VISIBLE</ref>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rWnd.ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>REGVAL_HIDDEN)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rWnd.ShowWindow(SW_HIDE);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicControlsManager.cpp"/>
  </compounddef>
</doxygen>
