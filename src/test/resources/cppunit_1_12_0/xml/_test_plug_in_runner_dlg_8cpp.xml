<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_test_plug_in_runner_dlg_8cpp" kind="file">
    <compoundname>TestPlugInRunnerDlg.cpp</compoundname>
    <includes refid="testpluginrunner_2_std_afx_8h" local="yes">stdafx.h</includes>
    <includes refid="_test_plug_in_runner_dlg_8h" local="yes">TestPlugInRunnerDlg.h</includes>
    <includes refid="_test_plug_in_8h" local="yes">TestPlugIn.h</includes>
    <includes refid="_test_plug_in_exception_8h" local="yes">TestPlugInException.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="668">
        <label>list</label>
      </node>
      <node id="670">
        <label>TestPlugIn.h</label>
        <link refid="_test_plug_in_8h"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>TestRunnerModel.h</label>
      </node>
      <node id="644">
        <label>afxcmn.h</label>
      </node>
      <node id="641">
        <label>afxext.h</label>
      </node>
      <node id="654">
        <label>cppunit/TestResultCollector.h</label>
      </node>
      <node id="656">
        <label>afxmt.h</label>
      </node>
      <node id="639">
        <label>stdafx.h</label>
        <link refid="testpluginrunner_2_std_afx_8h"/>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="657">
        <label>cppunit/extensions/TestDecorator.h</label>
      </node>
      <node id="674">
        <label>stdexcept</label>
      </node>
      <node id="662">
        <label>DynamicWindow/cdxCDynamicDialog.h</label>
        <link refid="cdx_c_dynamic_dialog_8h"/>
        <childnode refid="663" relation="include">
        </childnode>
      </node>
      <node id="673">
        <label>TestPlugInException.h</label>
        <link refid="_test_plug_in_exception_8h"/>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
      </node>
      <node id="645">
        <label>TestPlugInRunnerDlg.h</label>
        <link refid="_test_plug_in_runner_dlg_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
      </node>
      <node id="669">
        <label>string</label>
      </node>
      <node id="650">
        <label>cppunit/TestSuite.h</label>
      </node>
      <node id="664">
        <label>cdxCDynamicWnd.h</label>
        <link refid="cdx_c_dynamic_wnd_8h"/>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
      </node>
      <node id="647">
        <label>TestRunnerDlg.h</label>
        <link refid="_test_runner_dlg_8h"/>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>afxtempl.h</label>
      </node>
      <node id="653">
        <label>cppunit/TestListener.h</label>
      </node>
      <node id="651">
        <label>cppunit/Exception.h</label>
      </node>
      <node id="648">
        <label>resource.h</label>
        <link refid="testrunner_2resource_8h"/>
      </node>
      <node id="658">
        <label>MsDevCallerListCtrl.h</label>
        <link refid="_ms_dev_caller_list_ctrl_8h"/>
      </node>
      <node id="655">
        <label>ActiveTest.h</label>
        <link refid="_active_test_8h"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
      </node>
      <node id="649">
        <label>vector</label>
      </node>
      <node id="663">
        <label>cdxCDynamicWndEx.h</label>
        <link refid="cdx_c_dynamic_wnd_ex_8h"/>
        <childnode refid="664" relation="include">
        </childnode>
      </node>
      <node id="667">
        <label>TestPlugInRunnerModel.h</label>
        <link refid="_test_plug_in_runner_model_8h"/>
        <childnode refid="666" relation="include">
        </childnode>
      </node>
      <node id="671">
        <label>cppunit/test.h</label>
      </node>
      <node id="652">
        <label>cppunit/TestResult.h</label>
      </node>
      <node id="660">
        <label>deque</label>
      </node>
      <node id="642">
        <label>afxdisp.h</label>
      </node>
      <node id="672">
        <label>cppunit/plugin/PlugInManager.h</label>
      </node>
      <node id="643">
        <label>afxdtctl.h</label>
      </node>
      <node id="659">
        <label>TestRunnerModel.h</label>
        <link refid="msvc6_2testrunner_2_test_runner_model_8h"/>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
      </node>
      <node id="640">
        <label>afxwin.h</label>
      </node>
      <node id="646">
        <label>resource.h</label>
        <link refid="testpluginrunner_2resource_8h"/>
      </node>
      <node id="638">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerDlg.cpp</label>
        <link refid="TestPlugInRunnerDlg.cpp"/>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
      </node>
      <node id="661">
        <label>cppunit/Test.h</label>
      </node>
      <node id="675">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TestPlugInRunnerDlg.cpp<sp/>:<sp/>implementation<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testpluginrunner_2_std_afx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_plug_in_runner_dlg_8h" kindref="compound">TestPlugInRunnerDlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_plug_in_8h" kindref="compound">TestPlugIn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_plug_in_exception_8h" kindref="compound">TestPlugInException.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]<sp/>=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>TestPlugInRunnerDlg<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="class_test_plug_in_runner_dlg_1a26768f9d231cf235b2045f58107cee88" kindref="member">TestPlugInRunnerDlg::TestPlugInRunnerDlg</ref>(<sp/><ref refid="class_test_plug_in_runner_model" kindref="compound">TestPlugInRunnerModel</ref><sp/>*model,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CWnd*<sp/>pParent<sp/>)<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_test_runner_dlg" kindref="compound">TestRunnerDlg</ref>(<sp/>model,<sp/></highlight><highlight class="stringliteral">&quot;CPP_UNIT_TEST_RUNNER_PLUG_IN_IDD_TEST_PLUG_IN_RUNNER&quot;</highlight><highlight class="normal">,<sp/>pParent<sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_INIT(TestPlugInRunnerDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>ClassWizard<sp/>will<sp/>add<sp/>member<sp/>initialization<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>LoadIcon<sp/>does<sp/>not<sp/>require<sp/>a<sp/>subsequent<sp/>DestroyIcon<sp/>in<sp/>Win32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>m_hIcon<sp/>=<sp/>AfxGetApp()-&gt;LoadIcon(</highlight><highlight class="stringliteral">&quot;CPP_UNIT_TEST_RUNNER_PLUG_IN_IDR_TEST_PLUGIN_RUNNER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="class_test_plug_in_runner_dlg_1a28bc2a077d503ec6886a205bdc4e3239" kindref="member">TestPlugInRunnerDlg::DoDataExchange</ref>(<sp/>CDataExchange*<sp/>pDX<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1a7fb999c970c8355dd5d4c20c1d012e81" kindref="member">TestRunnerDlg::DoDataExchange</ref>(pDX);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_MAP(TestPlugInRunnerDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>ClassWizard<sp/>will<sp/>add<sp/>DDX<sp/>and<sp/>DDV<sp/>calls<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_test_plug_in_runner_dlg" kindref="compound">TestPlugInRunnerDlg</ref>,<sp/><ref refid="class_test_runner_dlg" kindref="compound">TestRunnerDlg</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{{AFX_MSG_MAP(TestPlugInRunnerDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>ON_WM_PAINT()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ON_WM_QUERYDRAGICON()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ON_BN_CLICKED(<ref refid="testpluginrunner_2resource_8h_1a1234e5a09d3a9985efda05ce342001fa" kindref="member">IDC_CHOOSE_DLL</ref>,<sp/>OnChooseDll)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ON_BN_CLICKED(<ref refid="testpluginrunner_2resource_8h_1a38ded22237273110966290ec8de3be42" kindref="member">IDC_RELOAD_DLL</ref>,<sp/>OnReloadDll)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}}AFX_MSG_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">//<sp/>TestPlugInRunnerDlg<sp/>message<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">BOOL<sp/><ref refid="class_test_plug_in_runner_dlg" kindref="compound">TestPlugInRunnerDlg</ref>::OnInitDialog()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1a8d94121ccc2f479b1a41a9724d9e1423" kindref="member">TestRunnerDlg::OnInitDialog</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>icon<sp/>for<sp/>this<sp/>dialog.<sp/><sp/>The<sp/>framework<sp/>does<sp/>this<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>when<sp/>the<sp/>application&apos;s<sp/>main<sp/>window<sp/>is<sp/>not<sp/>a<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>SetIcon(m_hIcon,<sp/>TRUE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>big<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>SetIcon(m_hIcon,<sp/>FALSE);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>small<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>extra<sp/>initialization<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>loadPluginIfNesseccary();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>TRUE<sp/><sp/>unless<sp/>you<sp/>set<sp/>the<sp/>focus<sp/>to<sp/>a<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>add<sp/>a<sp/>minimize<sp/>button<sp/>to<sp/>your<sp/>dialog,<sp/>you<sp/>will<sp/>need<sp/>the<sp/>code<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>to<sp/>draw<sp/>the<sp/>icon.<sp/><sp/>For<sp/>MFC<sp/>applications<sp/>using<sp/>the<sp/>document/view<sp/>model,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>this<sp/>is<sp/>automatically<sp/>done<sp/>for<sp/>you<sp/>by<sp/>the<sp/>framework.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_plug_in_runner_dlg_1a3632f736103053fa9b0867605d028a21" kindref="member">TestPlugInRunnerDlg::OnPaint</ref>()<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsIconic())</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>device<sp/>context<sp/>for<sp/>painting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>SendMessage(WM_ICONERASEBKGND,<sp/>(WPARAM)<sp/>dc.GetSafeHdc(),<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>icon<sp/>in<sp/>client<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cxIcon<sp/>=<sp/>GetSystemMetrics(SM_CXICON);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cyIcon<sp/>=<sp/>GetSystemMetrics(SM_CYICON);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>CRect<sp/>rect;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>GetClientRect(&amp;rect);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(rect.Width()<sp/>-<sp/>cxIcon<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(rect.Height()<sp/>-<sp/>cyIcon<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>dc.DrawIcon(x,<sp/>y,<sp/><ref refid="class_test_plug_in_runner_dlg_1affe0ea65ad73245663ac095db7a0b0cd" kindref="member">m_hIcon</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>TestRunnerDlg::OnPaint();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>system<sp/>calls<sp/>this<sp/>to<sp/>obtain<sp/>the<sp/>cursor<sp/>to<sp/>display<sp/>while<sp/>the<sp/>user<sp/>drags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>minimized<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">HCURSOR<sp/><ref refid="class_test_plug_in_runner_dlg_1a86dd6441a1ed232d54d87aadf75e2066" kindref="member">TestPlugInRunnerDlg::OnQueryDragIcon</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(HCURSOR)<sp/><ref refid="class_test_plug_in_runner_dlg_1affe0ea65ad73245663ac095db7a0b0cd" kindref="member">m_hIcon</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="class_test_plug_in_runner_model" kindref="compound">TestPlugInRunnerModel</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">TestPlugInRunnerDlg::plugInModel()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_test_plug_in_runner_model" kindref="compound">TestPlugInRunnerModel</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="class_test_runner_dlg_1ac5be804f9ee1d0e259d1b701a4ea70ed" kindref="member">m_model</ref><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="class_test_plug_in_runner_dlg_1aea84acf1609c7c24623a1ea363f5e5f5" kindref="member">TestPlugInRunnerDlg::OnChooseDll</ref>()<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>CFileDialog<sp/>dlg(<sp/>TRUE,<sp/></highlight><highlight class="stringliteral">&quot;*.dll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>Plug-in<sp/>(*.dll)|*.dll|All<sp/>Files<sp/>(*.*)|*.*||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dlg.DoModal()<sp/>!=<sp/>IDOK<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>loadDll(std::string(dlg.GetPathName()));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_test_plug_in_exception" kindref="compound">TestPlugInException</ref><sp/>&amp;e<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>AfxMessageBox(<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="class_test_plug_in_runner_dlg_1af7426ef279608a8e1b01e953a7f27622" kindref="member">TestPlugInRunnerDlg::OnReloadDll</ref>()<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1a4e8fb39fbbe24c81b3c7d8c3409acb2b" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>plugInModel().<ref refid="class_test_plug_in_runner_model_1ac87a79a124bad91c095c7516f7bed523" kindref="member">reloadPlugIn</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">std::list&lt;std::string&gt;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">TestPlugInRunnerDlg::getCommandLineArguments()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>LPWSTR<sp/>*argv<sp/>=<sp/>::CommandLineToArgvW(<sp/>::GetCommandLineW(),<sp/>&amp;argc<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::list&lt;std::string&gt;<sp/>arguments;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>argc;<sp/>index++<sp/>)<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>arguments.push_back(<sp/>std::string(<sp/>CString(<sp/>argv[index]<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>::GlobalFree(<sp/>argv<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">TestPlugInRunnerDlg::loadPluginIfNesseccary()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>std::list&lt;std::string&gt;<sp/>argv<sp/>=<sp/>getCommandLineArguments();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>std::list&lt;std::string&gt;::iterator<sp/>iter<sp/>=<sp/>std::find(<sp/>argv.begin(),<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv.end(),<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<sp/></highlight><highlight class="stringliteral">&quot;-testsuite&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>==<sp/>argv.end()<sp/>)<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>loadDll(<sp/>*++iter<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/>std::exception<sp/>&amp;e<sp/>)<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>AfxMessageBox(<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal">TestPlugInRunnerDlg::loadDll(<sp/>std::string<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="class_test_plug_in" kindref="compound">TestPlugIn</ref><sp/>*plugIn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_test_plug_in" kindref="compound">TestPlugIn</ref>(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>plugInModel().<ref refid="class_test_plug_in_runner_model_1a37f137e6198ee2fe08c31bdc2dae9f44" kindref="member">setPlugIn</ref>(<sp/>plugIn<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1ac5be804f9ee1d0e259d1b701a4ea70ed" kindref="member">m_model</ref>-&gt;<ref refid="class_test_runner_model_1a8fd9e40972ba41df1de9b1cab4879bd3" kindref="member">selectHistoryTest</ref>(<sp/>plugInModel().rootTest()<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1a3150bbfc508ab4654ccba13cd57ae653" kindref="member">updateHistoryCombo</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="class_test_plug_in_runner_dlg_1a9c0c0433fc73c5b1330d487ca590b747" kindref="member">TestPlugInRunnerDlg::initializeLayout</ref>()</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg_1a051bdb46dd8714ae6b69523fc7697c5e" kindref="member">TestRunnerDlg::initializeLayout</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a0c115b5a4edc04fae7f17e62ab39a794" kindref="member">AddSzXControl</ref>(<sp/><ref refid="testpluginrunner_2resource_8h_1a1234e5a09d3a9985efda05ce342001fa" kindref="member">IDC_CHOOSE_DLL</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a1f27dab35aa9c3507af936030b812292" kindref="member">mdRepos</ref><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a0c115b5a4edc04fae7f17e62ab39a794" kindref="member">AddSzXControl</ref>(<sp/><ref refid="testpluginrunner_2resource_8h_1a38ded22237273110966290ec8de3be42" kindref="member">IDC_RELOAD_DLL</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a1f27dab35aa9c3507af936030b812292" kindref="member">mdRepos</ref><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testpluginrunner/TestPlugInRunnerDlg.cpp"/>
  </compounddef>
</doxygen>
