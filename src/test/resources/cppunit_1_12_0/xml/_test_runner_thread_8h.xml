<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_test_runner_thread_8h" kind="file">
    <compoundname>TestRunnerThread.h</compoundname>
    <includes local="no">qthread.h</includes>
    <includes local="no">cppunit/Test.h</includes>
    <includes local="no">cppunit/TestResult.h</includes>
    <includedby refid="qttestrunner_2_test_runner_model_8cpp" local="yes">src/qttestrunner/TestRunnerModel.cpp</includedby>
    <includedby refid="_test_runner_thread_8cpp" local="yes">src/qttestrunner/TestRunnerThread.cpp</includedby>
    <incdepgraph>
      <node id="1500">
        <label>src/qttestrunner/TestRunnerThread.h</label>
        <link refid="TestRunnerThread.h"/>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
      </node>
      <node id="1503">
        <label>cppunit/TestResult.h</label>
      </node>
      <node id="1501">
        <label>qthread.h</label>
      </node>
      <node id="1502">
        <label>cppunit/Test.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1505">
        <label>src/qttestrunner/TestRunnerModel.cpp</label>
        <link refid="qttestrunner_2_test_runner_model_8cpp"/>
      </node>
      <node id="1504">
        <label>src/qttestrunner/TestRunnerThread.h</label>
        <link refid="TestRunnerThread.h"/>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
      </node>
      <node id="1506">
        <label>src/qttestrunner/TestRunnerThread.cpp</label>
        <link refid="_test_runner_thread_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_test_runner_thread" prot="public">TestRunnerThread</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Header<sp/>file<sp/>TestRunnerThread.h<sp/>for<sp/>class<sp/>TestRunnerThread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)Copyright<sp/>2000,<sp/>Baptiste<sp/>Lepilleur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/>2001/09/22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESTRUNNERTHREAD_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESTRUNNERTHREAD_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/Test.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/TestResult.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QObject;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_runner_thread_finished_event" kindref="compound">TestRunnerThreadFinishedEvent</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_test_runner_thread" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_runner_thread" kindref="compound">TestRunnerThread</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QThread</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_thread_1a95ee0edd6faa83cefe8f9812bcc84262" kindref="member">TestRunnerThread</ref>(<sp/>CPPUNIT_NS::Test<sp/>*testToRun,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_NS::TestResult<sp/>*result,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject<sp/>*eventTarget,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_runner_thread_finished_event" kindref="compound">TestRunnerThreadFinishedEvent</ref><sp/>*finishedEvent<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_thread_1aa6b6960a57f0153e5511dfb0cb89d7e9" kindref="member" tooltip="Destructor. ">â€¾TestRunnerThread</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_thread_1a95ee0edd6faa83cefe8f9812bcc84262" kindref="member">TestRunnerThread</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_thread" kindref="compound">TestRunnerThread</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_thread" kindref="compound">TestRunnerThread</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/>CPPUNIT_NS::Test<sp/>*_testToRun;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/>CPPUNIT_NS::TestResult<sp/>*_result;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/>QObject<sp/>*_eventTarget;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><ref refid="class_test_runner_thread_finished_event" kindref="compound">TestRunnerThreadFinishedEvent</ref><sp/>*_finishedEvent;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inlines<sp/>methods<sp/>for<sp/>TestRunnerThread:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESTRUNNERTHREAD_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerThread.h"/>
  </compounddef>
</doxygen>
