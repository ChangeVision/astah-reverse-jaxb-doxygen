<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="qttestrunner_2_test_runner_model_8h" kind="file">
    <compoundname>TestRunnerModel.h</compoundname>
    <includes local="no">cppunit/Test.h</includes>
    <includes local="no">cppunit/TestListener.h</includes>
    <includes local="no">qlist.h</includes>
    <includes local="no">qobject.h</includes>
    <includes local="no">qthread.h</includes>
    <includes refid="_test_failure_info_8h" local="yes">TestFailureInfo.h</includes>
    <includes refid="_test_runner_model_thread_interface_8h" local="yes">TestRunnerModelThreadInterface.h</includes>
    <includedby refid="_test_plug_in_runner_dlg_8h" local="no">src/msvc6/testpluginrunner/TestPlugInRunnerDlg.h</includedby>
    <includedby refid="_test_plug_in_runner_model_8h" local="no">src/msvc6/testpluginrunner/TestPlugInRunnerModel.h</includedby>
    <includedby refid="_qt_test_runner_8cpp" local="yes">src/qttestrunner/QtTestRunner.cpp</includedby>
    <includedby refid="_test_runner_dlg_impl_8cpp" local="yes">src/qttestrunner/TestRunnerDlgImpl.cpp</includedby>
    <includedby refid="qttestrunner_2_test_runner_model_8cpp" local="yes">src/qttestrunner/TestRunnerModel.cpp</includedby>
    <incdepgraph>
      <node id="1255">
        <label>TestRunnerModelThreadInterface.h</label>
        <link refid="_test_runner_model_thread_interface_8h"/>
      </node>
      <node id="1251">
        <label>qobject.h</label>
      </node>
      <node id="1247">
        <label>src/qttestrunner/TestRunnerModel.h</label>
        <link refid="qttestrunner/TestRunnerModel.h"/>
        <childnode refid="1248" relation="include">
        </childnode>
        <childnode refid="1249" relation="include">
        </childnode>
        <childnode refid="1250" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1252" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
      </node>
      <node id="1254">
        <label>cppunit/TestFailure.h</label>
      </node>
      <node id="1249">
        <label>cppunit/TestListener.h</label>
      </node>
      <node id="1253">
        <label>TestFailureInfo.h</label>
        <link refid="_test_failure_info_8h"/>
        <childnode refid="1254" relation="include">
        </childnode>
      </node>
      <node id="1250">
        <label>qlist.h</label>
      </node>
      <node id="1252">
        <label>qthread.h</label>
      </node>
      <node id="1248">
        <label>cppunit/Test.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1258">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerApp.cpp</label>
        <link refid="_test_plug_in_runner_app_8cpp"/>
      </node>
      <node id="1257">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerDlg.h</label>
        <link refid="_test_plug_in_runner_dlg_8h"/>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
      </node>
      <node id="1256">
        <label>src/qttestrunner/TestRunnerModel.h</label>
        <link refid="qttestrunner/TestRunnerModel.h"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>src/qttestrunner/TestRunnerModel.cpp</label>
        <link refid="qttestrunner_2_test_runner_model_8cpp"/>
      </node>
      <node id="1263">
        <label>src/qttestrunner/TestRunnerDlgImpl.cpp</label>
        <link refid="_test_runner_dlg_impl_8cpp"/>
      </node>
      <node id="1260">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerModel.h</label>
        <link refid="_test_plug_in_runner_model_8h"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1262">
        <label>src/qttestrunner/QtTestRunner.cpp</label>
        <link refid="_qt_test_runner_8cpp"/>
      </node>
      <node id="1261">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerModel.cpp</label>
        <link refid="_test_plug_in_runner_model_8cpp"/>
      </node>
      <node id="1259">
        <label>src/msvc6/testpluginrunner/TestPlugInRunnerDlg.cpp</label>
        <link refid="_test_plug_in_runner_dlg_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_test_runner_model" prot="public">TestRunnerModel</innerclass>
    <innerclass refid="class_test_runner_model_1_1_lock_guard" prot="private">TestRunnerModel::LockGuard</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Header<sp/>file<sp/>TestRunnerModel.h<sp/>for<sp/>class<sp/>TestRunnerModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)Copyright<sp/>2000,<sp/>Baptiste<sp/>Lepilleur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/>2001/09/20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESTRUNNERMODEL_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESTRUNNERMODEL_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/Test.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/TestListener.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qlist.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qobject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_failure_info_8h" kindref="compound">TestFailureInfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_runner_model_thread_interface_8h" kindref="compound">TestRunnerModelThreadInterface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_runner_thread" kindref="compound">TestRunnerThread</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_runner_model" kindref="compound">TestRunnerModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>CPPUNIT_NS::TestListener,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_thread_interface" kindref="compound">TestRunnerModelThreadInterface</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_model_1a2f2ae919bdc31b1c2eb68c3320f32454" kindref="member">TestRunnerModel</ref>(<sp/>CPPUNIT_NS::Test<sp/>*<ref refid="class_test_runner_model_1a2fedcd7c1b636a966de81f8e974c57cf" kindref="member">rootTest</ref><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a20e79c03f4f41826125d97579c543ae7" kindref="member">‾TestRunnerModel</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>CPPUNIT_NS::Test<sp/>*<ref refid="class_test_runner_model_1a2fedcd7c1b636a966de81f8e974c57cf" kindref="member">rootTest</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a301cbf5a744ee1570784e4333f1e18d2" kindref="member">numberOfTestCase</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1af8bac9178a37d93a92e03683193c81c8" kindref="member">numberOfTestCaseFailure</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a1bed28ad2882d8f51fbcf2068319f2af" kindref="member">numberOfTestCaseRun</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*<ref refid="class_test_runner_model_1af8f2ef06bf72ac0daecbb0418698238c" kindref="member">failureAt</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a04d2b040a1a2e5ceac13ea0f6fdc1362" kindref="member">isTestRunning</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a79d234aa44e5b404ea207ad52dfec5a1" kindref="member">numberOfTestCaseChanged</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a301cbf5a744ee1570784e4333f1e18d2" kindref="member">numberOfTestCase</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a18fe973f0608a68de2a2041c35f91539" kindref="member">numberOfTestCaseRunChanged</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfRun<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a07f9cf6026a3da6775a33ea44ec065b5" kindref="member">numberOfTestCaseFailureChanged</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfFailure<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1af27247fc3045cf482243fc9ea24f476c" kindref="member">failureAdded</ref>(<sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*failure<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1aafe1ad61547e70ff4125e87daf7f1b7c" kindref="member">failuresCleared</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a0e4ea44afd7a5f1efc51db1dc4a29f95" kindref="member">testRunStarted</ref>(<sp/>CPPUNIT_NS::Test<sp/>*runningTest,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPPUNIT_NS::TestResult<sp/>*result<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a817f2450394a565c7d515a7bc7faeb6d" kindref="member">testRunFinished</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a68afe76bf53d39cceed9d862f2749e8e" kindref="member">resetTestReportCounterFor</ref>(<sp/>CPPUNIT_NS::Test<sp/>*testToRun<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a49d16c99bfda83ed0531e645b1d8bad7" kindref="member">runTest</ref>(<sp/>CPPUNIT_NS::Test<sp/>*testToRun<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model_1a2b9116958a844166e69ef32e7f5da547" kindref="member">stopRunningTest</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_model_1a2f2ae919bdc31b1c2eb68c3320f32454" kindref="member">TestRunnerModel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model" kindref="compound">TestRunnerModel</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_model" kindref="compound">TestRunnerModel</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startTest(<sp/>CPPUNIT_NS::Test<sp/>*test<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addFailure(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPPUNIT_NS::TestFailure<sp/>&amp;failure<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endTest(<sp/>CPPUNIT_NS::Test<sp/>*test<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addFailureInfo(<sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*failure<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>event(<sp/>QEvent<sp/>*event<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eventNewFailure(<sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*failure,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfFailure<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eventNumberOfTestRunChanged(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfRun<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eventTestRunnerThreadFinished();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LockGuard</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>LockGuard(<sp/>QMutex<sp/>&amp;mutex<sp/>)<sp/>:<sp/>_mutex(<sp/>mutex<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mutex.lock();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>‾LockGuard()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mutex.unlock();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutex<sp/>&amp;_mutex;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>QMutex<sp/>_lock;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>CPPUNIT_NS::Test<sp/>*_rootTest;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numberOfTestCase;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numberOfTestCaseRun;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numberOfTestCaseFailure;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>QList&lt;TestFailureInfo&gt;<sp/>_failures;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_thread" kindref="compound">TestRunnerThread</ref><sp/>*_runnerThread;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>CPPUNIT_NS::TestResult<sp/>*_result;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inlines<sp/>methods<sp/>for<sp/>TestRunnerModel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESTRUNNERMODEL_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerModel.h"/>
  </compounddef>
</doxygen>
