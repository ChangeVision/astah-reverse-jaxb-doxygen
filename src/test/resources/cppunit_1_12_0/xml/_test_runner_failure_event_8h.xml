<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_test_runner_failure_event_8h" kind="file">
    <compoundname>TestRunnerFailureEvent.h</compoundname>
    <includes refid="_test_runner_thread_event_8h" local="yes">TestRunnerThreadEvent.h</includes>
    <includedby refid="_test_runner_failure_event_8cpp" local="yes">src/qttestrunner/TestRunnerFailureEvent.cpp</includedby>
    <includedby refid="qttestrunner_2_test_runner_model_8cpp" local="yes">src/qttestrunner/TestRunnerModel.cpp</includedby>
    <incdepgraph>
      <node id="1455">
        <label>src/qttestrunner/TestRunnerFailureEvent.h</label>
        <link refid="TestRunnerFailureEvent.h"/>
        <childnode refid="1456" relation="include">
        </childnode>
      </node>
      <node id="1456">
        <label>TestRunnerThreadEvent.h</label>
        <link refid="_test_runner_thread_event_8h"/>
        <childnode refid="1457" relation="include">
        </childnode>
      </node>
      <node id="1457">
        <label>qevent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1458">
        <label>src/qttestrunner/TestRunnerFailureEvent.h</label>
        <link refid="TestRunnerFailureEvent.h"/>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>src/qttestrunner/TestRunnerFailureEvent.cpp</label>
        <link refid="_test_runner_failure_event_8cpp"/>
      </node>
      <node id="1460">
        <label>src/qttestrunner/TestRunnerModel.cpp</label>
        <link refid="qttestrunner_2_test_runner_model_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_test_runner_failure_event" prot="public">TestRunnerFailureEvent</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Header<sp/>file<sp/>TestRunnerFailureEvent.h<sp/>for<sp/>class<sp/>TestRunnerFailureEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)Copyright<sp/>2000,<sp/>Baptiste<sp/>Lepilleur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/>2001/09/22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESTRUNNERFAILUREEVENT_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESTRUNNERFAILUREEVENT_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_runner_thread_event_8h" kindref="compound">TestRunnerThreadEvent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_test_runner_failure_event" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_thread_event" kindref="compound">TestRunnerThreadEvent</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_failure_event_1ad29b12258aec9d7575368b533a74b3c2" kindref="member">TestRunnerFailureEvent</ref>(<sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*failure,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfFailure<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_failure_event_1abbb31936e30dc5debecfffd57d35bbf9" kindref="member" tooltip="Destructor. ">â€¾TestRunnerFailureEvent</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_failure_event_1ad29b12258aec9d7575368b533a74b3c2" kindref="member">TestRunnerFailureEvent</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_test_runner_failure_event" kindref="compound">TestRunnerFailureEvent</ref><sp/>&amp;copy<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process(<sp/><ref refid="class_test_runner_model_thread_interface" kindref="compound">TestRunnerModelThreadInterface</ref><sp/>*target<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="class_test_failure_info" kindref="compound">TestFailureInfo</ref><sp/>*_failure;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numberOfFailure;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inlines<sp/>methods<sp/>for<sp/>TestRunnerFailureEvent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESTRUNNERFAILUREEVENT_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/qttestrunner/TestRunnerFailureEvent.h"/>
  </compounddef>
</doxygen>
