<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_command_line_parser_test_8cpp" kind="file">
    <compoundname>CommandLineParserTest.cpp</compoundname>
    <includes refid="_command_line_parser_8h" local="yes">CommandLineParser.h</includes>
    <includes refid="_command_line_parser_test_8h" local="yes">CommandLineParserTest.h</includes>
    <incdepgraph>
      <node id="295">
        <label>stdexcept</label>
      </node>
      <node id="294">
        <label>string</label>
      </node>
      <node id="296">
        <label>CommandLineParserTest.h</label>
        <link refid="_command_line_parser_test_8h"/>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>cppunit/portability/CppUnitDeque.h</label>
      </node>
      <node id="291">
        <label>cppunit/Portability.h</label>
      </node>
      <node id="290">
        <label>CommandLineParser.h</label>
        <link refid="_command_line_parser_8h"/>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>cppunit/plugin/PlugInParameters.h</label>
      </node>
      <node id="289">
        <label>src/DllPlugInTester/CommandLineParserTest.cpp</label>
        <link refid="CommandLineParserTest.cpp"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="297">
        <label>cppunit/extensions/HelperMacros.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_command_line_parser_test_8cpp_1ae999121b8b6dd0c7a82fe892e75c68a6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>¥</definition>
        <argsstring></argsstring>
        <name>¥</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/DllPlugInTester/CommandLineParserTest.cpp" line="4" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/DllPlugInTester/CommandLineParserTest.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_line_parser_8h" kindref="compound">CommandLineParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_line_parser_test_8h" kindref="compound">CommandLineParserTest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">CPPUNIT_TEST_SUITE_REGISTRATION(<sp/><ref refid="class_command_line_parser_test" kindref="compound">CommandLineParserTest</ref><sp/>);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="class_command_line_parser_test_1aeff163912cbdddba7997c02e37f8a359" kindref="member">CommandLineParserTest::CommandLineParserTest</ref>()</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="class_command_line_parser_test_1a970fa0b8083076a34d4ec9b316fe94d9" kindref="member">CommandLineParserTest::‾CommandLineParserTest</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="class_command_line_parser_test_1a99755b70653313f8f2bbc3ff130671e4" kindref="member">CommandLineParserTest::setUp</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>_parser<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_command_line_parser_test_1a46efbc7974067e069fd9a6b507ae3fd9" kindref="member">CommandLineParserTest::tearDown</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_parser;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal">CommandLineParserTest::parse(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**lines<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**line<sp/>=<sp/>lines;<sp/>*line<sp/>!=<sp/>NULL;<sp/>++line,<sp/>++count<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_parser;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>_parser<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_command_line_parser" kindref="compound">CommandLineParser</ref>(<sp/>count,<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>_parser-&gt;<ref refid="class_command_line_parser_1aa02f4b6148e34f610f519b8cc767466b" kindref="member">parse</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="class_command_line_parser_test_1abd87b26704c2722024879e432b1cd1e8" kindref="member">CommandLineParserTest::testEmptyCommandLine</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="class_command_line_parser_test_1a115853fed68c76ce7ba5282d48dc1a17" kindref="member">CommandLineParserTest::testFlagCompiler</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>0,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="class_command_line_parser_test_1afbecde21b9b1cbd3acc652cda4250543" kindref="member">CommandLineParserTest::testLongFlagBriefProgress</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--brief-progress&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>0,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="class_command_line_parser_test_1a2554b2e37a40efa0eb28ce24a018ea52" kindref="member">CommandLineParserTest::testFileName</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TestPlugIn.dll&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>1,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="struct_command_line_plug_in_info" kindref="compound">CommandLinePlugInInfo</ref><sp/>info(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aabfdaac5203d2e82623aa349a62a1d1f" kindref="member">getPlugInAt</ref>(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;TestPlugIn.dll&quot;</highlight><highlight class="normal">),<sp/>info.m_fileName<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>info.m_parameters.getCommandLine().empty()<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="class_command_line_parser_test_1a5f3e3e24e6c8a111824261d8399cd655" kindref="member">CommandLineParserTest::testTestPath</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;:Core&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Core&quot;</highlight><highlight class="normal">),<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>0,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="class_command_line_parser_test_1a3dffe250d24cfd071b967ed1628af464" kindref="member">CommandLineParserTest::testParameterWithSpace</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--xml&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>Results.xml&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a4ceb49b811f14f663120a55e81987ff5" kindref="member">getEncoding</ref>()<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ae21a92ddf5770ef275e8e8e27604cf5a" kindref="member">getTestPath</ref>()<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Test<sp/>Results.xml&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a523bf80f1b5dee1684dab2116a4b8c50" kindref="member">getXmlStyleSheet</ref>()<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1aa673745a7c478581d7f2c8ea4dabbed6" kindref="member">noTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a04aee4c12208e60a940e2953add713a0" kindref="member">useBriefTestProgress</ref>()<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a7d65e758e9c915df46f078d060bec656" kindref="member">useCompilerOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a87c99b161d6d2f7f113fb7b2b46eded8" kindref="member">useCoutStream</ref>()<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>!_parser-&gt;<ref refid="class_command_line_parser_1a48495a436701ff716951113e43a4c1f4" kindref="member">useTextOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1ad0189bb7baad5df4e75a3de9203c7e70" kindref="member">useXmlOutputter</ref>()<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>0,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="class_command_line_parser_test_1a852c29d51bde93cc497e44f52e85b06c" kindref="member">CommandLineParserTest::testMissingStyleSheetParameterThrow</ref>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--xsl&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="class_command_line_parser_test_1a174af3c6a643e9b54ea028f331022376" kindref="member">CommandLineParserTest::testMissingEncodingParameterThrow</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--encoding&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="class_command_line_parser_test_1a98837d5486864661a94118d0fce6e6b0" kindref="member">CommandLineParserTest::testXmlFileNameIsOptional</ref>()</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--xml&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>std::string<sp/>none;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>none,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aad5d67fad84eedae721dca9e534450c5" kindref="member">getXmlFileName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="class_command_line_parser_test_1a0b65bbe288482ee86a1a89f9607b13f1" kindref="member">CommandLineParserTest::testPlugInsWithParameters</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TestPlugIn1.dll=login<sp/>=<sp/>lain&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Clocker.dll&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>parse(<sp/>lines<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>2,<sp/>_parser-&gt;<ref refid="class_command_line_parser_1a2f9d527a0243e662e7a01a7e7f145972" kindref="member">getPlugInCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="struct_command_line_plug_in_info" kindref="compound">CommandLinePlugInInfo</ref><sp/>info1(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aabfdaac5203d2e82623aa349a62a1d1f" kindref="member">getPlugInAt</ref>(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;TestPlugIn1.dll&quot;</highlight><highlight class="normal">),<sp/>info1.m_fileName<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;login<sp/>=<sp/>lain&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info1.m_parameters.getCommandLine()<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="struct_command_line_plug_in_info" kindref="compound">CommandLinePlugInInfo</ref><sp/>info2(<sp/>_parser-&gt;<ref refid="class_command_line_parser_1aabfdaac5203d2e82623aa349a62a1d1f" kindref="member">getPlugInAt</ref>(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT_EQUAL(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Clocker.dll&quot;</highlight><highlight class="normal">),<sp/>info2.m_fileName<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>CPPUNIT_ASSERT(<sp/>info2.m_parameters.getCommandLine().empty()<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/DllPlugInTester/CommandLineParserTest.cpp"/>
  </compounddef>
</doxygen>
