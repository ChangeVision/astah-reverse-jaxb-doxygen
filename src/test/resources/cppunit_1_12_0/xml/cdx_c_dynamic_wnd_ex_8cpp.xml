<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="cdx_c_dynamic_wnd_ex_8cpp" kind="file">
    <compoundname>cdxCDynamicWndEx.cpp</compoundname>
    <includes local="yes">stdafx.h</includes>
    <includes refid="cdx_c_dynamic_wnd_ex_8h" local="yes">cdxCDynamicWndEx.h</includes>
    <incdepgraph>
      <node id="882">
        <label>stdafx.h</label>
      </node>
      <node id="884">
        <label>cdxCDynamicWnd.h</label>
        <link refid="cdx_c_dynamic_wnd_8h"/>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>afxtempl.h</label>
      </node>
      <node id="883">
        <label>cdxCDynamicWndEx.h</label>
        <link refid="cdx_c_dynamic_wnd_ex_8h"/>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="881">
        <label>src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp</label>
        <link refid="cdxCDynamicWndEx.cpp"/>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
      </node>
      <node id="885">
        <label>afxwin.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a20adb7acb665efc8ad213383d5aab12a" prot="public" static="no">
        <name>REGVAL_NOSTATE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="18" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a3901b35142c12986bdc8f9fce456629d" prot="public" static="no">
        <name>REGVAL_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="19" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a61dc71cabfd97d88307276e8ad9bde40" prot="public" static="no">
        <name>REGVAL_HIDDEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="20" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" prot="public" static="no">
        <name>REGVAL_MAXIMIZED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="21" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" prot="public" static="no">
        <name>REGVAL_ICONIC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="22" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" prot="public" static="no">
        <name>REGVAL_INVALID</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="23" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cdx_c_dynamic_wnd_ex_8cpp_1a519de1df4ec14efe8f28995e65256964" prot="public" static="no">
        <name>REGVAL_VALID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="24" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1a8b82c5ad8abde6cea5b6429580dfafe9" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Left</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Left</name>
        <initializer>=	_T(&quot;Left&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="31" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1ace1d3d45698b651085d158aa51daaed0" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Right</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Right</name>
        <initializer>=	_T(&quot;Right&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1a09497cd027e84d63fba8a9c3f89053fd" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Top</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Top</name>
        <initializer>=	_T(&quot;Top&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1ae0bdb6a1ac813fd29d76b412e42a46da" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Bottom</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Bottom</name>
        <initializer>=	_T(&quot;Bottom&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="34" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1a7e250b3fcb094c6e2396f25cd2c440b6" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Visible</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Visible</name>
        <initializer>=	_T(&quot;Visibility&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1af256eea0cbf34f941db94bdb025aa1fa" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_State</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_State</name>
        <initializer>=	_T(&quot;State&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="36" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cdx_c_dynamic_wnd_ex_8cpp_1a6d55e13422b294e55e44478341cf264d" prot="public" static="yes" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR lpszRegVal_Valid</definition>
        <argsstring></argsstring>
        <name>lpszRegVal_Valid</name>
        <initializer>=	_T(&quot;(valid)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cdx_c_dynamic_wnd_ex_8cpp_1a7ba813e5140871395648dabbf2f28679" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CString</type>
        <definition>static CString _makeFullProfile</definition>
        <argsstring>(LPCTSTR lpszBase, const CString &amp;str)</argsstring>
        <name>_makeFullProfile</name>
        <param>
          <type>LPCTSTR</type>
          <declname>lpszBase</declname>
        </param>
        <param>
          <type>const CString &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp" bodystart="49" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>cdxCDynamicWndEx.cpp:<sp/>implementation<sp/>of<sp/>the<sp/>cdxCDynamicWndEx<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdafx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cdx_c_dynamic_wnd_ex_8h" kindref="compound">cdxCDynamicWndEx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]=__FILE__;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>Some<sp/>static<sp/>variables<sp/>(taken<sp/>from<sp/>cdxCDynamicControlsManager)</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_NOSTATE<sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_HIDDEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_MAXIMIZED<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_ICONIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_INVALID<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REGVAL_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>registry<sp/>value<sp/>names</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>(for<sp/>StoreWindowPosition()/RestoreWindowPosition())</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LPCTSTR<sp/><sp/>lpszRegVal_Left<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Right<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Bottom<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Bottom&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Visible<sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;Visibility&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_State<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;State&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpszRegVal_Valid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;(valid)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">LPCTSTR<sp/><ref refid="classcdx_c_dynamic_wnd_ex_1abe9e2867acd7b90c974222b6af4a1483" kindref="member">cdxCDynamicWndEx::M_lpszAutoPosProfileSection</ref><sp/><sp/><sp/>=<sp/><sp/><sp/>_T(</highlight><highlight class="stringliteral">&quot;WindowPositions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">//<sp/>cdxCDynamicWndEx</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">//<sp/>cdxCDynamicWndEx<sp/>stretches<sp/>windows</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>CString<sp/>_makeFullProfile(LPCTSTR<sp/>lpszBase,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CString<sp/>&amp;<sp/>str)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>CString<sp/>s<sp/><sp/><sp/>=<sp/><sp/><sp/>lpszBase;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.GetLength()<sp/>&amp;&amp;<sp/>(s[s.GetLength()-1]<sp/>!=<sp/>_T(</highlight><highlight class="stringliteral">&apos;¥¥&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>+=<sp/><sp/>_T(</highlight><highlight class="stringliteral">&apos;¥¥&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/>+=<sp/><sp/>str;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a1482d3b7bc2f80ad73749fb4396533ab" kindref="member">cdxCDynamicWndEx::OnInitialized</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(<ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_strAutoPos.IsEmpty())</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&lt;<sp/>1300<sp/><sp/><sp/>//<sp/>vc6</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_ex_1a827b16886b50bf46fdaacf3c2d96dcc6" kindref="member">RestoreWindowPosition</ref>(_makeFullProfile(<ref refid="classcdx_c_dynamic_wnd_ex_1abe9e2867acd7b90c974222b6af4a1483" kindref="member">M_lpszAutoPosProfileSection</ref>,m_strAutoPos),<ref refid="classcdx_c_dynamic_wnd_ex_1a71d426cfe5335a36f4f455d670d2b550a1780bdd59d28b9e65d4cfd589eb153f0" kindref="member">rflg_all</ref>))</highlight></codeline>
<codeline lineno="68"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vc7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_ex_1a827b16886b50bf46fdaacf3c2d96dcc6" kindref="member">RestoreWindowPosition</ref>(_makeFullProfile(<ref refid="classcdx_c_dynamic_wnd_ex_1abe9e2867acd7b90c974222b6af4a1483" kindref="member">M_lpszAutoPosProfileSection</ref>,m_strAutoPos),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<ref refid="classcdx_c_dynamic_wnd_ex_1a71d426cfe5335a36f4f455d670d2b550a1780bdd59d28b9e65d4cfd589eb153f0" kindref="member">rflg_all</ref>))</highlight></codeline>
<codeline lineno="70"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a65185ac2d1250c42f81a5fdc3d59aa6d" kindref="member">Window</ref>()-&gt;CenterWindow();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a2553916ac779ce37e244ccd94c08b3e6" kindref="member">StretchWindow</ref>(10);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a67cafc47f4c4cfd1f612e7a24b487c60" kindref="member">cdxCDynamicWndEx::OnDestroying</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_strAutoPos.IsEmpty()<sp/>&amp;&amp;<sp/><ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a49c2a39c30eb6a362116199c8075f17e" kindref="member">StoreWindowPosition</ref>(_makeFullProfile(<ref refid="classcdx_c_dynamic_wnd_ex_1abe9e2867acd7b90c974222b6af4a1483" kindref="member">M_lpszAutoPosProfileSection</ref>,m_strAutoPos));</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">//<sp/>cdxCDynamicWndEx<sp/>stretches<sp/>windows</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>stretches<sp/>the<sp/>window<sp/>by<sp/>szDelta<sp/>(i.e.<sp/>if<sp/>szDelta<sp/>is<sp/>100,<sp/>the<sp/>window<sp/>is<sp/>enlarged<sp/>by<sp/>100<sp/>pixels)</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>stretching<sp/>means<sp/>that<sp/>the<sp/>center<sp/>point<sp/>of<sp/>the<sp/>window<sp/>remains</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>returns<sp/>false<sp/>if<sp/>the<sp/>window<sp/>would<sp/>be<sp/>smaller<sp/>than<sp/>(1,1)</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>function<sp/>does<sp/>NOT<sp/>care<sp/>of<sp/>the<sp/>min/max<sp/>dimensions<sp/>of<sp/>a<sp/>window</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>MoveWindow()<sp/>if<sp/>you<sp/>need<sp/>to<sp/>take<sp/>care<sp/>of<sp/>it.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>STATIC</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a2553916ac779ce37e244ccd94c08b3e6" kindref="member">cdxCDynamicWndEx::StretchWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CSize<sp/>&amp;<sp/>szDelta)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>())</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>CWnd<sp/><sp/><sp/><sp/>*pWnd<sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a65185ac2d1250c42f81a5fdc3d59aa6d" kindref="member">Window</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>pWnd-&gt;GetWindowPlacement(&amp;wpl);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/><sp/>szDelta.cx<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/><sp/>(szDelta.cx<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/><sp/>szDelta.cy<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>+=<sp/><sp/>(szDelta.cy<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>wpl.flags<sp/><sp/><sp/>=<sp/><sp/><sp/>SW_SHOWNA|SW_SHOWNOACTIVATE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((wpl.rcNormalPosition.left<sp/>&gt;=<sp/>wpl.rcNormalPosition.right)<sp/>||</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wpl.rcNormalPosition.top<sp/>&gt;=<sp/>wpl.rcNormalPosition.bottom))</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>pWnd-&gt;SetWindowPos(NULL,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/>-<sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>-<sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWP_NOACTIVATE|SWP_NOOWNERZORDER|SWP_NOZORDER)<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>stretch<sp/>window<sp/>by<sp/>a<sp/>percent<sp/>value</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>the<sp/>algorithm<sp/>calculates<sp/>the<sp/>new<sp/>size<sp/>for<sp/>both<sp/>dimensions<sp/>by:</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/>newWid<sp/>=<sp/>oldWid<sp/>+<sp/>(oldWid<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>iAddPcnt<sp/>may<sp/>even<sp/>be<sp/>nagtive,<sp/>but<sp/>it<sp/>MUST<sp/>be<sp/>greater<sp/>than<sp/>-100.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>function<sp/>does<sp/>NOT<sp/>care<sp/>of<sp/>the<sp/>min/max<sp/>dimensions<sp/>of<sp/>a<sp/>window</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>will<sp/>return<sp/>false<sp/>if<sp/>the<sp/>new<sp/>size<sp/>would<sp/>be<sp/>empty.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a2553916ac779ce37e244ccd94c08b3e6" kindref="member">cdxCDynamicWndEx::StretchWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAddPcnt)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>CSize<sp/><sp/><sp/>szDelta<sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1acec8627cfedd0903f889915b9000b4f6" kindref="member">GetCurrentClientSize</ref>()<sp/>+<sp/><ref refid="classcdx_c_dynamic_wnd_1afba9bc280dc4d2d5113c43117c2b8bdf" kindref="member">GetBorderSize</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cx<sp/><sp/>=<sp/><sp/><sp/>(szDelta.cx<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>szDelta.cy<sp/><sp/>=<sp/><sp/><sp/>(szDelta.cy<sp/>*<sp/>iAddPcnt)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a2553916ac779ce37e244ccd94c08b3e6" kindref="member">StretchWindow</ref>(szDelta);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">//<sp/>cdxCDynamicWndEx<sp/>registry<sp/>positioning</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>stores<sp/>a<sp/>window&apos;s<sp/>position<sp/>and<sp/>visiblity<sp/>to<sp/>the<sp/>registry.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/>return<sp/>false<sp/>if<sp/>any<sp/>error<sp/>occured</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a49c2a39c30eb6a362116199c8075f17e" kindref="member">cdxCDynamicWndEx::StoreWindowPosition</ref>(LPCTSTR<sp/>lpszProfile,<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CString<sp/>&amp;entryPrefix)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>()<sp/>||<sp/>!lpszProfile<sp/>||<sp/>!*lpszProfile)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>CWnd<sp/><sp/><sp/><sp/>*pWnd<sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a65185ac2d1250c42f81a5fdc3d59aa6d" kindref="member">Window</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>pWnd-&gt;GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/>bVisible<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>pWnd-&gt;IsWindowVisible();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pWnd-&gt;IsIconic())</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" kindref="member">REGVAL_ICONIC</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pWnd-&gt;IsZoomed())</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState<sp/><sp/>=<sp/><sp/><sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" kindref="member">REGVAL_MAXIMIZED</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>CWinApp<sp/>*app<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!app-&gt;m_pszRegistryKey<sp/>||<sp/>!*app-&gt;m_pszRegistryKey)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE(_T(</highlight><highlight class="stringliteral">&quot;***<sp/>NOTE[cdxCDynamicWndEx::StoreWindowPosition()]:<sp/>To<sp/>properly<sp/>store<sp/>and<sp/>restore<sp/>a<sp/>window&apos;s<sp/>position,<sp/>please<sp/>call<sp/>CWinApp::SetRegistryKey()<sp/>in<sp/>you<sp/>app&apos;s<sp/>InitInstance()<sp/>!¥n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Valid,<sp/><sp/><sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" kindref="member">REGVAL_INVALID</ref>)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>invalidate<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Top,<sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Bottom,<sp/><sp/>wpl.rcNormalPosition.bottom)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Visible,<sp/>bVisible<sp/>?<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a3901b35142c12986bdc8f9fce456629d" kindref="member">REGVAL_VISIBLE</ref><sp/>:<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a61dc71cabfd97d88307276e8ad9bde40" kindref="member">REGVAL_HIDDEN</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_State,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iState)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app-&gt;WriteProfileInt(lpszProfile,<sp/><sp/><sp/>entryPrefix+lpszRegVal_Valid,<sp/><sp/><sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a519de1df4ec14efe8f28995e65256964" kindref="member">REGVAL_VALID</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>load<sp/>the<sp/>registry<sp/>data<sp/>stored<sp/>by<sp/>StoreWindowPosition()</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>returns<sp/>true<sp/>if<sp/>data<sp/>have<sp/>been<sp/>found<sp/>in<sp/>the<sp/>registry</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a827b16886b50bf46fdaacf3c2d96dcc6" kindref="member">cdxCDynamicWndEx::RestoreWindowPosition</ref>(LPCTSTR<sp/>lpszProfile,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CString<sp/>&amp;entryPrefix,<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/>restoreFlags)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classcdx_c_dynamic_wnd_1aff6e5b3178956b7d7c8336cdea6e444c" kindref="member">IsWindow</ref>()<sp/>||<sp/>!lpszProfile<sp/>||<sp/>!*lpszProfile)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>CWnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pWnd<sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1a65185ac2d1250c42f81a5fdc3d59aa6d" kindref="member">Window</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>CWinApp<sp/>*app<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>AfxGetApp();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!app-&gt;m_pszRegistryKey<sp/>||<sp/>!*app-&gt;m_pszRegistryKey)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE(_T(</highlight><highlight class="stringliteral">&quot;***<sp/>NOTE[cdxCDynamicWndEx::RestoreWindowPosition()]:<sp/>To<sp/>properly<sp/>store<sp/>and<sp/>restore<sp/>a<sp/>window&apos;s<sp/>position,<sp/>please<sp/>call<sp/>CWinApp::SetRegistryKey()<sp/>in<sp/>you<sp/>app&apos;s<sp/>InitInstance()<sp/>!¥n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>we<sp/>check<sp/>whether<sp/>the<sp/>position<sp/>had<sp/>been<sp/>saved<sp/>successful<sp/>any<sp/>time<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>app-&gt;GetProfileInt(lpszProfile,entryPrefix+lpszRegVal_Valid,<ref refid="cdx_c_dynamic_wnd_ex_8cpp_1ad53e8a25c42b3d2db0bb644ec1d66ac1" kindref="member">REGVAL_INVALID</ref>)<sp/>!=<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a519de1df4ec14efe8f28995e65256964" kindref="member">REGVAL_VALID</ref><sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>old<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>WINDOWPLACEMENT<sp/>wpl;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>pWnd-&gt;GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iState<sp/><sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_State,<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>window&apos;s<sp/>previous<sp/>normal<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_Top,<sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_Bottom,<sp/><sp/>wpl.rcNormalPosition.bottom);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wpl.rcNormalPosition.left<sp/>&gt;<sp/>wpl.rcNormalPosition.right)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/><sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.right;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.left;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.left<sp/><sp/><sp/>=<sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wpl.rcNormalPosition.top<sp/>&gt;<sp/>wpl.rcNormalPosition.bottom)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/><sp/><sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.bottom;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>=<sp/><sp/><sp/>wpl.rcNormalPosition.top;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.top<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>restore<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_SHOWNA;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(restoreFlags<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a71d426cfe5335a36f4f455d670d2b550a894a54cf52a4d0ec5d4176ea6874b1e3" kindref="member">rflg_state</ref>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iState<sp/>==<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a9ed64215eb89cdd0f7435c0da76c18d6" kindref="member">REGVAL_MAXIMIZED</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_MAXIMIZE;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iState<sp/>==<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a6efedf10c22e4293490dae2101e4c8ec" kindref="member">REGVAL_ICONIC</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>=<sp/><sp/><sp/>SW_MINIMIZE;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>MoveWindow()<sp/>which<sp/>takes<sp/>care<sp/>of<sp/>WM_GETMINMAXINFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>pWnd-&gt;MoveWindow(<sp/><sp/><sp/>wpl.rcNormalPosition.left,wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.right<sp/>-<sp/>wpl.rcNormalPosition.left,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.rcNormalPosition.bottom<sp/>-<sp/>wpl.rcNormalPosition.top,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCmd<sp/>==<sp/>SW_SHOWNA);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showCmd<sp/>!=<sp/>SW_SHOWNA)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>updated<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VERIFY(<sp/>pWnd-&gt;GetWindowPlacement(&amp;wpl)<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wpl.showCmd<sp/>=<sp/><sp/><sp/>showCmd;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWnd-&gt;SetWindowPlacement(&amp;wpl);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visiblity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(restoreFlags<sp/>&amp;<sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a71d426cfe5335a36f4f455d670d2b550a96c47307e9f14383c07d28f0a8b5195b" kindref="member">rflg_visibility</ref>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/>=<sp/><sp/><sp/>app-&gt;GetProfileInt(lpszProfile,<sp/>entryPrefix+lpszRegVal_Visible,<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a20adb7acb665efc8ad213383d5aab12a" kindref="member">REGVAL_NOSTATE</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/><ref refid="cdx_c_dynamic_wnd_ex_8cpp_1a3901b35142c12986bdc8f9fce456629d" kindref="member">REGVAL_VISIBLE</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWnd-&gt;ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>REGVAL_HIDDEN)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWnd-&gt;ShowWindow(SW_HIDE);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/DynamicWindow/cdxCDynamicWndEx.cpp"/>
  </compounddef>
</doxygen>
