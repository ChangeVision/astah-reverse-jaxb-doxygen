<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_mfc_test_runner_8cpp" kind="file">
    <compoundname>MfcTestRunner.cpp</compoundname>
    <includes refid="testrunner_2_std_afx_8h" local="yes">StdAfx.h</includes>
    <includes local="no">cppunit/ui/mfc/MfcTestRunner.h</includes>
    <includes local="no">cppunit/TestSuite.h</includes>
    <includes refid="msvc6_2testrunner_2_test_runner_model_8h" local="yes">TestRunnerModel.h</includes>
    <includes refid="_test_runner_dlg_8h" local="yes">TestRunnerDlg.h</includes>
    <incdepgraph>
      <node id="985">
        <label>cppunit/ui/mfc/MfcTestRunner.h</label>
      </node>
      <node id="984">
        <label>afxcmn.h</label>
      </node>
      <node id="982">
        <label>afxdb.h</label>
      </node>
      <node id="980">
        <label>afxodlgs.h</label>
      </node>
      <node id="979">
        <label>afxole.h</label>
      </node>
      <node id="978">
        <label>afxext.h</label>
      </node>
      <node id="996">
        <label>cppunit/TestResultCollector.h</label>
      </node>
      <node id="998">
        <label>afxmt.h</label>
      </node>
      <node id="999">
        <label>cppunit/extensions/TestDecorator.h</label>
      </node>
      <node id="1001">
        <label>DynamicWindow/cdxCDynamicDialog.h</label>
        <link refid="cdx_c_dynamic_dialog_8h"/>
        <childnode refid="1002" relation="include">
        </childnode>
      </node>
      <node id="986">
        <label>cppunit/TestSuite.h</label>
      </node>
      <node id="1003">
        <label>cdxCDynamicWnd.h</label>
        <link refid="cdx_c_dynamic_wnd_8h"/>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
      </node>
      <node id="990">
        <label>TestRunnerDlg.h</label>
        <link refid="_test_runner_dlg_8h"/>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
      </node>
      <node id="1004">
        <label>afxtempl.h</label>
      </node>
      <node id="995">
        <label>cppunit/TestListener.h</label>
      </node>
      <node id="993">
        <label>cppunit/Exception.h</label>
      </node>
      <node id="991">
        <label>resource.h</label>
        <link refid="testrunner_2resource_8h"/>
      </node>
      <node id="1000">
        <label>MsDevCallerListCtrl.h</label>
        <link refid="_ms_dev_caller_list_ctrl_8h"/>
      </node>
      <node id="983">
        <label>afxdao.h</label>
      </node>
      <node id="997">
        <label>ActiveTest.h</label>
        <link refid="_active_test_8h"/>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="992">
        <label>vector</label>
      </node>
      <node id="1002">
        <label>cdxCDynamicWndEx.h</label>
        <link refid="cdx_c_dynamic_wnd_ex_8h"/>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="994">
        <label>cppunit/TestResult.h</label>
      </node>
      <node id="988">
        <label>deque</label>
      </node>
      <node id="981">
        <label>afxdisp.h</label>
      </node>
      <node id="976">
        <label>StdAfx.h</label>
        <link refid="testrunner_2_std_afx_8h"/>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>TestRunnerModel.h</label>
        <link refid="msvc6_2testrunner_2_test_runner_model_8h"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
      </node>
      <node id="977">
        <label>afxwin.h</label>
      </node>
      <node id="989">
        <label>cppunit/Test.h</label>
      </node>
      <node id="975">
        <label>src/msvc6/testrunner/MfcTestRunner.cpp</label>
        <link refid="MfcTestRunner.cpp"/>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>file<sp/>MfcTestRunner.cpp<sp/>for<sp/>class<sp/>MfcTestRunner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(c)Copyright<sp/>2000,<sp/>Baptiste<sp/>Lepilleur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/>2001/04/26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testrunner_2_std_afx_8h" kindref="compound">StdAfx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/ui/mfc/MfcTestRunner.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cppunit/TestSuite.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="msvc6_2testrunner_2_test_runner_model_8h" kindref="compound">TestRunnerModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_test_runner_dlg_8h" kindref="compound">TestRunnerDlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">CPPUNIT_NS_BEGIN</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">MfcTestRunner::MfcTestRunner()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>:<sp/>m_suite(<sp/>new<sp/>CPPUNIT_NS::TestSuite()<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">MfcTestRunner::â€¾MfcTestRunner()<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_suite;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Tests::iterator<sp/>it<sp/>=<sp/>m_tests.begin();<sp/>it<sp/>!=<sp/>m_tests.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*it;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal">MfcTestRunner::run()<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>comInit<sp/>=<sp/>SUCCEEDED(<sp/>CoInitialize(<sp/>NULL)<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_model" kindref="compound">TestRunnerModel</ref><sp/>model(<sp/>getRootTest()<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="class_test_runner_dlg" kindref="compound">TestRunnerDlg</ref><sp/>dlg(<sp/>&amp;model<sp/>);<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>dlg.DoModal<sp/>();<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>comInit)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">MfcTestRunner::addTest(<sp/>CPPUNIT_NS::Test<sp/>*test<sp/>)<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>m_tests.push_back(<sp/>test<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">MfcTestRunner::addTests(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CppUnitVector&lt;CPPUNIT_NS::Test<sp/>*&gt;<sp/>&amp;tests<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Tests::const_iterator<sp/>it=tests.begin();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>tests.end();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>addTest(<sp/>*it<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">CPPUNIT_NS::Test<sp/>*<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal">MfcTestRunner::getRootTest()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_tests.size()<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Tests::iterator<sp/>it<sp/>=<sp/>m_tests.begin();<sp/>it<sp/>!=<sp/>m_tests.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_suite-&gt;addTest(<sp/>*it<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tests.clear();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_suite;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tests[0];</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">CPPUNIT_NS_END</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/MfcTestRunner.cpp"/>
  </compounddef>
</doxygen>
