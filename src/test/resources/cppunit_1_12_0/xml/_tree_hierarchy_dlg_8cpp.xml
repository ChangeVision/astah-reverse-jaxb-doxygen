<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_tree_hierarchy_dlg_8cpp" kind="file">
    <compoundname>TreeHierarchyDlg.cpp</compoundname>
    <includes refid="testrunner_2_std_afx_8h" local="yes">stdafx.h</includes>
    <includes refid="testrunner_2resource_8h" local="yes">resource.h</includes>
    <includes refid="_tree_hierarchy_dlg_8h" local="yes">TreeHierarchyDlg.h</includes>
    <includes refid="msvc6_2testrunner_2_test_runner_model_8h" local="yes">TestRunnerModel.h</includes>
    <includes refid="_resource_loaders_8h" local="yes">ResourceLoaders.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="1274">
        <label>afxcmn.h</label>
      </node>
      <node id="1272">
        <label>afxdb.h</label>
      </node>
      <node id="1270">
        <label>afxodlgs.h</label>
      </node>
      <node id="1269">
        <label>afxole.h</label>
      </node>
      <node id="1268">
        <label>afxext.h</label>
      </node>
      <node id="1279">
        <label>DynamicWindow/cdxCDynamicDialog.h</label>
        <link refid="cdx_c_dynamic_dialog_8h"/>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>ResourceLoaders.h</label>
        <link refid="_resource_loaders_8h"/>
      </node>
      <node id="1281">
        <label>cdxCDynamicWnd.h</label>
        <link refid="cdx_c_dynamic_wnd_8h"/>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>afxtempl.h</label>
      </node>
      <node id="1275">
        <label>resource.h</label>
        <link refid="testrunner_2resource_8h"/>
      </node>
      <node id="1273">
        <label>afxdao.h</label>
      </node>
      <node id="1278">
        <label>vector</label>
      </node>
      <node id="1280">
        <label>cdxCDynamicWndEx.h</label>
        <link refid="cdx_c_dynamic_wnd_ex_8h"/>
        <childnode refid="1281" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>deque</label>
      </node>
      <node id="1271">
        <label>afxdisp.h</label>
      </node>
      <node id="1265">
        <label>src/msvc6/testrunner/TreeHierarchyDlg.cpp</label>
        <link refid="TreeHierarchyDlg.cpp"/>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
      </node>
      <node id="1266">
        <label>stdafx.h</label>
        <link refid="testrunner_2_std_afx_8h"/>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>TestRunnerModel.h</label>
        <link refid="msvc6_2testrunner_2_test_runner_model_8h"/>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
      </node>
      <node id="1267">
        <label>afxwin.h</label>
      </node>
      <node id="1277">
        <label>cppunit/Test.h</label>
      </node>
      <node id="1286">
        <label>algorithm</label>
      </node>
      <node id="1276">
        <label>TreeHierarchyDlg.h</label>
        <link refid="_tree_hierarchy_dlg_8h"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_pred_sort_test" prot="public">PredSortTest</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TreeHierarchyDlg.cpp<sp/>:<sp/>implementation<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testrunner_2_std_afx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testrunner_2resource_8h" kindref="compound">resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tree_hierarchy_dlg_8h" kindref="compound">TreeHierarchyDlg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="msvc6_2testrunner_2_test_runner_model_8h" kindref="compound">TestRunnerModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_resource_loaders_8h" kindref="compound">ResourceLoaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]<sp/>=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">//<sp/>TreeHierarchyDlg<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a5aacfce6b0d1b8dd62085b42ac249fc2" kindref="member">TreeHierarchyDlg::TreeHierarchyDlg</ref>(CWnd*<sp/>pParent<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcdx_c_dynamic_dialog" kindref="compound">cdxCDynamicDialog</ref>(_T(</highlight><highlight class="stringliteral">&quot;CPP_UNIT_TEST_RUNNER_IDD_DIALOG_TEST_HIERARCHY&quot;</highlight><highlight class="normal">),<sp/>pParent)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>,<sp/>m_selectedTest(<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>ModifyFlags(<sp/>flSWPCopyBits,<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anti-flickering<sp/>option<sp/>for<sp/>resizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_INIT(TreeHierarchyDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>ClassWizard<sp/>will<sp/>add<sp/>member<sp/>initialization<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a35db73adfa7d5d7848e36eb9caa894f4" kindref="member">TreeHierarchyDlg::DoDataExchange</ref>(CDataExchange*<sp/>pDX)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cdxCDynamicDialog::DoDataExchange(pDX);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_MAP(TreeHierarchyDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/><ref refid="testpluginrunner_2resource_8h_1ad737bf6222671bf73835eef5cc1b5053" kindref="member">IDC_TREE_TEST</ref>,<sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_tree_hierarchy_dlg" kindref="compound">TreeHierarchyDlg</ref>,<sp/><ref refid="classcdx_c_dynamic_dialog" kindref="compound">cdxCDynamicDialog</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_MSG_MAP(TreeHierarchyDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_MSG_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg" kindref="compound">TreeHierarchyDlg</ref>::setRootTest(<sp/>CPPUNIT_NS::Test<sp/>*test<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>m_rootTest<sp/>=<sp/>test;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">BOOL<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1ae0c1e4e9e55ae5b899664ba9acbc6a2c" kindref="member">TreeHierarchyDlg::OnInitDialog</ref>()<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_dialog_1a30717db3da910f64e258488d4b6abd82" kindref="member">cdxCDynamicDialog::OnInitDialog</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>fillTree();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="class_tree_hierarchy_dlg_1a79e57a44637739725e58bf06ea58c670" kindref="member">initializeLayout</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a827b16886b50bf46fdaacf3c2d96dcc6" kindref="member">RestoreWindowPosition</ref>(<sp/><ref refid="class_test_runner_model_1a27206a66322c9fe42a2709776905d2ef" kindref="member">TestRunnerModel::settingKey</ref>,<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_runner_model_1ac431acb0b47dc908dd1fc26d72de1d27" kindref="member">TestRunnerModel::settingBrowseDialogKey</ref><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a79e57a44637739725e58bf06ea58c670" kindref="member">TreeHierarchyDlg::initializeLayout</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>DynamicWindow/doc<sp/>for<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1aab501afa53878046aa6e669156000453" kindref="member">AddSzControl</ref>(<sp/><ref refid="testpluginrunner_2resource_8h_1ad737bf6222671bf73835eef5cc1b5053" kindref="member">IDC_TREE_TEST</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855ac89e0019f91dc08bd456db7a4f913f3e" kindref="member">mdResize</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855ac89e0019f91dc08bd456db7a4f913f3e" kindref="member">mdResize</ref><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1aab501afa53878046aa6e669156000453" kindref="member">AddSzControl</ref>(<sp/>IDOK,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a1f27dab35aa9c3507af936030b812292" kindref="member">mdRepos</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a75188eab2b611945a8002c37b594f71c" kindref="member">mdNone</ref><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_1aab501afa53878046aa6e669156000453" kindref="member">AddSzControl</ref>(<sp/>IDCANCEL,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a1f27dab35aa9c3507af936030b812292" kindref="member">mdRepos</ref>,<sp/><ref refid="classcdx_c_dynamic_wnd_1aef5dd409b72bb63a44a6917fe848e855a75188eab2b611945a8002c37b594f71c" kindref="member">mdNone</ref><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal">TreeHierarchyDlg::fillTree()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>VERIFY(<sp/>m_imageList.Create(<sp/>_T(</highlight><highlight class="stringliteral">&quot;CPP_UNIT_TEST_RUNNER_IDB_TEST_TYPE&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16,<sp/>1,<sp/>RGB(<sp/>255,0,255<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.SetImageList(<sp/>&amp;m_imageList,<sp/>TVSIL_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>HTREEITEM<sp/>hSuite<sp/>=<sp/>addTest(<sp/>m_rootTest,<sp/>TVI_ROOT<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.Expand(<sp/>hSuite,<sp/>TVE_EXPAND<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">HTREEITEM</highlight></codeline>
<codeline lineno="96"><highlight class="normal">TreeHierarchyDlg::addTest(<sp/>CPPUNIT_NS::Test<sp/>*test,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HTREEITEM<sp/>hParent<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testType<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a9d716b1815dbc2dbb977f0348e9f417d" kindref="member">isSuite</ref>(<sp/>test<sp/>)<sp/>?<sp/>imgSuite<sp/>:<sp/>imgUnitTest;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>HTREEITEM<sp/>hItem<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.InsertItem(<sp/>CString(test-&gt;getName().c_str()),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testType,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testType,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hParent<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hItem<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.SetItemData(<sp/>hItem,<sp/>(DWORD)test<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_tree_hierarchy_dlg_1a9d716b1815dbc2dbb977f0348e9f417d" kindref="member">isSuite</ref>(<sp/>test<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addTestSuiteChildrenTo(<sp/>test,<sp/>hItem<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hItem;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">TreeHierarchyDlg::addTestSuiteChildrenTo(<sp/>CPPUNIT_NS::Test<sp/>*suite,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HTREEITEM<sp/>hItemSuite<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>Tests<sp/>tests;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>childIndex<sp/>&lt;<sp/>suite-&gt;getChildTestCount();<sp/>++childIndex<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>tests.push_back(<sp/>suite-&gt;getChildTestAt(<sp/>childIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>sortByName(<sp/>tests<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>childIndex<sp/>=<sp/>0;<sp/>childIndex<sp/>&lt;<sp/>suite-&gt;getChildTestCount();<sp/>++childIndex<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>addTest(<sp/>suite-&gt;getChildTestAt(<sp/>childIndex<sp/>),<sp/>hItemSuite<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a9d716b1815dbc2dbb977f0348e9f417d" kindref="member">TreeHierarchyDlg::isSuite</ref>(<sp/>CPPUNIT_NS::Test<sp/>*test<sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>test-&gt;getChildTestCount()<sp/>&gt;<sp/>0<sp/><sp/>||<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suite<sp/>with<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test-&gt;countTestCases()<sp/>==<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>suite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_pred_sort_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pred_sort_test" kindref="compound">PredSortTest</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_pred_sort_test_1a052d1bd17781af73166b21bc887962f5" kindref="member">operator()</ref>(<sp/>CPPUNIT_NS::Test<sp/>*test1,<sp/>CPPUNIT_NS::Test<sp/>*test2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTest1Suite<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a9d716b1815dbc2dbb977f0348e9f417d" kindref="member">TreeHierarchyDlg::isSuite</ref>(<sp/>test1<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTest2Suite<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a9d716b1815dbc2dbb977f0348e9f417d" kindref="member">TreeHierarchyDlg::isSuite</ref>(<sp/>test2<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isTest1Suite<sp/><sp/>&amp;&amp;<sp/><sp/>!isTest2Suite<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isTest1Suite<sp/><sp/>&amp;&amp;<sp/><sp/>isTest2Suite<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test1-&gt;getName()<sp/>&lt;<sp/>test2-&gt;getName();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal">TreeHierarchyDlg::sortByName(<sp/>Tests<sp/>&amp;tests<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>std::stable_sort(<sp/>tests.begin(),<sp/>tests.end(),<sp/><ref refid="struct_pred_sort_test" kindref="compound">PredSortTest</ref>()<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a1d107774b282c915023d941881a8f0c3" kindref="member">TreeHierarchyDlg::OnOK</ref>()<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>CPPUNIT_NS::Test<sp/>*test<sp/>=<sp/>findSelectedTest();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>AfxMessageBox(<sp/><ref refid="_resource_loaders_8cpp_1aa255ea390679e0f2e689650982ea1195" kindref="member" tooltip="loads a CString from the test runner DLL module ">loadCString</ref>(<ref refid="testpluginrunner_2resource_8h_1a3f8bc19bdd7038a9399308c516254f36" kindref="member">IDS_ERROR_SELECT_TEST</ref>),<sp/>MB_OK<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>m_selectedTest<sp/>=<sp/>test;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="class_tree_hierarchy_dlg_1ae9eb5a5d00498c4123cc5fb05edc30cf" kindref="member">storeDialogBounds</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>cdxCDynamicDialog::OnOK();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a06051448e2a3f34934df04f775d7ba3d" kindref="member">TreeHierarchyDlg::OnCancel</ref>()<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="class_tree_hierarchy_dlg_1ae9eb5a5d00498c4123cc5fb05edc30cf" kindref="member">storeDialogBounds</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>cdxCDynamicDialog::OnCancel();</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">CPPUNIT_NS::Test<sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="normal">TreeHierarchyDlg::findSelectedTest()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>HTREEITEM<sp/>hItem<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.GetSelectedItem();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hItem<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>data;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>VERIFY(<sp/>data<sp/>=<sp/><ref refid="class_tree_hierarchy_dlg_1a6b4b407d4dcab2694bd4749e5e916502" kindref="member">m_treeTests</ref>.GetItemData(<sp/>hItem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">CPPUNIT_NS::Test<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">CPPUNIT_NS::Test<sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1a633ea26b67c1fe353981fcbeef745c4a" kindref="member">TreeHierarchyDlg::getSelectedTest</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_selectedTest;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="class_tree_hierarchy_dlg_1ae9eb5a5d00498c4123cc5fb05edc30cf" kindref="member">TreeHierarchyDlg::storeDialogBounds</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classcdx_c_dynamic_wnd_ex_1a49c2a39c30eb6a362116199c8075f17e" kindref="member">StoreWindowPosition</ref>(<sp/><ref refid="class_test_runner_model_1a27206a66322c9fe42a2709776905d2ef" kindref="member">TestRunnerModel::settingKey</ref>,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_test_runner_model_1ac431acb0b47dc908dd1fc26d72de1d27" kindref="member">TestRunnerModel::settingBrowseDialogKey</ref><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/cppunit-1.12.0/src/msvc6/testrunner/TreeHierarchyDlg.cpp"/>
  </compounddef>
</doxygen>
