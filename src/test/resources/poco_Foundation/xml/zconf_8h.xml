<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="zconf_8h" kind="file">
    <compoundname>zconf.h</compoundname>
    <includedby refid="zlib_8h" local="yes">src/zlib.h</includedby>
    <invincdepgraph>
      <node id="1780">
        <label>src/inffast.c</label>
        <link refid="inffast_8c"/>
      </node>
      <node id="1778">
        <label>src/trees.c</label>
        <link refid="trees_8c"/>
      </node>
      <node id="1774">
        <label>src/adler32.c</label>
        <link refid="adler32_8c"/>
      </node>
      <node id="1781">
        <label>src/inflate.c</label>
        <link refid="inflate_8c"/>
      </node>
      <node id="1771">
        <label>src/zconf.h</label>
        <link refid="zconf.h"/>
        <childnode refid="1772" relation="include">
        </childnode>
      </node>
      <node id="1784">
        <label>src/compress.c</label>
        <link refid="compress_8c"/>
      </node>
      <node id="1777">
        <label>src/deflate.c</label>
        <link refid="deflate_8c"/>
      </node>
      <node id="1776">
        <label>src/deflate.h</label>
        <link refid="deflate_8h"/>
        <childnode refid="1777" relation="include">
        </childnode>
        <childnode refid="1778" relation="include">
        </childnode>
      </node>
      <node id="1783">
        <label>src/zutil.c</label>
        <link refid="zutil_8c"/>
      </node>
      <node id="1773">
        <label>src/zutil.h</label>
        <link refid="zutil_8h"/>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1779" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1781" relation="include">
        </childnode>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1783" relation="include">
        </childnode>
      </node>
      <node id="1772">
        <label>src/zlib.h</label>
        <link refid="zlib_8h"/>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
      </node>
      <node id="1775">
        <label>src/crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="1779">
        <label>src/infback.c</label>
        <link refid="infback_8c"/>
      </node>
      <node id="1782">
        <label>src/inftrees.c</label>
        <link refid="inftrees_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" prot="public" static="no">
        <name>const</name>
        <initializer>/* note: need a more gentle solution here */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="196" column="13" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a8e9fefb3d20386851ca693946127ab2e" prot="public" static="no">
        <name>MAX_MEM_LEVEL</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="210" column="16" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1abd2f406ac1f9c49236376115d78ccb5b" prot="public" static="no">
        <name>MAX_WBITS</name>
        <initializer>15 /* 32K LZ77 window */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="220" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" prot="public" static="no">
        <name>OF</name>
        <param><defname>args</defname></param>
        <initializer>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="242" column="16" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a49b7f5eccfcc99e53178581632bc9589" prot="public" static="no">
        <name>ZEXTERN</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="319" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a181415878f03b95a7094309d824a14b6" prot="public" static="no">
        <name>ZEXPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="322" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1af38d1853df635eee27f1a02f96457b22" prot="public" static="no">
        <name>ZEXPORTVA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="325" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" prot="public" static="no">
        <name>FAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="329" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a0d112bae8fd35be772185b6ec6bcbe64" prot="public" static="no">
        <name>SEEK_SET</name>
        <initializer>0       /* Seek from beginning of file.  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="390" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a4c8d0b76b470ba65a43ca46a88320f39" prot="public" static="no">
        <name>SEEK_CUR</name>
        <initializer>1       /* Seek from current position.  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="391" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1ad2a2e6c114780c3071efd24f16c7f7d8" prot="public" static="no">
        <name>SEEK_END</name>
        <initializer>2       /* Set file pointer to EOF plus &quot;offset&quot; */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="392" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" prot="public" static="no">
        <name>z_off_t</name>
        <initializer>long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="396" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zconf_8h_1ab9923767082c7a76924b31493e60d42c" prot="public" static="no">
        <name>z_off64_t</name>
        <initializer><ref refid="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" kindref="member">z_off_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="402" column="12" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="zconf_8h_1ae3a497195d617519e5353ea7b417940f" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char Byte</definition>
        <argsstring></argsstring>
        <name>Byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="333" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uInt</definition>
        <argsstring></argsstring>
        <name>uInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="335" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long uLong</definition>
        <argsstring></argsstring>
        <name>uLong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="336" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" prot="public" static="no">
        <type><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref></type>
        <definition>typedef Byte Bytef</definition>
        <argsstring></argsstring>
        <name>Bytef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="342" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1a864fa0e2e4e499038305f3276990689b" prot="public" static="no">
        <type>char</type>
        <definition>typedef char charf</definition>
        <argsstring></argsstring>
        <name>charf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="344" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1a7c2da1a4711ea1e7cbf3174d4f5dda9b" prot="public" static="no">
        <type>int</type>
        <definition>typedef int intf</definition>
        <argsstring></argsstring>
        <name>intf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="345" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1a827d5110673ec09ae937156532f7c208" prot="public" static="no">
        <type><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref></type>
        <definition>typedef uInt uIntf</definition>
        <argsstring></argsstring>
        <name>uIntf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="346" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1ace0e0570092c9eb6acd3c85f88cc97ec" prot="public" static="no">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>typedef uLong uLongf</definition>
        <argsstring></argsstring>
        <name>uLongf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="347" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1a2c81736dda4a3a3f349a054031876954" prot="public" static="no">
        <type><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref> *</type>
        <definition>typedef Byte* voidpc</definition>
        <argsstring></argsstring>
        <name>voidpc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="354" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" prot="public" static="no">
        <type><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref> *</type>
        <definition>typedef Byte* voidpf</definition>
        <argsstring></argsstring>
        <name>voidpf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="355" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zconf_8h_1aa3397ff439b5e076528b04bc9b8b086a" prot="public" static="no">
        <type><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref> *</type>
        <definition>typedef Byte* voidp</definition>
        <argsstring></argsstring>
        <name>voidp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" line="356" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>zconf.h<sp/>--<sp/>configuration<sp/>of<sp/>the<sp/>zlib<sp/>compression<sp/>library</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995-2010<sp/>Jean-loup<sp/>Gailly.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>copyright<sp/>notice<sp/>in<sp/>zlib.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@(#)<sp/>$Id:<sp/>//poco/1.4/Foundation/src/zconf.h#4<sp/>$<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZCONF_H</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZCONF_H</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>*really*<sp/>need<sp/>a<sp/>unique<sp/>prefix<sp/>for<sp/>all<sp/>types<sp/>and<sp/>library<sp/>functions,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>compile<sp/>with<sp/>-DZ_PREFIX.<sp/>The<sp/>&quot;standard&quot;<sp/>zlib<sp/>should<sp/>be<sp/>compiled<sp/>without<sp/>it.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Even<sp/>better<sp/>than<sp/>compiling<sp/>with<sp/>-DZ_PREFIX<sp/>would<sp/>be<sp/>to<sp/>use<sp/>configure<sp/>to<sp/>set</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>this<sp/>permanently<sp/>in<sp/>zconf.h<sp/>using<sp/>&quot;./configure<sp/>--zprefix&quot;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Z_PREFIX<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>be<sp/>set<sp/>to<sp/>#if<sp/>1<sp/>by<sp/>./configure<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>all<sp/>linked<sp/>symbols<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_dist_code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__dist_code</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_length_code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__length_code</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_tr_align<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__tr_align</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_tr_flush_block<sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__tr_flush_block</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_tr_init<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__tr_init</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_tr_stored_block<sp/><sp/><sp/><sp/><sp/><sp/>z__tr_stored_block</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_tr_tally<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z__tr_tally</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>adler32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_adler32</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>adler32_combine<sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_adler32_combine</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>adler32_combine64<sp/><sp/><sp/><sp/><sp/>z_adler32_combine64</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>compress<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_compress</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>compress2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_compress2</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>compressBound<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_compressBound</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>crc32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_crc32</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>crc32_combine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_crc32_combine</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>crc32_combine64<sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_crc32_combine64</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflate</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateBound<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateBound</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateCopy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateCopy</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateEnd</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateInit2_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateInit2_</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateInit_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateInit_</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateParams<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateParams</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflatePrime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflatePrime</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateReset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateReset</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateSetDictionary<sp/><sp/>z_deflateSetDictionary</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateSetHeader<sp/><sp/><sp/><sp/><sp/><sp/>z_deflateSetHeader</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflateTune<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_deflateTune</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>deflate_copyright<sp/><sp/><sp/><sp/><sp/>z_deflate_copyright</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>get_crc_table<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_get_crc_table</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_error</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_intmax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_intmax</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_strwinerror<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_strwinerror</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzbuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzbuffer</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzclearerr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzclearerr</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzclose<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzclose</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzclose_r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzclose_r</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzclose_w<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzclose_w</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzdirect<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzdirect</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzdopen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzdopen</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzeof<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzeof</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzerror<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzerror</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzflush<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzflush</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzgetc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzgetc</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzgets<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzgets</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzoffset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzoffset</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzoffset64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzoffset64</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzopen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzopen</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzopen64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzopen64</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzprintf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzprintf</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzputc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzputc</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzputs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzputs</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzread<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzread</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzrewind<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzrewind</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzseek<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzseek</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzseek64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzseek64</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzsetparams<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzsetparams</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gztell<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gztell</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gztell64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gztell64</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzungetc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzungetc</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzwrite<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzwrite</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflate</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateBack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateBack</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateBackEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateBackEnd</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateBackInit_<sp/><sp/><sp/><sp/><sp/><sp/>z_inflateBackInit_</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateCopy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateCopy</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateEnd</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateGetHeader<sp/><sp/><sp/><sp/><sp/><sp/>z_inflateGetHeader</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateInit2_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateInit2_</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateInit_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateInit_</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateMark<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateMark</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflatePrime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflatePrime</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateReset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateReset</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateReset2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateReset2</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateSetDictionary<sp/><sp/>z_inflateSetDictionary</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateSync<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflateSync</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateSyncPoint<sp/><sp/><sp/><sp/><sp/><sp/>z_inflateSyncPoint</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflateUndermine<sp/><sp/><sp/><sp/><sp/><sp/>z_inflateUndermine</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflate_copyright<sp/><sp/><sp/><sp/><sp/>z_inflate_copyright</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflate_fast<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflate_fast</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>inflate_table<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_inflate_table</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>uncompress<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_uncompress</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>zError<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_zError</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>zcalloc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_zcalloc</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>zcfree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_zcfree</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>zlibCompileFlags<sp/><sp/><sp/><sp/><sp/><sp/>z_zlibCompileFlags</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>zlibVersion<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_zlibVersion</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>all<sp/>zlib<sp/>typedefs<sp/>in<sp/>zlib.h<sp/>and<sp/>zconf.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_Byte</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Bytef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_Bytef</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>alloc_func<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_alloc_func</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>charf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_charf</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>free_func<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_free_func</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gzFile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gzFile</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_header</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_headerp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_headerp</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>in_func<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_in_func</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>intf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_intf</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>out_func<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_out_func</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>uInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_uInt</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>uIntf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_uIntf</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>uLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_uLong</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>uLongf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_uLongf</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>voidp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_voidp</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>voidpc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_voidpc</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>voidpf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_voidpf</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>all<sp/>zlib<sp/>structs<sp/>in<sp/>zlib.h<sp/>and<sp/>zconf.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>gz_header_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_gz_header_s</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>internal_state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_internal_state</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MSDOS__)<sp/>&amp;&amp;<sp/>!defined(MSDOS)</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>MSDOS</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(defined(OS_2)<sp/>||<sp/>defined(__OS2__))<sp/>&amp;&amp;<sp/>!defined(OS2)</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS2</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(_WINDOWS)<sp/>&amp;&amp;<sp/>!defined(WINDOWS)</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WINDOWS</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(_WIN32_WCE)<sp/>||<sp/>defined(__WIN32__)</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>WIN32</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>WIN32</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>(defined(MSDOS)<sp/>||<sp/>defined(OS2)<sp/>||<sp/>defined(WINDOWS))<sp/>&amp;&amp;<sp/>!defined(WIN32)</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__FLAT__)<sp/>&amp;&amp;<sp/>!defined(__386__)</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifndef<sp/>SYS16BIT</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SYS16BIT</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>Compile<sp/>with<sp/>-DMAXSEG_64K<sp/>if<sp/>the<sp/>alloc<sp/>function<sp/>cannot<sp/>allocate<sp/>more</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>than<sp/>64k<sp/>bytes<sp/>at<sp/>a<sp/>time<sp/>(needed<sp/>on<sp/>systems<sp/>with<sp/>16-bit<sp/>int).</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYS16BIT</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>MAXSEG_64K</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>MSDOS</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UNALIGNED_OK</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__STDC_VERSION__</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>STDC</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifndef<sp/>STDC99</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>STDC99</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(STDC)<sp/>&amp;&amp;<sp/>(defined(__STDC__)<sp/>||<sp/>defined(__cplusplus))</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(STDC)<sp/>&amp;&amp;<sp/>(defined(__GNUC__)<sp/>||<sp/>defined(__BORLANDC__))</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(STDC)<sp/>&amp;&amp;<sp/>(defined(MSDOS)<sp/>||<sp/>defined(WINDOWS)<sp/>||<sp/>defined(WIN32))</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(STDC)<sp/>&amp;&amp;<sp/>(defined(OS2)<sp/>||<sp/>defined(__HOS_AIX__))</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__OS400__)<sp/>&amp;&amp;<sp/>!defined(STDC)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iSeries<sp/>(formerly<sp/>AS/400).<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STDC</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STDC</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>const<sp/></highlight><highlight class="comment">/*<sp/>cannot<sp/>use<sp/>!defined(STDC)<sp/>&amp;&amp;<sp/>!defined(const)<sp/>on<sp/>Mac<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="196" refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>need<sp/>a<sp/>more<sp/>gentle<sp/>solution<sp/>here<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>Mac<sp/>compilers<sp/>merge<sp/>all<sp/>.h<sp/>files<sp/>incorrectly:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_DUMMY_DECL</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>value<sp/>for<sp/>memLevel<sp/>in<sp/>deflateInit2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX_MEM_LEVEL</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>MAXSEG_64K</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>MAX_MEM_LEVEL<sp/>8</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="210" refid="zconf_8h_1a8e9fefb3d20386851ca693946127ab2e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>MAX_MEM_LEVEL<sp/>9</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>value<sp/>for<sp/>windowBits<sp/>in<sp/>deflateInit2<sp/>and<sp/>inflateInit2.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>WARNING:<sp/>reducing<sp/>MAX_WBITS<sp/>makes<sp/>minigzip<sp/>unable<sp/>to<sp/>extract<sp/>.gz<sp/>files</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>created<sp/>by<sp/>gzip.<sp/>(Files<sp/>created<sp/>by<sp/>minigzip<sp/>can<sp/>still<sp/>be<sp/>extracted<sp/>by</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>gzip.)</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX_WBITS</highlight></codeline>
<codeline lineno="220" refid="zconf_8h_1abd2f406ac1f9c49236376115d78ccb5b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>MAX_WBITS<sp/><sp/><sp/>15<sp/></highlight><highlight class="comment">/*<sp/>32K<sp/>LZ77<sp/>window<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>memory<sp/>requirements<sp/>for<sp/>deflate<sp/>are<sp/>(in<sp/>bytes):</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>(windowBits+2))<sp/>+<sp/><sp/>(1<sp/>&lt;&lt;<sp/>(memLevel+9))</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>that<sp/>is:<sp/>128K<sp/>for<sp/>windowBits=15<sp/><sp/>+<sp/><sp/>128K<sp/>for<sp/>memLevel<sp/>=<sp/>8<sp/><sp/>(default<sp/>values)</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>plus<sp/>a<sp/>few<sp/>kilobytes<sp/>for<sp/>small<sp/>objects.<sp/>For<sp/>example,<sp/>if<sp/>you<sp/>want<sp/>to<sp/>reduce</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>the<sp/>default<sp/>memory<sp/>requirements<sp/>from<sp/>256K<sp/>to<sp/>128K,<sp/>compile<sp/>with</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>make<sp/>CFLAGS=&quot;-O<sp/>-DMAX_WBITS=14<sp/>-DMAX_MEM_LEVEL=7&quot;</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>Of<sp/>course<sp/>this<sp/>will<sp/>generally<sp/>degrade<sp/>compression<sp/>(there&apos;s<sp/>no<sp/>free<sp/>lunch).</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>The<sp/>memory<sp/>requirements<sp/>for<sp/>inflate<sp/>are<sp/>(in<sp/>bytes)<sp/>1<sp/>&lt;&lt;<sp/>windowBits</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>that<sp/>is,<sp/>32K<sp/>for<sp/>windowBits=15<sp/>(default<sp/>value)<sp/>plus<sp/>a<sp/>few<sp/>kilobytes</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>for<sp/>small<sp/>objects.</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OF<sp/></highlight><highlight class="comment">/*<sp/>function<sp/>prototypes<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>STDC</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>OF(args)<sp/><sp/>args</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="242" refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>OF(args)<sp/><sp/>()</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>definitions<sp/>for<sp/>FAR<sp/>are<sp/>needed<sp/>only<sp/>for<sp/>MSDOS<sp/>mixed</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>model<sp/>programming<sp/>(small<sp/>or<sp/>medium<sp/>model<sp/>with<sp/>some<sp/>far<sp/>allocations).</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>This<sp/>was<sp/>tested<sp/>only<sp/>with<sp/>MSC;<sp/>for<sp/>other<sp/>MSDOS<sp/>compilers<sp/>you<sp/>may<sp/>have</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>to<sp/>define<sp/>NO_MEMCPY<sp/>in<sp/>zutil.h.<sp/><sp/>If<sp/>you<sp/>don&apos;t<sp/>need<sp/>the<sp/>mixed<sp/>model,</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>just<sp/>define<sp/>FAR<sp/>to<sp/>be<sp/>empty.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SYS16BIT</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(M_I86SM)<sp/>||<sp/>defined(M_I86MM)</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MSC<sp/>small<sp/>or<sp/>medium<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SMALL_MEDIUM</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FAR<sp/>_far</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FAR<sp/>far</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(defined(__SMALL__)<sp/>||<sp/>defined(__MEDIUM__))</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turbo<sp/>C<sp/>small<sp/>or<sp/>medium<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SMALL_MEDIUM</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>__BORLANDC__</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FAR<sp/>_far</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FAR<sp/>far</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WINDOWS)<sp/>||<sp/>defined(WIN32)</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>building<sp/>or<sp/>using<sp/>zlib<sp/>as<sp/>a<sp/>DLL,<sp/>define<sp/>ZLIB_DLL.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>not<sp/>mandatory,<sp/>but<sp/>it<sp/>offers<sp/>a<sp/>little<sp/>performance<sp/>increase.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>ZLIB_DLL</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>defined(WIN32)<sp/>&amp;&amp;<sp/>(!defined(__BORLANDC__)<sp/>||<sp/>(__BORLANDC__<sp/>&gt;=<sp/>0x500))</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>ifdef<sp/>ZLIB_INTERNAL</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXTERN<sp/>extern<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXTERN<sp/>extern<sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZLIB_DLL<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>building<sp/>or<sp/>using<sp/>zlib<sp/>with<sp/>the<sp/>WINAPI/WINAPIV<sp/>calling<sp/>convention,</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>define<sp/>ZLIB_WINAPI.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Caution:<sp/>the<sp/>standard<sp/>ZLIB1.DLL<sp/>is<sp/>NOT<sp/>compiled<sp/>using<sp/>ZLIB_WINAPI.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>ZLIB_WINAPI</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>FAR</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>FAR</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>for<sp/>_export,<sp/>use<sp/>ZLIB.DEF<sp/>instead.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>complete<sp/>Windows<sp/>compatibility,<sp/>use<sp/>WINAPI,<sp/>not<sp/>__stdcall.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>ZEXPORT<sp/>WINAPI</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORTVA<sp/>WINAPIV</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORTVA<sp/>FAR<sp/>CDECL</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__BEOS__)</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>ZLIB_DLL</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>ZLIB_INTERNAL</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORT<sp/><sp/><sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORTVA<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORT<sp/><sp/><sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>ZEXPORTVA<sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEXTERN</highlight></codeline>
<codeline lineno="319" refid="zconf_8h_1a49b7f5eccfcc99e53178581632bc9589" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ZEXTERN<sp/>extern</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEXPORT</highlight></codeline>
<codeline lineno="322" refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ZEXPORT</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEXPORTVA</highlight></codeline>
<codeline lineno="325" refid="zconf_8h_1af38d1853df635eee27f1a02f96457b22" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ZEXPORTVA</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FAR</highlight></codeline>
<codeline lineno="329" refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FAR</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__MACTYPES__)</highlight></codeline>
<codeline lineno="333" refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="335" refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>16<sp/>bits<sp/>or<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref>;<sp/></highlight><highlight class="comment">/*<sp/>32<sp/>bits<sp/>or<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMALL_MEDIUM</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Borland<sp/>C/C++<sp/>and<sp/>some<sp/>old<sp/>MSC<sp/>versions<sp/>ignore<sp/>FAR<sp/>inside<sp/>typedef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Bytef<sp/>Byte<sp/>FAR</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="342" refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref><sp/><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="344" refid="zconf_8h_1a864fa0e2e4e499038305f3276990689b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zconf_8h_1a864fa0e2e4e499038305f3276990689b" kindref="member">charf</ref>;</highlight></codeline>
<codeline lineno="345" refid="zconf_8h_1a7c2da1a4711ea1e7cbf3174d4f5dda9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zconf_8h_1a7c2da1a4711ea1e7cbf3174d4f5dda9b" kindref="member">intf</ref>;</highlight></codeline>
<codeline lineno="346" refid="zconf_8h_1a827d5110673ec09ae937156532f7c208" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zconf_8h_1a827d5110673ec09ae937156532f7c208" kindref="member">uIntf</ref>;</highlight></codeline>
<codeline lineno="347" refid="zconf_8h_1ace0e0570092c9eb6acd3c85f88cc97ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zconf_8h_1ace0e0570092c9eb6acd3c85f88cc97ec" kindref="member">uLongf</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STDC</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="zconf_8h_1a2c81736dda4a3a3f349a054031876954" kindref="member">voidpc</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="zconf_8h_1aa3397ff439b5e076528b04bc9b8b086a" kindref="member">voidp</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="354" refid="zconf_8h_1a2c81736dda4a3a3f349a054031876954" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="zconf_8h_1a2c81736dda4a3a3f349a054031876954" kindref="member">voidpc</ref>;</highlight></codeline>
<codeline lineno="355" refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><sp/><sp/>*<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref>;</highlight></codeline>
<codeline lineno="356" refid="zconf_8h_1aa3397ff439b5e076528b04bc9b8b086a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ae3a497195d617519e5353ea7b417940f" kindref="member">Byte</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="zconf_8h_1aa3397ff439b5e076528b04bc9b8b086a" kindref="member">voidp</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNISTD_H<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>be<sp/>set<sp/>to<sp/>#if<sp/>1<sp/>by<sp/>./configure<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Z_HAVE_UNISTD_H</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32_WCE</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>STDC</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>off_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>little<sp/>trick<sp/>to<sp/>accommodate<sp/>both<sp/>&quot;#define<sp/>_LARGEFILE64_SOURCE&quot;<sp/>and</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>&quot;#define<sp/>_LARGEFILE64_SOURCE<sp/>1&quot;<sp/>as<sp/>requesting<sp/>64-bit<sp/>operations,<sp/>(even</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>though<sp/>the<sp/>former<sp/>does<sp/>not<sp/>conform<sp/>to<sp/>the<sp/>LFS<sp/>document),<sp/>but<sp/>considering</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>both<sp/>&quot;#undef<sp/>_LARGEFILE64_SOURCE&quot;<sp/>and<sp/>&quot;#define<sp/>_LARGEFILE64_SOURCE<sp/>0&quot;<sp/>as</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>equivalently<sp/>requesting<sp/>no<sp/>64-bit<sp/>operations</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>-_LARGEFILE64_SOURCE<sp/>-<sp/>-1<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>undef<sp/>_LARGEFILE64_SOURCE</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(Z_HAVE_UNISTD_H)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>SEEK_*<sp/>and<sp/>off_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>VMS</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;unixio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>off_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>z_off_t</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>z_off_t<sp/>off_t</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SEEK_SET</highlight></codeline>
<codeline lineno="390" refid="zconf_8h_1a0d112bae8fd35be772185b6ec6bcbe64" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SEEK_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Seek<sp/>from<sp/>beginning<sp/>of<sp/>file.<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="391" refid="zconf_8h_1a4c8d0b76b470ba65a43ca46a88320f39" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SEEK_CUR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Seek<sp/>from<sp/>current<sp/>position.<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="392" refid="zconf_8h_1ad2a2e6c114780c3071efd24f16c7f7d8" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>SEEK_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>file<sp/>pointer<sp/>to<sp/>EOF<sp/>plus<sp/>&quot;offset&quot;<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>z_off_t</highlight></codeline>
<codeline lineno="396" refid="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>z_off_t<sp/>long</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_LARGEFILE64_SOURCE)<sp/>&amp;&amp;<sp/>_LFS64_LARGEFILE-0</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>z_off64_t<sp/>off64_t</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="402" refid="zconf_8h_1ab9923767082c7a76924b31493e60d42c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>z_off64_t<sp/>z_off_t</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__OS400__)</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MVS__)</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MVS<sp/>linker<sp/>does<sp/>not<sp/>support<sp/>external<sp/>names<sp/>larger<sp/>than<sp/>8<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MVS__)</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(deflateInit_,&quot;DEIN&quot;)</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(deflateInit2_,&quot;DEIN2&quot;)</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(deflateEnd,&quot;DEEND&quot;)</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(deflateBound,&quot;DEBND&quot;)</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflateInit_,&quot;ININ&quot;)</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflateInit2_,&quot;ININ2&quot;)</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflateEnd,&quot;INEND&quot;)</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflateSync,&quot;INSY&quot;)</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflateSetDictionary,&quot;INSEDI&quot;)</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(compressBound,&quot;CMBND&quot;)</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflate_table,&quot;INTABL&quot;)</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflate_fast,&quot;INFA&quot;)</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>map(inflate_copyright,&quot;INCOPY&quot;)</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZCONF_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zconf.h"/>
  </compounddef>
</doxygen>
