<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="pcre__globals_8c" kind="file">
    <compoundname>pcre_globals.c</compoundname>
    <includes refid="pcre__config_8h" local="yes">pcre_config.h</includes>
    <includes refid="pcre__internal_8h" local="yes">pcre_internal.h</includes>
    <incdepgraph>
      <node id="1018">
        <label>pcre_config.h</label>
        <link refid="pcre__config_8h"/>
      </node>
      <node id="1027">
        <label>stdarg.h</label>
      </node>
      <node id="1029">
        <label>ucp.h</label>
        <link refid="ucp_8h"/>
      </node>
      <node id="1024">
        <label>stdlib.h</label>
      </node>
      <node id="1026">
        <label>setjmp.h</label>
      </node>
      <node id="1017">
        <label>src/pcre_globals.c</label>
        <link refid="pcre_globals.c"/>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
      </node>
      <node id="1022">
        <label>stddef.h</label>
      </node>
      <node id="1028">
        <label>pcre.h</label>
        <link refid="pcre_8h"/>
        <childnode refid="1024" relation="include">
        </childnode>
      </node>
      <node id="1021">
        <label>limits.h</label>
      </node>
      <node id="1019">
        <label>pcre_internal.h</label>
        <link refid="pcre__internal_8h"/>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
      </node>
      <node id="1025">
        <label>string.h</label>
      </node>
      <node id="1020">
        <label>ctype.h</label>
      </node>
      <node id="1023">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcre__globals_8c_1a26f9b74ea2d3692cfaacee68461563f4" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void*(* pcre_malloc)(size_t)</definition>
        <argsstring>)(size_t)</argsstring>
        <name>pcre_malloc</name>
        <initializer>= <ref refid="zutil_8c_1a1fe6941708c67e715d2ed1a73a475257" kindref="member">malloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" line="53" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__globals_8c_1aa316d54b76adc938ce2c4a3431ceace1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pcre_free)(void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>pcre_free</name>
        <initializer>= <ref refid="zutil_8c_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">free</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" line="54" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__globals_8c_1a4da412452d2b20f7907bb4b8bd3f7bc6" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void*(* pcre_stack_malloc)(size_t)</definition>
        <argsstring>)(size_t)</argsstring>
        <name>pcre_stack_malloc</name>
        <initializer>= <ref refid="zutil_8c_1a1fe6941708c67e715d2ed1a73a475257" kindref="member">malloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" line="55" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__globals_8c_1afda42d453363302867fba781ce956996" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* pcre_stack_free)(void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>pcre_stack_free</name>
        <initializer>= <ref refid="zutil_8c_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">free</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" line="56" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__globals_8c_1ae1b802d0afcc6092ecda17943eec0a1b" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* pcre_callout)(pcre_callout_block *)</definition>
        <argsstring>)(pcre_callout_block *)</argsstring>
        <name>pcre_callout</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" line="57" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Perl-Compatible<sp/>Regular<sp/>Expressions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PCRE<sp/>is<sp/>a<sp/>library<sp/>of<sp/>functions<sp/>to<sp/>support<sp/>regular<sp/>expressions<sp/>whose<sp/>syntax</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>semantics<sp/>are<sp/>as<sp/>close<sp/>as<sp/>possible<sp/>to<sp/>those<sp/>of<sp/>the<sp/>Perl<sp/>5<sp/>language.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Written<sp/>by<sp/>Philip<sp/>Hazel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>1997-2008<sp/>University<sp/>of<sp/>Cambridge</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>of<sp/>Cambridge<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>module<sp/>contains<sp/>global<sp/>variables<sp/>that<sp/>are<sp/>exported<sp/>by<sp/>the<sp/>PCRE<sp/>library.</highlight></codeline>
<codeline lineno="42"><highlight class="comment">PCRE<sp/>is<sp/>thread-clean<sp/>and<sp/>doesn&apos;t<sp/>use<sp/>any<sp/>global<sp/>variables<sp/>in<sp/>the<sp/>normal<sp/>sense.</highlight></codeline>
<codeline lineno="43"><highlight class="comment">However,<sp/>it<sp/>calls<sp/>memory<sp/>allocation<sp/>and<sp/>freeing<sp/>functions<sp/>via<sp/>the<sp/>four</highlight></codeline>
<codeline lineno="44"><highlight class="comment">indirections<sp/>below,<sp/>and<sp/>it<sp/>can<sp/>optionally<sp/>do<sp/>callouts,<sp/>using<sp/>the<sp/>fifth</highlight></codeline>
<codeline lineno="45"><highlight class="comment">indirection.<sp/>These<sp/>values<sp/>can<sp/>be<sp/>changed<sp/>by<sp/>the<sp/>caller,<sp/>but<sp/>are<sp/>shared<sp/>between</highlight></codeline>
<codeline lineno="46"><highlight class="comment">all<sp/>threads.<sp/>However,<sp/>when<sp/>compiling<sp/>for<sp/>Virtual<sp/>Pascal,<sp/>things<sp/>are<sp/>done</highlight></codeline>
<codeline lineno="47"><highlight class="comment">differently,<sp/>and<sp/>global<sp/>variables<sp/>are<sp/>not<sp/>used<sp/>(see<sp/>pcre.in).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__config_8h" kindref="compound">pcre_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__internal_8h" kindref="compound">pcre_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VPCOMPAT</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="pcre__internal_8h_1af21791ec6e93a8db7402af112b5ca9a1" kindref="member">PCRE_EXP_DATA_DEFN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*pcre_malloc)(size_t)<sp/>=<sp/><ref refid="zutil_8c_1a1fe6941708c67e715d2ed1a73a475257" kindref="member">malloc</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="pcre__internal_8h_1af21791ec6e93a8db7402af112b5ca9a1" kindref="member">PCRE_EXP_DATA_DEFN</ref><sp/>void<sp/><sp/>(*<ref refid="pcre_8h_1aa316d54b76adc938ce2c4a3431ceace1" kindref="member">pcre_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/><ref refid="zutil_8c_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="pcre__internal_8h_1af21791ec6e93a8db7402af112b5ca9a1" kindref="member">PCRE_EXP_DATA_DEFN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*pcre_stack_malloc)(size_t)<sp/>=<sp/><ref refid="zutil_8c_1a1fe6941708c67e715d2ed1a73a475257" kindref="member">malloc</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="pcre__internal_8h_1af21791ec6e93a8db7402af112b5ca9a1" kindref="member">PCRE_EXP_DATA_DEFN</ref><sp/>void<sp/><sp/>(*<ref refid="pcre_8h_1afda42d453363302867fba781ce956996" kindref="member">pcre_stack_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/><ref refid="zutil_8c_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="pcre__internal_8h_1af21791ec6e93a8db7402af112b5ca9a1" kindref="member">PCRE_EXP_DATA_DEFN</ref><sp/>int<sp/><sp/><sp/>(*<ref refid="pcre_8h_1ae1b802d0afcc6092ecda17943eec0a1b" kindref="member">pcre_callout</ref>)(<ref refid="structpcre__callout__block" kindref="compound">pcre_callout_block</ref><sp/>*)<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>pcre_globals.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_globals.c"/>
  </compounddef>
</doxygen>
