<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="inflate_8c" kind="file">
    <compoundname>inflate.c</compoundname>
    <includes refid="zutil_8h" local="yes">zutil.h</includes>
    <includes refid="inftrees_8h" local="yes">inftrees.h</includes>
    <includes refid="inflate_8h" local="yes">inflate.h</includes>
    <includes refid="inffast_8h" local="yes">inffast.h</includes>
    <includes refid="inffixed_8h" local="yes">inffixed.h</includes>
    <incdepgraph>
      <node id="584">
        <label>inffast.h</label>
        <link refid="inffast_8h"/>
      </node>
      <node id="585">
        <label>inffixed.h</label>
        <link refid="inffixed_8h"/>
      </node>
      <node id="578">
        <label>src/inflate.c</label>
        <link refid="inflate.c"/>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="583">
        <label>inflate.h</label>
        <link refid="inflate_8h"/>
      </node>
      <node id="581">
        <label>zconf.h</label>
        <link refid="zconf_8h"/>
      </node>
      <node id="579">
        <label>zutil.h</label>
        <link refid="zutil_8h"/>
        <childnode refid="580" relation="include">
        </childnode>
      </node>
      <node id="580">
        <label>zlib.h</label>
        <link refid="zlib_8h"/>
        <childnode refid="581" relation="include">
        </childnode>
      </node>
      <node id="582">
        <label>inftrees.h</label>
        <link refid="inftrees_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="inflate_8c_1a5eea7ffd1fff4fbea834bcb292d1bea2" prot="public" static="no">
        <name>UPDATE</name>
        <param><defname>check</defname></param>
        <param><defname>buf</defname></param>
        <param><defname>len</defname></param>
        <initializer>(state-&gt;flags ? <ref refid="zlib_8h_1ae594a92daa59da8ef2c346cea7abdf68" kindref="member">crc32</ref>(check, buf, len) : <ref refid="zlib_8h_1a154683f5b7c8527aee6e9f54d2a469e7" kindref="member">adler32</ref>(check, buf, len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="412" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a2bdde00539008d4c1be6f9d29f0e4bd0" prot="public" static="no">
        <name>CRC2</name>
        <param><defname>check</defname></param>
        <param><defname>word</defname></param>
        <initializer>do { \
        hbuf[0] = (unsigned char)(word); \
        hbuf[1] = (unsigned char)((word) &gt;&gt; 8); \
        check = <ref refid="zlib_8h_1ae594a92daa59da8ef2c346cea7abdf68" kindref="member">crc32</ref>(check, hbuf, 2); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="420" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a57c65b3c2ffdfe37b805b749a2c5fdbe" prot="public" static="no">
        <name>CRC4</name>
        <param><defname>check</defname></param>
        <param><defname>word</defname></param>
        <initializer>do { \
        hbuf[0] = (unsigned char)(word); \
        hbuf[1] = (unsigned char)((word) &gt;&gt; 8); \
        hbuf[2] = (unsigned char)((word) &gt;&gt; 16); \
        hbuf[3] = (unsigned char)((word) &gt;&gt; 24); \
        check = <ref refid="zlib_8h_1ae594a92daa59da8ef2c346cea7abdf68" kindref="member">crc32</ref>(check, hbuf, 4); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="427" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a03dae42536f97b08183620a910f9b204" prot="public" static="no">
        <name>LOAD</name>
        <param></param>
        <initializer>do { \
        put = strm-&gt;next_out; \
        left = strm-&gt;avail_out; \
        next = strm-&gt;next_in; \
        have = strm-&gt;avail_in; \
        hold = state-&gt;hold; \
        bits = state-&gt;bits; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="438" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1af3b6db2fe8b54bb9edf88c2002e4bf34" prot="public" static="no">
        <name>RESTORE</name>
        <param></param>
        <initializer>do { \
        strm-&gt;next_out = put; \
        strm-&gt;avail_out = left; \
        strm-&gt;next_in = next; \
        strm-&gt;avail_in = have; \
        state-&gt;hold = hold; \
        state-&gt;bits = bits; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="449" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" prot="public" static="no">
        <name>INITBITS</name>
        <param></param>
        <initializer>do { \
        hold = 0; \
        bits = 0; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="460" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1add54302c739466e0e4a204fa1015694b" prot="public" static="no">
        <name>PULLBYTE</name>
        <param></param>
        <initializer>do { \
        if (have == 0) goto inf_leave; \
        have--; \
        hold += (unsigned long)(*next++) &lt;&lt; bits; \
        bits += 8; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="468" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" prot="public" static="no">
        <name>NEEDBITS</name>
        <param><defname>n</defname></param>
        <initializer>do { \
        while (bits &lt; (unsigned)(n)) \
            <ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>(); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="478" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a5967693540f086cfa357f68978bf0be7" prot="public" static="no">
        <name>BITS</name>
        <param><defname>n</defname></param>
        <initializer>((unsigned)hold &amp; ((1U &lt;&lt; (n)) - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="485" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a65312e68bdf918e606b0deaf69793523" prot="public" static="no">
        <name>DROPBITS</name>
        <param><defname>n</defname></param>
        <initializer>do { \
        hold &gt;&gt;= (n); \
        bits -= (unsigned)(n); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="489" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1aa1e478b107abaccc428d6266ea5ca595" prot="public" static="no">
        <name>BYTEBITS</name>
        <param></param>
        <initializer>do { \
        hold &gt;&gt;= bits &amp; 7; \
        bits -= bits &amp; 7; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="496" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="inflate_8c_1a802df6861be59122fc6f9f8e47141359" prot="public" static="no">
        <name>REVERSE</name>
        <param><defname>q</defname></param>
        <initializer>((((q) &gt;&gt; 24) &amp; 0xff) + (((q) &gt;&gt; 8) &amp; 0xff00) + \
     (((q) &amp; 0xff00) &lt;&lt; 8) + (((q) &amp; 0xff) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="503" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="inflate_8c_1a1bfdb3bca411c35baa0c71f69372cee9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fixedtables</definition>
        <argsstring>()</argsstring>
        <name>fixedtables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1ad0a2a6cffea1973c7406045ac8049e55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int updatewindow</definition>
        <argsstring>()</argsstring>
        <name>updatewindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a3c1cb1b647afec5ae6f72a8c8f0f56be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned syncsearch</definition>
        <argsstring>()</argsstring>
        <name>syncsearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a9990ecfeb0e3b82bcfe07920cef7b1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateReset</definition>
        <argsstring>(z_streamp strm)</argsstring>
        <name>inflateReset</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="103" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="103" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a9f7870e285eb71c6eb69b9afe76a9e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateReset2</definition>
        <argsstring>(z_streamp strm, int windowBits)</argsstring>
        <name>inflateReset2</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>windowBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="130" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="130" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a692308454849f272e9e508d3b917bb11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateInit2_</definition>
        <argsstring>(z_streamp strm, int windowBits, char *version, int stream_size)</argsstring>
        <name>inflateInit2_</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>windowBits</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>version</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stream_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="168" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="168" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1acd49cc04c5deb7ff8999820b88e98557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateInit_</definition>
        <argsstring>(z_streamp strm, char *version, int stream_size)</argsstring>
        <name>inflateInit_</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>version</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stream_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="201" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="201" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1af1347edaf73085e58907e49e5176aaab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflatePrime</definition>
        <argsstring>(z_streamp strm, int bits, int value)</argsstring>
        <name>inflatePrime</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="209" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="209" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a9750e174dc6a3c705ee260a36510f0d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fixedtables</definition>
        <argsstring>(struct inflate_state *state)</argsstring>
        <name>fixedtables</name>
        <param>
          <type>struct <ref refid="structinflate__state" kindref="compound">inflate_state</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="240" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="240" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1ae8f3463dc77334ac0f69b9a0e9fb7cb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int updatewindow</definition>
        <argsstring>(z_streamp strm, unsigned out)</argsstring>
        <name>updatewindow</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="358" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="358" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a79b92a0a5ce8f5dcdfe65d301e6c12a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflate</definition>
        <argsstring>(z_streamp strm, int flush)</argsstring>
        <name>inflate</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="589" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="589" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1abc6f3c66e6691b5007ecc9e1cb570fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateEnd</definition>
        <argsstring>(z_streamp strm)</argsstring>
        <name>inflateEnd</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1238" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1238" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a70a95f343952a809bbb6bcf3b362e593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateSetDictionary</definition>
        <argsstring>(z_streamp strm, Bytef *dictionary, uInt dictLength)</argsstring>
        <name>inflateSetDictionary</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref> *</type>
          <declname>dictionary</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref></type>
          <declname>dictLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1252" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1252" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1ab62a5fbe5226dd4e9300eb0cb6d6610e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateGetHeader</definition>
        <argsstring>(z_streamp strm, gz_headerp head)</argsstring>
        <name>inflateGetHeader</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type><ref refid="zlib_8h_1a20a6ffc695393cb54433da98ab4be7eb" kindref="member">gz_headerp</ref></type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1294" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1294" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1af4b52f2ad57d6c489560135e07cbbedf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned syncsearch</definition>
        <argsstring>(unsigned *have, unsigned char *buf, unsigned len)</argsstring>
        <name>syncsearch</name>
        <param>
          <type>unsigned *</type>
          <declname>have</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1322" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1322" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a6311fc784f0bf21d96cb58962359ea61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateSync</definition>
        <argsstring>(z_streamp strm)</argsstring>
        <name>inflateSync</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1345" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1345" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1ad50808147db441fd9260150a218974bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateSyncPoint</definition>
        <argsstring>(z_streamp strm)</argsstring>
        <name>inflateSyncPoint</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1396" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1396" bodyend="1404"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a4be131080ab2d224f9bebbcab3a2ccd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateCopy</definition>
        <argsstring>(z_streamp dest, z_streamp source)</argsstring>
        <name>inflateCopy</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1406" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1406" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1afe000de8c61c3299468122d0475809b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int inflateUndermine</definition>
        <argsstring>(z_streamp strm, int subvert)</argsstring>
        <name>inflateUndermine</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subvert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1453" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1453" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="inflate_8c_1a44cda52058b0618a3c2beb861b14d649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long inflateMark</definition>
        <argsstring>(z_streamp strm)</argsstring>
        <name>inflateMark</name>
        <param>
          <type><ref refid="zlib_8h_1a0073ee5c5eb2aa018825a6a760f93fb9" kindref="member">z_streamp</ref></type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" line="1470" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c" bodystart="1470" bodyend="1480"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>inflate.c<sp/>--<sp/>zlib<sp/>decompression</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995-2010<sp/>Mark<sp/>Adler</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>copyright<sp/>notice<sp/>in<sp/>zlib.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Change<sp/>history:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>1.2.beta0<sp/><sp/><sp/><sp/>24<sp/>Nov<sp/>2002</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>-<sp/>First<sp/>version<sp/>--<sp/>complete<sp/>rewrite<sp/>of<sp/>inflate<sp/>to<sp/>simplify<sp/>code,<sp/>avoid</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>creation<sp/>of<sp/>window<sp/>when<sp/>not<sp/>needed,<sp/>minimize<sp/>use<sp/>of<sp/>window<sp/>when<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>needed,<sp/>make<sp/>inffast.c<sp/>even<sp/>faster,<sp/>implement<sp/>gzip<sp/>decoding,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>improve<sp/>code<sp/>readability<sp/>and<sp/>style<sp/>over<sp/>the<sp/>previous<sp/>zlib<sp/>inflate<sp/>code</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>1.2.beta1<sp/><sp/><sp/><sp/>25<sp/>Nov<sp/>2002</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>-<sp/>Use<sp/>pointers<sp/>for<sp/>available<sp/>input<sp/>and<sp/>output<sp/>checking<sp/>in<sp/>inffast.c</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>-<sp/>Remove<sp/>input<sp/>and<sp/>output<sp/>counters<sp/>in<sp/>inffast.c</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>-<sp/>Change<sp/>inffast.c<sp/>entry<sp/>and<sp/>loop<sp/>from<sp/>avail_in<sp/>&gt;=<sp/>7<sp/>to<sp/>&gt;=<sp/>6</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>-<sp/>Remove<sp/>unnecessary<sp/>second<sp/>byte<sp/>pull<sp/>from<sp/>length<sp/>extra<sp/>in<sp/>inffast.c</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>-<sp/>Unroll<sp/>direct<sp/>copy<sp/>to<sp/>three<sp/>copies<sp/>per<sp/>loop<sp/>in<sp/>inffast.c</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>1.2.beta2<sp/><sp/><sp/><sp/>4<sp/>Dec<sp/>2002</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>-<sp/>Change<sp/>external<sp/>routine<sp/>names<sp/>to<sp/>reduce<sp/>potential<sp/>conflicts</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>-<sp/>Correct<sp/>filename<sp/>to<sp/>inffixed.h<sp/>for<sp/>fixed<sp/>tables<sp/>in<sp/>inflate.c</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>-<sp/>Make<sp/>hbuf[]<sp/>unsigned<sp/>char<sp/>to<sp/>match<sp/>parameter<sp/>type<sp/>in<sp/>inflate.c</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>-<sp/>Change<sp/>strm-&gt;next_out[-state-&gt;offset]<sp/>to<sp/>*(strm-&gt;next_out<sp/>-<sp/>state-&gt;offset)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/>to<sp/>avoid<sp/>negation<sp/>problem<sp/>on<sp/>Alphas<sp/>(64<sp/>bit)<sp/>in<sp/>inflate.c</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>1.2.beta3<sp/><sp/><sp/><sp/>22<sp/>Dec<sp/>2002</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>comments<sp/>on<sp/>state-&gt;bits<sp/>assertion<sp/>in<sp/>inffast.c</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>comments<sp/>on<sp/>op<sp/>field<sp/>in<sp/>inftrees.h</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>-<sp/>Fix<sp/>bug<sp/>in<sp/>reuse<sp/>of<sp/>allocated<sp/>window<sp/>after<sp/>inflateReset()</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>-<sp/>Remove<sp/>bit<sp/>fields--back<sp/>to<sp/>byte<sp/>structure<sp/>for<sp/>speed</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>-<sp/>Remove<sp/>distance<sp/>extra<sp/>==<sp/>0<sp/>check<sp/>in<sp/>inflate_fast()--only<sp/>helps<sp/>for<sp/>lengths</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>-<sp/>Change<sp/>post-increments<sp/>to<sp/>pre-increments<sp/>in<sp/>inflate_fast(),<sp/>PPC<sp/>biased?</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>compile<sp/>time<sp/>option,<sp/>POSTINC,<sp/>to<sp/>use<sp/>post-increments<sp/>instead<sp/>(Intel?)</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>-<sp/>Make<sp/>MATCH<sp/>copy<sp/>in<sp/>inflate()<sp/>much<sp/>faster<sp/>for<sp/>when<sp/>inflate_fast()<sp/>not<sp/>used</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>-<sp/>Use<sp/>local<sp/>copies<sp/>of<sp/>stream<sp/>next<sp/>and<sp/>avail<sp/>values,<sp/>as<sp/>well<sp/>as<sp/>local<sp/>bit</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/>buffer<sp/>and<sp/>bit<sp/>count<sp/>in<sp/>inflate()--for<sp/>speed<sp/>when<sp/>inflate_fast()<sp/>not<sp/>used</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>1.2.beta4<sp/><sp/><sp/><sp/>1<sp/>Jan<sp/>2003</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>-<sp/>Split<sp/>ptr<sp/>-<sp/>257<sp/>statements<sp/>in<sp/>inflate_table()<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>-<sp/>Move<sp/>a<sp/>comment<sp/>on<sp/>output<sp/>buffer<sp/>sizes<sp/>from<sp/>inffast.c<sp/>to<sp/>inflate.c</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>comments<sp/>in<sp/>inffast.c<sp/>to<sp/>introduce<sp/>the<sp/>inflate_fast()<sp/>routine</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>-<sp/>Rearrange<sp/>window<sp/>copies<sp/>in<sp/>inflate_fast()<sp/>for<sp/>speed<sp/>and<sp/>simplification</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>-<sp/>Unroll<sp/>last<sp/>copy<sp/>for<sp/>window<sp/>match<sp/>in<sp/>inflate_fast()</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>-<sp/>Use<sp/>local<sp/>copies<sp/>of<sp/>window<sp/>variables<sp/>in<sp/>inflate_fast()<sp/>for<sp/>speed</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>-<sp/>Pull<sp/>out<sp/>common<sp/>wnext<sp/>==<sp/>0<sp/>case<sp/>for<sp/>speed<sp/>in<sp/>inflate_fast()</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>-<sp/>Make<sp/>op<sp/>and<sp/>len<sp/>in<sp/>inflate_fast()<sp/>unsigned<sp/>for<sp/>consistency</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>-<sp/>Add<sp/>FAR<sp/>to<sp/>lcode<sp/>and<sp/>dcode<sp/>declarations<sp/>in<sp/>inflate_fast()</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>-<sp/>Simplified<sp/>bad<sp/>distance<sp/>check<sp/>in<sp/>inflate_fast()</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>-<sp/>Added<sp/>inflateBackInit(),<sp/>inflateBack(),<sp/>and<sp/>inflateBackEnd()<sp/>in<sp/>new</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/>source<sp/>file<sp/>infback.c<sp/>to<sp/>provide<sp/>a<sp/>call-back<sp/>interface<sp/>to<sp/>inflate<sp/>for</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/>programs<sp/>like<sp/>gzip<sp/>and<sp/>unzip<sp/>--<sp/>uses<sp/>window<sp/>as<sp/>output<sp/>buffer<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/>window<sp/>copying</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>1.2.beta5<sp/><sp/><sp/><sp/>1<sp/>Jan<sp/>2003</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>-<sp/>Improved<sp/>inflateBack()<sp/>interface<sp/>to<sp/>allow<sp/>the<sp/>caller<sp/>to<sp/>provide<sp/>initial</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/>input<sp/>in<sp/>strm.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>-<sp/>Fixed<sp/>stored<sp/>blocks<sp/>bug<sp/>in<sp/>inflateBack()</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>1.2.beta6<sp/><sp/><sp/><sp/>4<sp/>Jan<sp/>2003</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>-<sp/>Added<sp/>comments<sp/>in<sp/>inffast.c<sp/>on<sp/>effectiveness<sp/>of<sp/>POSTINC</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>-<sp/>Typecasting<sp/>all<sp/>around<sp/>to<sp/>reduce<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>-<sp/>Changed<sp/>loops<sp/>from<sp/>while<sp/>(1)<sp/>or<sp/>do<sp/>{}<sp/>while<sp/>(1)<sp/>to<sp/>for<sp/>(;;),<sp/>again<sp/>to</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/>make<sp/>compilers<sp/>happy</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>-<sp/>Changed<sp/>type<sp/>of<sp/>window<sp/>in<sp/>inflateBackInit()<sp/>to<sp/>unsigned<sp/>char<sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>1.2.beta7<sp/><sp/><sp/><sp/>27<sp/>Jan<sp/>2003</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>-<sp/>Changed<sp/>many<sp/>types<sp/>to<sp/>unsigned<sp/>or<sp/>unsigned<sp/>short<sp/>to<sp/>avoid<sp/>warnings</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>-<sp/>Added<sp/>inflateCopy()<sp/>function</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>1.2.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/>Mar<sp/>2003</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>-<sp/>Changed<sp/>inflateBack()<sp/>interface<sp/>to<sp/>provide<sp/>separate<sp/>opaque<sp/>descriptors</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/>for<sp/>the<sp/>in()<sp/>and<sp/>out()<sp/>functions</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>-<sp/>Changed<sp/>inflateBack()<sp/>argument<sp/>and<sp/>in_func<sp/>typedef<sp/>to<sp/>swap<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/>and<sp/>buffer<sp/>address<sp/>return<sp/>values<sp/>for<sp/>the<sp/>input<sp/>function</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>-<sp/>Check<sp/>next_in<sp/>and<sp/>next_out<sp/>for<sp/>Z_NULL<sp/>on<sp/>entry<sp/>to<sp/>inflate()</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>The<sp/>history<sp/>for<sp/>versions<sp/>after<sp/>1.2.0<sp/>are<sp/>in<sp/>ChangeLog<sp/>in<sp/>zlib<sp/>distribution.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zutil_8h" kindref="compound">zutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inftrees_8h" kindref="compound">inftrees.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inflate_8h" kindref="compound">inflate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inffast_8h" kindref="compound">inffast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKEFIXED</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>BUILDFIXED</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>BUILDFIXED</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixedtables<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updatewindow<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>out));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDFIXED</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makefixed<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>syncsearch<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a9990ecfeb0e3b82bcfe07920cef7b1c2" kindref="member">inflateReset</ref>(strm)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;total_in<sp/>=<sp/>strm-&gt;total_out<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1af9d1071eb75b1ee37a151ccec8dfee95" kindref="member">total</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>support<sp/>ill-conceived<sp/>Java<sp/>test<sp/>suite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa0b0955668575b21eb0ab2272aef49f76" kindref="member">HEAD</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a2eb1cd634ed6baade952ffa5938ebcdc" kindref="member">havedict</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae3d433011714e673b22e82156acc4416" kindref="member">dmax</ref><sp/>=<sp/>32768U;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a98b40fe23b7177bc8cd1d9d73edad593" kindref="member">sane</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/>reset\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a9f7870e285eb71c6eb69b9afe76a9e7a" kindref="member">inflateReset2</ref>(strm,<sp/>windowBits)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBits;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>wrap<sp/>request<sp/>from<sp/>windowBits<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(windowBits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowBits<sp/>=<sp/>-windowBits;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrap<sp/>=<sp/>(windowBits<sp/>&gt;&gt;<sp/>4)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windowBits<sp/>&lt;<sp/>48)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowBits<sp/>&amp;=<sp/>15;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>number<sp/>of<sp/>window<sp/>bits,<sp/>free<sp/>window<sp/>if<sp/>different<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windowBits<sp/>&amp;&amp;<sp/>(windowBits<sp/>&lt;<sp/>8<sp/>||<sp/>windowBits<sp/>&gt;<sp/>15))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref><sp/>!=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)windowBits)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(strm,<sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>state<sp/>and<sp/>reset<sp/>the<sp/>rest<sp/>of<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>=<sp/><ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref><sp/>=<sp/>(unsigned)windowBits;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="inflate_8c_1a9990ecfeb0e3b82bcfe07920cef7b1c2" kindref="member">inflateReset</ref>(strm);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a692308454849f272e9e508d3b917bb11" kindref="member">inflateInit2_</ref>(strm,<sp/>windowBits,<sp/>version,<sp/>stream_size)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBits;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*version;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stream_size;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>version[0]<sp/>!=<sp/><ref refid="zlib_8h_1a51dc9dc65e483b3222c1f0f6a87eb76e" kindref="member">ZLIB_VERSION</ref>[0]<sp/>||</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_size<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structz__stream" kindref="compound">z_stream</ref>)))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a7634cdd55f955ee1be99c065c6977371" kindref="member">Z_VERSION_ERROR</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>we<sp/>return<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm-&gt;zalloc<sp/>==<sp/>(<ref refid="zlib_8h_1af90139b484e48372e0e6db52bb9f6733" kindref="member">alloc_func</ref>)0)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;zalloc<sp/>=<sp/><ref refid="zutil_8c_1acd6de6ee77b7c44353e61511b6eb1d90" kindref="member">zcalloc</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;opaque<sp/>=<sp/>(<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref>)0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm-&gt;zfree<sp/>==<sp/>(<ref refid="zlib_8h_1af07471bf3f37f2c29078ed11ac59fc7f" kindref="member">free_func</ref>)0)<sp/>strm-&gt;zfree<sp/>=<sp/><ref refid="zutil_8c_1ac5167b77f4a79cb68ba27c598b52485e" kindref="member">zcfree</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" kindref="member">ZALLOC</ref>(strm,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/>allocated\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal__state" kindref="compound">internal_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)state;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="inflate_8c_1a9f7870e285eb71c6eb69b9afe76a9e7a" kindref="member">inflateReset2</ref>(strm,<sp/>windowBits);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(strm,<sp/>state);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;state<sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1acd49cc04c5deb7ff8999820b88e98557" kindref="member">inflateInit_</ref>(strm,<sp/>version,<sp/>stream_size)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*version;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stream_size;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="inflate_8c_1a692308454849f272e9e508d3b917bb11" kindref="member">inflateInit2_</ref>(strm,<sp/><ref refid="zutil_8h_1aef084f32d9ca8b9273a1c826b89b979a" kindref="member">DEF_WBITS</ref>,<sp/>version,<sp/>stream_size);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1af1347edaf73085e58907e49e5176aaab" kindref="member">inflatePrime</ref>(strm,<sp/>bits,<sp/>value)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(bits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>&gt;<sp/>16<sp/>||<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>+<sp/>bits<sp/>&gt;<sp/>32)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&amp;=<sp/>(1L<sp/>&lt;&lt;<sp/><ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref><sp/>+=<sp/>value<sp/>&lt;&lt;<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>+=<sp/><ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>state<sp/>with<sp/>length<sp/>and<sp/>distance<sp/>decoding<sp/>tables<sp/>and<sp/>index<sp/>sizes<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>fixed<sp/>code<sp/>decoding.<sp/><sp/>Normally<sp/>this<sp/>returns<sp/>fixed<sp/>tables<sp/>from<sp/>inffixed.h.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/>If<sp/>BUILDFIXED<sp/>is<sp/>defined,<sp/>then<sp/>instead<sp/>this<sp/>routine<sp/>builds<sp/>the<sp/>tables<sp/>the</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/>first<sp/>time<sp/>it&apos;s<sp/>called,<sp/>and<sp/>returns<sp/>those<sp/>tables<sp/>the<sp/>first<sp/>time<sp/>and</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>thereafter.<sp/><sp/>This<sp/>reduces<sp/>the<sp/>size<sp/>of<sp/>the<sp/>code<sp/>by<sp/>about<sp/>2K<sp/>bytes,<sp/>in</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>exchange<sp/>for<sp/>a<sp/>little<sp/>execution<sp/>time.<sp/><sp/>However,<sp/>BUILDFIXED<sp/>should<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/>used<sp/>for<sp/>threaded<sp/>applications,<sp/>since<sp/>the<sp/>rewriting<sp/>of<sp/>the<sp/>tables<sp/>and<sp/>virgin</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/>may<sp/>not<sp/>be<sp/>thread-safe.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixedtables(state)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">struct<sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDFIXED</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>virgin<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref><sp/>*lenfix,<sp/>*distfix;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref><sp/>fixed[544];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>fixed<sp/>huffman<sp/>tables<sp/>if<sp/>first<sp/>call<sp/>(may<sp/>not<sp/>be<sp/>thread<sp/>safe)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virgin)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sym,<sp/><ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref><sp/>*<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>literal/length<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&lt;<sp/>144)<sp/>state-&gt;lens[sym++]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&lt;<sp/>256)<sp/>state-&gt;lens[sym++]<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&lt;<sp/>280)<sp/>state-&gt;lens[sym++]<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&lt;<sp/>288)<sp/>state-&gt;lens[sym++]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>fixed;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lenfix<sp/>=<sp/><ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inftrees_8c_1abdadeebf4630332213acd06c8612654b" kindref="member">inflate_table</ref>(<ref refid="inftrees_8h_1a0f33f5acf9079ff1f054fa235df2443ba86b0f8050ddd8ae0b99e2f9323ad00a1" kindref="member">LENS</ref>,<sp/>state-&gt;lens,<sp/>288,<sp/>&amp;(next),<sp/>&amp;(bits),<sp/>state-&gt;work);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&lt;<sp/>32)<sp/>state-&gt;lens[sym++]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distfix<sp/>=<sp/><ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inftrees_8c_1abdadeebf4630332213acd06c8612654b" kindref="member">inflate_table</ref>(<ref refid="inftrees_8h_1a0f33f5acf9079ff1f054fa235df2443bafd7fbb659c736b26e79316ef09a2a9a1" kindref="member">DISTS</ref>,<sp/>state-&gt;lens,<sp/>32,<sp/>&amp;(next),<sp/>&amp;(bits),<sp/>state-&gt;work);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>this<sp/>just<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virgin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!BUILDFIXED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="inffixed_8h" kindref="compound">inffixed.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BUILDFIXED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;lencode<sp/>=<sp/>lenfix;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;lenbits<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;distcode<sp/>=<sp/>distfix;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;distbits<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKEFIXED</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>Write<sp/>out<sp/>the<sp/>inffixed.h<sp/>that<sp/>is<sp/>#include&apos;d<sp/>above.<sp/><sp/>Defining<sp/>MAKEFIXED<sp/>also</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>defines<sp/>BUILDFIXED,<sp/>so<sp/>the<sp/>tables<sp/>are<sp/>built<sp/>on<sp/>the<sp/>fly.<sp/><sp/>makefixed()<sp/>writes</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>those<sp/>tables<sp/>to<sp/>stdout,<sp/>which<sp/>would<sp/>be<sp/>piped<sp/>to<sp/>inffixed.h.<sp/><sp/>A<sp/>small<sp/>program</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>can<sp/>simply<sp/>call<sp/>makefixed<sp/>to<sp/>do<sp/>this:</highlight></codeline>
<codeline lineno="291"><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>void<sp/>makefixed(void);</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>main(void)</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makefixed();</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/>Then<sp/>that<sp/>can<sp/>be<sp/>linked<sp/>with<sp/>zlib<sp/>built<sp/>with<sp/>MAKEFIXED<sp/>defined<sp/>and<sp/>run:</highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>a.out<sp/>&gt;<sp/>inffixed.h</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makefixed()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>low,<sp/>size;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/>state;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>fixedtables(&amp;state);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>/*<sp/>inffixed.h<sp/>--<sp/>table<sp/>for<sp/>decoding<sp/>fixed<sp/>codes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>*<sp/>Generated<sp/>automatically<sp/>by<sp/>makefixed().&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>*/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>/*<sp/>WARNING:<sp/>this<sp/>file<sp/>should<sp/>*not*<sp/>be<sp/>used<sp/>by<sp/>applications.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>is<sp/>part<sp/>of<sp/>the<sp/>implementation<sp/>of<sp/>this<sp/>library<sp/>and<sp/>is&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subject<sp/>to<sp/>change.<sp/>Applications<sp/>should<sp/>only<sp/>use<sp/>zlib.h.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>*/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>9;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>static<sp/>const<sp/>code<sp/>lenfix[%u]<sp/>=<sp/>{&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((low<sp/>%<sp/>7)<sp/>==<sp/>0)<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;{%u,%u,%d}&quot;</highlight><highlight class="normal">,<sp/>state.lencode[low].op,<sp/>state.lencode[low].bits,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.lencode[low].val);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++low<sp/>==<sp/>size)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>};&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>static<sp/>const<sp/>code<sp/>distfix[%u]<sp/>=<sp/>{&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((low<sp/>%<sp/>6)<sp/>==<sp/>0)<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;{%u,%u,%d}&quot;</highlight><highlight class="normal">,<sp/>state.distcode[low].op,<sp/>state.distcode[low].bits,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.distcode[low].val);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++low<sp/>==<sp/>size)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>};&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MAKEFIXED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>Update<sp/>the<sp/>window<sp/>with<sp/>the<sp/>last<sp/>wsize<sp/>(normally<sp/>32K)<sp/>bytes<sp/>written<sp/>before</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/>returning.<sp/><sp/>If<sp/>window<sp/>does<sp/>not<sp/>exist<sp/>yet,<sp/>create<sp/>it.<sp/><sp/>This<sp/>is<sp/>only<sp/>called</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/>when<sp/>a<sp/>window<sp/>is<sp/>already<sp/>in<sp/>use,<sp/>or<sp/>when<sp/>output<sp/>has<sp/>been<sp/>written<sp/>during<sp/>this</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/>inflate<sp/>call,<sp/>but<sp/>the<sp/>end<sp/>of<sp/>the<sp/>deflate<sp/>stream<sp/>has<sp/>not<sp/>been<sp/>reached<sp/>yet.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/>It<sp/>is<sp/>also<sp/>called<sp/>to<sp/>create<sp/>a<sp/>window<sp/>for<sp/>dictionary<sp/>data<sp/>when<sp/>a<sp/>dictionary</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>is<sp/>loaded.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/>Providing<sp/>output<sp/>buffers<sp/>larger<sp/>than<sp/>32K<sp/>to<sp/>inflate()<sp/>should<sp/>provide<sp/>a<sp/>speed</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/>advantage,<sp/>since<sp/>only<sp/>the<sp/>last<sp/>32K<sp/>of<sp/>output<sp/>is<sp/>copied<sp/>to<sp/>the<sp/>sliding<sp/>window</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/>upon<sp/>return<sp/>from<sp/>inflate(),<sp/>and<sp/>since<sp/>all<sp/>distances<sp/>after<sp/>the<sp/>first<sp/>32K<sp/>of</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/>output<sp/>will<sp/>fall<sp/>in<sp/>the<sp/>output<sp/>data,<sp/>making<sp/>match<sp/>copies<sp/>simpler<sp/>and<sp/>faster.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/>The<sp/>advantage<sp/>may<sp/>be<sp/>dependent<sp/>on<sp/>the<sp/>size<sp/>of<sp/>the<sp/>processor&apos;s<sp/>data<sp/>caches.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updatewindow(strm,<sp/>out)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>copy,<sp/>dist;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>been<sp/>done<sp/>already,<sp/>allocate<sp/>space<sp/>for<sp/>the<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" kindref="member">ZALLOC</ref>(strm,<sp/>1U<sp/>&lt;&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref>,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>window<sp/>not<sp/>in<sp/>use<sp/>yet,<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>state-&gt;wsize<sp/>or<sp/>less<sp/>output<sp/>bytes<sp/>into<sp/>the<sp/>circular<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>out<sp/>-<sp/>strm-&gt;avail_out;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;=<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>,<sp/>strm-&gt;next_out<sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>copy)<sp/>dist<sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>+<sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref>,<sp/>strm-&gt;next_out<sp/>-<sp/>copy,<sp/>dist);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>-=<sp/>dist;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>,<sp/>strm-&gt;next_out<sp/>-<sp/>copy,<sp/>copy);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>+=<sp/>dist;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>==<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>)<sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>&lt;<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>)<sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>+=<sp/>dist;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>inflate():<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>function<sp/>to<sp/>use<sp/>adler32()<sp/>for<sp/>zlib<sp/>or<sp/>crc32()<sp/>for<sp/>gzip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UPDATE(check,<sp/>buf,<sp/>len)<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(state-&gt;flags<sp/>?<sp/>crc32(check,<sp/>buf,<sp/>len)<sp/>:<sp/>adler32(check,<sp/>buf,<sp/>len))</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UPDATE(check,<sp/>buf,<sp/>len)<sp/>adler32(check,<sp/>buf,<sp/>len)</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>macros<sp/>for<sp/>header<sp/>crc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>CRC2(check,<sp/>word)<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[0]<sp/>=<sp/>(unsigned<sp/>char)(word);<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[1]<sp/>=<sp/>(unsigned<sp/>char)((word)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/>crc32(check,<sp/>hbuf,<sp/>2);<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>CRC4(check,<sp/>word)<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[0]<sp/>=<sp/>(unsigned<sp/>char)(word);<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[1]<sp/>=<sp/>(unsigned<sp/>char)((word)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[2]<sp/>=<sp/>(unsigned<sp/>char)((word)<sp/>&gt;&gt;<sp/>16);<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf[3]<sp/>=<sp/>(unsigned<sp/>char)((word)<sp/>&gt;&gt;<sp/>24);<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/>crc32(check,<sp/>hbuf,<sp/>4);<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Load<sp/>registers<sp/>with<sp/>state<sp/>in<sp/>inflate()<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOAD()<sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put<sp/>=<sp/>strm-&gt;next_out;<sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>strm-&gt;avail_out;<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>strm-&gt;next_in;<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>=<sp/>strm-&gt;avail_in;<sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>=<sp/>state-&gt;hold;<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>state-&gt;bits;<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Restore<sp/>state<sp/>from<sp/>registers<sp/>in<sp/>inflate()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESTORE()<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;next_out<sp/>=<sp/>put;<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;avail_out<sp/>=<sp/>left;<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;next_in<sp/>=<sp/>next;<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;avail_in<sp/>=<sp/>have;<sp/>\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;hold<sp/>=<sp/>hold;<sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;bits<sp/>=<sp/>bits;<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>input<sp/>bit<sp/>accumulator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITBITS()<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>byte<sp/>of<sp/>input<sp/>into<sp/>the<sp/>bit<sp/>accumulator,<sp/>or<sp/>return<sp/>from<sp/>inflate()</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/>if<sp/>there<sp/>is<sp/>no<sp/>input<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PULLBYTE()<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(have<sp/>==<sp/>0)<sp/>goto<sp/>inf_leave;<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have--;<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>+=<sp/>(unsigned<sp/>long)(*next++)<sp/>&lt;&lt;<sp/>bits;<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>8;<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Assure<sp/>that<sp/>there<sp/>are<sp/>at<sp/>least<sp/>n<sp/>bits<sp/>in<sp/>the<sp/>bit<sp/>accumulator.<sp/><sp/>If<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/>not<sp/>enough<sp/>available<sp/>input<sp/>to<sp/>do<sp/>that,<sp/>then<sp/>return<sp/>from<sp/>inflate().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEEDBITS(n)<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(bits<sp/>&lt;<sp/>(unsigned)(n))<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PULLBYTE();<sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>the<sp/>low<sp/>n<sp/>bits<sp/>of<sp/>the<sp/>bit<sp/>accumulator<sp/>(n<sp/>&lt;<sp/>16)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITS(n)<sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((unsigned)hold<sp/>&amp;<sp/>((1U<sp/>&lt;&lt;<sp/>(n))<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Remove<sp/>n<sp/>bits<sp/>from<sp/>the<sp/>bit<sp/>accumulator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DROPBITS(n)<sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>&gt;&gt;=<sp/>(n);<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>-=<sp/>(unsigned)(n);<sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Remove<sp/>zero<sp/>to<sp/>seven<sp/>bits<sp/>as<sp/>needed<sp/>to<sp/>go<sp/>to<sp/>a<sp/>byte<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTEBITS()<sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>&gt;&gt;=<sp/>bits<sp/>&amp;<sp/>7;<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>-=<sp/>bits<sp/>&amp;<sp/>7;<sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reverse<sp/>the<sp/>bytes<sp/>in<sp/>a<sp/>32-bit<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REVERSE(q)<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((((q)<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff)<sp/>+<sp/>(((q)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff00)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(((q)<sp/>&amp;<sp/>0xff00)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(((q)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>24))</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/>inflate()<sp/>uses<sp/>a<sp/>state<sp/>machine<sp/>to<sp/>process<sp/>as<sp/>much<sp/>input<sp/>data<sp/>and<sp/>generate<sp/>as</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/>much<sp/>output<sp/>data<sp/>as<sp/>possible<sp/>before<sp/>returning.<sp/><sp/>The<sp/>state<sp/>machine<sp/>is</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/>structured<sp/>roughly<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="511"><highlight class="comment"></highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(;;)<sp/>switch<sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>STATEn:</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(not<sp/>enough<sp/>input<sp/>data<sp/>or<sp/>output<sp/>space<sp/>to<sp/>make<sp/>progress)</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>make<sp/>progress<sp/>...</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>STATEm;</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="comment"></highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/>so<sp/>when<sp/>inflate()<sp/>is<sp/>called<sp/>again,<sp/>the<sp/>same<sp/>case<sp/>is<sp/>attempted<sp/>again,<sp/>and</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/>if<sp/>the<sp/>appropriate<sp/>resources<sp/>are<sp/>provided,<sp/>the<sp/>machine<sp/>proceeds<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/>next<sp/>state.<sp/><sp/>The<sp/>NEEDBITS()<sp/>macro<sp/>is<sp/>usually<sp/>the<sp/>way<sp/>the<sp/>state<sp/>evaluates</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/>whether<sp/>it<sp/>can<sp/>proceed<sp/>or<sp/>should<sp/>return.<sp/><sp/>NEEDBITS()<sp/>does<sp/>the<sp/>return<sp/>if</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/>the<sp/>requested<sp/>bits<sp/>are<sp/>not<sp/>available.<sp/><sp/>The<sp/>typical<sp/>use<sp/>of<sp/>the<sp/>BITS<sp/>macros</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/>is:</highlight></codeline>
<codeline lineno="529"><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEEDBITS(n);</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>do<sp/>something<sp/>with<sp/>BITS(n)<sp/>...</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROPBITS(n);</highlight></codeline>
<codeline lineno="533"><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>where<sp/>NEEDBITS(n)<sp/>either<sp/>returns<sp/>from<sp/>inflate()<sp/>if<sp/>there<sp/>isn&apos;t<sp/>enough</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/>input<sp/>left<sp/>to<sp/>load<sp/>n<sp/>bits<sp/>into<sp/>the<sp/>accumulator,<sp/>or<sp/>it<sp/>continues.<sp/><sp/>BITS(n)</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>gives<sp/>the<sp/>low<sp/>n<sp/>bits<sp/>in<sp/>the<sp/>accumulator.<sp/><sp/>When<sp/>done,<sp/>DROPBITS(n)<sp/>drops</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/>the<sp/>low<sp/>n<sp/>bits<sp/>off<sp/>the<sp/>accumulator.<sp/><sp/>INITBITS()<sp/>clears<sp/>the<sp/>accumulator</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/>and<sp/>sets<sp/>the<sp/>number<sp/>of<sp/>available<sp/>bits<sp/>to<sp/>zero.<sp/><sp/>BYTEBITS()<sp/>discards<sp/>just</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/>enough<sp/>bits<sp/>to<sp/>put<sp/>the<sp/>accumulator<sp/>on<sp/>a<sp/>byte<sp/>boundary.<sp/><sp/>After<sp/>BYTEBITS()</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/>and<sp/>a<sp/>NEEDBITS(8),<sp/>then<sp/>BITS(8)<sp/>would<sp/>return<sp/>the<sp/>next<sp/>byte<sp/>in<sp/>the<sp/>stream.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/>NEEDBITS(n)<sp/>uses<sp/>PULLBYTE()<sp/>to<sp/>get<sp/>an<sp/>available<sp/>byte<sp/>of<sp/>input,<sp/>or<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/>if<sp/>there<sp/>is<sp/>no<sp/>input<sp/>available.<sp/><sp/>The<sp/>decoding<sp/>of<sp/>variable<sp/>length<sp/>codes<sp/>uses</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/>PULLBYTE()<sp/>directly<sp/>in<sp/>order<sp/>to<sp/>pull<sp/>just<sp/>enough<sp/>bytes<sp/>to<sp/>decode<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/>code,<sp/>and<sp/>no<sp/>more.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"></highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/>Some<sp/>states<sp/>loop<sp/>until<sp/>they<sp/>get<sp/>enough<sp/>input,<sp/>making<sp/>sure<sp/>that<sp/>enough</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>state<sp/>information<sp/>is<sp/>maintained<sp/>to<sp/>continue<sp/>the<sp/>loop<sp/>where<sp/>it<sp/>left<sp/>off</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/>if<sp/>NEEDBITS()<sp/>returns<sp/>in<sp/>the<sp/>loop.<sp/><sp/>For<sp/>example,<sp/>want,<sp/>need,<sp/>and<sp/>keep</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/>would<sp/>all<sp/>have<sp/>to<sp/>actually<sp/>be<sp/>part<sp/>of<sp/>the<sp/>saved<sp/>state<sp/>in<sp/>case<sp/>NEEDBITS()</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/>returns:</highlight></codeline>
<codeline lineno="552"><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>STATEw:</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(want<sp/>&lt;<sp/>need)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEEDBITS(n);</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep[want++]<sp/>=<sp/>BITS(n);</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROPBITS(n);</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>STATEx;</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>STATEx:</highlight></codeline>
<codeline lineno="561"><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>As<sp/>shown<sp/>above,<sp/>if<sp/>the<sp/>next<sp/>state<sp/>is<sp/>also<sp/>the<sp/>next<sp/>case,<sp/>then<sp/>the<sp/>break</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>is<sp/>omitted.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"></highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>A<sp/>state<sp/>may<sp/>also<sp/>return<sp/>if<sp/>there<sp/>is<sp/>not<sp/>enough<sp/>output<sp/>space<sp/>available<sp/>to</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/>complete<sp/>that<sp/>state.<sp/><sp/>Those<sp/>states<sp/>are<sp/>copying<sp/>stored<sp/>data,<sp/>writing<sp/>a</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/>literal<sp/>byte,<sp/>and<sp/>copying<sp/>a<sp/>matching<sp/>string.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"></highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/>When<sp/>returning,<sp/>a<sp/>&quot;goto<sp/>inf_leave&quot;<sp/>is<sp/>used<sp/>to<sp/>update<sp/>the<sp/>total<sp/>counters,</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/>update<sp/>the<sp/>check<sp/>value,<sp/>and<sp/>determine<sp/>whether<sp/>any<sp/>progress<sp/>has<sp/>been<sp/>made</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/>during<sp/>that<sp/>inflate()<sp/>call<sp/>in<sp/>order<sp/>to<sp/>return<sp/>the<sp/>proper<sp/>return<sp/>code.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/>Progress<sp/>is<sp/>defined<sp/>as<sp/>a<sp/>change<sp/>in<sp/>either<sp/>strm-&gt;avail_in<sp/>or<sp/>strm-&gt;avail_out.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/>When<sp/>there<sp/>is<sp/>a<sp/>window,<sp/>goto<sp/>inf_leave<sp/>will<sp/>update<sp/>the<sp/>window<sp/>with<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/>output<sp/>written.<sp/><sp/>If<sp/>a<sp/>goto<sp/>inf_leave<sp/>occurs<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>decompression</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/>and<sp/>there<sp/>is<sp/>no<sp/>window<sp/>currently,<sp/>goto<sp/>inf_leave<sp/>will<sp/>create<sp/>one<sp/>and<sp/>copy</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/>output<sp/>to<sp/>the<sp/>window<sp/>for<sp/>the<sp/>next<sp/>call<sp/>of<sp/>inflate().</highlight></codeline>
<codeline lineno="577"><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/>In<sp/>this<sp/>implementation,<sp/>the<sp/>flush<sp/>parameter<sp/>of<sp/>inflate()<sp/>only<sp/>affects<sp/>the</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/>return<sp/>code<sp/>(per<sp/>zlib.h).<sp/><sp/>inflate()<sp/>always<sp/>writes<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>to</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/>strm-&gt;next_out,<sp/>given<sp/>the<sp/>space<sp/>available<sp/>and<sp/>the<sp/>provided<sp/>input--the<sp/>effect</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/>documented<sp/>in<sp/>zlib.h<sp/>of<sp/>Z_SYNC_FLUSH.<sp/><sp/>Furthermore,<sp/>inflate()<sp/>always<sp/>defers</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/>the<sp/>allocation<sp/>of<sp/>and<sp/>copying<sp/>into<sp/>a<sp/>sliding<sp/>window<sp/>until<sp/>necessary,<sp/>which</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/>provides<sp/>the<sp/>effect<sp/>documented<sp/>in<sp/>zlib.h<sp/>for<sp/>Z_FINISH<sp/>when<sp/>the<sp/>entire<sp/>input</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/>stream<sp/>available.<sp/><sp/>So<sp/>the<sp/>only<sp/>thing<sp/>the<sp/>flush<sp/>parameter<sp/>actually<sp/>does<sp/>is:</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>when<sp/>flush<sp/>is<sp/>set<sp/>to<sp/>Z_FINISH,<sp/>inflate()<sp/>cannot<sp/>return<sp/>Z_OK.<sp/><sp/>Instead<sp/>it</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/>will<sp/>return<sp/>Z_BUF_ERROR<sp/>if<sp/>it<sp/>has<sp/>not<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>stream.</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a79b92a0a5ce8f5dcdfe65d301e6c12a4" kindref="member">inflate</ref>(strm,<sp/>flush)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flush;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*put;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>,<sp/>left;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>available<sp/>input<sp/>and<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>in<sp/>bit<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>in,<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>starting<sp/>available<sp/>input<sp/>and<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>copy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>stored<sp/>or<sp/>match<sp/>bytes<sp/>to<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*from;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>where<sp/>to<sp/>copy<sp/>match<sp/>bytes<sp/>from<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcode" kindref="compound">code</ref><sp/>here;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>decoding<sp/>table<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcode" kindref="compound">code</ref><sp/><ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parent<sp/>table<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>to<sp/>copy<sp/>for<sp/>repeats,<sp/>bits<sp/>to<sp/>drop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hbuf[4];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>for<sp/>gzip<sp/>header<sp/>crc<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="609"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>order[19]<sp/>=<sp/></highlight><highlight class="comment">/*<sp/>permutation<sp/>of<sp/>code<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{16,<sp/>17,<sp/>18,<sp/>0,<sp/>8,<sp/>7,<sp/>9,<sp/>6,<sp/>10,<sp/>5,<sp/>11,<sp/>4,<sp/>12,<sp/>3,<sp/>13,<sp/>2,<sp/>14,<sp/>1,<sp/>15};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;next_out<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strm-&gt;next_in<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;<sp/>strm-&gt;avail_in<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>)<sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa9e64f20508d4395d6f91237950664f6e" kindref="member">TYPEDO</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a03dae42536f97b08183620a910f9b204" kindref="member">LOAD</ref>();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>=<sp/><ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa0b0955668575b21eb0ab2272aef49f76" kindref="member">HEAD</ref>:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa9e64f20508d4395d6f91237950664f6e" kindref="member">TYPEDO</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(16);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>&amp;<sp/>2)<sp/>&amp;&amp;<sp/>hold<sp/>==<sp/>0x8b1f)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>gzip<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(0L,<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a2bdde00539008d4c1be6f9d29f0e4bd0" kindref="member">CRC2</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>hold);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3aee94eb5ff82fe30d1195f935903b4a" kindref="member">FLAGS</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expect<sp/>zlib<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a0f32d102ac6b1a49a0065088ce4e7a11" kindref="member">done</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>&amp;<sp/>1)<sp/>||<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>zlib<sp/>header<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(</highlight></codeline>
<codeline lineno="644"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(8)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(hold<sp/>&gt;&gt;<sp/>8))<sp/>%<sp/>31)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;incorrect<sp/>header<sp/>check&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(4)<sp/>!=<sp/><ref refid="zlib_8h_1a27a96226f3dc88e4743131c632adf32f" kindref="member">Z_DEFLATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;unknown<sp/>compression<sp/>method&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(4);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(4)<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>window<sp/>size&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae3d433011714e673b22e82156acc4416" kindref="member">dmax</ref><sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>len;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/>zlib<sp/>header<sp/>ok\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="adler32_8c_1a5a72291922586b323fa442b9fe8549ec" kindref="member">adler32</ref>(0L,<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/>hold<sp/>&amp;<sp/>0x200<sp/>?<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa8139648a2f9b7edaba980ab309495f11" kindref="member">DICTID</ref><sp/>:<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3aee94eb5ff82fe30d1195f935903b4a" kindref="member">FLAGS</ref>:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(16);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>=<sp/>(int)(hold);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0xff)<sp/>!=<sp/><ref refid="zlib_8h_1a27a96226f3dc88e4743131c632adf32f" kindref="member">Z_DEFLATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;unknown<sp/>compression<sp/>method&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0xe000)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;unknown<sp/>header<sp/>flags<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a0f360ae15271478c63d71eeff3aadf61" kindref="member">text</ref><sp/>=<sp/>(int)((hold<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)<sp/><ref refid="inflate_8c_1a2bdde00539008d4c1be6f9d29f0e4bd0" kindref="member">CRC2</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>hold);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaae9e4c627760f36823cdd153c24229157" kindref="member">TIME</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaae9e4c627760f36823cdd153c24229157" kindref="member">TIME</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(32);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1af78d48bb737730209bdd4f408d7423ab" kindref="member">time</ref><sp/>=<sp/><ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)<sp/><ref refid="inflate_8c_1a57c65b3c2ffdfe37b805b749a2c5fdbe" kindref="member">CRC4</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>hold);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa48654532ac8a1eee6c255d77e3e1c406" kindref="member">OS</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa48654532ac8a1eee6c255d77e3e1c406" kindref="member">OS</ref>:</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(16);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1aff725451a3584a5f1e37fcfb1beccd59" kindref="member">xflags</ref><sp/>=<sp/>(int)(hold<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a11efbbce191f03696d2773de0688945d" kindref="member">os</ref><sp/>=<sp/>(int)(hold<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)<sp/><ref refid="inflate_8c_1a2bdde00539008d4c1be6f9d29f0e4bd0" kindref="member">CRC2</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>hold);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa566a2c5006b8c3f014f20fc659c25e5b" kindref="member">EXLEN</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa566a2c5006b8c3f014f20fc659c25e5b" kindref="member">EXLEN</ref>:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0400)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(16);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>=<sp/>(unsigned)(hold);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ab16f7081fb292374b007651899c61fc6" kindref="member">extra_len</ref><sp/>=<sp/>(unsigned)hold;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)<sp/><ref refid="inflate_8c_1a2bdde00539008d4c1be6f9d29f0e4bd0" kindref="member">CRC2</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>hold);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ac5e2665487a2de750abf4058cb540b4c" kindref="member">extra</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaffb2fb86309c5c698e319b5b6dd8ab3a" kindref="member">EXTRA</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaffb2fb86309c5c698e319b5b6dd8ab3a" kindref="member">EXTRA</ref>:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0400)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>have)<sp/>copy<sp/>=<sp/><ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ac5e2665487a2de750abf4058cb540b4c" kindref="member">extra</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ab16f7081fb292374b007651899c61fc6" kindref="member">extra_len</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ac5e2665487a2de750abf4058cb540b4c" kindref="member">extra</ref><sp/>+<sp/>len,<sp/>next,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+<sp/>copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a15ed037e60f245bea1edb697b25630a4" kindref="member">extra_max</ref><sp/>?</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a15ed037e60f245bea1edb697b25630a4" kindref="member">extra_max</ref><sp/>-<sp/>len<sp/>:<sp/>copy);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>next,<sp/>copy);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>+=<sp/>copy;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa67bc2ced260a8e43805d2480a785d312" kindref="member">NAME</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa67bc2ced260a8e43805d2480a785d312" kindref="member">NAME</ref>:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0800)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(unsigned)(next[copy++]);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a6590a8fcdb4bcf458256f7a9fc3e9c32" kindref="member">name</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>&lt;<sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1ac58c21e1f423d0215aa7769c3713ac61" kindref="member">name_max</ref>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a6590a8fcdb4bcf458256f7a9fc3e9c32" kindref="member">name</ref>[state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>++]<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&amp;&amp;<sp/>copy<sp/>&lt;<sp/>have);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>next,<sp/>copy);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>+=<sp/>copy;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a6590a8fcdb4bcf458256f7a9fc3e9c32" kindref="member">name</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaae696377c19e507b64e16be78ce3bbdb" kindref="member">COMMENT</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaae696377c19e507b64e16be78ce3bbdb" kindref="member">COMMENT</ref>:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x1000)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(unsigned)(next[copy++]);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a12494f0a21cd71356bb2eb9f1abf9743" kindref="member">comment</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>&lt;<sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a9a86a6f486d381aa55dcaa1451f38fc1" kindref="member">comm_max</ref>)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a12494f0a21cd71356bb2eb9f1abf9743" kindref="member">comment</ref>[state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>++]<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&amp;&amp;<sp/>copy<sp/>&lt;<sp/>have);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>next,<sp/>copy);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>+=<sp/>copy;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a12494f0a21cd71356bb2eb9f1abf9743" kindref="member">comment</ref><sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaae4d85856c8036a23b19e1d32ae0e6b90" kindref="member">HCRC</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaae4d85856c8036a23b19e1d32ae0e6b90" kindref="member">HCRC</ref>:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&amp;<sp/>0x0200)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(16);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hold<sp/>!=<sp/>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>&amp;<sp/>0xffff))<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;header<sp/>crc<sp/>mismatch&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a2a7bc80ae487368f31c86140848835b0" kindref="member">hcrc</ref><sp/>=<sp/>(int)((state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>-&gt;<ref refid="structgz__header_1a0f32d102ac6b1a49a0065088ce4e7a11" kindref="member">done</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(0L,<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="798"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa8139648a2f9b7edaba980ab309495f11" kindref="member">DICTID</ref>:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(32);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="inflate_8c_1a802df6861be59122fc6f9f8e47141359" kindref="member">REVERSE</ref>(hold);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa14826de2bf5a66b660a8e338b6357133" kindref="member">DICT</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa14826de2bf5a66b660a8e338b6357133" kindref="member">DICT</ref>:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a2eb1cd634ed6baade952ffa5938ebcdc" kindref="member">havedict</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1af3b6db2fe8b54bb9edf88c2002e4bf34" kindref="member">RESTORE</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a32916ba675b2d06463da2576b6a49d64" kindref="member">Z_NEED_DICT</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=<sp/><ref refid="adler32_8c_1a5a72291922586b323fa442b9fe8549ec" kindref="member">adler32</ref>(0L,<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>:</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flush<sp/>==<sp/><ref refid="zlib_8h_1a73e5f4c24156c63ba863014396685062" kindref="member">Z_BLOCK</ref><sp/>||<sp/>flush<sp/>==<sp/><ref refid="zlib_8h_1a0c44b4d8d05cacb1227b535cd8ed538f" kindref="member">Z_TREES</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa9e64f20508d4395d6f91237950664f6e" kindref="member">TYPEDO</ref>:</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1aa1e478b107abaccc428d6266ea5ca595" kindref="member">BYTEBITS</ref>();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaed65b7dfe470f4e500b15f7074bb7fa2" kindref="member">CHECK</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(3);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(1);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(1);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(2))<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stored<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/>stored<sp/>block%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(last)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa77647f28a49007bb2c1f10fa36f33b55" kindref="member">STORED</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fixed<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixedtables(state);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/>fixed<sp/>codes<sp/>block%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(last)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabcafe3c2154b6a611ba2cce131ca0f86" kindref="member">LEN_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flush<sp/>==<sp/><ref refid="zlib_8h_1a0c44b4d8d05cacb1227b535cd8ed538f" kindref="member">Z_TREES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(2);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dynamic<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/>dynamic<sp/>codes<sp/>block%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(last)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa2e160f29fc076de5496a2b9968be9cc1" kindref="member">TABLE</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>block<sp/>type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(2);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa77647f28a49007bb2c1f10fa36f33b55" kindref="member">STORED</ref>:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1aa1e478b107abaccc428d6266ea5ca595" kindref="member">BYTEBITS</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>go<sp/>to<sp/>byte<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(32);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hold<sp/>&amp;<sp/>0xffff)<sp/>!=<sp/>((hold<sp/>&gt;&gt;<sp/>16)<sp/>^<sp/>0xffff))<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>stored<sp/>block<sp/>lengths&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>=<sp/>(unsigned)hold<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>length<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabf17f496021fb9357faed8247beb3926" kindref="member">COPY_</ref>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flush<sp/>==<sp/><ref refid="zlib_8h_1a0c44b4d8d05cacb1227b535cd8ed538f" kindref="member">Z_TREES</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabf17f496021fb9357faed8247beb3926" kindref="member">COPY_</ref>:</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>:</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>have)<sp/>copy<sp/>=<sp/><ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>left)<sp/>copy<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(put,<sp/>next,<sp/>copy);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>+=<sp/>copy;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put<sp/>+=<sp/>copy;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>end\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa2e160f29fc076de5496a2b9968be9cc1" kindref="member">TABLE</ref>:</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(14);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref><sp/>=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(5)<sp/>+<sp/>257;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(5);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4415e5e51efdd0c8672e4c601caa4762" kindref="member">ndist</ref><sp/>=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(5)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(5);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a62b5ea8559856b315b6c89d9114c2109" kindref="member">ncode</ref><sp/>=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(4)<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(4);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PKZIP_BUG_WORKAROUND</highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref><sp/>&gt;<sp/>286<sp/>||<sp/>state-&gt;<ref refid="structinflate__state_1a4415e5e51efdd0c8672e4c601caa4762" kindref="member">ndist</ref><sp/>&gt;<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>length<sp/>or<sp/>distance<sp/>symbols&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="896"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>sizes<sp/>ok\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaaeda44348e46a8bc21bd6122b3f3e0d5" kindref="member">LENLENS</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaaeda44348e46a8bc21bd6122b3f3e0d5" kindref="member">LENLENS</ref>:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a62b5ea8559856b315b6c89d9114c2109" kindref="member">ncode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(3);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[order[state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>++]]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(3);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(3);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>&lt;<sp/>19)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[order[state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>++]]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>=<sp/>(<ref refid="structcode" kindref="compound">code</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="inftrees_8c_1abdadeebf4630332213acd06c8612654b" kindref="member">inflate_table</ref>(<ref refid="inftrees_8h_1a0f33f5acf9079ff1f054fa235df2443ba4f2ec4135d8cf82c6c35780e470cac28" kindref="member">CODES</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>,<sp/>19,<sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>),</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref>),<sp/>state-&gt;<ref refid="structinflate__state_1a85403907f7f5b9d355821ffa2591456c" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>code<sp/>lengths<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>lengths<sp/>ok\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa77b9f2ec0ee4bb6570ef4f42d8f2a492" kindref="member">CODELENS</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa77b9f2ec0ee4bb6570ef4f42d8f2a492" kindref="member">CODELENS</ref>:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref><sp/>+<sp/>state-&gt;<ref refid="structinflate__state_1a4415e5e51efdd0c8672e4c601caa4762" kindref="member">ndist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref>[<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref>)];</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)<sp/>&lt;=<sp/>bits)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>++]<sp/>=<sp/>here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>bit<sp/>length<sp/>repeat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>3<sp/>+<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(2);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>==<sp/>17)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>3<sp/>+<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(3);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(3);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>7);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>11<sp/>+<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(7);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(7);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>+<sp/>copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref><sp/>+<sp/>state-&gt;<ref refid="structinflate__state_1a4415e5e51efdd0c8672e4c601caa4762" kindref="member">ndist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>bit<sp/>length<sp/>repeat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(copy--)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>++]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)len;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>error<sp/>breaks<sp/>in<sp/>while<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>end-of-block<sp/>code<sp/>(better<sp/>have<sp/>one)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>[256]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>code<sp/>--<sp/>missing<sp/>end-of-block&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>code<sp/>tables<sp/>--<sp/>note:<sp/>do<sp/>not<sp/>change<sp/>the<sp/>lenbits<sp/>or<sp/>distbits</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>here<sp/>(9<sp/>and<sp/>6)<sp/>without<sp/>reading<sp/>the<sp/>comments<sp/>in<sp/>inftrees.h</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concerning<sp/>the<sp/>ENOUGH<sp/>constants,<sp/>which<sp/>depend<sp/>on<sp/>those<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>=<sp/>(<ref refid="structcode" kindref="compound">code</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="inftrees_8c_1abdadeebf4630332213acd06c8612654b" kindref="member">inflate_table</ref>(<ref refid="inftrees_8h_1a0f33f5acf9079ff1f054fa235df2443ba86b0f8050ddd8ae0b99e2f9323ad00a1" kindref="member">LENS</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref>,<sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>),</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref>),<sp/>state-&gt;<ref refid="structinflate__state_1a85403907f7f5b9d355821ffa2591456c" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>literal/lengths<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref><sp/>=<sp/>(<ref refid="structcode" kindref="compound">code</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a98952f3f8f420a05b567f080aca0eb4b" kindref="member">distbits</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="inftrees_8c_1abdadeebf4630332213acd06c8612654b" kindref="member">inflate_table</ref>(<ref refid="inftrees_8h_1a0f33f5acf9079ff1f054fa235df2443bafd7fbb659c736b26e79316ef09a2a9a1" kindref="member">DISTS</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1aa0620e64487c48635f6c3a11a0aeb99d" kindref="member">lens</ref><sp/>+<sp/>state-&gt;<ref refid="structinflate__state_1a489b005f4fe214353cd80b77b4f23194" kindref="member">nlen</ref>,<sp/>state-&gt;<ref refid="structinflate__state_1a4415e5e51efdd0c8672e4c601caa4762" kindref="member">ndist</ref>,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>),<sp/>&amp;(state-&gt;<ref refid="structinflate__state_1a98952f3f8f420a05b567f080aca0eb4b" kindref="member">distbits</ref>),<sp/>state-&gt;<ref refid="structinflate__state_1a85403907f7f5b9d355821ffa2591456c" kindref="member">work</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>distances<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>codes<sp/>ok\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabcafe3c2154b6a611ba2cce131ca0f86" kindref="member">LEN_</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flush<sp/>==<sp/><ref refid="zlib_8h_1a0c44b4d8d05cacb1227b535cd8ed538f" kindref="member">Z_TREES</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabcafe3c2154b6a611ba2cce131ca0f86" kindref="member">LEN_</ref>:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaff15d001decc8890fb72cc6065a1abba" kindref="member">LEN</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaff15d001decc8890fb72cc6065a1abba" kindref="member">LEN</ref>:</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have<sp/>&gt;=<sp/>6<sp/>&amp;&amp;<sp/>left<sp/>&gt;=<sp/>258)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1af3b6db2fe8b54bb9edf88c2002e4bf34" kindref="member">RESTORE</ref>();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inffast_8c_1a53a180584225f8b9e863a9ab03c16076" kindref="member">inflate_fast</ref>(strm,<sp/>out);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a03dae42536f97b08183620a910f9b204" kindref="member">LOAD</ref>();</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref>[<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(state-&gt;<ref refid="structinflate__state_1a3ff97e6b230d7551fc848ff9de0236e9" kindref="member">lenbits</ref>)];</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)<sp/>&lt;=<sp/>bits)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;&amp;<sp/>(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;<sp/>0xf0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>here;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref>[last.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>+</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>last.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref>)<sp/>&gt;&gt;<sp/>last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)];</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)<sp/>&lt;=<sp/>bits)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>=<sp/>(unsigned)here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" kindref="member">Tracevv</ref>((stderr,<sp/>here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>&gt;=<sp/>0x20<sp/>&amp;&amp;<sp/>here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>&lt;<sp/>0x7f<sp/>?</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal<sp/>&apos;%c&apos;\n&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal<sp/>0x%02x\n&quot;</highlight><highlight class="normal">,<sp/>here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref>));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3b759690471ed29ecd243a8f36b93f60" kindref="member">LIT</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" kindref="member">Tracevv</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>of<sp/>block\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>literal/length<sp/>code&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref><sp/>=<sp/>(unsigned)(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref>)<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaad604a1d898344e0470e0f68968c41d1c" kindref="member">LENEXT</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaad604a1d898344e0470e0f68968c41d1c" kindref="member">LENEXT</ref>:</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>+=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" kindref="member">Tracevv</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a0e3af9175f6d3b30f83af69062ba4dec" kindref="member">was</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaac04fbbdf0d80a4ad25e565541deeebd7" kindref="member">DIST</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaac04fbbdf0d80a4ad25e565541deeebd7" kindref="member">DIST</ref>:</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref>[<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(state-&gt;<ref refid="structinflate__state_1a98952f3f8f420a05b567f080aca0eb4b" kindref="member">distbits</ref>)];</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)<sp/>&lt;=<sp/>bits)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;<sp/>0xf0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>here;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref>[last.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref><sp/>+</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>last.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref>)<sp/>&gt;&gt;<sp/>last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)];</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref><sp/>+<sp/>here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>)<sp/>&lt;=<sp/>bits)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1add54302c739466e0e4a204fa1015694b" kindref="member">PULLBYTE</ref>();</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>last.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>here.<ref refid="structcode_1a5defcebb356dca1a5a8d39995f28d66b" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref><sp/>&amp;<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>distance<sp/>code&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref><sp/>=<sp/>(unsigned)here.<ref refid="structcode_1a6f9c73627997e8fc6df02e620cf9a6f5" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(here.<ref refid="structcode_1a4f075d73a9177d05cc7d332105295b83" kindref="member">op</ref>)<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafca1908d584fa781bde4cf8905c3bcab" kindref="member">DISTEXT</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafca1908d584fa781bde4cf8905c3bcab" kindref="member">DISTEXT</ref>:</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref><sp/>+=<sp/><ref refid="inflate_8c_1a5967693540f086cfa357f68978bf0be7" kindref="member">BITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a65312e68bdf918e606b0deaf69793523" kindref="member">DROPBITS</ref>(state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref><sp/>+=<sp/>state-&gt;<ref refid="structinflate__state_1a5b7b0be77d61e8468716c7f265dd0780" kindref="member">extra</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INFLATE_STRICT</highlight></codeline>
<codeline lineno="1100"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref><sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1ae3d433011714e673b22e82156acc4416" kindref="member">dmax</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>distance<sp/>too<sp/>far<sp/>back&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1106"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" kindref="member">Tracevv</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref>));</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa1155ee5305ebe5bb9407faa9d395ae93" kindref="member">MATCH</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa1155ee5305ebe5bb9407faa9d395ae93" kindref="member">MATCH</ref>:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>out<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref><sp/>&gt;<sp/>copy)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>from<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref><sp/>-<sp/>copy;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a98b40fe23b7177bc8cd1d9d73edad593" kindref="member">sane</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;invalid<sp/>distance<sp/>too<sp/>far<sp/>back&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR</highlight></codeline>
<codeline lineno="1120"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a93bbe97269cf8304b452a4d472dba191" kindref="member">Trace</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate.c<sp/>too<sp/>far\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>-=<sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref>;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>)<sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>left)<sp/>copy<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*put++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--copy);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>==<sp/>0)<sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaff15d001decc8890fb72cc6065a1abba" kindref="member">LEN</ref>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1132"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>-=<sp/>state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>-<sp/>copy);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1a1c3ec583646b68713e5c92151064a6dd" kindref="member">wnext</ref><sp/>-<sp/>copy);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>)<sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>from<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>=<sp/>put<sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1af1e38258e8585b1a37854066ef9d939c" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>&gt;<sp/>left)<sp/>copy<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>-=<sp/>copy;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*put++<sp/>=<sp/>*from++;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--copy);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>==<sp/>0)<sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaff15d001decc8890fb72cc6065a1abba" kindref="member">LEN</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3b759690471ed29ecd243a8f36b93f60" kindref="member">LIT</ref>:</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*put++<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left--;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaff15d001decc8890fb72cc6065a1abba" kindref="member">LEN</ref>;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaed65b7dfe470f4e500b15f7074bb7fa2" kindref="member">CHECK</ref>:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(32);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>-=<sp/>left;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;total_out<sp/>+=<sp/>out;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1af9d1071eb75b1ee37a151ccec8dfee95" kindref="member">total</ref><sp/>+=<sp/>out;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a5eea7ffd1fff4fbea834bcb292d1bea2" kindref="member">UPDATE</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>put<sp/>-<sp/>out,<sp/>out);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">#ifdef<sp/><ref refid="inflate_8h_1af0307d655eac2167b3854ed5fc711295" kindref="member">GUNZIP</ref></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref><sp/>?<sp/>hold<sp/>:</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a802df6861be59122fc6f9f8e47141359" kindref="member">REVERSE</ref>(hold))<sp/>!=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;incorrect<sp/>data<sp/>check&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/>check<sp/>matches<sp/>trailer\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GUNZIP</highlight></codeline>
<codeline lineno="1182"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3418c365e56fa4587ae44612afc6fa48" kindref="member">LENGTH</ref>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa3418c365e56fa4587ae44612afc6fa48" kindref="member">LENGTH</ref>:</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>state-&gt;<ref refid="structinflate__state_1a9dcf6151443750d75b2283d0a3e62c39" kindref="member">flags</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1ab3731a4aa4bb04481dc95069bbfb7156" kindref="member">NEEDBITS</ref>(32);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hold<sp/>!=<sp/>(state-&gt;<ref refid="structinflate__state_1af9d1071eb75b1ee37a151ccec8dfee95" kindref="member">total</ref><sp/>&amp;<sp/>0xffffffffUL))<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;msg<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;incorrect<sp/>length<sp/>check&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a3ffcbdd4824c339e07ea67dd412636fd" kindref="member">INITBITS</ref>();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/>length<sp/>matches<sp/>trailer\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1195"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa9c954bcf443428c80b0f107b3bc48749" kindref="member">DONE</ref>;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa9c954bcf443428c80b0f107b3bc48749" kindref="member">DONE</ref>:</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="zlib_8h_1a7d94a4a852228a899864a0053162e7a8" kindref="member">Z_STREAM_END</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaafe29bdbfb6e2165eec29bf28af429856" kindref="member">BAD</ref>:</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="zlib_8h_1a9eda83d428a71752d148f38b5dbe04f2" kindref="member">Z_DATA_ERROR</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>inf_leave;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa5c97a00bfd8be44565f64bcad8c179e2" kindref="member">MEM</ref>:</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa447bfe7992c2fe70bfe561225f74d379" kindref="member">SYNC</ref>:</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>from<sp/>inflate(),<sp/>updating<sp/>the<sp/>total<sp/>counts<sp/>and<sp/>the<sp/>check<sp/>value.</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>there<sp/>was<sp/>no<sp/>progress<sp/>during<sp/>the<sp/>inflate()<sp/>call,<sp/>return<sp/>a<sp/>buffer</highlight></codeline>
<codeline lineno="1212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<sp/><sp/>Call<sp/>updatewindow()<sp/>to<sp/>create<sp/>and/or<sp/>update<sp/>the<sp/>window<sp/>state.</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:<sp/>a<sp/>memory<sp/>error<sp/>from<sp/>inflate()<sp/>is<sp/>non-recoverable.</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>inf_leave:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1af3b6db2fe8b54bb9edf88c2002e4bf34" kindref="member">RESTORE</ref>();</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>||<sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>&lt;<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaed65b7dfe470f4e500b15f7074bb7fa2" kindref="member">CHECK</ref><sp/>&amp;&amp;<sp/>out<sp/>!=<sp/>strm-&gt;avail_out))</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updatewindow(strm,<sp/>out))<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa5c97a00bfd8be44565f64bcad8c179e2" kindref="member">MEM</ref>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>-=<sp/>strm-&gt;avail_in;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>-=<sp/>strm-&gt;avail_out;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;total_in<sp/>+=<sp/>in;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;total_out<sp/>+=<sp/>out;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1af9d1071eb75b1ee37a151ccec8dfee95" kindref="member">total</ref><sp/>+=<sp/>out;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>&amp;&amp;<sp/>out)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm-&gt;adler<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref><sp/>=</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a5eea7ffd1fff4fbea834bcb292d1bea2" kindref="member">UPDATE</ref>(state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>,<sp/>strm-&gt;next_out<sp/>-<sp/>out,<sp/>out);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;data_type<sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1ab3cbcd2c5ff3b0b8b34ef402a13afdf7" kindref="member">last</ref><sp/>?<sp/>64<sp/>:<sp/>0)<sp/>+</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref><sp/>?<sp/>128<sp/>:<sp/>0)<sp/>+</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabcafe3c2154b6a611ba2cce131ca0f86" kindref="member">LEN_</ref><sp/>||<sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaabf17f496021fb9357faed8247beb3926" kindref="member">COPY_</ref><sp/>?<sp/>256<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((in<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>out<sp/>==<sp/>0)<sp/>||<sp/>flush<sp/>==<sp/><ref refid="zlib_8h_1a876a626ba14eb12eea4bbf6823b6ca50" kindref="member">Z_FINISH</ref>)<sp/>&amp;&amp;<sp/>ret<sp/>==<sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="zlib_8h_1a425e2f0664e1b1f75bf2bffab88d353d" kindref="member">Z_BUF_ERROR</ref>;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1abc6f3c66e6691b5007ecc9e1cb570fa2" kindref="member">inflateEnd</ref>(strm)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;zfree<sp/>==<sp/>(<ref refid="zlib_8h_1af07471bf3f37f2c29078ed11ac59fc7f" kindref="member">free_func</ref>)0)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/><ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(strm,<sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(strm,<sp/>strm-&gt;state);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;state<sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/>end\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a70a95f343952a809bbb6bcf3b362e593" kindref="member">inflateSetDictionary</ref>(strm,<sp/>dictionary,<sp/>dictLength)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref><sp/>*dictionary;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/>dictLength;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>!=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa14826de2bf5a66b660a8e338b6357133" kindref="member">DICT</ref>)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>correct<sp/>dictionary<sp/>id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa14826de2bf5a66b660a8e338b6357133" kindref="member">DICT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="adler32_8c_1a5a72291922586b323fa442b9fe8549ec" kindref="member">adler32</ref>(0L,<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="adler32_8c_1a5a72291922586b323fa442b9fe8549ec" kindref="member">adler32</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>dictionary,<sp/>dictLength);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>state-&gt;<ref refid="structinflate__state_1ae597e4f5c37b9f7881015384bf826371" kindref="member">check</ref>)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a9eda83d428a71752d148f38b5dbe04f2" kindref="member">Z_DATA_ERROR</ref>;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>dictionary<sp/>to<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updatewindow(strm,<sp/>strm-&gt;avail_out))<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa5c97a00bfd8be44565f64bcad8c179e2" kindref="member">MEM</ref>;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictLength<sp/>&gt;<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>,<sp/>dictionary<sp/>+<sp/>dictLength<sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>+<sp/>state-&gt;<ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref><sp/>-<sp/>dictLength,<sp/>dictionary,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictLength);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a6b56aabe80412784eadc1068981c9d00" kindref="member">whave</ref><sp/>=<sp/>dictLength;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a2eb1cd634ed6baade952ffa5938ebcdc" kindref="member">havedict</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" kindref="member">Tracev</ref>((stderr,<sp/></highlight><highlight class="stringliteral">&quot;inflate:<sp/><sp/><sp/>dictionary<sp/>set\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1ab62a5fbe5226dd4e9300eb0cb6d6610e" kindref="member">inflateGetHeader</ref>(strm,<sp/><ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><ref refid="structgz__header" kindref="compound">gz_headerp</ref><sp/><ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((state-&gt;<ref refid="structinflate__state_1a990d157b5c0d4ba178c3361de9ce6561" kindref="member">wrap</ref><sp/>&amp;<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>header<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref><sp/>=<sp/><ref refid="structinflate__state_1aac35b33a559009eb4bc0e2bdd8e9b5c6" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>head-&gt;<ref refid="structgz__header_1a0f32d102ac6b1a49a0065088ce4e7a11" kindref="member">done</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/>Search<sp/>buf[0..len-1]<sp/>for<sp/>the<sp/>pattern:<sp/>0,<sp/>0,<sp/>0xff,<sp/>0xff.<sp/><sp/>Return<sp/>when<sp/>found</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/>or<sp/>when<sp/>out<sp/>of<sp/>input.<sp/><sp/>When<sp/>called,<sp/>*have<sp/>is<sp/>the<sp/>number<sp/>of<sp/>pattern<sp/>bytes</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/>found<sp/>in<sp/>order<sp/>so<sp/>far,<sp/>in<sp/>0..3.<sp/><sp/>On<sp/>return<sp/>*have<sp/>is<sp/>updated<sp/>to<sp/>the<sp/>new</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/>state.<sp/><sp/>If<sp/>on<sp/>return<sp/>*have<sp/>equals<sp/>four,<sp/>then<sp/>the<sp/>pattern<sp/>was<sp/>found<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/>return<sp/>value<sp/>is<sp/>how<sp/>many<sp/>bytes<sp/>were<sp/>read<sp/>including<sp/>the<sp/>last<sp/>byte<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/>pattern.<sp/><sp/>If<sp/>*have<sp/>is<sp/>less<sp/>than<sp/>four,<sp/>then<sp/>the<sp/>pattern<sp/>has<sp/>not<sp/>been<sp/>found</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/>yet<sp/>and<sp/>the<sp/>return<sp/>value<sp/>is<sp/>len.<sp/><sp/>In<sp/>the<sp/>latter<sp/>case,<sp/>syncsearch()<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/>called<sp/>again<sp/>with<sp/>more<sp/>data<sp/>and<sp/>the<sp/>*have<sp/>state.<sp/><sp/>*have<sp/>is<sp/>initialized<sp/>to</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/>zero<sp/>for<sp/>the<sp/>first<sp/>call.</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><ref refid="adler32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>syncsearch(have,<sp/>buf,<sp/>len)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">unsigned<sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*have;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>got;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>got<sp/>=<sp/>*<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>got<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(buf[next])<sp/>==<sp/>(got<sp/>&lt;<sp/>2<sp/>?<sp/>0<sp/>:<sp/>0xff))</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got++;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[next])</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got<sp/>=<sp/>4<sp/>-<sp/>got;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next++;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>*have<sp/>=<sp/>got;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a6311fc784f0bf21d96cb58962359ea61" kindref="member">inflateSync</ref>(strm)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>look<sp/>at<sp/>or<sp/>looked<sp/>at<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>in,<sp/>out;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temporary<sp/>to<sp/>save<sp/>total_in<sp/>and<sp/>total_out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>restore<sp/>bit<sp/>buffer<sp/>to<sp/>byte<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(strm-&gt;avail_in<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>&lt;<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a425e2f0664e1b1f75bf2bffab88d353d" kindref="member">Z_BUF_ERROR</ref>;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>first<sp/>time,<sp/>start<sp/>search<sp/>in<sp/>bit<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>!=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa447bfe7992c2fe70bfe561225f74d379" kindref="member">SYNC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa447bfe7992c2fe70bfe561225f74d379" kindref="member">SYNC</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref><sp/>&lt;&lt;=<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>-=<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>&gt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[len++]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a5a91b1c59e52f1aa7eda75b86b05b843" kindref="member">hold</ref><sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syncsearch(&amp;(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>),<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>available<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>syncsearch(&amp;(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref>),<sp/>strm-&gt;next_in,<sp/>strm-&gt;avail_in);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;avail_in<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;next_in<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;total_in<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>no<sp/>joy<sp/>or<sp/>set<sp/>up<sp/>to<sp/>restart<sp/>inflate()<sp/>on<sp/>a<sp/>new<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4a2b15912256bcf7b39980e15095ba58" kindref="member">have</ref><sp/>!=<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a9eda83d428a71752d148f38b5dbe04f2" kindref="member">Z_DATA_ERROR</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>=<sp/>strm-&gt;total_in;<sp/><sp/>out<sp/>=<sp/>strm-&gt;total_out;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="inflate_8c_1a9990ecfeb0e3b82bcfe07920cef7b1c2" kindref="member">inflateReset</ref>(strm);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>strm-&gt;total_in<sp/>=<sp/>in;<sp/><sp/>strm-&gt;total_out<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>=<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaab47ea8bb955afd0adc0ef98517dd6084" kindref="member">TYPE</ref>;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/><sp/><sp/>Returns<sp/>true<sp/>if<sp/>inflate<sp/>is<sp/>currently<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>block<sp/>generated<sp/>by</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/><sp/><sp/>Z_SYNC_FLUSH<sp/>or<sp/>Z_FULL_FLUSH.<sp/>This<sp/>function<sp/>is<sp/>used<sp/>by<sp/>one<sp/>PPP</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/><sp/><sp/>implementation<sp/>to<sp/>provide<sp/>an<sp/>additional<sp/>safety<sp/>check.<sp/>PPP<sp/>uses</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/><sp/><sp/>Z_SYNC_FLUSH<sp/>but<sp/>removes<sp/>the<sp/>length<sp/>bytes<sp/>of<sp/>the<sp/>resulting<sp/>empty<sp/>stored</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/><sp/>block.<sp/>When<sp/>decompressing,<sp/>PPP<sp/>checks<sp/>that<sp/>at<sp/>the<sp/>end<sp/>of<sp/>input<sp/>packet,</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/><sp/><sp/>inflate<sp/>is<sp/>waiting<sp/>for<sp/>these<sp/>length<sp/>bytes.</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1ad50808147db441fd9260150a218974bb" kindref="member">inflateSyncPoint</ref>(strm)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa77647f28a49007bb2c1f10fa36f33b55" kindref="member">STORED</ref><sp/>&amp;&amp;<sp/>state-&gt;<ref refid="structinflate__state_1ab37c3563f306f29e6ded8e933af14365" kindref="member">bits</ref><sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a4be131080ab2d224f9bebbcab3a2ccd6" kindref="member">inflateCopy</ref>(dest,<sp/>source)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>dest;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>source;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*copy;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structinflate__state_1acca16ca86216760eaf307bf71e15e470" kindref="member">wsize</ref>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>source<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>source-&gt;<ref refid="structz__stream_1ab74ae90fe165934eaf95da212b16ab9f" kindref="member">state</ref><sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source-&gt;<ref refid="structz__stream_1a39c3f1f00aaace5bf803e1c80643113b" kindref="member">zalloc</ref><sp/>==<sp/>(<ref refid="zlib_8h_1af90139b484e48372e0e6db52bb9f6733" kindref="member">alloc_func</ref>)0<sp/>||<sp/>source-&gt;<ref refid="structz__stream_1ab96ddcd732e86c059414c3f2927cad65" kindref="member">zfree</ref><sp/>==<sp/>(<ref refid="zlib_8h_1af07471bf3f37f2c29078ed11ac59fc7f" kindref="member">free_func</ref>)0)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)source-&gt;<ref refid="structz__stream_1ab74ae90fe165934eaf95da212b16ab9f" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" kindref="member">ZALLOC</ref>(source,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref>));</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>window<sp/>=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" kindref="member">ZALLOC</ref>(source,<sp/>1U<sp/>&lt;&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(source,<sp/>copy);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1ae2be6be871e377c6e2c25a7296ce320c" kindref="member">Z_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(dest,<sp/>source,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structz__stream" kindref="compound">z_stream</ref>));</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(copy,<sp/>state,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinflate__state" kindref="compound">inflate_state</ref>));</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>&gt;=<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>&lt;=<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref><sp/>+<sp/><ref refid="inftrees_8h_1acef2f42f16f168d23ec870bd60a3b5f1" kindref="member">ENOUGH</ref><sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>=<sp/>copy-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1a4560e1eb3318f7ea41896be84de0679a" kindref="member">lencode</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref><sp/>=<sp/>copy-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1a19f7ae2fe2682cb1163860f6991a107f" kindref="member">distcode</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>copy-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref><sp/>=<sp/>copy-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref><sp/>+<sp/>(state-&gt;<ref refid="structinflate__state_1a872bf267d91efb4143e9cfb812e670bb" kindref="member">next</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1af9581f523a7d8d47fba6cdd73eaf1edc" kindref="member">codes</ref>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wsize<sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>state-&gt;<ref refid="structinflate__state_1a71f844b589ac450f17d69f3692a8c5cc" kindref="member">wbits</ref>;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref>(window,<sp/>state-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>,<sp/>wsize);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>copy-&gt;<ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref><sp/>=<sp/><ref refid="structinflate__state_1a9cc4c0bde426383731394dcf91c40673" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinternal__state" kindref="compound">internal_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)copy;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1afe000de8c61c3299468122d0475809b7" kindref="member">inflateUndermine</ref>(strm,<sp/>subvert)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subvert;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1aad97cde83a9a4bb77f5c3b03bb68e483" kindref="member">Z_STREAM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a98b40fe23b7177bc8cd1d9d73edad593" kindref="member">sane</ref><sp/>=<sp/>!subvert;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">#ifdef<sp/>INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a8cb802b6a11e926478dc6547c514c65c" kindref="member">Z_OK</ref>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="structinflate__state_1a98b40fe23b7177bc8cd1d9d73edad593" kindref="member">sane</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="zlib_8h_1a9eda83d428a71752d148f38b5dbe04f2" kindref="member">Z_DATA_ERROR</ref>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="inflate_8c_1a44cda52058b0618a3c2beb861b14d649" kindref="member">inflateMark</ref>(strm)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><ref refid="structz__stream" kindref="compound">z_streamp</ref><sp/>strm;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*state;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strm<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref><sp/>||<sp/>strm-&gt;state<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1L<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinflate__state" kindref="compound">inflate_state</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)strm-&gt;state;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(state-&gt;<ref refid="structinflate__state_1ab666ce74a806fc77200ced9bc385cb0b" kindref="member">back</ref>)<sp/>&lt;&lt;<sp/>16)<sp/>+</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaaba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref><sp/>?<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>:</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(state-&gt;<ref refid="structinflate__state_1a9c7906fee7eeeb450b13576531ca639d" kindref="member">mode</ref><sp/>==<sp/><ref refid="inflate_8h_1a164ea0159d5f0b5f12a646f25f99eceaa1155ee5305ebe5bb9407faa9d395ae93" kindref="member">MATCH</ref><sp/>?<sp/>state-&gt;<ref refid="structinflate__state_1a0e3af9175f6d3b30f83af69062ba4dec" kindref="member">was</ref><sp/>-<sp/>state-&gt;<ref refid="structinflate__state_1a5179d4c9b332d976cce7c6cce6bdf3c1" kindref="member">length</ref><sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/inflate.c"/>
  </compounddef>
</doxygen>
