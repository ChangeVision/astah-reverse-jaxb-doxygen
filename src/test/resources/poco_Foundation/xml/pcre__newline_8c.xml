<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="pcre__newline_8c" kind="file">
    <compoundname>pcre_newline.c</compoundname>
    <includes refid="pcre__config_8h" local="yes">pcre_config.h</includes>
    <includes refid="pcre__internal_8h" local="yes">pcre_internal.h</includes>
    <incdepgraph>
      <node id="1073">
        <label>pcre_config.h</label>
        <link refid="pcre__config_8h"/>
      </node>
      <node id="1082">
        <label>stdarg.h</label>
      </node>
      <node id="1084">
        <label>ucp.h</label>
        <link refid="ucp_8h"/>
      </node>
      <node id="1079">
        <label>stdlib.h</label>
      </node>
      <node id="1081">
        <label>setjmp.h</label>
      </node>
      <node id="1077">
        <label>stddef.h</label>
      </node>
      <node id="1083">
        <label>pcre.h</label>
        <link refid="pcre_8h"/>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>limits.h</label>
      </node>
      <node id="1074">
        <label>pcre_internal.h</label>
        <link refid="pcre__internal_8h"/>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1080">
        <label>string.h</label>
      </node>
      <node id="1075">
        <label>ctype.h</label>
      </node>
      <node id="1078">
        <label>stdio.h</label>
      </node>
      <node id="1072">
        <label>src/pcre_newline.c</label>
        <link refid="pcre_newline.c"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcre__newline_8c_1a3298eda10394cc70b0c934e67d55f681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>BOOL _pcre_is_newline</definition>
        <argsstring>(const uschar *ptr, int type, const uschar *endptr, int *lenptr, BOOL utf8)</argsstring>
        <name>_pcre_is_newline</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>endptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lenptr</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_newline.c" line="73" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_newline.c" bodystart="73" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="pcre__newline_8c_1a9473af37d10c612b0d0e147f9ac9754a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>BOOL _pcre_was_newline</definition>
        <argsstring>(const uschar *ptr, int type, const uschar *startptr, int *lenptr, BOOL utf8)</argsstring>
        <name>_pcre_was_newline</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>startptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lenptr</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_newline.c" line="123" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_newline.c" bodystart="123" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Perl-Compatible<sp/>Regular<sp/>Expressions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PCRE<sp/>is<sp/>a<sp/>library<sp/>of<sp/>functions<sp/>to<sp/>support<sp/>regular<sp/>expressions<sp/>whose<sp/>syntax</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>semantics<sp/>are<sp/>as<sp/>close<sp/>as<sp/>possible<sp/>to<sp/>those<sp/>of<sp/>the<sp/>Perl<sp/>5<sp/>language.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Written<sp/>by<sp/>Philip<sp/>Hazel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>1997-2008<sp/>University<sp/>of<sp/>Cambridge</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>of<sp/>Cambridge<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>module<sp/>contains<sp/>internal<sp/>functions<sp/>for<sp/>testing<sp/>newlines<sp/>when<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="42"><highlight class="comment">one<sp/>kind<sp/>of<sp/>newline<sp/>is<sp/>to<sp/>be<sp/>recognized.<sp/>When<sp/>a<sp/>newline<sp/>is<sp/>found,<sp/>its<sp/>length<sp/>is</highlight></codeline>
<codeline lineno="43"><highlight class="comment">returned.<sp/>In<sp/>principle,<sp/>we<sp/>could<sp/>implement<sp/>several<sp/>newline<sp/>&quot;types&quot;,<sp/>each</highlight></codeline>
<codeline lineno="44"><highlight class="comment">referring<sp/>to<sp/>a<sp/>different<sp/>set<sp/>of<sp/>newline<sp/>characters.<sp/>At<sp/>present,<sp/>PCRE<sp/>supports</highlight></codeline>
<codeline lineno="45"><highlight class="comment">only<sp/>NLTYPE_FIXED,<sp/>which<sp/>gets<sp/>handled<sp/>without<sp/>these<sp/>functions,<sp/>NLTYPE_ANYCRLF,</highlight></codeline>
<codeline lineno="46"><highlight class="comment">and<sp/>NLTYPE_ANY.<sp/>The<sp/>full<sp/>list<sp/>of<sp/>Unicode<sp/>newline<sp/>characters<sp/>is<sp/>taken<sp/>from</highlight></codeline>
<codeline lineno="47"><highlight class="comment">http://unicode.org/unicode/reports/tr18/.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__config_8h" kindref="compound">pcre_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__internal_8h" kindref="compound">pcre_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>newline<sp/>at<sp/>given<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>guaranteed<sp/>that<sp/>the<sp/>initial<sp/>value<sp/>of<sp/>ptr<sp/>is<sp/>less<sp/>than<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="60"><highlight class="comment">string<sp/>that<sp/>is<sp/>being<sp/>processed.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>possible<sp/>newline</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>newline<sp/>type</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>endptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/>lenptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>to<sp/>return<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>utf8<sp/>mode</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="pcre__internal_8h_1a902a92c1114452c4b82f84cdd585d1da" kindref="member">_pcre_is_newline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*endptr,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lenptr,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/>{<sp/><ref refid="pcre__internal_8h_1ad47e83ffa53e3592279b023d7d72cb9b" kindref="member">GETCHAR</ref>(c,<sp/>ptr);<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="pcre__internal_8h_1a27a269d5670306a753a98413273ea9be" kindref="member">NLTYPE_ANYCRLF</ref>)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000a:<sp/>*lenptr<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000d:<sp/>*lenptr<sp/>=<sp/>(ptr<sp/>&lt;<sp/>endptr<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/>0x0a)?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NLTYPE_ANY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000a:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000b:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>VT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000c:<sp/>*lenptr<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000d:<sp/>*lenptr<sp/>=<sp/>(ptr<sp/>&lt;<sp/>endptr<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/>0x0a)?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0085:<sp/>*lenptr<sp/>=<sp/>utf8?<sp/>2<sp/>:<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NEL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2028:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2029:<sp/>*lenptr<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>newline<sp/>at<sp/>previous<sp/>position<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>guaranteed<sp/>that<sp/>the<sp/>initial<sp/>value<sp/>of<sp/>ptr<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>start<sp/>of</highlight></codeline>
<codeline lineno="110"><highlight class="comment">the<sp/>string<sp/>that<sp/>is<sp/>being<sp/>processed.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>possible<sp/>newline</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>newline<sp/>type</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/>startptr<sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/>lenptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>to<sp/>return<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>utf8<sp/>mode</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="pcre__internal_8h_1a91790eb9692da005052da044961b7185" kindref="member">_pcre_was_newline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*startptr,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lenptr,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">ptr--;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>BACKCHAR(ptr);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ad47e83ffa53e3592279b023d7d72cb9b" kindref="member">GETCHAR</ref>(c,<sp/>ptr);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>UTF-8<sp/>support<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal">c<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="pcre__internal_8h_1a27a269d5670306a753a98413273ea9be" kindref="member">NLTYPE_ANYCRLF</ref>)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000a:<sp/>*lenptr<sp/>=<sp/>(ptr<sp/>&gt;<sp/>startptr<sp/>&amp;&amp;<sp/>ptr[-1]<sp/>==<sp/>0x0d)?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000d:<sp/>*lenptr<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000a:<sp/>*lenptr<sp/>=<sp/>(ptr<sp/>&gt;<sp/>startptr<sp/>&amp;&amp;<sp/>ptr[-1]<sp/>==<sp/>0x0d)?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000b:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>VT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000c:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x000d:<sp/>*lenptr<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0085:<sp/>*lenptr<sp/>=<sp/>utf8?<sp/>2<sp/>:<sp/>1;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>NEL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2028:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2029:<sp/>*lenptr<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>pcre_newline.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_newline.c"/>
  </compounddef>
</doxygen>
