<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="pcre__study_8c" kind="file">
    <compoundname>pcre_study.c</compoundname>
    <includes refid="pcre__config_8h" local="yes">pcre_config.h</includes>
    <includes refid="pcre__internal_8h" local="yes">pcre_internal.h</includes>
    <incdepgraph>
      <node id="1101">
        <label>pcre_config.h</label>
        <link refid="pcre__config_8h"/>
      </node>
      <node id="1110">
        <label>stdarg.h</label>
      </node>
      <node id="1112">
        <label>ucp.h</label>
        <link refid="ucp_8h"/>
      </node>
      <node id="1107">
        <label>stdlib.h</label>
      </node>
      <node id="1109">
        <label>setjmp.h</label>
      </node>
      <node id="1105">
        <label>stddef.h</label>
      </node>
      <node id="1111">
        <label>pcre.h</label>
        <link refid="pcre_8h"/>
        <childnode refid="1107" relation="include">
        </childnode>
      </node>
      <node id="1104">
        <label>limits.h</label>
      </node>
      <node id="1100">
        <label>src/pcre_study.c</label>
        <link refid="pcre_study.c"/>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
      </node>
      <node id="1102">
        <label>pcre_internal.h</label>
        <link refid="pcre__internal_8h"/>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1105" relation="include">
        </childnode>
        <childnode refid="1106" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
        <childnode refid="1109" relation="include">
        </childnode>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1111" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
      </node>
      <node id="1108">
        <label>string.h</label>
      </node>
      <node id="1103">
        <label>ctype.h</label>
      </node>
      <node id="1106">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635" prot="public" static="no">
        <name>@6</name>
        <enumvalue id="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" prot="public">
          <name>SSB_FAIL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635acb8a3571a7a929bd9660c9a30704a844" prot="public">
          <name>SSB_DONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635ad541c8c0af6a77b752c434064eb8e977" prot="public">
          <name>SSB_CONTINUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" line="51" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcre__study_8c_1a35a5c306009d46b29e017a0d7ac27b55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_bit</definition>
        <argsstring>(uschar *start_bits, unsigned int c, BOOL caseless, compile_data *cd)</argsstring>
        <name>set_bit</name>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>start_bits</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>caseless</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" line="71" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="pcre__study_8c_1ae4ce26b863673c76cbda0dfb336c8b76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_start_bits</definition>
        <argsstring>(const uschar *code, uschar *start_bits, BOOL caseless, BOOL utf8, compile_data *cd)</argsstring>
        <name>set_start_bits</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>start_bits</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>caseless</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" line="105" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" bodystart="105" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="pcre__study_8c_1a26966f50b5c0f2777e31b20dd396f65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpcre__extra" kindref="compound">pcre_extra</ref> *</type>
        <definition>pcre_extra* pcre_study</definition>
        <argsstring>(const pcre *external_re, int options, const char **errorptr)</argsstring>
        <name>pcre_study</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> pcre *</type>
          <declname>external_re</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>errorptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" line="505" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c" bodystart="505" bodyend="583"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Perl-Compatible<sp/>Regular<sp/>Expressions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PCRE<sp/>is<sp/>a<sp/>library<sp/>of<sp/>functions<sp/>to<sp/>support<sp/>regular<sp/>expressions<sp/>whose<sp/>syntax</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>semantics<sp/>are<sp/>as<sp/>close<sp/>as<sp/>possible<sp/>to<sp/>those<sp/>of<sp/>the<sp/>Perl<sp/>5<sp/>language.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Written<sp/>by<sp/>Philip<sp/>Hazel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>1997-2008<sp/>University<sp/>of<sp/>Cambridge</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>of<sp/>Cambridge<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>module<sp/>contains<sp/>the<sp/>external<sp/>function<sp/>pcre_study(),<sp/>along<sp/>with<sp/>local</highlight></codeline>
<codeline lineno="42"><highlight class="comment">supporting<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__config_8h" kindref="compound">pcre_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__internal_8h" kindref="compound">pcre_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>from<sp/>set_start_bits()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>,<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635acb8a3571a7a929bd9660c9a30704a844" kindref="member">SSB_DONE</ref>,<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635ad541c8c0af6a77b752c434064eb8e977" kindref="member">SSB_CONTINUE</ref><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>a<sp/>bit<sp/>and<sp/>maybe<sp/>its<sp/>alternate<sp/>case<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Given<sp/>a<sp/>character,<sp/>set<sp/>its<sp/>bit<sp/>in<sp/>the<sp/>table,<sp/>and<sp/>also<sp/>the<sp/>bit<sp/>for<sp/>the<sp/>other</highlight></codeline>
<codeline lineno="59"><highlight class="comment">version<sp/>of<sp/>a<sp/>letter<sp/>if<sp/>we<sp/>are<sp/>caseless.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>start_bits<sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>bit<sp/>map</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>the<sp/>character</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/>caseless<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>caseless<sp/>flag</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>block<sp/>with<sp/>char<sp/>table<sp/>pointers</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nothing</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">set_bit(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*start_bits,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>caseless,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal">start_bits[c/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(c&amp;7));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caseless<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[c]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a2dd2a83bdb0c180d49a1f14f9fda9c1e" kindref="member">ctype_letter</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>start_bits[cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[c]/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[c]&amp;7));</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create<sp/>bitmap<sp/>of<sp/>starting<sp/>bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>scans<sp/>a<sp/>compiled<sp/>unanchored<sp/>expression<sp/>recursively<sp/>and</highlight></codeline>
<codeline lineno="85"><highlight class="comment">attempts<sp/>to<sp/>build<sp/>a<sp/>bitmap<sp/>of<sp/>the<sp/>set<sp/>of<sp/>possible<sp/>starting<sp/>bytes.<sp/>As<sp/>time<sp/>goes</highlight></codeline>
<codeline lineno="86"><highlight class="comment">by,<sp/>we<sp/>may<sp/>be<sp/>able<sp/>to<sp/>get<sp/>more<sp/>clever<sp/>at<sp/>doing<sp/>this.<sp/>The<sp/>SSB_CONTINUE<sp/>return<sp/>is</highlight></codeline>
<codeline lineno="87"><highlight class="comment">useful<sp/>for<sp/>parenthesized<sp/>groups<sp/>in<sp/>patterns<sp/>such<sp/>as<sp/>(a*)b<sp/>where<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="88"><highlight class="comment">provides<sp/>some<sp/>optional<sp/>starting<sp/>bytes<sp/>but<sp/>scanning<sp/>must<sp/>continue<sp/>at<sp/>the<sp/>outer</highlight></codeline>
<codeline lineno="89"><highlight class="comment">level<sp/>to<sp/>find<sp/>at<sp/>least<sp/>one<sp/>mandatory<sp/>byte.<sp/>At<sp/>the<sp/>outermost<sp/>level,<sp/>this</highlight></codeline>
<codeline lineno="90"><highlight class="comment">function<sp/>fails<sp/>unless<sp/>the<sp/>result<sp/>is<sp/>SSB_DONE.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>an<sp/>expression</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>start_bits<sp/><sp/><sp/>points<sp/>to<sp/>a<sp/>32-byte<sp/>table,<sp/>initialized<sp/>to<sp/>0</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/>caseless<sp/><sp/><sp/><sp/><sp/>the<sp/>current<sp/>state<sp/>of<sp/>the<sp/>caseless<sp/>flag</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>block<sp/>with<sp/>char<sp/>table<sp/>pointers</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSB_FAIL<sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>Failed<sp/>to<sp/>find<sp/>any<sp/>starting<sp/>bytes</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSB_DONE<sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>Found<sp/>mandatory<sp/>starting<sp/>bytes</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSB_CONTINUE<sp/>=&gt;<sp/>Found<sp/>optional<sp/>starting<sp/>bytes</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">set_start_bits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*<ref refid="structcode" kindref="compound">code</ref>,<sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*start_bits,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>caseless,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yield<sp/>=<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635acb8a3571a7a929bd9660c9a30704a844" kindref="member">SSB_DONE</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>comment<sp/>and<sp/>code<sp/>was<sp/>inserted<sp/>in<sp/>January<sp/>1999.<sp/>In<sp/>May<sp/>2006,</highlight></codeline>
<codeline lineno="114"><highlight class="comment">when<sp/>it<sp/>was<sp/>observed<sp/>to<sp/>cause<sp/>compiler<sp/>warnings<sp/>about<sp/>unused<sp/>values,<sp/>I<sp/>took<sp/>it</highlight></codeline>
<codeline lineno="115"><highlight class="comment">out<sp/>again.<sp/>If<sp/>anybody<sp/>is<sp/>still<sp/>using<sp/>OS/2,<sp/>they<sp/>will<sp/>have<sp/>to<sp/>put<sp/>it<sp/>back</highlight></codeline>
<codeline lineno="116"><highlight class="comment">manually.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>next<sp/>statement<sp/>and<sp/>the<sp/>later<sp/>reference<sp/>to<sp/>dummy<sp/>are<sp/>here<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="119"><highlight class="comment">trick<sp/>the<sp/>optimizer<sp/>of<sp/>the<sp/>IBM<sp/>C<sp/>compiler<sp/>for<sp/>OS/2<sp/>into<sp/>generating<sp/>correct</highlight></codeline>
<codeline lineno="120"><highlight class="comment">code.<sp/>Apparently<sp/>IBM<sp/>isn&apos;t<sp/>going<sp/>to<sp/>fix<sp/>the<sp/>problem,<sp/>and<sp/>we<sp/>would<sp/>rather<sp/>not</highlight></codeline>
<codeline lineno="121"><highlight class="comment">disable<sp/>optimization<sp/>(in<sp/>this<sp/>module<sp/>it<sp/>actually<sp/>makes<sp/>a<sp/>big<sp/>difference,<sp/>and</highlight></codeline>
<codeline lineno="122"><highlight class="comment">the<sp/>pcre<sp/>module<sp/>can<sp/>use<sp/>all<sp/>the<sp/>optimization<sp/>it<sp/>can<sp/>get).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*tcode<sp/>=<sp/>code<sp/>+<sp/>(((int)*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>)?<sp/>3:1)<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(try_next)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>for<sp/>items<sp/>in<sp/>this<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*tcode)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fail<sp/>if<sp/>we<sp/>reach<sp/>something<sp/>we<sp/>don&apos;t<sp/>understand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>hit<sp/>a<sp/>bracket<sp/>or<sp/>a<sp/>positive<sp/>lookahead<sp/>assertion,<sp/>recurse<sp/>to<sp/>set</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>from<sp/>within<sp/>the<sp/>subpattern.<sp/>If<sp/>it<sp/>can&apos;t<sp/>find<sp/>anything,<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>give<sp/>up.<sp/>If<sp/>it<sp/>finds<sp/>some<sp/>mandatory<sp/>character(s),<sp/>we<sp/>are<sp/>done<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>branch.<sp/>Otherwise,<sp/>carry<sp/>on<sp/>scanning<sp/>after<sp/>the<sp/>subpattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca0dc451c6b96cc15a135fec342b96fe46" kindref="member">OP_SBRA</ref>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa9aaca0d2623c1345d4af3f9a1fba55e" kindref="member">OP_SCBRA</ref>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>set_start_bits(tcode,<sp/>start_bits,<sp/>caseless,<sp/>utf8,<sp/>cd);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635acb8a3571a7a929bd9660c9a30704a844" kindref="member">SSB_DONE</ref>)<sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>tcode<sp/>+=<sp/>GET(tcode,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*tcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>hit<sp/>ALT<sp/>or<sp/>KET,<sp/>it<sp/>means<sp/>we<sp/>haven&apos;t<sp/>found<sp/>anything<sp/>mandatory<sp/>in</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>branch,<sp/>though<sp/>we<sp/>might<sp/>have<sp/>found<sp/>something<sp/>optional.<sp/>For<sp/>ALT,<sp/>we</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>continue<sp/>with<sp/>the<sp/>next<sp/>alternative,<sp/>but<sp/>we<sp/>have<sp/>to<sp/>arrange<sp/>that<sp/>the<sp/>final</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>from<sp/>subpattern<sp/>is<sp/>SSB_CONTINUE<sp/>rather<sp/>than<sp/>SSB_DONE.<sp/>For<sp/>KET,</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SSB_CONTINUE:<sp/>if<sp/>this<sp/>is<sp/>the<sp/>top<sp/>level,<sp/>that<sp/>indicates<sp/>failure,</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>after<sp/>a<sp/>nested<sp/>subpattern,<sp/>it<sp/>causes<sp/>scanning<sp/>to<sp/>continue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>=<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635ad541c8c0af6a77b752c434064eb8e977" kindref="member">SSB_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca95b5857e05fc32abfe03c637b6fb7a51" kindref="member">OP_KETRMAX</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca76e0ea39f8c85ca2f32ae6f5bbf40de4" kindref="member">OP_KETRMIN</ref>:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635ad541c8c0af6a77b752c434064eb8e977" kindref="member">SSB_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>callout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca679273f5fe2d1faf9d486eb30ae86d5a" kindref="member">OP_CALLOUT</ref>:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2<sp/>+<sp/>2*<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>lookbehind<sp/>and<sp/>negative<sp/>lookahead<sp/>assertions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca35f4c2f9d4ea06d18ed08f6cce7214ad" kindref="member">OP_ASSERT_NOT</ref>:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1ce25e7cd4fdba6d53cc4b316773e439" kindref="member">OP_ASSERTBACK</ref>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5057097bced86c4c7554843df46264d9" kindref="member">OP_ASSERTBACK_NOT</ref>:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>tcode<sp/>+=<sp/>GET(tcode,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*tcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>an<sp/>option<sp/>setting,<sp/>changing<sp/>the<sp/>caseless<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>caseless<sp/>=<sp/>(tcode[1]<sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BRAZERO<sp/>does<sp/>the<sp/>bracket,<sp/>but<sp/>carries<sp/>on.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca98bb31f21c3d8f37d590633469623cc7" kindref="member">OP_BRAZERO</ref>:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca41541e9aeb8c834c9e755f4eb7fcc5ff" kindref="member">OP_BRAMINZERO</ref>:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_start_bits(++tcode,<sp/>start_bits,<sp/>caseless,<sp/>utf8,<sp/>cd)<sp/>==<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>the<sp/>comment<sp/>at<sp/>the<sp/>head<sp/>of<sp/>this<sp/>function<sp/>concerning<sp/>the<sp/>next<sp/>line,</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>was<sp/>an<sp/>old<sp/>fudge<sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>OS/2.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>dummy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>tcode<sp/>+=<sp/>GET(tcode,1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*tcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SKIPZERO<sp/>skips<sp/>the<sp/>bracket.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca04c6c600fb26f33500b9b20ce0d23784" kindref="member">OP_SKIPZERO</ref>:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>tcode<sp/>+=<sp/>GET(tcode,1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*tcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single-char<sp/>*<sp/>or<sp/>?<sp/>sets<sp/>the<sp/>bit<sp/>and<sp/>tries<sp/>the<sp/>next<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab76952c741418e37c7cca2fd5143e0fc" kindref="member">OP_MINSTAR</ref>:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d707075c9fc986dd75283dcf43602b5" kindref="member">OP_POSSTAR</ref>:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref>:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c0e7b19d7f9e002a1d916c7a0381c4d" kindref="member">OP_MINQUERY</ref>:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab2bd21819f67d9a8de41a9fff9c29aad" kindref="member">OP_POSQUERY</ref>:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_bit(start_bits,<sp/>tcode[1],<sp/>caseless,<sp/>cd);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>tcode[-1]<sp/>&gt;=<sp/>0xc0)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/><ref refid="pcre__internal_8h_1af5a9186462ce5ab24b3617a98f4f8b9c" kindref="member">_pcre_utf8_table4</ref>[tcode[-1]<sp/>&amp;<sp/>0x3f];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single-char<sp/>upto<sp/>sets<sp/>the<sp/>bit<sp/>and<sp/>tries<sp/>the<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref>:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caaedd676e6d3581adbcde869c050bc25b" kindref="member">OP_MINUPTO</ref>:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6f80145741d9621bc3d7051cebb42fd2" kindref="member">OP_POSUPTO</ref>:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_bit(start_bits,<sp/>tcode[3],<sp/>caseless,<sp/>cd);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>tcode[-1]<sp/>&gt;=<sp/>0xc0)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/><ref refid="pcre__internal_8h_1af5a9186462ce5ab24b3617a98f4f8b9c" kindref="member">_pcre_utf8_table4</ref>[tcode[-1]<sp/>&amp;<sp/>0x3f];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>least<sp/>one<sp/>single<sp/>char<sp/>sets<sp/>the<sp/>bit<sp/>and<sp/>stops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca79fa28dc4f1c9a45d3a0bb8372f5b70a" kindref="member">OP_MINPLUS</ref>:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_bit(start_bits,<sp/>tcode[1],<sp/>caseless,<sp/>cd);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single<sp/>character<sp/>type<sp/>sets<sp/>the<sp/>bits<sp/>and<sp/>stops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cbit_space<sp/>table<sp/>has<sp/>vertical<sp/>tab<sp/>as<sp/>whitespace;<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>discard<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>1)<sp/>d<sp/>&amp;=<sp/>~0x08;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~d;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cbit_space<sp/>table<sp/>has<sp/>vertical<sp/>tab<sp/>as<sp/>whitespace;<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>discard<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>1)<sp/>d<sp/>&amp;=<sp/>~0x08;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>d;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>or<sp/>more<sp/>character<sp/>type<sp/>fudges<sp/>the<sp/>pointer<sp/>and<sp/>restarts,<sp/>knowing</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>will<sp/>hit<sp/>a<sp/>single<sp/>character<sp/>type<sp/>and<sp/>stop<sp/>there.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca22c4991eef1371652cde137ae2bd218e" kindref="member">OP_TYPEPLUS</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca14b55a6ebf5d9b6ce22082d701a01959" kindref="member">OP_TYPEMINPLUS</ref>:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref>:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>or<sp/>more<sp/>repeats<sp/>of<sp/>character<sp/>types<sp/>set<sp/>the<sp/>bits<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>again.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb10e8776178fe6d76db8258f428c9b8" kindref="member">OP_TYPEUPTO</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3c3c4557f2af900243692be9334cd913" kindref="member">OP_TYPEMINUPTO</ref>:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7a2e8e9d3619df87610f1da24d4de5a0" kindref="member">OP_TYPEPOSUPTO</ref>:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref>:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca17536428c3af7314bbf2640e508ca33b" kindref="member">OP_TYPEQUERY</ref>:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa23453b3105f120bcbe1a02f163082fd" kindref="member">OP_TYPEMINQUERY</ref>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac492dc1f53782d42def24d2b923f18c4" kindref="member">OP_TYPEPOSQUERY</ref>:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(tcode[1])</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caccf027bd6c08cde017717172a120a9f2" kindref="member">OP_ANY</ref>:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref>:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635a3bd0b998acea17176bde379f641fbdba" kindref="member">SSB_FAIL</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cbit_space<sp/>table<sp/>has<sp/>vertical<sp/>tab<sp/>as<sp/>whitespace;<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discard<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>1)<sp/>d<sp/>&amp;=<sp/>~0x08;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~d;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cbit_space<sp/>table<sp/>has<sp/>vertical<sp/>tab<sp/>as<sp/>whitespace;<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discard<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>1)<sp/>d<sp/>&amp;=<sp/>~0x08;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>d;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>~cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[c]<sp/>|=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Character<sp/>class<sp/>where<sp/>all<sp/>the<sp/>information<sp/>is<sp/>in<sp/>a<sp/>bit<sp/>map:<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>and<sp/>either<sp/>carry<sp/>on<sp/>or<sp/>not,<sp/>according<sp/>to<sp/>the<sp/>repeat<sp/>count.<sp/>If<sp/>it<sp/>was</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>negative<sp/>class,<sp/>and<sp/>we<sp/>are<sp/>operating<sp/>with<sp/>UTF-8<sp/>characters,<sp/>any<sp/>byte</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>a<sp/>value<sp/>&gt;=<sp/>0xc4<sp/>is<sp/>a<sp/>potentially<sp/>valid<sp/>starter<sp/>because<sp/>it<sp/>starts<sp/>a</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>character<sp/>with<sp/>a<sp/>value<sp/>&gt;<sp/>255.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca73f1f5998cb564a4df3d4424f44fa974" kindref="member">OP_NCLASS</ref>:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[24]<sp/>|=<sp/>0xf0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>for<sp/>0xc4<sp/>-<sp/>0xc8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(start_bits+25,<sp/>0xff,<sp/>7);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bits<sp/>for<sp/>0xc9<sp/>-<sp/>0xff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f99e671caee687d352cce89c95e04c9" kindref="member">OP_CLASS</ref>:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode++;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>the<sp/>bits<sp/>in<sp/>a<sp/>bit<sp/>map<sp/>correspond<sp/>to<sp/>character</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values,<sp/>not<sp/>to<sp/>byte<sp/>values.<sp/>However,<sp/>the<sp/>bit<sp/>map<sp/>we<sp/>are<sp/>constructing<sp/>is</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>byte<sp/>values.<sp/>So<sp/>we<sp/>have<sp/>to<sp/>do<sp/>a<sp/>conversion<sp/>for<sp/>characters<sp/>whose</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>is<sp/>&gt;<sp/>127.<sp/>In<sp/>fact,<sp/>there<sp/>are<sp/>only<sp/>two<sp/>possible<sp/>starting<sp/>bytes<sp/>for</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>characters<sp/>in<sp/>the<sp/>range<sp/>128<sp/>-<sp/>255.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>16;<sp/>c++)<sp/>start_bits[c]<sp/>|=<sp/>tcode[c];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>128;<sp/>c<sp/>&lt;<sp/>256;<sp/>c++)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tcode[c/8]<sp/>&amp;&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(c&amp;7)))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(c<sp/>&gt;&gt;<sp/>6)<sp/>|<sp/>0xc0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>bit<sp/>for<sp/>this<sp/>starter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_bits[d/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(d&amp;7));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>then<sp/>skip<sp/>on<sp/>to<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(c<sp/>&amp;<sp/>0xc0)<sp/>+<sp/>0x40<sp/>-<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>relevant<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>non-UTF-8<sp/>mode,<sp/>the<sp/>two<sp/>bit<sp/>maps<sp/>are<sp/>completely<sp/>compatible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>start_bits[c]<sp/>|=<sp/>tcode[c];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>past<sp/>the<sp/>bit<sp/>map,<sp/>and<sp/>act<sp/>on<sp/>what<sp/>follows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*tcode)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab178cbd2052d88d8a045cd6dbb97c71e" kindref="member">OP_CRSTAR</ref>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6152241e808fd894af73c7603a6969e9" kindref="member">OP_CRMINSTAR</ref>:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca4ed5d933aaca7d07f0641e8971680673" kindref="member">OP_CRQUERY</ref>:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca0724a5442fb6ae4d9ee4695e7ebff538" kindref="member">OP_CRMINQUERY</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcode++;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca27e60147a7e03aca767f97da8338f76e" kindref="member">OP_CRRANGE</ref>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6be76e9a7c0cf0c3087fa5298b4f5611" kindref="member">OP_CRMINRANGE</ref>:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((tcode[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>tcode[2])<sp/>==<sp/>0)<sp/>tcode<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try_next<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>bitmap<sp/>class<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>try_next<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>to<sp/>next<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yield;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="486"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Study<sp/>a<sp/>compiled<sp/>expression<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>handed<sp/>a<sp/>compiled<sp/>expression<sp/>that<sp/>it<sp/>must<sp/>study<sp/>to<sp/>produce</highlight></codeline>
<codeline lineno="490"><highlight class="comment">information<sp/>that<sp/>will<sp/>speed<sp/>up<sp/>the<sp/>matching.<sp/>It<sp/>returns<sp/>a<sp/>pcre_extra<sp/>block</highlight></codeline>
<codeline lineno="491"><highlight class="comment">which<sp/>then<sp/>gets<sp/>handed<sp/>back<sp/>to<sp/>pcre_exec().</highlight></codeline>
<codeline lineno="492"><highlight class="comment"></highlight></codeline>
<codeline lineno="493"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/>re<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>compiled<sp/>expression</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/>contains<sp/>option<sp/>bits</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/>errorptr<sp/><sp/>points<sp/>to<sp/>where<sp/>to<sp/>place<sp/>error<sp/>messages;</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>NULL<sp/>unless<sp/>error</highlight></codeline>
<codeline lineno="498"><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>a<sp/>pcre_extra<sp/>block,<sp/>with<sp/>study_data<sp/>filled<sp/>in<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appropriate<sp/>flag<sp/>set;</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>on<sp/>error<sp/>or<sp/>if<sp/>no<sp/>optimization<sp/>possible</highlight></codeline>
<codeline lineno="502"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><ref refid="pcre__internal_8h_1a43f7c191f7b3645a85b184183534a961" kindref="member">PCRE_EXP_DEFN</ref><sp/><ref refid="structpcre__extra" kindref="compound">pcre_extra</ref><sp/>*<sp/><ref refid="pcre__internal_8h_1a8696d535a0f4ad7b9fef8b2acc558ca0" kindref="member">PCRE_CALL_CONVENTION</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="pcre_8h_1a9609921cc84baee440e2311903e8e205" kindref="member">pcre_study</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pcre<sp/>*external_re,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**errorptr)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>start_bits[32];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="structpcre__extra" kindref="compound">pcre_extra</ref><sp/>*extra;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref><sp/>*study;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*tables;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>compile_block;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*re<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*)external_re;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">*errorptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(re<sp/>==<sp/>NULL<sp/>||<sp/>re-&gt;<ref refid="structreal__pcre_1ac51622792c220cf763ff4c4f1b4849ff" kindref="member">magic_number</ref><sp/>!=<sp/><ref refid="pcre__internal_8h_1a54061e5993a5517320d425f44408cc86" kindref="member">MAGIC_NUMBER</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>*errorptr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;argument<sp/>is<sp/>not<sp/>a<sp/>compiled<sp/>regular<sp/>expression&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1a5cc9e624d110b5d9de518df8f85972ae" kindref="member">PUBLIC_STUDY_OPTIONS</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>*errorptr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>or<sp/>incorrect<sp/>option<sp/>bit(s)<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">code<sp/>=<sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)re<sp/>+<sp/>re-&gt;<ref refid="structreal__pcre_1a8335643ae4ddbf0590060e8620d8863c" kindref="member">name_table_offset</ref><sp/>+</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>(re-&gt;<ref refid="structreal__pcre_1a2c6d31e5c2514cfbf35bf84a7338a485" kindref="member">name_count</ref><sp/>*<sp/>re-&gt;<ref refid="structreal__pcre_1a2605c553619bcb99a83c9d676e2ab5e0" kindref="member">name_entry_size</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>an<sp/>anchored<sp/>pattern,<sp/>or<sp/>an<sp/>unanchored<sp/>pattern<sp/>that<sp/>has<sp/>a<sp/>first<sp/>char,<sp/>or</highlight></codeline>
<codeline lineno="533"><highlight class="comment">a<sp/>multiline<sp/>pattern<sp/>that<sp/>matches<sp/>only<sp/>at<sp/>&quot;line<sp/>starts&quot;,<sp/>no<sp/>further<sp/>processing</highlight></codeline>
<codeline lineno="534"><highlight class="comment">at<sp/>present.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1aa2eabe6a64847b8bc2f49f6a8430f1f4" kindref="member">PCRE_ANCHORED</ref>)<sp/>!=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>(re-&gt;<ref refid="structreal__pcre_1a29901ed20ab7fd0bd22a7d99dd7350d5" kindref="member">flags</ref><sp/>&amp;<sp/>(<ref refid="pcre__internal_8h_1aa3860b4c31ee4275eaa19df78bc73590" kindref="member">PCRE_FIRSTSET</ref>|<ref refid="pcre__internal_8h_1af24422b85f1b3c788a4703b61f18fe11" kindref="member">PCRE_STARTLINE</ref>))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>character<sp/>tables<sp/>in<sp/>the<sp/>block<sp/>that<sp/>is<sp/>passed<sp/>around<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">tables<sp/>=<sp/>re-&gt;<ref refid="structreal__pcre_1ac0e1bc37b4294b11a37fff693f8b75de" kindref="member">tables</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>(void)<ref refid="pcre_8h_1ae8981199a44bbdffd27155ef98d0ddf9" kindref="member">pcre_fullinfo</ref>(external_re,<sp/>NULL,<sp/><ref refid="pcre_8h_1ad69f733768ffcb1f36c66adc671ff95b" kindref="member">PCRE_INFO_DEFAULT_TABLES</ref>,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;tables));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal">compile_block.<ref refid="structcompile__data_1af6583066c30914cfc1f781f6c8875ffa" kindref="member">lcc</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ade4efb6fb5feb928550e72974967f1d0" kindref="member">lcc_offset</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">compile_block.<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ac8621d471e516521d225bc2dc7705782" kindref="member">fcc_offset</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">compile_block.<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1a1af2fa016e5f6954ced7f2600b2c105e" kindref="member">cbits_offset</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">compile_block.<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ae658ea05e098e65933f3d7e062495de4" kindref="member">ctypes_offset</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>we<sp/>can<sp/>find<sp/>a<sp/>fixed<sp/>set<sp/>of<sp/>initial<sp/>characters<sp/>for<sp/>the<sp/>pattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">memset(start_bits,<sp/>0,<sp/>32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref>));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_start_bits(code,<sp/>start_bits,<sp/>(re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>!=<sp/>0,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>(re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1a177ec66f9b06aab7b37965b77b2cf1b8" kindref="member">PCRE_UTF8</ref>)<sp/>!=<sp/>0,<sp/>&amp;compile_block)<sp/>!=<sp/><ref refid="pcre__study_8c_1a726ca809ffd3d67ab4b8476646f26635acb8a3571a7a929bd9660c9a30704a844" kindref="member">SSB_DONE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>pcre_extra<sp/>block<sp/>and<sp/>a<sp/>pcre_study_data<sp/>block.<sp/>The<sp/>study<sp/>data<sp/>is<sp/>put<sp/>in</highlight></codeline>
<codeline lineno="559"><highlight class="comment">the<sp/>latter,<sp/>which<sp/>is<sp/>pointed<sp/>to<sp/>by<sp/>the<sp/>former,<sp/>which<sp/>may<sp/>also<sp/>get<sp/>additional</highlight></codeline>
<codeline lineno="560"><highlight class="comment">data<sp/>set<sp/>later<sp/>by<sp/>the<sp/>calling<sp/>program.<sp/>At<sp/>the<sp/>moment,<sp/>the<sp/>size<sp/>of</highlight></codeline>
<codeline lineno="561"><highlight class="comment">pcre_study_data<sp/>is<sp/>fixed.<sp/>We<sp/>nevertheless<sp/>save<sp/>it<sp/>in<sp/>a<sp/>field<sp/>for<sp/>returning<sp/>via</highlight></codeline>
<codeline lineno="562"><highlight class="comment">the<sp/>pcre_fullinfo()<sp/>function<sp/>so<sp/>that<sp/>if<sp/>it<sp/>becomes<sp/>variable<sp/>in<sp/>the<sp/>future,<sp/>we</highlight></codeline>
<codeline lineno="563"><highlight class="comment">don&apos;t<sp/>have<sp/>to<sp/>change<sp/>that<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">extra<sp/>=<sp/>(<ref refid="structpcre__extra" kindref="compound">pcre_extra</ref><sp/>*)(<ref refid="pcre_8h_1a26f9b74ea2d3692cfaacee68461563f4" kindref="member">pcre_malloc</ref>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpcre__extra" kindref="compound">pcre_extra</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref>));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extra<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>*errorptr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>get<sp/>memory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">study<sp/>=<sp/>(<ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref><sp/>*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)extra<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpcre__extra" kindref="compound">pcre_extra</ref>));</highlight></codeline>
<codeline lineno="575"><highlight class="normal">extra-&gt;<ref refid="structpcre__extra_1a2a7957f7f9d15b3b69f8652b2f50ecb3" kindref="member">flags</ref><sp/>=<sp/><ref refid="pcre_8h_1a2349a3ef318b1472ea1e862dea0e5d5f" kindref="member">PCRE_EXTRA_STUDY_DATA</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">extra-&gt;<ref refid="structpcre__extra_1a27f29bdf9c4526d5bb3fb8ee514ee8e8" kindref="member">study_data</ref><sp/>=<sp/>study;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">study-&gt;<ref refid="structpcre__study__data_1ac994347d3d729eaf14eba590b65867a6" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">study-&gt;<ref refid="structpcre__study__data_1a506b45147cf530698b13eff5d124ecfe" kindref="member">options</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1a4bbaa1bde305f5aa75950082a6fa8870" kindref="member">PCRE_STUDY_MAPPED</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">memcpy(study-&gt;<ref refid="structpcre__study__data_1a67df46fe48ef09428578d97cdcffab8b" kindref="member">start_bits</ref>,<sp/>start_bits,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(start_bits));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extra;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>pcre_study.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_study.c"/>
  </compounddef>
</doxygen>
