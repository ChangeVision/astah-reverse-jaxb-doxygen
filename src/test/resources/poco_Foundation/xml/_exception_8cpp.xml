<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_exception_8cpp" kind="file">
    <compoundname>Exception.cpp</compoundname>
    <includes local="yes">Poco/Exception.h</includes>
    <includes local="no">typeinfo</includes>
    <incdepgraph>
      <node id="341">
        <label>src/Exception.cpp</label>
        <link refid="Exception.cpp"/>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>typeinfo</label>
      </node>
      <node id="342">
        <label>Poco/Exception.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_poco">Poco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Exception.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>//poco/1.4/Foundation/src/Exception.cpp#1<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Library:<sp/>Foundation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Package:<sp/>Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Module:<sp/><sp/>Exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2004-2006,<sp/>Applied<sp/>Informatics<sp/>Software<sp/>Engineering<sp/>GmbH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>Contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>or<sp/>organization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>software<sp/>and<sp/>accompanying<sp/>documentation<sp/>covered<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>license<sp/>(the<sp/>&quot;Software&quot;)<sp/>to<sp/>use,<sp/>reproduce,<sp/>display,<sp/>distribute,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>execute,<sp/>and<sp/>transmit<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>prepare<sp/>derivative<sp/>works<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>third-parties<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>so,<sp/>all<sp/>subject<sp/>to<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>copyright<sp/>notices<sp/>in<sp/>the<sp/>Software<sp/>and<sp/>this<sp/>entire<sp/>statement,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>above<sp/>license<sp/>grant,<sp/>this<sp/>restriction<sp/>and<sp/>the<sp/>following<sp/>disclaimer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>in<sp/>whole<sp/>or<sp/>in<sp/>part,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>derivative<sp/>works<sp/>of<sp/>the<sp/>Software,<sp/>unless<sp/>such<sp/>copies<sp/>or<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>are<sp/>solely<sp/>in<sp/>the<sp/>form<sp/>of<sp/>machine-executable<sp/>object<sp/>code<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>source<sp/>language<sp/>processor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE,<sp/>TITLE<sp/>AND<sp/>NON-INFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>OR<sp/>ANYONE<sp/>DISTRIBUTING<sp/>THE<sp/>SOFTWARE<sp/>BE<sp/>LIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR<sp/>ANY<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Poco/Exception.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Poco<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">Exception::Exception(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref>):<sp/>_pNested(0),<sp/>_code(code)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">Exception::Exception(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref>):<sp/>_msg(msg),<sp/>_pNested(0),<sp/>_code(code)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">Exception::Exception(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcode" kindref="compound">code</ref>):<sp/>_msg(msg),<sp/>_pNested(0),<sp/>_code(code)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg.empty())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_msg.append(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_msg.append(arg);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">Exception::Exception(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Exception&amp;<sp/>nested,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code):<sp/>_msg(msg),<sp/>_pNested(nested.clone()),<sp/>_code(code)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">Exception::Exception(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Exception&amp;<sp/>exc):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::exception(exc),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>_msg(exc._msg),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>_code(exc._code)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>_pNested<sp/>=<sp/>exc._pNested<sp/>?<sp/>exc._pNested-&gt;clone()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">Exception::~Exception()<sp/>throw()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pNested;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">Exception&amp;<sp/>Exception::operator<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Exception&amp;<sp/>exc)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;exc<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_pNested;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_msg<sp/><sp/><sp/><sp/><sp/>=<sp/>exc._msg;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pNested<sp/>=<sp/>exc._pNested<sp/>?<sp/>exc._pNested-&gt;clone()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_code<sp/><sp/><sp/><sp/>=<sp/>exc._code;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Exception::name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Exception&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Exception::className()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*this).name();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Exception::what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name();</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal">std::string<sp/>Exception::displayText()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>txt<sp/>=<sp/>name();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_msg.empty())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txt.append(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txt.append(_msg);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>txt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Exception::extendedMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg.empty())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_msg.empty())<sp/>_msg.append(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_msg.append(arg);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">Exception*<sp/>Exception::clone()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Exception::rethrow()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(LogicException,<sp/>Exception,<sp/></highlight><highlight class="stringliteral">&quot;Logic<sp/>exception&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(AssertionViolationException,<sp/>LogicException,<sp/>&quot;Assertion<sp/>violation&quot;)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NullPointerException,<sp/>LogicException,<sp/>&quot;Null<sp/>pointer&quot;)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NullValueException,<sp/>LogicException,<sp/>&quot;Null<sp/>value&quot;)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(BugcheckException,<sp/>LogicException,<sp/>&quot;Bugcheck&quot;)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(InvalidArgumentException,<sp/>LogicException,<sp/>&quot;Invalid<sp/>argument&quot;)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NotImplementedException,<sp/>LogicException,<sp/>&quot;Not<sp/>implemented&quot;)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(RangeException,<sp/>LogicException,<sp/>&quot;Out<sp/>of<sp/>range&quot;)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(IllegalStateException,<sp/>LogicException,<sp/>&quot;Illegal<sp/>state&quot;)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(InvalidAccessException,<sp/>LogicException,<sp/>&quot;Invalid<sp/>access&quot;)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(SignalException,<sp/>LogicException,<sp/>&quot;Signal<sp/>received&quot;)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(UnhandledException,<sp/>LogicException,<sp/>&quot;Unhandled<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(RuntimeException,<sp/>Exception,<sp/>&quot;Runtime<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NotFoundException,<sp/>RuntimeException,<sp/>&quot;Not<sp/>found&quot;)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(ExistsException,<sp/>RuntimeException,<sp/>&quot;Exists&quot;)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(TimeoutException,<sp/>RuntimeException,<sp/>&quot;Timeout&quot;)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(SystemException,<sp/>RuntimeException,<sp/>&quot;System<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(RegularExpressionException,<sp/>RuntimeException,<sp/>&quot;Error<sp/>in<sp/>regular<sp/>expression&quot;)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(LibraryLoadException,<sp/>RuntimeException,<sp/>&quot;Cannot<sp/>load<sp/>library&quot;)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(LibraryAlreadyLoadedException,<sp/>RuntimeException,<sp/>&quot;Library<sp/>already<sp/>loaded&quot;)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NoThreadAvailableException,<sp/>RuntimeException,<sp/>&quot;No<sp/>thread<sp/>available&quot;)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(PropertyNotSupportedException,<sp/>RuntimeException,<sp/>&quot;Property<sp/>not<sp/>supported&quot;)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(PoolOverflowException,<sp/>RuntimeException,<sp/>&quot;Pool<sp/>overflow&quot;)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(NoPermissionException,<sp/>RuntimeException,<sp/>&quot;No<sp/>permission&quot;)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(OutOfMemoryException,<sp/>RuntimeException,<sp/>&quot;Out<sp/>of<sp/>memory&quot;)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(DataException,<sp/>RuntimeException,<sp/>&quot;Data<sp/>error&quot;)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(DataFormatException,<sp/>DataException,<sp/>&quot;Bad<sp/>data<sp/><ref refid="namespace_poco_1aa5bbd43e7c73e8189d7b156493fa7f46" kindref="member">format</ref>&quot;)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(SyntaxException,<sp/>DataException,<sp/>&quot;Syntax<sp/>error&quot;)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(CircularReferenceException,<sp/>DataException,<sp/>&quot;Circular<sp/>reference&quot;)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(PathSyntaxException,<sp/>SyntaxException,<sp/>&quot;Bad<sp/>path<sp/>syntax&quot;)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(IOException,<sp/>RuntimeException,<sp/>&quot;<ref refid="_m_d5_engine_8cpp_1ac0eafdc9ee161b71e7af98af736952fd" kindref="member">I</ref>/O<sp/>error&quot;)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(ProtocolException,<sp/>IOException,<sp/>&quot;Protocol<sp/>error&quot;)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(FileException,<sp/>IOException,<sp/>&quot;File<sp/>access<sp/>error&quot;)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(FileExistsException,<sp/>FileException,<sp/>&quot;File<sp/>exists&quot;)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(FileNotFoundException,<sp/>FileException,<sp/>&quot;File<sp/>not<sp/>found&quot;)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(PathNotFoundException,<sp/>FileException,<sp/>&quot;Path<sp/>not<sp/>found&quot;)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(FileReadOnlyException,<sp/>FileException,<sp/>&quot;File<sp/>is<sp/>read-only&quot;)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(FileAccessDeniedException,<sp/>FileException,<sp/>&quot;Access<sp/>to<sp/>file<sp/>denied&quot;)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(CreateFileException,<sp/>FileException,<sp/>&quot;Cannot<sp/>create<sp/>file&quot;)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(OpenFileException,<sp/>FileException,<sp/>&quot;Cannot<sp/>open<sp/>file&quot;)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(WriteFileException,<sp/>FileException,<sp/>&quot;Cannot<sp/>write<sp/>file&quot;)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(ReadFileException,<sp/>FileException,<sp/>&quot;Cannot<sp/>read<sp/>file&quot;)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(UnknownURISchemeException,<sp/>RuntimeException,<sp/>&quot;Unknown<sp/>URI<sp/>scheme&quot;)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(ApplicationException,<sp/>Exception,<sp/>&quot;Application<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">POCO_IMPLEMENT_EXCEPTION(BadCastException,<sp/>RuntimeException,<sp/>&quot;Bad<sp/>cast<sp/>exception&quot;)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Poco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Exception.cpp"/>
  </compounddef>
</doxygen>
