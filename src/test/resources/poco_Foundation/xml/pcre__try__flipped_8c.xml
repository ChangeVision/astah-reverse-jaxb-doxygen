<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="pcre__try__flipped_8c" kind="file">
    <compoundname>pcre_try_flipped.c</compoundname>
    <includes refid="pcre__config_8h" local="yes">pcre_config.h</includes>
    <includes refid="pcre__internal_8h" local="yes">pcre_internal.h</includes>
    <incdepgraph>
      <node id="1129">
        <label>pcre_config.h</label>
        <link refid="pcre__config_8h"/>
      </node>
      <node id="1138">
        <label>stdarg.h</label>
      </node>
      <node id="1140">
        <label>ucp.h</label>
        <link refid="ucp_8h"/>
      </node>
      <node id="1135">
        <label>stdlib.h</label>
      </node>
      <node id="1137">
        <label>setjmp.h</label>
      </node>
      <node id="1133">
        <label>stddef.h</label>
      </node>
      <node id="1139">
        <label>pcre.h</label>
        <link refid="pcre_8h"/>
        <childnode refid="1135" relation="include">
        </childnode>
      </node>
      <node id="1132">
        <label>limits.h</label>
      </node>
      <node id="1130">
        <label>pcre_internal.h</label>
        <link refid="pcre__internal_8h"/>
        <childnode refid="1131" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1136" relation="include">
        </childnode>
        <childnode refid="1137" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
      </node>
      <node id="1136">
        <label>string.h</label>
      </node>
      <node id="1128">
        <label>src/pcre_try_flipped.c</label>
        <link refid="pcre_try_flipped.c"/>
        <childnode refid="1129" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
      </node>
      <node id="1131">
        <label>ctype.h</label>
      </node>
      <node id="1134">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcre__try__flipped_8c_1a10f8ec3057a4a5d8782a4ef8b1a6602a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long int</type>
        <definition>static unsigned long int byteflip</definition>
        <argsstring>(unsigned long int value, int n)</argsstring>
        <name>byteflip</name>
        <param>
          <type>unsigned long int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_try_flipped.c" line="67" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_try_flipped.c" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="pcre__try__flipped_8c_1a907c606b09cc91e7ad6de9483b1bbed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structreal__pcre" kindref="compound">real_pcre</ref> *</type>
        <definition>real_pcre* _pcre_try_flipped</definition>
        <argsstring>(const real_pcre *re, real_pcre *internal_re, const pcre_study_data *study, pcre_study_data *internal_study)</argsstring>
        <name>_pcre_try_flipped</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structreal__pcre" kindref="compound">real_pcre</ref> *</type>
          <declname>re</declname>
        </param>
        <param>
          <type><ref refid="structreal__pcre" kindref="compound">real_pcre</ref> *</type>
          <declname>internal_re</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref> *</type>
          <declname>study</declname>
        </param>
        <param>
          <type><ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref> *</type>
          <declname>internal_study</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_try_flipped.c" line="99" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_try_flipped.c" bodystart="99" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Perl-Compatible<sp/>Regular<sp/>Expressions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PCRE<sp/>is<sp/>a<sp/>library<sp/>of<sp/>functions<sp/>to<sp/>support<sp/>regular<sp/>expressions<sp/>whose<sp/>syntax</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>semantics<sp/>are<sp/>as<sp/>close<sp/>as<sp/>possible<sp/>to<sp/>those<sp/>of<sp/>the<sp/>Perl<sp/>5<sp/>language.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Written<sp/>by<sp/>Philip<sp/>Hazel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>1997-2008<sp/>University<sp/>of<sp/>Cambridge</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>of<sp/>Cambridge<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>module<sp/>contains<sp/>an<sp/>internal<sp/>function<sp/>that<sp/>tests<sp/>a<sp/>compiled<sp/>pattern<sp/>to</highlight></codeline>
<codeline lineno="42"><highlight class="comment">see<sp/>if<sp/>it<sp/>was<sp/>compiled<sp/>with<sp/>the<sp/>opposite<sp/>endianness.<sp/>If<sp/>so,<sp/>it<sp/>uses<sp/>an</highlight></codeline>
<codeline lineno="43"><highlight class="comment">auxiliary<sp/>local<sp/>function<sp/>to<sp/>flip<sp/>the<sp/>appropriate<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__config_8h" kindref="compound">pcre_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__internal_8h" kindref="compound">pcre_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flip<sp/>bytes<sp/>in<sp/>an<sp/>integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>the<sp/>magic<sp/>number<sp/>in<sp/>a<sp/>regex<sp/>doesn&apos;t<sp/>match,<sp/>in</highlight></codeline>
<codeline lineno="55"><highlight class="comment">order<sp/>to<sp/>flip<sp/>its<sp/>bytes<sp/>to<sp/>see<sp/>if<sp/>we<sp/>are<sp/>dealing<sp/>with<sp/>a<sp/>pattern<sp/>that<sp/>was</highlight></codeline>
<codeline lineno="56"><highlight class="comment">compiled<sp/>on<sp/>a<sp/>host<sp/>of<sp/>different<sp/>endianness.<sp/>If<sp/>so,<sp/>this<sp/>function<sp/>is<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="57"><highlight class="comment">flip<sp/>other<sp/>byte<sp/>values.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>number<sp/>to<sp/>flip</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>flip<sp/>(assumed<sp/>to<sp/>be<sp/>2<sp/>or<sp/>4)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>flipped<sp/>value</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">byteflip(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((value<sp/>&amp;<sp/>0x00ff)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((value<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((value<sp/>&amp;<sp/>0x000000ff)<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((value<sp/>&amp;<sp/>0x0000ff00)<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((value<sp/>&amp;<sp/>0x00ff0000)<sp/>&gt;&gt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((value<sp/>&amp;<sp/>0xff000000)<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test<sp/>for<sp/>a<sp/>byte-flipped<sp/>compiled<sp/>regex<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>from<sp/>pcre_exec(),<sp/>pcre_dfa_exec(),<sp/>and<sp/>also<sp/>from</highlight></codeline>
<codeline lineno="83"><highlight class="comment">pcre_fullinfo().<sp/>Its<sp/>job<sp/>is<sp/>to<sp/>test<sp/>whether<sp/>the<sp/>regex<sp/>is<sp/>byte-flipped<sp/>-<sp/>that</highlight></codeline>
<codeline lineno="84"><highlight class="comment">is,<sp/>it<sp/>was<sp/>compiled<sp/>on<sp/>a<sp/>system<sp/>of<sp/>opposite<sp/>endianness.<sp/>The<sp/>function<sp/>is<sp/>called</highlight></codeline>
<codeline lineno="85"><highlight class="comment">only<sp/>when<sp/>the<sp/>native<sp/>MAGIC_NUMBER<sp/>test<sp/>fails.<sp/>If<sp/>the<sp/>regex<sp/>is<sp/>indeed<sp/>flipped,</highlight></codeline>
<codeline lineno="86"><highlight class="comment">we<sp/>flip<sp/>all<sp/>the<sp/>relevant<sp/>values<sp/>into<sp/>a<sp/>different<sp/>data<sp/>block,<sp/>and<sp/>return<sp/>it.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/>re<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>regex</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>study<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>study<sp/>data,<sp/>or<sp/>NULL</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/>internal_re<sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>a<sp/>new<sp/>regex<sp/>block</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/>internal_study<sp/><sp/><sp/>points<sp/>to<sp/>a<sp/>new<sp/>study<sp/>block</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>new<sp/>block<sp/>if<sp/>is<sp/>is<sp/>indeed<sp/>a<sp/>byte-flipped<sp/>regex</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>if<sp/>it<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="pcre__internal_8h_1aa0a2a98cc46934bcad306d90c844218e" kindref="member">_pcre_try_flipped</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*re,<sp/><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*internal_re,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref><sp/>*study,<sp/><ref refid="structpcre__study__data" kindref="compound">pcre_study_data</ref><sp/>*internal_study)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byteflip(re-&gt;<ref refid="structreal__pcre_1ac51622792c220cf763ff4c4f1b4849ff" kindref="member">magic_number</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1ac51622792c220cf763ff4c4f1b4849ff" kindref="member">magic_number</ref>))<sp/>!=<sp/><ref refid="pcre__internal_8h_1a54061e5993a5517320d425f44408cc86" kindref="member">MAGIC_NUMBER</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">*internal_re<sp/>=<sp/>*re;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>copy<sp/>other<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a88003afa04d9f71b30ab4b1d1952585b" kindref="member">size</ref><sp/>=<sp/>byteflip(re-&gt;<ref refid="structreal__pcre_1a88003afa04d9f71b30ab4b1d1952585b" kindref="member">size</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a88003afa04d9f71b30ab4b1d1952585b" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref><sp/>=<sp/>byteflip(re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a207ee9fc6eb9b13d7dca68f64d6df615" kindref="member">options</ref>));</highlight></codeline>
<codeline lineno="108"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a29901ed20ab7fd0bd22a7d99dd7350d5" kindref="member">flags</ref><sp/>=<sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a29901ed20ab7fd0bd22a7d99dd7350d5" kindref="member">flags</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a29901ed20ab7fd0bd22a7d99dd7350d5" kindref="member">flags</ref>));</highlight></codeline>
<codeline lineno="109"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1af472df9a98f69598b97c7fb7a29ee686" kindref="member">top_bracket</ref><sp/>=</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1af472df9a98f69598b97c7fb7a29ee686" kindref="member">top_bracket</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1af472df9a98f69598b97c7fb7a29ee686" kindref="member">top_bracket</ref>));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a5d0a06a9f2a717d4376717ba172cf55e" kindref="member">top_backref</ref><sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a5d0a06a9f2a717d4376717ba172cf55e" kindref="member">top_backref</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a5d0a06a9f2a717d4376717ba172cf55e" kindref="member">top_backref</ref>));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a23e1355bfa424bc5f6337de0f677553d" kindref="member">first_byte</ref><sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a23e1355bfa424bc5f6337de0f677553d" kindref="member">first_byte</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a23e1355bfa424bc5f6337de0f677553d" kindref="member">first_byte</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a8917d12d1b71862c8c2fa502b63ad391" kindref="member">req_byte</ref><sp/>=</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a8917d12d1b71862c8c2fa502b63ad391" kindref="member">req_byte</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a8917d12d1b71862c8c2fa502b63ad391" kindref="member">req_byte</ref>));</highlight></codeline>
<codeline lineno="117"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a8335643ae4ddbf0590060e8620d8863c" kindref="member">name_table_offset</ref><sp/>=</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a8335643ae4ddbf0590060e8620d8863c" kindref="member">name_table_offset</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a8335643ae4ddbf0590060e8620d8863c" kindref="member">name_table_offset</ref>));</highlight></codeline>
<codeline lineno="119"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a2605c553619bcb99a83c9d676e2ab5e0" kindref="member">name_entry_size</ref><sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a2605c553619bcb99a83c9d676e2ab5e0" kindref="member">name_entry_size</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a2605c553619bcb99a83c9d676e2ab5e0" kindref="member">name_entry_size</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal">internal_re-&gt;<ref refid="structreal__pcre_1a2c6d31e5c2514cfbf35bf84a7338a485" kindref="member">name_count</ref><sp/>=</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>(pcre_uint16)byteflip(re-&gt;<ref refid="structreal__pcre_1a2c6d31e5c2514cfbf35bf84a7338a485" kindref="member">name_count</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(re-&gt;<ref refid="structreal__pcre_1a2c6d31e5c2514cfbf35bf84a7338a485" kindref="member">name_count</ref>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(study<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>*internal_study<sp/>=<sp/>*study;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>copy<sp/>other<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>internal_study-&gt;<ref refid="structpcre__study__data_1ac994347d3d729eaf14eba590b65867a6" kindref="member">size</ref><sp/>=<sp/>byteflip(study-&gt;<ref refid="structpcre__study__data_1ac994347d3d729eaf14eba590b65867a6" kindref="member">size</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(study-&gt;<ref refid="structpcre__study__data_1ac994347d3d729eaf14eba590b65867a6" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>internal_study-&gt;<ref refid="structpcre__study__data_1a506b45147cf530698b13eff5d124ecfe" kindref="member">options</ref><sp/>=<sp/>byteflip(study-&gt;<ref refid="structpcre__study__data_1a506b45147cf530698b13eff5d124ecfe" kindref="member">options</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(study-&gt;<ref refid="structpcre__study__data_1a506b45147cf530698b13eff5d124ecfe" kindref="member">options</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_re;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>pcre_tryflipped.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_try_flipped.c"/>
  </compounddef>
</doxygen>
