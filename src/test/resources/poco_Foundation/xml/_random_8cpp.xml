<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_random_8cpp" kind="file">
    <compoundname>Random.cpp</compoundname>
    <includes local="yes">Poco/Random.h</includes>
    <includes local="yes">Poco/RandomStream.h</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="1284">
        <label>src/Random.cpp</label>
        <link refid="Random.cpp"/>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>Poco/Random.h</label>
      </node>
      <node id="1287">
        <label>ctime</label>
      </node>
      <node id="1286">
        <label>Poco/RandomStream.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_poco">Poco</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" prot="public" static="no">
        <name>TYPE_0</name>
        <initializer>0		/* linear congruential */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="144" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a3c1b328e567007cf8b2a488f7da20cd2" prot="public" static="no">
        <name>BREAK_0</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="145" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a4b02509c5d048cb2525e0066d7c2f191" prot="public" static="no">
        <name>DEG_0</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="146" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1ae66d150b37bdc4fb534c6cf4fd6927f5" prot="public" static="no">
        <name>SEP_0</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="147" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1adf00e147e54d287fe67232fc3c03881f" prot="public" static="no">
        <name>TYPE_1</name>
        <initializer>1		/* x**7 + x**3 + 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="149" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a2f8ab1a0f7425aaa202c501115ac97ac" prot="public" static="no">
        <name>BREAK_1</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="150" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a0be2834c56b0aaa7a6d34986f7921200" prot="public" static="no">
        <name>DEG_1</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="151" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a706a88d02086f617d9a4112903e47e41" prot="public" static="no">
        <name>SEP_1</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="152" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a8fde5bf4966bf8bead39337acde60635" prot="public" static="no">
        <name>TYPE_2</name>
        <initializer>2		/* x**15 + x + 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="154" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a05b3315f5cfe0296dcd69a52f1655c6d" prot="public" static="no">
        <name>BREAK_2</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="155" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a3ac87cdf960466ff1225acc151e1b990" prot="public" static="no">
        <name>DEG_2</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="156" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a7af722c75c13c22d73bbcca1088b8dfa" prot="public" static="no">
        <name>SEP_2</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="157" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a625df8982f188845257d31ea0e6c59e3" prot="public" static="no">
        <name>TYPE_3</name>
        <initializer>3		/* x**31 + x**3 + 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="159" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1ae301c8961d39d5bb4f771779e7f892a5" prot="public" static="no">
        <name>BREAK_3</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="160" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a551433e25d99861799734a5d64404a75" prot="public" static="no">
        <name>DEG_3</name>
        <initializer>31</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="161" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a2edba143f3e114a7eb2e12e87cd22168" prot="public" static="no">
        <name>SEP_3</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="162" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a1eea18b6fa0e026859776264e7b70d06" prot="public" static="no">
        <name>TYPE_4</name>
        <initializer>4		/* x**63 + x + 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="164" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a5b20d74b1c51063cf48aac12871c508b" prot="public" static="no">
        <name>BREAK_4</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="165" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1aa5908dcf53ecbe2f7e9ba5c3ffca01c1" prot="public" static="no">
        <name>DEG_4</name>
        <initializer>63</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="166" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8cpp_1a579e3bd1ae8bb600f9eab886a82bf075" prot="public" static="no">
        <name>SEP_4</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" line="167" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Random.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>//poco/1.4/Foundation/src/Random.cpp#1<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Library:<sp/>Foundation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Package:<sp/>Crypt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Module:<sp/><sp/>Random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Definition<sp/>of<sp/>class<sp/>Random.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2004-2006,<sp/>Applied<sp/>Informatics<sp/>Software<sp/>Engineering<sp/>GmbH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>Contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>or<sp/>organization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>software<sp/>and<sp/>accompanying<sp/>documentation<sp/>covered<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>license<sp/>(the<sp/>&quot;Software&quot;)<sp/>to<sp/>use,<sp/>reproduce,<sp/>display,<sp/>distribute,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>execute,<sp/>and<sp/>transmit<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>prepare<sp/>derivative<sp/>works<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>third-parties<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>so,<sp/>all<sp/>subject<sp/>to<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>copyright<sp/>notices<sp/>in<sp/>the<sp/>Software<sp/>and<sp/>this<sp/>entire<sp/>statement,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>above<sp/>license<sp/>grant,<sp/>this<sp/>restriction<sp/>and<sp/>the<sp/>following<sp/>disclaimer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>in<sp/>whole<sp/>or<sp/>in<sp/>part,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>derivative<sp/>works<sp/>of<sp/>the<sp/>Software,<sp/>unless<sp/>such<sp/>copies<sp/>or<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>are<sp/>solely<sp/>in<sp/>the<sp/>form<sp/>of<sp/>machine-executable<sp/>object<sp/>code<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>source<sp/>language<sp/>processor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE,<sp/>TITLE<sp/>AND<sp/>NON-INFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>OR<sp/>ANYONE<sp/>DISTRIBUTING<sp/>THE<sp/>SOFTWARE<sp/>BE<sp/>LIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR<sp/>ANY<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>the<sp/>FreeBSD<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src/lib/libc/stdlib/random.c,v<sp/>1.25<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>1983,<sp/>1993</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Regents<sp/>of<sp/>the<sp/>University<sp/>of<sp/>California.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>REGENTS<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>REGENTS<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Poco/Random.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Poco/RandomStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;wce_time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>random.c:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>An<sp/>improved<sp/>random<sp/>number<sp/>generation<sp/>package.<sp/><sp/>In<sp/>addition<sp/>to<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>rand()/srand()<sp/>like<sp/>interface,<sp/>this<sp/>package<sp/>also<sp/>has<sp/>a<sp/>special<sp/>state<sp/>info</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>interface.<sp/><sp/>The<sp/>initstate()<sp/>routine<sp/>is<sp/>called<sp/>with<sp/>a<sp/>seed,<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>bytes,<sp/>and<sp/>a<sp/>count<sp/>of<sp/>how<sp/>many<sp/>bytes<sp/>are<sp/>being<sp/>passed<sp/>in;<sp/>this<sp/>array<sp/>is</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>then<sp/>initialized<sp/>to<sp/>contain<sp/>information<sp/>for<sp/>random<sp/>number<sp/>generation<sp/>with</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>that<sp/>much<sp/>state<sp/>information.<sp/><sp/>Good<sp/>sizes<sp/>for<sp/>the<sp/>amount<sp/>of<sp/>state</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>information<sp/>are<sp/>32,<sp/>64,<sp/>128,<sp/>and<sp/>256<sp/>bytes.<sp/><sp/>The<sp/>state<sp/>can<sp/>be<sp/>switched<sp/>by</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>calling<sp/>the<sp/>setstate()<sp/>routine<sp/>with<sp/>the<sp/>same<sp/>array<sp/>as<sp/>was<sp/>initiallized</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>with<sp/>initstate().<sp/><sp/>By<sp/>default,<sp/>the<sp/>package<sp/>runs<sp/>with<sp/>128<sp/>bytes<sp/>of<sp/>state</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>information<sp/>and<sp/>generates<sp/>far<sp/>better<sp/>random<sp/>numbers<sp/>than<sp/>a<sp/>linear</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>congruential<sp/>generator.<sp/><sp/>If<sp/>the<sp/>amount<sp/>of<sp/>state<sp/>information<sp/>is<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>32<sp/>bytes,<sp/>a<sp/>simple<sp/>linear<sp/>congruential<sp/>R.N.G.<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Internally,<sp/>the<sp/>state<sp/>information<sp/>is<sp/>treated<sp/>as<sp/>an<sp/>array<sp/>of<sp/>uint32_t&apos;s;<sp/>the</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>zeroeth<sp/>element<sp/>of<sp/>the<sp/>array<sp/>is<sp/>the<sp/>type<sp/>of<sp/>R.N.G.<sp/>being<sp/>used<sp/>(small</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>integer);<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>array<sp/>is<sp/>the<sp/>state<sp/>information<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>R.N.G.<sp/><sp/>Thus,<sp/>32<sp/>bytes<sp/>of<sp/>state<sp/>information<sp/>will<sp/>give<sp/>7<sp/>ints<sp/>worth<sp/>of</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>state<sp/>information,<sp/>which<sp/>will<sp/>allow<sp/>a<sp/>degree<sp/>seven<sp/>polynomial.<sp/><sp/>(Note:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>the<sp/>zeroeth<sp/>word<sp/>of<sp/>state<sp/>information<sp/>also<sp/>has<sp/>some<sp/>other<sp/>information</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>stored<sp/>in<sp/>it<sp/>--<sp/>see<sp/>setstate()<sp/>for<sp/>details).</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>The<sp/>random<sp/>number<sp/>generation<sp/>technique<sp/>is<sp/>a<sp/>linear<sp/>feedback<sp/>shift<sp/>register</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>approach,<sp/>employing<sp/>trinomials<sp/>(since<sp/>there<sp/>are<sp/>fewer<sp/>terms<sp/>to<sp/>sum<sp/>up<sp/>that</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>way).<sp/><sp/>In<sp/>this<sp/>approach,<sp/>the<sp/>least<sp/>significant<sp/>bit<sp/>of<sp/>all<sp/>the<sp/>numbers<sp/>in</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>the<sp/>state<sp/>table<sp/>will<sp/>act<sp/>as<sp/>a<sp/>linear<sp/>feedback<sp/>shift<sp/>register,<sp/>and<sp/>will</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>have<sp/>period<sp/>2^deg<sp/>-<sp/>1<sp/>(where<sp/>deg<sp/>is<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>polynomial<sp/>being</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>used,<sp/>assuming<sp/>that<sp/>the<sp/>polynomial<sp/>is<sp/>irreducible<sp/>and<sp/>primitive).<sp/><sp/>The</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>higher<sp/>order<sp/>bits<sp/>will<sp/>have<sp/>longer<sp/>periods,<sp/>since<sp/>their<sp/>values<sp/>are<sp/>also</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>influenced<sp/>by<sp/>pseudo-random<sp/>carries<sp/>out<sp/>of<sp/>the<sp/>lower<sp/>bits.<sp/><sp/>The<sp/>total</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>period<sp/>of<sp/>the<sp/>generator<sp/>is<sp/>approximately<sp/>deg*(2**deg<sp/>-<sp/>1);<sp/>thus<sp/>doubling</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>the<sp/>amount<sp/>of<sp/>state<sp/>information<sp/>has<sp/>a<sp/>vast<sp/>influence<sp/>on<sp/>the<sp/>period<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>generator.<sp/><sp/>Note:<sp/>the<sp/>deg*(2**deg<sp/>-<sp/>1)<sp/>is<sp/>an<sp/>approximation<sp/>only<sp/>good<sp/>for</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>large<sp/>deg,<sp/>when<sp/>the<sp/>period<sp/>of<sp/>the<sp/>shift<sp/>is<sp/>the<sp/>dominant<sp/>factor.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>With<sp/>deg<sp/>equal<sp/>to<sp/>seven,<sp/>the<sp/>period<sp/>is<sp/>actually<sp/>much<sp/>longer<sp/>than<sp/>the</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>7*(2**7<sp/>-<sp/>1)<sp/>predicted<sp/>by<sp/>this<sp/>formula.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Modified<sp/>28<sp/>December<sp/>1994<sp/>by<sp/>Jacob<sp/>S.<sp/>Rosenberg.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>changes<sp/>have<sp/>been<sp/>made:</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>All<sp/>references<sp/>to<sp/>the<sp/>type<sp/>u_int<sp/>have<sp/>been<sp/>changed<sp/>to<sp/>unsigned<sp/>long.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>All<sp/>references<sp/>to<sp/>type<sp/>int<sp/>have<sp/>been<sp/>changed<sp/>to<sp/>type<sp/>long.<sp/><sp/>Other</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>cleanups<sp/>have<sp/>been<sp/>made<sp/>as<sp/>well.<sp/><sp/>A<sp/>warning<sp/>for<sp/>both<sp/>initstate<sp/>and</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>setstate<sp/>has<sp/>been<sp/>inserted<sp/>to<sp/>the<sp/>effect<sp/>that<sp/>on<sp/>Sparc<sp/>platforms</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>the<sp/>&apos;arg_state&apos;<sp/>variable<sp/>must<sp/>be<sp/>forced<sp/>to<sp/>begin<sp/>on<sp/>word<sp/>boundaries.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>easily<sp/>done<sp/>by<sp/>casting<sp/>a<sp/>long<sp/>integer<sp/>array<sp/>to<sp/>char<sp/>*.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>The<sp/>overall<sp/>logic<sp/>has<sp/>been<sp/>left<sp/>STRICTLY<sp/>alone.<sp/><sp/>This<sp/>software<sp/>was</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>tested<sp/>on<sp/>both<sp/>a<sp/>VAX<sp/>and<sp/>Sun<sp/>SpacsStation<sp/>with<sp/>exactly<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>results.<sp/><sp/>The<sp/>new<sp/>version<sp/>and<sp/>the<sp/>original<sp/>give<sp/>IDENTICAL<sp/>results.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>The<sp/>new<sp/>version<sp/>is<sp/>somewhat<sp/>faster<sp/>than<sp/>the<sp/>original.<sp/><sp/>As<sp/>the</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>documentation<sp/>says:<sp/><sp/>&quot;By<sp/>default,<sp/>the<sp/>package<sp/>runs<sp/>with<sp/>128<sp/>bytes<sp/>of</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>state<sp/>information<sp/>and<sp/>generates<sp/>far<sp/>better<sp/>random<sp/>numbers<sp/>than<sp/>a<sp/>linear</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>congruential<sp/>generator.<sp/><sp/>If<sp/>the<sp/>amount<sp/>of<sp/>state<sp/>information<sp/>is<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>32<sp/>bytes,<sp/>a<sp/>simple<sp/>linear<sp/>congruential<sp/>R.N.G.<sp/>is<sp/>used.&quot;<sp/><sp/>For<sp/>a<sp/>buffer<sp/>of</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>128<sp/>bytes,<sp/>this<sp/>new<sp/>version<sp/>runs<sp/>about<sp/>19<sp/>percent<sp/>faster<sp/>and<sp/>for<sp/>a<sp/>16</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>byte<sp/>buffer<sp/>it<sp/>is<sp/>about<sp/>5<sp/>percent<sp/>faster.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>For<sp/>each<sp/>of<sp/>the<sp/>currently<sp/>supported<sp/>random<sp/>number<sp/>generators,<sp/>we<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>break<sp/>value<sp/>on<sp/>the<sp/>amount<sp/>of<sp/>state<sp/>information<sp/>(you<sp/>need<sp/>at<sp/>least<sp/>this</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>many<sp/>bytes<sp/>of<sp/>state<sp/>info<sp/>to<sp/>support<sp/>this<sp/>random<sp/>number<sp/>generator),<sp/>a<sp/>degree</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>polynomial<sp/>(actually<sp/>a<sp/>trinomial)<sp/>that<sp/>the<sp/>R.N.G.<sp/>is<sp/>based<sp/>on,<sp/>and</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>the<sp/>separation<sp/>between<sp/>the<sp/>two<sp/>lower<sp/>order<sp/>coefficients<sp/>of<sp/>the<sp/>trinomial.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_0<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>linear<sp/>congruential<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BREAK_0<sp/><sp/><sp/><sp/><sp/>8</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEG_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEP_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_1<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x**7<sp/>+<sp/>x**3<sp/>+<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BREAK_1<sp/><sp/><sp/><sp/><sp/>32</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEG_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEP_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_2<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x**15<sp/>+<sp/>x<sp/>+<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BREAK_2<sp/><sp/><sp/><sp/><sp/>64</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEG_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEP_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_3<sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x**31<sp/>+<sp/>x**3<sp/>+<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BREAK_3<sp/><sp/><sp/><sp/><sp/>128</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEG_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>31</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEP_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPE_4<sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x**63<sp/>+<sp/>x<sp/>+<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BREAK_4<sp/><sp/><sp/><sp/><sp/>256</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEG_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>63</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEP_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Poco<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">Random::Random(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stateSize)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert<sp/>(<ref refid="_random_8cpp_1a3c1b328e567007cf8b2a488f7da20cd2" kindref="member">BREAK_0</ref><sp/>&lt;=<sp/>stateSize<sp/>&amp;&amp;<sp/>stateSize<sp/>&lt;=<sp/><ref refid="_random_8cpp_1a5b20d74b1c51063cf48aac12871c508b" kindref="member">BREAK_4</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>_pBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[stateSize];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>initState((UInt32)<sp/>wceex_time(NULL),<sp/>_pBuffer,<sp/>stateSize);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>initState((UInt32)<sp/>std::time(NULL),<sp/>_pBuffer,<sp/>stateSize);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">Random::~Random()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>_pBuffer;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>Compute<sp/>x<sp/>=<sp/>(7^5<sp/>*<sp/>x)<sp/>mod<sp/>(2^31<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>wihout<sp/>overflowing<sp/>31<sp/>bits:</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>(2^31<sp/>-<sp/>1)<sp/>=<sp/>127773<sp/>*<sp/>(7^5)<sp/>+<sp/>2836</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>From<sp/>&quot;Random<sp/>number<sp/>generators:<sp/>good<sp/>ones<sp/>are<sp/>hard<sp/>to<sp/>find&quot;,</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>Park<sp/>and<sp/>Miller,<sp/>Communications<sp/>of<sp/>the<sp/>ACM,<sp/>vol.<sp/>31,<sp/>no.<sp/>10,</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>October<sp/>1988,<sp/>p.<sp/>1195.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>UInt32<sp/>Random::goodRand(Int32<sp/>x)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>Int32<sp/>hi,<sp/>lo;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0)<sp/>x<sp/>=<sp/>123459876;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>x<sp/>/<sp/>127773;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>x<sp/>%<sp/>127773;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>16807<sp/>*<sp/>lo<sp/>-<sp/>2836<sp/>*<sp/>hi;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>x<sp/>+=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>the<sp/>random<sp/>number<sp/>generator<sp/>based<sp/>on<sp/>the<sp/>given<sp/>seed.<sp/><sp/>If<sp/>the</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>type<sp/>is<sp/>the<sp/>trivial<sp/>no-state-information<sp/>type,<sp/>just<sp/>remember<sp/>the<sp/>seed.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>Otherwise,<sp/>initializes<sp/>state[]<sp/>based<sp/>on<sp/>the<sp/>given<sp/>&quot;seed&quot;<sp/>via<sp/>a<sp/>linear</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>congruential<sp/>generator.<sp/><sp/>Then,<sp/>the<sp/>pointers<sp/>are<sp/>set<sp/>to<sp/>known<sp/>locations</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>that<sp/>are<sp/>exactly<sp/>rand_sep<sp/>places<sp/>apart.<sp/><sp/>Lastly,<sp/>it<sp/>cycles<sp/>the<sp/>state</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>information<sp/>a<sp/>given<sp/>number<sp/>of<sp/>times<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>any<sp/>initial<sp/>dependencies</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>introduced<sp/>by<sp/>the<sp/>L.C.R.N.G.<sp/><sp/>Note<sp/>that<sp/>the<sp/>initialization<sp/>of<sp/>randtbl[]</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>for<sp/>default<sp/>usage<sp/>relies<sp/>on<sp/>values<sp/>produced<sp/>by<sp/>this<sp/>routine.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Random::seed(UInt32<sp/>x)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>lim;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>_state[0]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_randType<sp/>==<sp/><ref refid="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" kindref="member">TYPE_0</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lim<sp/>=<sp/>NSHUFF;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>_randDeg;<sp/>i++)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_state[i]<sp/>=<sp/>goodRand(_state[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fptr<sp/>=<sp/>&amp;_state[_randSep];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rptr<sp/>=<sp/>&amp;_state[0];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lim<sp/>=<sp/>10<sp/>*<sp/>_randDeg;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lim;<sp/>i++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next();</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>Many<sp/>programs<sp/>choose<sp/>the<sp/>seed<sp/>value<sp/>in<sp/>a<sp/>totally<sp/>predictable<sp/>manner.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>This<sp/>often<sp/>causes<sp/>problems.<sp/><sp/>We<sp/>seed<sp/>the<sp/>generator<sp/>using<sp/>the<sp/>much<sp/>more</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>secure<sp/>random(4)<sp/>interface.<sp/><sp/>Note<sp/>that<sp/>this<sp/>particular<sp/>seeding</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>procedure<sp/>can<sp/>generate<sp/>states<sp/>which<sp/>are<sp/>impossible<sp/>to<sp/>reproduce<sp/>by</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>calling<sp/>srandom()<sp/>with<sp/>any<sp/>value,<sp/>since<sp/>the<sp/>succeeding<sp/>terms<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>state<sp/>buffer<sp/>are<sp/>no<sp/>longer<sp/>derived<sp/>from<sp/>the<sp/>LC<sp/>algorithm<sp/>applied<sp/>to</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>a<sp/>fixed<sp/>seed.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Random::seed()</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/>len;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_randType<sp/>==<sp/><ref refid="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" kindref="member">TYPE_0</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>_state[0];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>_randDeg<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>_state[0];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>RandomInputStream<sp/>rstr;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>rstr.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>_state,<sp/>len);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>the<sp/>state<sp/>information<sp/>in<sp/>the<sp/>given<sp/>array<sp/>of<sp/>n<sp/>bytes<sp/>for<sp/>future</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>random<sp/>number<sp/>generation.<sp/><sp/>Based<sp/>on<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>we<sp/>are<sp/>given,<sp/>and</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>the<sp/>break<sp/>values<sp/>for<sp/>the<sp/>different<sp/>R.N.G.&apos;s,<sp/>we<sp/>choose<sp/>the<sp/>best<sp/>(largest)</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>one<sp/>we<sp/>can<sp/>and<sp/>set<sp/>things<sp/>up<sp/>for<sp/>it.<sp/><sp/>srandom()<sp/>is<sp/>then<sp/>called<sp/>to</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>initialize<sp/>the<sp/>state<sp/>information.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>on<sp/>return<sp/>from<sp/>srandom(),<sp/>we<sp/>set<sp/>state[-1]<sp/>to<sp/>be<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>multiplexed<sp/>with<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>rear<sp/>pointer;<sp/>this<sp/>is<sp/>so</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>successive<sp/>calls<sp/>to<sp/>initstate()<sp/>won&apos;t<sp/>lose<sp/>this<sp/>information<sp/>and<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>able<sp/>to<sp/>restart<sp/>with<sp/>setstate().</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>Note:<sp/>the<sp/>first<sp/>thing<sp/>we<sp/>do<sp/>is<sp/>save<sp/>the<sp/>current<sp/>state,<sp/>if<sp/>any,<sp/>just<sp/>like</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>setstate()<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>matter<sp/>when<sp/>initstate<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>old<sp/>state.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>Note:<sp/>The<sp/>Sparc<sp/>platform<sp/>requires<sp/>that<sp/>arg_state<sp/>begin<sp/>on<sp/>an<sp/>int</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>word<sp/>boundary;<sp/>otherwise<sp/>a<sp/>bus<sp/>error<sp/>will<sp/>occur.<sp/>Even<sp/>so,<sp/>lint<sp/>will</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>complain<sp/>about<sp/>mis-alignment,<sp/>but<sp/>you<sp/>should<sp/>disregard<sp/>these<sp/>messages.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Random::initState(UInt32<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argState,<sp/>Int32<sp/>n)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32*<sp/>intArgState<sp/>=<sp/>(UInt32*)<sp/>argState;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/><ref refid="_random_8cpp_1a3c1b328e567007cf8b2a488f7da20cd2" kindref="member">BREAK_0</ref>)<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poco_bugcheck_msg(</highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/><ref refid="_random_8cpp_1a2f8ab1a0f7425aaa202c501115ac97ac" kindref="member">BREAK_1</ref>)<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randType<sp/>=<sp/><ref refid="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" kindref="member">TYPE_0</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randDeg<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a4b02509c5d048cb2525e0066d7c2f191" kindref="member">DEG_0</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randSep<sp/><sp/>=<sp/><ref refid="_random_8cpp_1ae66d150b37bdc4fb534c6cf4fd6927f5" kindref="member">SEP_0</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/><ref refid="_random_8cpp_1a05b3315f5cfe0296dcd69a52f1655c6d" kindref="member">BREAK_2</ref>)<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randType<sp/>=<sp/><ref refid="_random_8cpp_1adf00e147e54d287fe67232fc3c03881f" kindref="member">TYPE_1</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randDeg<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a0be2834c56b0aaa7a6d34986f7921200" kindref="member">DEG_1</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randSep<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a706a88d02086f617d9a4112903e47e41" kindref="member">SEP_1</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/><ref refid="_random_8cpp_1ae301c8961d39d5bb4f771779e7f892a5" kindref="member">BREAK_3</ref>)<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randType<sp/>=<sp/><ref refid="_random_8cpp_1a8fde5bf4966bf8bead39337acde60635" kindref="member">TYPE_2</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randDeg<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a3ac87cdf960466ff1225acc151e1b990" kindref="member">DEG_2</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randSep<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a7af722c75c13c22d73bbcca1088b8dfa" kindref="member">SEP_2</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/><ref refid="_random_8cpp_1a5b20d74b1c51063cf48aac12871c508b" kindref="member">BREAK_4</ref>)<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randType<sp/>=<sp/><ref refid="_random_8cpp_1a625df8982f188845257d31ea0e6c59e3" kindref="member">TYPE_3</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randDeg<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a551433e25d99861799734a5d64404a75" kindref="member">DEG_3</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randSep<sp/><sp/>=<sp/><ref refid="_random_8cpp_1a2edba143f3e114a7eb2e12e87cd22168" kindref="member">SEP_3</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randType<sp/>=<sp/><ref refid="_random_8cpp_1a1eea18b6fa0e026859776264e7b70d06" kindref="member">TYPE_4</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randDeg<sp/>=<sp/><ref refid="_random_8cpp_1aa5908dcf53ecbe2f7e9ba5c3ffca01c1" kindref="member">DEG_4</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_randSep<sp/>=<sp/><ref refid="_random_8cpp_1a579e3bd1ae8bb600f9eab886a82bf075" kindref="member">SEP_4</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>_state<sp/><sp/>=<sp/>intArgState<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>location<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>_endPtr<sp/>=<sp/>&amp;_state[_randDeg];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>set<sp/>end_ptr<sp/>before<sp/>seed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>seed(s);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_randType<sp/>==<sp/><ref refid="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" kindref="member">TYPE_0</ref>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intArgState[0]<sp/>=<sp/>_randType;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intArgState[0]<sp/>=<sp/>MAX_TYPES<sp/>*<sp/>(int)<sp/>(_rptr<sp/>-<sp/>_state)<sp/>+<sp/>_randType;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>Next:</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>If<sp/>we<sp/>are<sp/>using<sp/>the<sp/>trivial<sp/>TYPE_0<sp/>R.N.G.,<sp/>just<sp/>do<sp/>the<sp/>old<sp/>linear</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>congruential<sp/>bit.<sp/><sp/>Otherwise,<sp/>we<sp/>do<sp/>our<sp/>fancy<sp/>trinomial<sp/>stuff,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>the<sp/>same<sp/>in<sp/>all<sp/>the<sp/>other<sp/>cases<sp/>due<sp/>to<sp/>all<sp/>the<sp/>global<sp/>variables<sp/>that<sp/>have</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>been<sp/>set<sp/>up.<sp/><sp/>The<sp/>basic<sp/>operation<sp/>is<sp/>to<sp/>add<sp/>the<sp/>number<sp/>at<sp/>the<sp/>rear<sp/>pointer</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>one<sp/>at<sp/>the<sp/>front<sp/>pointer.<sp/><sp/>Then<sp/>both<sp/>pointers<sp/>are<sp/>advanced<sp/>to</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>the<sp/>next<sp/>location<sp/>cyclically<sp/>in<sp/>the<sp/>table.<sp/><sp/>The<sp/>value<sp/>returned<sp/>is<sp/>the<sp/>sum</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>generated,<sp/>reduced<sp/>to<sp/>31<sp/>bits<sp/>by<sp/>throwing<sp/>away<sp/>the<sp/>&quot;least<sp/>random&quot;<sp/>low<sp/>bit.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>Note:<sp/>the<sp/>code<sp/>takes<sp/>advantage<sp/>of<sp/>the<sp/>fact<sp/>that<sp/>both<sp/>the<sp/>front<sp/>and</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>rear<sp/>pointers<sp/>can&apos;t<sp/>wrap<sp/>on<sp/>the<sp/>same<sp/>call<sp/>by<sp/>not<sp/>testing<sp/>the<sp/>rear</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>pointer<sp/>if<sp/>the<sp/>front<sp/>one<sp/>has<sp/>wrapped.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>31-bit<sp/>random<sp/>number.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">UInt32<sp/>Random::next()</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>i;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>*f,<sp/>*r;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_randType<sp/>==<sp/><ref refid="_random_8cpp_1a7684fdb8b359fbbbcaa5e149704024b3" kindref="member">TYPE_0</ref>)<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>_state[0];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_state[0]<sp/>=<sp/>i<sp/>=<sp/>goodRand(i)<sp/>&amp;<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Use<sp/>local<sp/>variables<sp/>rather<sp/>than<sp/>static<sp/>variables<sp/>for<sp/>speed.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>_fptr;<sp/>r<sp/>=<sp/>_rptr;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*f<sp/>+=<sp/>*r;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>(*f<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x7FFFFFFF;<sp/></highlight><highlight class="comment">/*<sp/>chucking<sp/>least<sp/>random<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++f<sp/>&gt;=<sp/>_endPtr)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>_state;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++r;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++r<sp/>&gt;=<sp/>_endPtr)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>_state;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fptr<sp/>=<sp/>f;<sp/>_rptr<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Poco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/Random.cpp"/>
  </compounddef>
</doxygen>
