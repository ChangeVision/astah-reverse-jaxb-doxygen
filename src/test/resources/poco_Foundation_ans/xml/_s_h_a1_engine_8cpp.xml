<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_s_h_a1_engine_8cpp" kind="file">
    <compoundname>SHA1Engine.cpp</compoundname>
    <includes local="yes">Poco/SHA1Engine.h</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="1357">
        <label>Poco/SHA1Engine.h</label>
      </node>
      <node id="1358">
        <label>cstring</label>
      </node>
      <node id="1356">
        <label>src/SHA1Engine.cpp</label>
        <link refid="SHA1Engine.cpp"/>
        <childnode refid="1357" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_poco">Poco</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1a69b398b8104372b2e4b1963932059dd9" prot="public" static="no">
        <name>SHA1_BYTE_REVERSE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="47" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1a895cf264b1bd506426ebc9e51336241e" prot="public" static="no">
        <name>f1</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>( ( x &amp; y ) | ( ~x &amp; z ) )              /* Rounds  0-19 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="175" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1a5a8cd147d49dfc130047aad8b83ddadf" prot="public" static="no">
        <name>f2</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>( x ^ y ^ z )                           /* Rounds 20-39 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="176" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ae4a6b9a0d304177d9ce0e7488a890bb4" prot="public" static="no">
        <name>f3</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>( ( x &amp; y ) | ( x &amp; z ) | ( y &amp; z ) )   /* Rounds 40-59 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="177" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ad91225588c8fe60771183f5a9d653cea" prot="public" static="no">
        <name>f4</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>( x ^ y ^ z )                           /* Rounds 60-79 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="178" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1aadecb1977e30da2f62766f1fcb8b1f95" prot="public" static="no">
        <name>K1</name>
        <initializer>0x5A827999L     /* Rounds  0-19 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="182" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ab6d0e745059aded06587e4b6933bca0b" prot="public" static="no">
        <name>K2</name>
        <initializer>0x6ED9EBA1L     /* Rounds 20-39 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="183" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1aa6d1b6ea9feee250d0e41586bd39d654" prot="public" static="no">
        <name>K3</name>
        <initializer>0x8F1BBCDCL     /* Rounds 40-59 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="184" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ab45eb721b96f7dc4898425c6bdc0ae49" prot="public" static="no">
        <name>K4</name>
        <initializer>0xCA62C1D6L     /* Rounds 60-79 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="185" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" prot="public" static="no">
        <name>S</name>
        <param><defname>n</defname></param>
        <param><defname>X</defname></param>
        <initializer>( ( ((UL)X) &lt;&lt; n ) | ( ((UL)X) &gt;&gt; ( 32 - n ) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="192" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" prot="public" static="no">
        <name>expand</name>
        <param><defname>count</defname></param>
        <initializer>W[ count ] = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>(1,(W[ count - 3 ] ^ W[ count - 8 ] ^ W[ count - 14 ] ^ W[ count - 16 ]))	/* to make this SHA-1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="196" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" prot="public" static="no">
        <name>subRound1</name>
        <param><defname>count</defname></param>
        <initializer>{ \
    temp = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 5, A ) + <ref refid="_s_h_a1_engine_8cpp_1a895cf264b1bd506426ebc9e51336241e" kindref="member">f1</ref>( B, C, D ) + E + W[ count ] + <ref refid="_s_h_a1_engine_8cpp_1aadecb1977e30da2f62766f1fcb8b1f95" kindref="member">K1</ref>; \
    E = D; \
    D = C; \
    C = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 30, B ); \
    B = A; \
    A = temp; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="200" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" prot="public" static="no">
        <name>subRound2</name>
        <param><defname>count</defname></param>
        <initializer>{ \
    temp = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 5, A ) + <ref refid="_s_h_a1_engine_8cpp_1a5a8cd147d49dfc130047aad8b83ddadf" kindref="member">f2</ref>( B, C, D ) + E + W[ count ] + <ref refid="_s_h_a1_engine_8cpp_1ab6d0e745059aded06587e4b6933bca0b" kindref="member">K2</ref>; \
    E = D; \
    D = C; \
    C = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 30, B ); \
    B = A; \
    A = temp; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="210" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" prot="public" static="no">
        <name>subRound3</name>
        <param><defname>count</defname></param>
        <initializer>{ \
    temp = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 5, A ) + <ref refid="_s_h_a1_engine_8cpp_1ae4a6b9a0d304177d9ce0e7488a890bb4" kindref="member">f3</ref>( B, C, D ) + E + W[ count ] + <ref refid="_s_h_a1_engine_8cpp_1aa6d1b6ea9feee250d0e41586bd39d654" kindref="member">K3</ref>; \
    E = D; \
    D = C; \
    C = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 30, B ); \
    B = A; \
    A = temp; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="220" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" prot="public" static="no">
        <name>subRound4</name>
        <param><defname>count</defname></param>
        <initializer>{ \
    temp = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 5, A ) + <ref refid="_s_h_a1_engine_8cpp_1ad91225588c8fe60771183f5a9d653cea" kindref="member">f4</ref>( B, C, D ) + E + W[ count ] + <ref refid="_s_h_a1_engine_8cpp_1ab45eb721b96f7dc4898425c6bdc0ae49" kindref="member">K4</ref>; \
    E = D; \
    D = C; \
    C = <ref refid="_s_h_a1_engine_8cpp_1a8ea9bbf93ee736a9bf439b3972b6c6f2" kindref="member">S</ref>( 30, B ); \
    B = A; \
    A = temp; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" line="230" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHA1Engine.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>//poco/1.4/Foundation/src/SHA1Engine.cpp#1<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Library:<sp/>Foundation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Package:<sp/>Crypt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Module:<sp/><sp/>SHA1Engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>the<sp/>public<sp/>domain<sp/>implementation<sp/>by<sp/>Peter<sp/>C.<sp/>Gutmann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>2<sp/>Sep<sp/>1992,<sp/>modified<sp/>by<sp/>Carl<sp/>Ellison<sp/>to<sp/>be<sp/>SHA-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2004-2006,<sp/>Applied<sp/>Informatics<sp/>Software<sp/>Engineering<sp/>GmbH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>Contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>or<sp/>organization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>software<sp/>and<sp/>accompanying<sp/>documentation<sp/>covered<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>license<sp/>(the<sp/>&quot;Software&quot;)<sp/>to<sp/>use,<sp/>reproduce,<sp/>display,<sp/>distribute,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>execute,<sp/>and<sp/>transmit<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>prepare<sp/>derivative<sp/>works<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>third-parties<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>so,<sp/>all<sp/>subject<sp/>to<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>copyright<sp/>notices<sp/>in<sp/>the<sp/>Software<sp/>and<sp/>this<sp/>entire<sp/>statement,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>above<sp/>license<sp/>grant,<sp/>this<sp/>restriction<sp/>and<sp/>the<sp/>following<sp/>disclaimer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>in<sp/>whole<sp/>or<sp/>in<sp/>part,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>derivative<sp/>works<sp/>of<sp/>the<sp/>Software,<sp/>unless<sp/>such<sp/>copies<sp/>or<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>are<sp/>solely<sp/>in<sp/>the<sp/>form<sp/>of<sp/>machine-executable<sp/>object<sp/>code<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>source<sp/>language<sp/>processor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE,<sp/>TITLE<sp/>AND<sp/>NON-INFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>OR<sp/>ANYONE<sp/>DISTRIBUTING<sp/>THE<sp/>SOFTWARE<sp/>BE<sp/>LIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR<sp/>ANY<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Poco/SHA1Engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>POCO_ARCH_LITTLE_ENDIAN</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>SHA1_BYTE_REVERSE(x,<sp/>y)<sp/>byteReverse(x,<sp/>y)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>SHA1_BYTE_REVERSE(x,<sp/>y)</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Poco<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">SHA1Engine::SHA1Engine()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>_digest.reserve(16);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">SHA1Engine::~SHA1Engine()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SHA1Engine::byteReverse(UInt32*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byteCount)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>POCO_ARCH_LITTLE_ENDIAN</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>byteCount<sp/>/=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UInt32);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>byteCount;<sp/>count++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>value<sp/>=<sp/>(buffer[<sp/>count<sp/>]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(buffer[<sp/>count<sp/>]<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[count]<sp/>=<sp/>((value<sp/>&amp;<sp/>0xFF00FF00L)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x00FF00FFL)<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>POCO_ARCH_LITTLE_ENDIAN</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SHA1Engine::updateImpl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer_,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BYTE*<sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BYTE*)<sp/>buffer_;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE*<sp/>db<sp/>=<sp/>(BYTE*)<sp/>&amp;_context.data[0];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>bitcount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>((_context.countLo<sp/>+<sp/>((UInt32)<sp/>count<sp/>&lt;&lt;<sp/>3))<sp/>&lt;<sp/>_context.countLo)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_context.countHi++;<sp/></highlight><highlight class="comment">/*<sp/>Carry<sp/>from<sp/>low<sp/>to<sp/>high<sp/>bitCount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.countLo<sp/>+=<sp/>((UInt32)<sp/>count<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.countHi<sp/>+=<sp/>((UInt32<sp/>)<sp/>count<sp/>&gt;&gt;<sp/>29);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>data<sp/>in<sp/>BLOCK_SIZE<sp/>chunks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count--<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db[_context.slop++]<sp/>=<sp/>*(buffer++);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_context.slop<sp/>==<sp/>BLOCK_SIZE)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transform<sp/>this<sp/>one<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a69b398b8104372b2e4b1963932059dd9" kindref="member">SHA1_BYTE_REVERSE</ref>(_context.data,<sp/>BLOCK_SIZE);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_context.slop<sp/>=<sp/>0<sp/>;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>slop<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>SHA1Engine::digestLength()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="107"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DIGEST_SIZE;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SHA1Engine::reset()</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[0]<sp/>=<sp/>0x67452301L;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[1]<sp/>=<sp/>0xEFCDAB89L;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[2]<sp/>=<sp/>0x98BADCFEL;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[3]<sp/>=<sp/>0x10325476L;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[4]<sp/>=<sp/>0xC3D2E1F0L;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.countLo<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.countHi<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.slop<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memset(_context.data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_context.data));</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DigestEngine::Digest&amp;<sp/>SHA1Engine::digest()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>lowBitcount<sp/><sp/>=<sp/>_context.countLo;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>highBitcount<sp/>=<sp/>_context.countHi;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>number<sp/>of<sp/>bytes<sp/>mod<sp/>64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(int)<sp/>((_context.countLo<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>first<sp/>char<sp/>of<sp/>padding<sp/>to<sp/>0x80.<sp/><sp/>This<sp/>is<sp/>safe<sp/>since<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>always<sp/>at<sp/>least<sp/>one<sp/>byte<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>((BYTE*)<sp/>_context.data)[count++]<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>out<sp/>to<sp/>56<sp/>mod<sp/>64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>56)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Two<sp/>lots<sp/>of<sp/>padding:<sp/><sp/>Pad<sp/>the<sp/>first<sp/>block<sp/>to<sp/>64<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset((BYTE*)<sp/>&amp;_context.data<sp/>+<sp/>count,<sp/>0,<sp/>64<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a69b398b8104372b2e4b1963932059dd9" kindref="member">SHA1_BYTE_REVERSE</ref>(_context.data,<sp/>BLOCK_SIZE);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>fill<sp/>the<sp/>next<sp/>block<sp/>with<sp/>56<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset(&amp;_context.data,<sp/>0,<sp/>56);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>block<sp/>to<sp/>56<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memset((BYTE*)<sp/>&amp;_context.data<sp/>+<sp/>count,<sp/>0,<sp/>56<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a69b398b8104372b2e4b1963932059dd9" kindref="member">SHA1_BYTE_REVERSE</ref>(_context.data,<sp/>BLOCK_SIZE);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>length<sp/>in<sp/>bits<sp/>and<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.data[14]<sp/>=<sp/>highBitcount;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.data[15]<sp/>=<sp/>lowBitcount;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>transform();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a69b398b8104372b2e4b1963932059dd9" kindref="member">SHA1_BYTE_REVERSE</ref>(_context.data,<sp/>DIGEST_SIZE);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespace_poco_1a27fab488d3aa3fdec1c588a363c4f113" kindref="member">hash</ref>[DIGEST_SIZE];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>DIGEST_SIZE;<sp/>count++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash[count]<sp/>=<sp/>(BYTE)<sp/>((_context.digest[count&gt;&gt;2])<sp/>&gt;&gt;<sp/>(8*(3-(count<sp/>&amp;<sp/>0x3))))<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>_digest.clear();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>_digest.insert(_digest.begin(),<sp/><ref refid="namespace_poco_1a27fab488d3aa3fdec1c588a363c4f113" kindref="member">hash</ref>,<sp/>hash<sp/>+<sp/>DIGEST_SIZE);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_digest;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SHA<sp/>f()-functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f1(x,y,z)<sp/><sp/><sp/>(<sp/>(<sp/>x<sp/>&amp;<sp/>y<sp/>)<sp/>|<sp/>(<sp/>~x<sp/>&amp;<sp/>z<sp/>)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/><sp/>0-19<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>f2(x,y,z)<sp/><sp/><sp/>(<sp/>x<sp/>^<sp/>y<sp/>^<sp/>z<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>20-39<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>f3(x,y,z)<sp/><sp/><sp/>(<sp/>(<sp/>x<sp/>&amp;<sp/>y<sp/>)<sp/>|<sp/>(<sp/>x<sp/>&amp;<sp/>z<sp/>)<sp/>|<sp/>(<sp/>y<sp/>&amp;<sp/>z<sp/>)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>40-59<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>f4(x,y,z)<sp/><sp/><sp/>(<sp/>x<sp/>^<sp/>y<sp/>^<sp/>z<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>60-79<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SHA<sp/>Mysterious<sp/>Constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K1<sp/><sp/>0x5A827999L<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/><sp/>0-19<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>K2<sp/><sp/>0x6ED9EBA1L<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>20-39<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>K3<sp/><sp/>0x8F1BBCDCL<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>40-59<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>K4<sp/><sp/>0xCA62C1D6L<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>60-79<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32-bit<sp/>rotate<sp/>-<sp/>kludged<sp/>with<sp/>shifts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UInt32<sp/><ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>save<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S(n,X)<sp/><sp/>(<sp/>(<sp/>((UL)X)<sp/>&lt;&lt;<sp/>n<sp/>)<sp/>|<sp/>(<sp/>((UL)X)<sp/>&gt;&gt;<sp/>(<sp/>32<sp/>-<sp/>n<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>initial<sp/>expanding<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expand(count)<sp/><sp/><sp/>W[<sp/>count<sp/>]<sp/>=<sp/>S(1,(W[<sp/>count<sp/>-<sp/>3<sp/>]<sp/>^<sp/>W[<sp/>count<sp/>-<sp/>8<sp/>]<sp/>^<sp/>W[<sp/>count<sp/>-<sp/>14<sp/>]<sp/>^<sp/>W[<sp/>count<sp/>-<sp/>16<sp/>]))<sp/></highlight><highlight class="comment">/*<sp/>to<sp/>make<sp/>this<sp/>SHA-1<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>four<sp/>SHA<sp/>sub-rounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>subRound1(count)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>S(<sp/>5,<sp/>A<sp/>)<sp/>+<sp/>f1(<sp/>B,<sp/>C,<sp/>D<sp/>)<sp/>+<sp/>E<sp/>+<sp/>W[<sp/>count<sp/>]<sp/>+<sp/>K1;<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>D;<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>C;<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>S(<sp/>30,<sp/>B<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A;<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>subRound2(count)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>S(<sp/>5,<sp/>A<sp/>)<sp/>+<sp/>f2(<sp/>B,<sp/>C,<sp/>D<sp/>)<sp/>+<sp/>E<sp/>+<sp/>W[<sp/>count<sp/>]<sp/>+<sp/>K2;<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>D;<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>C;<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>S(<sp/>30,<sp/>B<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A;<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>subRound3(count)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>S(<sp/>5,<sp/>A<sp/>)<sp/>+<sp/>f3(<sp/>B,<sp/>C,<sp/>D<sp/>)<sp/>+<sp/>E<sp/>+<sp/>W[<sp/>count<sp/>]<sp/>+<sp/>K3;<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>D;<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>C;<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>S(<sp/>30,<sp/>B<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A;<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>subRound4(count)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>S(<sp/>5,<sp/>A<sp/>)<sp/>+<sp/>f4(<sp/>B,<sp/>C,<sp/>D<sp/>)<sp/>+<sp/>E<sp/>+<sp/>W[<sp/>count<sp/>]<sp/>+<sp/>K4;<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>D;<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>C;<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>S(<sp/>30,<sp/>B<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A;<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SHA1Engine::transform()</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>W[80];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>temp;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt32<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>E;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>A.<sp/><sp/>Copy<sp/>the<sp/>data<sp/>buffer<sp/>into<sp/>the<sp/>local<sp/>work<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>W[<sp/>i<sp/>]<sp/>=<sp/>_context.data[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>B.<sp/><sp/>Expand<sp/>the<sp/>16<sp/>words<sp/>into<sp/>64<sp/>temporary<sp/>data<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>16<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>17<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>18<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>19<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>21<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>22<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>23<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>24<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>25<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>26<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>27<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>28<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>29<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>30<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>31<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>32<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>33<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>34<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>35<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>36<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>37<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>38<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>39<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>40<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>41<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>42<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>43<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>44<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>45<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>46<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>47<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>48<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>49<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>50<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>51<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>52<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>53<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>54<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>55<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>56<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>57<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>58<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>59<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>60<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>61<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>62<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>63<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>64<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>65<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>66<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>67<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>68<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>69<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>70<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>71<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>72<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>73<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>74<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>75<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>76<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>77<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>78<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aa56d08ff7a566f632746ae976b9ecb7d" kindref="member">expand</ref>(<sp/>79<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>C.<sp/><sp/>Set<sp/>up<sp/>first<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>_context.digest[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>_context.digest[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>_context.digest[<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>_context.digest[<sp/>3<sp/>];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>_context.digest[<sp/>4<sp/>];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>D.<sp/><sp/>Serious<sp/>mangling,<sp/>divided<sp/>into<sp/>four<sp/>sub-rounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>0<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>1<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>2<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>4<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>5<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>6<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>7<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>8<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>9<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>10<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>11<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>12<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>13<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>14<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>15<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>16<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>17<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>18<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ab2ffd8b8a3c4a03c31b453731894134c" kindref="member">subRound1</ref>(<sp/>19<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>20<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>21<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>22<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>23<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>24<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>25<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>26<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>27<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>28<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>29<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>30<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>31<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>32<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>33<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>34<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>35<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>36<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>37<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>38<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1aec967766c3ccfdc5107e1218177c3183" kindref="member">subRound2</ref>(<sp/>39<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>40<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>41<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>42<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>43<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>44<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>45<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>46<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>47<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>48<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>49<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>50<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>51<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>52<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>53<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>54<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>55<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>56<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>57<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>58<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1a70292692fb3d8bfacad6aab8cb711a9a" kindref="member">subRound3</ref>(<sp/>59<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>60<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>61<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>62<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>63<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>64<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>65<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>66<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>67<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>68<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>69<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>70<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>71<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>72<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>73<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>74<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>75<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>76<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>77<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>78<sp/>);<sp/><ref refid="_s_h_a1_engine_8cpp_1ac6c9d574e44216ac540014964209fcdd" kindref="member">subRound4</ref>(<sp/>79<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>E.<sp/><sp/>Build<sp/>message<sp/>digest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[<sp/>0<sp/>]<sp/>+=<sp/>A;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[<sp/>1<sp/>]<sp/>+=<sp/>B;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[<sp/>2<sp/>]<sp/>+=<sp/>C;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[<sp/>3<sp/>]<sp/>+=<sp/>D;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>_context.digest[<sp/>4<sp/>]<sp/>+=<sp/>E;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Poco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/SHA1Engine.cpp"/>
  </compounddef>
</doxygen>
