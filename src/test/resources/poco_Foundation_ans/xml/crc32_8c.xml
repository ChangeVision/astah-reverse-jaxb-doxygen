<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="crc32_8c" kind="file">
    <compoundname>crc32.c</compoundname>
    <includes refid="zutil_8h" local="yes">zutil.h</includes>
    <includes refid="crc32_8h" local="yes">crc32.h</includes>
    <incdepgraph>
      <node id="105">
        <label>zconf.h</label>
        <link refid="zconf_8h"/>
      </node>
      <node id="103">
        <label>zutil.h</label>
        <link refid="zutil_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>zlib.h</label>
        <link refid="zlib_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>src/crc32.c</label>
        <link refid="crc32.c"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>crc32.h</label>
        <link refid="crc32_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" prot="public" static="no">
        <name>local</name>
        <initializer>static</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="31" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crc32_8c_1a0249fed12d0a7eab9daea105c257da86" prot="public" static="no">
        <name>TBLS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="64" column="12" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" prot="public" static="no">
        <name>DO1</name>
        <initializer>crc = <ref refid="crc32_8h_1ada68c33259165bfd9c9bf585ee0d02f8" kindref="member">crc_table</ref>[0][((int)crc ^ (*buf++)) &amp; 0xff] ^ (crc &gt;&gt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="217" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crc32_8c_1aed1b41414efee0773c67c28e09317455" prot="public" static="no">
        <name>DO8</name>
        <initializer><ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>; <ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="218" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="crc32_8c_1a366ddceacb9041c5f12bb75fa6d75163" prot="public" static="no">
        <name>GF2_DIM</name>
        <initializer>32      /* dimension of GF(2) vectors (length of CRC) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="341" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="341" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="crc32_8c_1aadf6b12fb8642af2365b6876ea4ba665" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long gf2_matrix_times</definition>
        <argsstring>()</argsstring>
        <name>gf2_matrix_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a3eab8dc6214aec1332aadbc81aebd4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gf2_matrix_square</definition>
        <argsstring>()</argsstring>
        <name>gf2_matrix_square</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1ac42a82bef949810d0c45d0f69bdd6341" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>static uLong crc32_combine_</definition>
        <argsstring>(uLong crc1, uLong crc2, long len2)</argsstring>
        <name>crc32_combine_</name>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc1</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc2</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="71" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="372" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1af2770e8c72cf497f1b3ba941696d5bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long *</type>
        <definition>unsigned long* get_crc_table</definition>
        <argsstring>()</argsstring>
        <name>get_crc_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="207" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="207" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long crc32</definition>
        <argsstring>(unsigned long crc, unsigned char *buf, uInt len)</argsstring>
        <name>crc32</name>
        <param>
          <type>unsigned long</type>
          <declname>crc</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="221" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="221" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a0118c7f3aff9f7111f48a077b35784cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long gf2_matrix_times</definition>
        <argsstring>(unsigned long *mat, unsigned long vec)</argsstring>
        <name>gf2_matrix_times</name>
        <param>
          <type>unsigned long *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="344" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="344" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a5d326cec52a8b2acf820986812ef6583" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gf2_matrix_square</definition>
        <argsstring>(unsigned long *square, unsigned long *mat)</argsstring>
        <name>gf2_matrix_square</name>
        <param>
          <type>unsigned long *</type>
          <declname>square</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="361" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="361" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a8ca2395ba789d3ab583b3b18d5fde350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>uLong crc32_combine</definition>
        <argsstring>(uLong crc1, uLong crc2, long len2)</argsstring>
        <name>crc32_combine</name>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc1</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc2</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="428" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="428" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="crc32_8c_1a0b151bcdd4cac1276809115f33a66fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>uLong crc32_combine64</definition>
        <argsstring>(uLong crc1, uLong crc2, long len2)</argsstring>
        <name>crc32_combine64</name>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc1</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
          <declname>crc2</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" line="436" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c" bodystart="436" bodyend="442"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>crc32.c<sp/>--<sp/>compute<sp/>the<sp/>CRC-32<sp/>of<sp/>a<sp/>data<sp/>stream</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995-2006,<sp/>2010<sp/>Mark<sp/>Adler</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>copyright<sp/>notice<sp/>in<sp/>zlib.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Thanks<sp/>to<sp/>Rodney<sp/>Brown<sp/>&lt;rbrown64@csc.com.au&gt;<sp/>for<sp/>his<sp/>contribution<sp/>of<sp/>faster</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>CRC<sp/>methods:<sp/>exclusive-oring<sp/>32<sp/>bits<sp/>of<sp/>data<sp/>at<sp/>a<sp/>time,<sp/>and<sp/>pre-computing</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>tables<sp/>for<sp/>updating<sp/>the<sp/>shift<sp/>register<sp/>in<sp/>one<sp/>step<sp/>with<sp/>three<sp/>exclusive-ors</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>instead<sp/>of<sp/>four<sp/>steps<sp/>with<sp/>four<sp/>exclusive-ors.<sp/><sp/>This<sp/>results<sp/>in<sp/>about<sp/>a</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>factor<sp/>of<sp/>two<sp/>increase<sp/>in<sp/>speed<sp/>on<sp/>a<sp/>Power<sp/>PC<sp/>G4<sp/>(PPC7455)<sp/>using<sp/>gcc<sp/>-O3.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@(#)<sp/>$Id:<sp/>//poco/1.4/Foundation/src/crc32.c#2<sp/>$<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Note<sp/>on<sp/>the<sp/>use<sp/>of<sp/>DYNAMIC_CRC_TABLE:<sp/>there<sp/>is<sp/>no<sp/>mutex<sp/>or<sp/>semaphore</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>protection<sp/>on<sp/>the<sp/>static<sp/>variables<sp/>used<sp/>to<sp/>control<sp/>the<sp/>first-use<sp/>generation</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>of<sp/>the<sp/>crc<sp/>tables.<sp/><sp/>Therefore,<sp/>if<sp/>you<sp/>#define<sp/>DYNAMIC_CRC_TABLE,<sp/>you<sp/>should</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>first<sp/>call<sp/>get_crc_table()<sp/>to<sp/>initialize<sp/>the<sp/>tables<sp/>before<sp/>allowing<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>one<sp/>thread<sp/>to<sp/>use<sp/>crc32().</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKECRCH</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>DYNAMIC_CRC_TABLE</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DYNAMIC_CRC_TABLE</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>!DYNAMIC_CRC_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MAKECRCH<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zutil_8h" kindref="compound">zutil.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>STDC<sp/>and<sp/>FAR<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>local<sp/>static</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Find<sp/>a<sp/>four-byte<sp/>integer<sp/>type<sp/>for<sp/>crc32_little()<sp/>and<sp/>crc32_big().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NOBYFOUR</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>STDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>ANSI<sp/>C<sp/>limits.h<sp/>to<sp/>determine<sp/>sizes<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>BYFOUR</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>(UINT_MAX<sp/>==<sp/>0xffffffffUL)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u4;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ULONG_MAX<sp/>==<sp/>0xffffffffUL)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u4;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(USHRT_MAX<sp/>==<sp/>0xffffffffUL)</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>u4;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BYFOUR<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>find<sp/>a<sp/>four-byte<sp/>integer<sp/>type!<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>STDC<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!NOBYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Definitions<sp/>for<sp/>doing<sp/>the<sp/>crc<sp/>four<sp/>data<sp/>bytes<sp/>at<sp/>a<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BYFOUR</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>REV(w)<sp/>((((w)&gt;&gt;24)&amp;0xff)+(((w)&gt;&gt;8)&amp;0xff00)+<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((w)&amp;0xff00)&lt;&lt;8)+(((w)&amp;0xff)&lt;&lt;24))</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc32_little<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc32_big<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>TBLS<sp/>8</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>TBLS<sp/>1</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>functions<sp/>for<sp/>crc<sp/>concatenation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gf2_matrix_times<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*mat,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>vec));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gf2_matrix_square<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*square,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*mat));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc32_combine_(<ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc1,<sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc2,<sp/><ref refid="zconf_8h_1ab9923767082c7a76924b31493e60d42c" kindref="member">z_off64_t</ref><sp/>len2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DYNAMIC_CRC_TABLE</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crc_table_empty<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="crc32_8h_1ada68c33259165bfd9c9bf585ee0d02f8" kindref="member">crc_table</ref>[<ref refid="crc32_8c_1a0249fed12d0a7eab9daea105c257da86" kindref="member">TBLS</ref>][256];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_crc_table<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKECRCH</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_table<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((FILE<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MAKECRCH<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/>Generate<sp/>tables<sp/>for<sp/>a<sp/>byte-wise<sp/>32-bit<sp/>CRC<sp/>calculation<sp/>on<sp/>the<sp/>polynomial:</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/>x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>Polynomials<sp/>over<sp/>GF(2)<sp/>are<sp/>represented<sp/>in<sp/>binary,<sp/>one<sp/>bit<sp/>per<sp/>coefficient,</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>with<sp/>the<sp/>lowest<sp/>powers<sp/>in<sp/>the<sp/>most<sp/>significant<sp/>bit.<sp/><sp/>Then<sp/>adding<sp/>polynomials</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/>is<sp/>just<sp/>exclusive-or,<sp/>and<sp/>multiplying<sp/>a<sp/>polynomial<sp/>by<sp/>x<sp/>is<sp/>a<sp/>right<sp/>shift<sp/>by</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/>one.<sp/><sp/>If<sp/>we<sp/>call<sp/>the<sp/>above<sp/>polynomial<sp/>p,<sp/>and<sp/>represent<sp/>a<sp/>byte<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>polynomial<sp/>q,<sp/>also<sp/>with<sp/>the<sp/>lowest<sp/>power<sp/>in<sp/>the<sp/>most<sp/>significant<sp/>bit<sp/>(so<sp/>the</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/>byte<sp/>0xb1<sp/>is<sp/>the<sp/>polynomial<sp/>x^7+x^3+x+1),<sp/>then<sp/>the<sp/>CRC<sp/>is<sp/>(q*x^32)<sp/>mod<sp/>p,</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/>where<sp/>a<sp/>mod<sp/>b<sp/>means<sp/>the<sp/>remainder<sp/>after<sp/>dividing<sp/>a<sp/>by<sp/>b.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>This<sp/>calculation<sp/>is<sp/>done<sp/>using<sp/>the<sp/>shift-register<sp/>method<sp/>of<sp/>multiplying<sp/>and</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/>taking<sp/>the<sp/>remainder.<sp/><sp/>The<sp/>register<sp/>is<sp/>initialized<sp/>to<sp/>zero,<sp/>and<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/>incoming<sp/>bit,<sp/>x^32<sp/>is<sp/>added<sp/>mod<sp/>p<sp/>to<sp/>the<sp/>register<sp/>if<sp/>the<sp/>bit<sp/>is<sp/>a<sp/>one<sp/>(where</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/>x^32<sp/>mod<sp/>p<sp/>is<sp/>p+x^32<sp/>=<sp/>x^26+...+1),<sp/>and<sp/>the<sp/>register<sp/>is<sp/>multiplied<sp/>mod<sp/>p<sp/>by</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/>x<sp/>(which<sp/>is<sp/>shifting<sp/>right<sp/>by<sp/>one<sp/>and<sp/>adding<sp/>x^32<sp/>mod<sp/>p<sp/>if<sp/>the<sp/>bit<sp/>shifted</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/>out<sp/>is<sp/>a<sp/>one).<sp/><sp/>We<sp/>start<sp/>with<sp/>the<sp/>highest<sp/>power<sp/>(least<sp/>significant<sp/>bit)<sp/>of</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/>q<sp/>and<sp/>repeat<sp/>for<sp/>all<sp/>eight<sp/>bits<sp/>of<sp/>q.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/>The<sp/>first<sp/>table<sp/>is<sp/>simply<sp/>the<sp/>CRC<sp/>of<sp/>all<sp/>possible<sp/>eight<sp/>bit<sp/>values.<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/>all<sp/>the<sp/>information<sp/>needed<sp/>to<sp/>generate<sp/>CRCs<sp/>on<sp/>data<sp/>a<sp/>byte<sp/>at<sp/>a<sp/>time<sp/>for<sp/>all</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/>combinations<sp/>of<sp/>CRC<sp/>register<sp/>values<sp/>and<sp/>incoming<sp/>bytes.<sp/><sp/>The<sp/>remaining<sp/>tables</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/>allow<sp/>for<sp/>word-at-a-time<sp/>CRC<sp/>calculation<sp/>for<sp/>both<sp/>big-endian<sp/>and<sp/>little-</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>endian<sp/>machines,<sp/>where<sp/>a<sp/>word<sp/>is<sp/>four<sp/>bytes.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_crc_table()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>k;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>poly;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>polynomial<sp/>exclusive-or<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>terms<sp/>of<sp/>polynomial<sp/>defining<sp/>this<sp/>crc<sp/>(except<sp/>x^32):<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>to<sp/>limit<sp/>concurrent<sp/>making<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>p[]<sp/>=<sp/>{0,1,2,4,5,7,8,10,11,12,16,22,23,26};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>another<sp/>task<sp/>is<sp/>already<sp/>doing<sp/>this<sp/>(not<sp/>thread-safe,<sp/>but<sp/>better</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>than<sp/>nothing<sp/>--<sp/>significantly<sp/>reduces<sp/>duration<sp/>of<sp/>vulnerability<sp/>in</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>the<sp/>advice<sp/>about<sp/>DYNAMIC_CRC_TABLE<sp/>is<sp/>ignored)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>exclusive-or<sp/>pattern<sp/>from<sp/>polynomial<sp/>(0xedb88320UL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poly<sp/>=<sp/>0<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(p)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);<sp/>n++)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poly<sp/>|=<sp/>1<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref><sp/>&lt;&lt;<sp/>(31<sp/>-<sp/>p[n]);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>a<sp/>crc<sp/>for<sp/>every<sp/>8-bit<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>256;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)n;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>8;<sp/>k++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>&amp;<sp/>1<sp/>?<sp/>poly<sp/>^<sp/>(c<sp/>&gt;&gt;<sp/>1)<sp/>:<sp/>c<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[0][n]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BYFOUR</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>crc<sp/>for<sp/>each<sp/>value<sp/>followed<sp/>by<sp/>one,<sp/>two,<sp/>and<sp/>three<sp/>zeros,</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>then<sp/>the<sp/>byte<sp/>reversal<sp/>of<sp/>those<sp/>as<sp/>well<sp/>as<sp/>the<sp/>first<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>256;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[0][n];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[4][n]<sp/>=<sp/>REV(c);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>4;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[0][c<sp/>&amp;<sp/>0xff]<sp/>^<sp/>(c<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[k][n]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[k<sp/>+<sp/>4][n]<sp/>=<sp/>REV(c);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table_empty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>the<sp/>other<sp/>guy<sp/>to<sp/>finish<sp/>(not<sp/>efficient,<sp/>but<sp/>rare)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(crc_table_empty)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKECRCH</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>out<sp/>CRC<sp/>tables<sp/>to<sp/>crc32.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*out;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;crc32.h&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;/*<sp/>crc32.h<sp/>--<sp/>tables<sp/>for<sp/>rapid<sp/>CRC<sp/>calculation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>*<sp/>Generated<sp/>automatically<sp/>by<sp/>crc32.c\n<sp/>*/\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;local<sp/>const<sp/>unsigned<sp/>long<sp/>FAR<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;crc_table[TBLS][256]<sp/>=\n{\n<sp/><sp/>{\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_table(out,<sp/>crc_table[0]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>BYFOUR</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;#ifdef<sp/>BYFOUR\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>8;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>},\n<sp/><sp/>{\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_table(out,<sp/>crc_table[k]);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;#endif\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>BYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>}\n};\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(out);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MAKECRCH<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAKECRCH</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_table(out,<sp/>table)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*out;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*table;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>256;<sp/>n++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;%s0x%08lxUL%s&quot;</highlight><highlight class="normal">,<sp/>n<sp/>%<sp/>5<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>table[n],</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>==<sp/>255<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>:<sp/>(n<sp/>%<sp/>5<sp/>==<sp/>4<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,\n&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MAKECRCH<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!DYNAMIC_CRC_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>========================================================================</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>Tables<sp/>of<sp/>CRC-32s<sp/>of<sp/>all<sp/>single-byte<sp/>values,<sp/>made<sp/>by<sp/>make_crc_table().</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crc32_8h" kindref="compound">crc32.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DYNAMIC_CRC_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>by<sp/>asm<sp/>versions<sp/>of<sp/>crc32()</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*<sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="crc32_8c_1af2770e8c72cf497f1b3ba941696d5bb5" kindref="member">get_crc_table</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DYNAMIC_CRC_TABLE</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc_table_empty)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_crc_table();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DYNAMIC_CRC_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)<ref refid="crc32_8h_1ada68c33259165bfd9c9bf585ee0d02f8" kindref="member">crc_table</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DO1<sp/>crc<sp/>=<sp/>crc_table[0][((int)crc<sp/>^<sp/>(*buf++))<sp/>&amp;<sp/>0xff]<sp/>^<sp/>(crc<sp/>&gt;&gt;<sp/>8)</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO8<sp/>DO1;<sp/>DO1;<sp/>DO1;<sp/>DO1;<sp/>DO1;<sp/>DO1;<sp/>DO1;<sp/>DO1</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="crc32_8c_1a68c725fbf3dc9f3fe41995b2b8ba250b" kindref="member">crc32</ref>(crc,<sp/>buf,<sp/>len)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/>len;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/><ref refid="zlib_8h_1ad15afa2776b41b2f4d8582dd152bd736" kindref="member">Z_NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DYNAMIC_CRC_TABLE</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc_table_empty)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_crc_table();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DYNAMIC_CRC_TABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BYFOUR</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ptrdiff_t))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u4<sp/>endian;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endian<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(&amp;endian)))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc32_little(crc,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc32_big(crc,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>crc<sp/>^<sp/>0xffffffff<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crc32_8c_1aed1b41414efee0773c67c28e09317455" kindref="member">DO8</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="crc32_8c_1aff265ea9630e020c8ac850c18d5d972f" kindref="member">DO1</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc<sp/>^<sp/>0xffffffff<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BYFOUR</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOLIT4<sp/>c<sp/>^=<sp/>*buf4++;<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[3][c<sp/>&amp;<sp/>0xff]<sp/>^<sp/>crc_table[2][(c<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[1][(c<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>crc_table[0][c<sp/>&gt;&gt;<sp/>24]</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DOLIT32<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4;<sp/>DOLIT4</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc32_little(crc,<sp/>buf,<sp/>len)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>u4<sp/>c;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u4<sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf4;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(u4)crc;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>~c;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&amp;&amp;<sp/>((ptrdiff_t)buf<sp/>&amp;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[0][(c<sp/>^<sp/>*buf++)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>(c<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>buf4<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u4<sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buf;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOLIT32;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>32;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOLIT4;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buf4;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[0][(c<sp/>^<sp/>*buf++)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>(c<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>~c;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)c;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOBIG4<sp/>c<sp/>^=<sp/>*++buf4;<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[4][c<sp/>&amp;<sp/>0xff]<sp/>^<sp/>crc_table[5][(c<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_table[6][(c<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff]<sp/>^<sp/>crc_table[7][c<sp/>&gt;&gt;<sp/>24]</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DOBIG32<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4;<sp/>DOBIG4</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc32_big(crc,<sp/>buf,<sp/>len)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>u4<sp/>c;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u4<sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*buf4;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>REV((u4)crc);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>~c;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&amp;&amp;<sp/>((ptrdiff_t)buf<sp/>&amp;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[4][(c<sp/>&gt;&gt;<sp/>24)<sp/>^<sp/>*buf++]<sp/>^<sp/>(c<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>buf4<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u4<sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buf;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>buf4--;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOBIG32;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>32;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOBIG4;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>buf4++;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/>*)buf4;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>crc_table[4][(c<sp/>&gt;&gt;<sp/>24)<sp/>^<sp/>*buf++]<sp/>^<sp/>(c<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>~c;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(REV(c));</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BYFOUR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GF2_DIM<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dimension<sp/>of<sp/>GF(2)<sp/>vectors<sp/>(length<sp/>of<sp/>CRC)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gf2_matrix_times(mat,<sp/>vec)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*mat;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(vec)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>^=<sp/>*mat;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat++;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gf2_matrix_square(square,<sp/>mat)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>unsigned<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*square;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*mat;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="crc32_8c_1a366ddceacb9041c5f12bb75fa6d75163" kindref="member">GF2_DIM</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>square[n]<sp/>=<sp/>gf2_matrix_times(mat,<sp/>mat[n]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="crc32_8c_1a08023ea6765c99d60a6a3840cd07156e" kindref="member">local</ref><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc32_combine_(crc1,<sp/>crc2,<sp/>len2)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc1;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc2;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1ab9923767082c7a76924b31493e60d42c" kindref="member">z_off64_t</ref><sp/>len2;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>even[<ref refid="crc32_8c_1a366ddceacb9041c5f12bb75fa6d75163" kindref="member">GF2_DIM</ref>];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>even-power-of-two<sp/>zeros<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>odd[<ref refid="crc32_8c_1a366ddceacb9041c5f12bb75fa6d75163" kindref="member">GF2_DIM</ref>];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>odd-power-of-two<sp/>zeros<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>degenerate<sp/>case<sp/>(also<sp/>disallow<sp/>negative<sp/>lengths)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>operator<sp/>for<sp/>one<sp/>zero<sp/>bit<sp/>in<sp/>odd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>odd[0]<sp/>=<sp/>0xedb88320<ref refid="namespace_poco_1ac52fa8319172aa7f502e473fb894fb2e" kindref="member">UL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CRC-32<sp/>polynomial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>row<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>1;<sp/>n<sp/>&lt;<sp/><ref refid="crc32_8c_1a366ddceacb9041c5f12bb75fa6d75163" kindref="member">GF2_DIM</ref>;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odd[n]<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>operator<sp/>for<sp/>two<sp/>zero<sp/>bits<sp/>in<sp/>even<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>gf2_matrix_square(even,<sp/>odd);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>operator<sp/>for<sp/>four<sp/>zero<sp/>bits<sp/>in<sp/>odd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>gf2_matrix_square(odd,<sp/>even);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>len2<sp/>zeros<sp/>to<sp/>crc1<sp/>(first<sp/>square<sp/>will<sp/>put<sp/>the<sp/>operator<sp/>for<sp/>one</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero<sp/>byte,<sp/>eight<sp/>zero<sp/>bits,<sp/>in<sp/>even)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>zeros<sp/>operator<sp/>for<sp/>this<sp/>bit<sp/>of<sp/>len2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gf2_matrix_square(even,<sp/>odd);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc1<sp/>=<sp/>gf2_matrix_times(even,<sp/>crc1);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>more<sp/>bits<sp/>set,<sp/>then<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>another<sp/>iteration<sp/>of<sp/>the<sp/>loop<sp/>with<sp/>odd<sp/>and<sp/>even<sp/>swapped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gf2_matrix_square(odd,<sp/>even);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len2<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc1<sp/>=<sp/>gf2_matrix_times(odd,<sp/>crc1);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>more<sp/>bits<sp/>set,<sp/>then<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len2<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>combined<sp/>crc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>crc1<sp/>^=<sp/>crc2;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>=========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="crc32_8c_1a8ca2395ba789d3ab583b3b18d5fde350" kindref="member">crc32_combine</ref>(crc1,<sp/>crc2,<sp/>len2)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc2;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" kindref="member">z_off_t</ref><sp/>len2;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc32_combine_(crc1,<sp/>crc2,<sp/>len2);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="crc32_8c_1a0b151bcdd4cac1276809115f33a66fe4" kindref="member">crc32_combine64</ref>(crc1,<sp/>crc2,<sp/>len2)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/>crc2;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1ab9923767082c7a76924b31493e60d42c" kindref="member">z_off64_t</ref><sp/>len2;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc32_combine_(crc1,<sp/>crc2,<sp/>len2);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/crc32.c"/>
  </compounddef>
</doxygen>
