<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="zutil_8h" kind="file">
    <compoundname>zutil.h</compoundname>
    <includes refid="zlib_8h" local="yes">zlib.h</includes>
    <includedby refid="adler32_8c" local="yes">src/adler32.c</includedby>
    <includedby refid="crc32_8c" local="yes">src/crc32.c</includedby>
    <includedby refid="deflate_8h" local="yes">src/deflate.h</includedby>
    <includedby refid="infback_8c" local="yes">src/infback.c</includedby>
    <includedby refid="inffast_8c" local="yes">src/inffast.c</includedby>
    <includedby refid="inflate_8c" local="yes">src/inflate.c</includedby>
    <includedby refid="inftrees_8c" local="yes">src/inftrees.c</includedby>
    <includedby refid="zutil_8c" local="yes">src/zutil.c</includedby>
    <incdepgraph>
      <node id="1807">
        <label>zconf.h</label>
        <link refid="zconf_8h"/>
      </node>
      <node id="1805">
        <label>src/zutil.h</label>
        <link refid="zutil.h"/>
        <childnode refid="1806" relation="include">
        </childnode>
      </node>
      <node id="1806">
        <label>zlib.h</label>
        <link refid="zlib_8h"/>
        <childnode refid="1807" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1815">
        <label>src/inffast.c</label>
        <link refid="inffast_8c"/>
      </node>
      <node id="1813">
        <label>src/trees.c</label>
        <link refid="trees_8c"/>
      </node>
      <node id="1809">
        <label>src/adler32.c</label>
        <link refid="adler32_8c"/>
      </node>
      <node id="1816">
        <label>src/inflate.c</label>
        <link refid="inflate_8c"/>
      </node>
      <node id="1812">
        <label>src/deflate.c</label>
        <link refid="deflate_8c"/>
      </node>
      <node id="1811">
        <label>src/deflate.h</label>
        <link refid="deflate_8h"/>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
      </node>
      <node id="1818">
        <label>src/zutil.c</label>
        <link refid="zutil_8c"/>
      </node>
      <node id="1808">
        <label>src/zutil.h</label>
        <link refid="zutil.h"/>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
      </node>
      <node id="1810">
        <label>src/crc32.c</label>
        <link refid="crc32_8c"/>
      </node>
      <node id="1814">
        <label>src/infback.c</label>
        <link refid="infback_8c"/>
      </node>
      <node id="1817">
        <label>src/inftrees.c</label>
        <link refid="inftrees_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" prot="public" static="no">
        <name>ZLIB_INTERNAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="19" column="12" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a08023ea6765c99d60a6a3840cd07156e" prot="public" static="no">
        <name>local</name>
        <initializer>static</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="33" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a66466516a4a71f3c78ccc40d203c92e5" prot="public" static="no">
        <name>ERR_MSG</name>
        <param><defname>err</defname></param>
        <initializer><ref refid="zutil_8h_1a0c8f7adb2bf9bcb3fcb006487dadc624" kindref="member">z_errmsg</ref>[<ref refid="zlib_8h_1a32916ba675b2d06463da2576b6a49d64" kindref="member">Z_NEED_DICT</ref>-(err)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="46" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a0fcc2fe26110263e812ce50919b6a5c1" prot="public" static="no">
        <name>ERR_RETURN</name>
        <param><defname>strm</defname></param>
        <param><defname>err</defname></param>
        <initializer>return (strm-&gt;msg = (char*)<ref refid="zutil_8h_1a66466516a4a71f3c78ccc40d203c92e5" kindref="member">ERR_MSG</ref>(err), (err))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="48" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1aef084f32d9ca8b9273a1c826b89b979a" prot="public" static="no">
        <name>DEF_WBITS</name>
        <initializer><ref refid="zconf_8h_1abd2f406ac1f9c49236376115d78ccb5b" kindref="member">MAX_WBITS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="55" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a19c8e60fa32d4ddf303ce988ba97af61" prot="public" static="no">
        <name>DEF_MEM_LEVEL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="60" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a9f650bc9c1fbd9499098e3a70d295b8a" prot="public" static="no">
        <name>STORED_BLOCK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="66" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a0f63a9090acfe4f653f117b638b289d1" prot="public" static="no">
        <name>STATIC_TREES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="67" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a40a71de753262f20a0bcacc2304e7b19" prot="public" static="no">
        <name>DYN_TREES</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="68" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a7984ceb1ff48ac91172976b91ed43f60" prot="public" static="no">
        <name>MIN_MATCH</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="71" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1ab7a9188dce25dac8d3a970c01b89b0c6" prot="public" static="no">
        <name>MAX_MATCH</name>
        <initializer>258</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="72" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a1156d73d88538d122acfa852b95492bd" prot="public" static="no">
        <name>PRESET_DICT</name>
        <initializer>0x20 /* preset dictionary flag in zlib header */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="75" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a919da7d9b61966c3af796ab42e618bef" prot="public" static="no">
        <name>OS_CODE</name>
        <initializer>0x03  /* assume Unix */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="171" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a7d40e22cfc0ad4087bf371d61290a0f5" prot="public" static="no">
        <name>F_OPEN</name>
        <param><defname>name</defname></param>
        <param><defname>mode</defname></param>
        <initializer>fopen((name), (mode))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="175" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a5c8d8d889189d1461d10df831f3cd40e" prot="public" static="no">
        <name>Assert</name>
        <param><defname>cond</defname></param>
        <param><defname>msg</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="256" column="12" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a93bbe97269cf8304b452a4d472dba191" prot="public" static="no">
        <name>Trace</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="257" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a67eab10382e740297e8a59d69f85464e" prot="public" static="no">
        <name>Tracev</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="258" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" prot="public" static="no">
        <name>Tracevv</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="259" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a15ce9096835263938f62694aee7a0a99" prot="public" static="no">
        <name>Tracec</name>
        <param><defname>c</defname></param>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="260" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a54a66ee51c61d67607b64678b055af6b" prot="public" static="no">
        <name>Tracecv</name>
        <param><defname>c</defname></param>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="261" column="11" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" prot="public" static="no">
        <name>ZALLOC</name>
        <param><defname>strm</defname></param>
        <param><defname>items</defname></param>
        <param><defname>size</defname></param>
        <initializer>(*((strm)-&gt;zalloc))((strm)-&gt;opaque, (items), (size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="269" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" prot="public" static="no">
        <name>ZFREE</name>
        <param><defname>strm</defname></param>
        <param><defname>addr</defname></param>
        <initializer>(*((strm)-&gt;zfree))((strm)-&gt;opaque, (<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref>)(addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="271" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="zutil_8h_1a8a5cef3599266dcaa129ed959a42bcf6" prot="public" static="no">
        <name>TRY_FREE</name>
        <param><defname>s</defname></param>
        <param><defname>p</defname></param>
        <initializer>{if (p) <ref refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" kindref="member">ZFREE</ref>(s, p);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="272" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="zutil_8h_1af3307af5922c72924a837559c801a8a4" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uch</definition>
        <argsstring></argsstring>
        <name>uch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zutil_8h_1abb6338932978dccbf8a6c3d44c10eff1" prot="public" static="no">
        <type><ref refid="zutil_8h_1af3307af5922c72924a837559c801a8a4" kindref="member">uch</ref></type>
        <definition>typedef uch uchf</definition>
        <argsstring></argsstring>
        <name>uchf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zutil_8h_1a3754180d606d4ed15468d15d9665aa2e" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short ush</definition>
        <argsstring></argsstring>
        <name>ush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zutil_8h_1acdf0e99b2ed932e64de21cfc46b8f89e" prot="public" static="no">
        <type><ref refid="zutil_8h_1a3754180d606d4ed15468d15d9665aa2e" kindref="member">ush</ref></type>
        <definition>typedef ush ushf</definition>
        <argsstring></argsstring>
        <name>ushf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="40" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="zutil_8h_1abd6f60bf9450af2ecb94097a32c19a64" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long ulg</definition>
        <argsstring></argsstring>
        <name>ulg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="41" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="zutil_8h_1a0c8f7adb2bf9bcb3fcb006487dadc624" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* z_errmsg[10]</definition>
        <argsstring>[10]</argsstring>
        <name>z_errmsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="43" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="zutil_8h_1a6c56a7eef4c55ad4bdb1a5deee4b6344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>uLong adler32_combine64</definition>
        <argsstring>()</argsstring>
        <name>adler32_combine64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1adfb4c3ec1adc3da12fcd8632193e0ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref></type>
        <definition>uLong crc32_combine64</definition>
        <argsstring>()</argsstring>
        <name>crc32_combine64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1ab472b809f715c1a28ad06a3fd2af537f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zmemcpy</definition>
        <argsstring>()</argsstring>
        <name>zmemcpy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1a34cb973e013020ebaeb2dcc97d24d26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zmemcmp</definition>
        <argsstring>()</argsstring>
        <name>zmemcmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1a954261c3b54633501dac18e9024b6b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zmemzero</definition>
        <argsstring>()</argsstring>
        <name>zmemzero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1a6b4cf3ad4b80b6676191d5d34566be5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref></type>
        <definition>voidpf zcalloc</definition>
        <argsstring>()</argsstring>
        <name>zcalloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="zutil_8h_1addbd428316a1264536fb0fdf9b27bd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zcfree</definition>
        <argsstring>()</argsstring>
        <name>zcfree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h" line="267" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>zutil.h<sp/>--<sp/>internal<sp/>interface<sp/>and<sp/>configuration<sp/>of<sp/>the<sp/>compression<sp/>library</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995-2010<sp/>Jean-loup<sp/>Gailly.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>copyright<sp/>notice<sp/>in<sp/>zlib.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>this<sp/>file<sp/>should<sp/>*not*<sp/>be<sp/>used<sp/>by<sp/>applications.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>part<sp/>of<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>compression<sp/>library<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>subject<sp/>to<sp/>change.<sp/>Applications<sp/>should<sp/>only<sp/>use<sp/>zlib.h.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@(#)<sp/>$Id:<sp/>//poco/1.4/Foundation/src/zutil.h#2<sp/>$<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZUTIL_H</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZUTIL_H</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>((__GNUC__-0)<sp/>*<sp/>10<sp/>+<sp/>__GNUC_MINOR__-0<sp/>&gt;=<sp/>33)<sp/>&amp;&amp;<sp/>!defined(NO_VIZ)</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ZLIB_INTERNAL<sp/>__attribute__((visibility<sp/>(&quot;hidden&quot;)))</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="19" refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ZLIB_INTERNAL</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zlib_8h" kindref="compound">zlib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STDC</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!(defined(_WIN32_WCE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER))</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>local</highlight></codeline>
<codeline lineno="33" refid="zutil_8h_1a08023ea6765c99d60a6a3840cd07156e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>local<sp/>static</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>compile<sp/>with<sp/>-Dlocal<sp/>if<sp/>your<sp/>debugger<sp/>can&apos;t<sp/>find<sp/>static<sp/>symbols<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="zutil_8h_1af3307af5922c72924a837559c801a8a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="zutil_8h_1af3307af5922c72924a837559c801a8a4" kindref="member">uch</ref>;</highlight></codeline>
<codeline lineno="38" refid="zutil_8h_1abb6338932978dccbf8a6c3d44c10eff1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1af3307af5922c72924a837559c801a8a4" kindref="member">uch</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zutil_8h_1abb6338932978dccbf8a6c3d44c10eff1" kindref="member">uchf</ref>;</highlight></codeline>
<codeline lineno="39" refid="zutil_8h_1a3754180d606d4ed15468d15d9665aa2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a3754180d606d4ed15468d15d9665aa2e" kindref="member">ush</ref>;</highlight></codeline>
<codeline lineno="40" refid="zutil_8h_1acdf0e99b2ed932e64de21cfc46b8f89e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a3754180d606d4ed15468d15d9665aa2e" kindref="member">ush</ref><sp/><ref refid="zconf_8h_1aef060b3456fdcc093a7210a762d5f2ed" kindref="member">FAR</ref><sp/><ref refid="zutil_8h_1acdf0e99b2ed932e64de21cfc46b8f89e" kindref="member">ushf</ref>;</highlight></codeline>
<codeline lineno="41" refid="zutil_8h_1abd6f60bf9450af2ecb94097a32c19a64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><ref refid="zutil_8h_1abd6f60bf9450af2ecb94097a32c19a64" kindref="member">ulg</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zutil_8c_1a0c8f7adb2bf9bcb3fcb006487dadc624" kindref="member">z_errmsg</ref>[10];<sp/></highlight><highlight class="comment">/*<sp/>indexed<sp/>by<sp/>2-zlib_error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(size<sp/>given<sp/>to<sp/>avoid<sp/>silly<sp/>warnings<sp/>with<sp/>Visual<sp/>C++)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="zutil_8h_1a66466516a4a71f3c78ccc40d203c92e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_MSG(err)<sp/>z_errmsg[Z_NEED_DICT-(err)]</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="zutil_8h_1a0fcc2fe26110263e812ce50919b6a5c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_RETURN(strm,err)<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>return<sp/>(strm-&gt;msg<sp/>=<sp/>(char*)ERR_MSG(err),<sp/>(err))</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>To<sp/>be<sp/>used<sp/>only<sp/>when<sp/>the<sp/>state<sp/>is<sp/>known<sp/>to<sp/>be<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>common<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEF_WBITS</highlight></codeline>
<codeline lineno="55" refid="zutil_8h_1aef084f32d9ca8b9273a1c826b89b979a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEF_WBITS<sp/>MAX_WBITS</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>default<sp/>windowBits<sp/>for<sp/>decompression.<sp/>MAX_WBITS<sp/>is<sp/>for<sp/>compression<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MAX_MEM_LEVEL<sp/>&gt;=<sp/>8</highlight></codeline>
<codeline lineno="60" refid="zutil_8h_1a19c8e60fa32d4ddf303ce988ba97af61" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEF_MEM_LEVEL<sp/>8</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEF_MEM_LEVEL<sp/><sp/>MAX_MEM_LEVEL</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>default<sp/>memLevel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="zutil_8h_1a9f650bc9c1fbd9499098e3a70d295b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STORED_BLOCK<sp/>0</highlight></codeline>
<codeline lineno="67" refid="zutil_8h_1a0f63a9090acfe4f653f117b638b289d1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STATIC_TREES<sp/>1</highlight></codeline>
<codeline lineno="68" refid="zutil_8h_1a40a71de753262f20a0bcacc2304e7b19" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DYN_TREES<sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>The<sp/>three<sp/>kinds<sp/>of<sp/>block<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="zutil_8h_1a7984ceb1ff48ac91172976b91ed43f60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_MATCH<sp/><sp/>3</highlight></codeline>
<codeline lineno="72" refid="zutil_8h_1ab7a9188dce25dac8d3a970c01b89b0c6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX_MATCH<sp/><sp/>258</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>The<sp/>minimum<sp/>and<sp/>maximum<sp/>match<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="zutil_8h_1a1156d73d88538d122acfa852b95492bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESET_DICT<sp/>0x20<sp/></highlight><highlight class="comment">/*<sp/>preset<sp/>dictionary<sp/>flag<sp/>in<sp/>zlib<sp/>header<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>target<sp/>dependencies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MSDOS)<sp/>||<sp/>(defined(WINDOWS)<sp/>&amp;&amp;<sp/>!defined(WIN32))</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x00</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__TURBOC__)<sp/>||<sp/>defined(__BORLANDC__)</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>(__STDC__<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(defined(__LARGE__)<sp/>||<sp/>defined(__COMPACT__))</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>compilation<sp/>with<sp/>ANSI<sp/>keywords<sp/>only<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Cdecl<sp/>farfree(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_Cdecl<sp/>farmalloc(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nbytes<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>MSC<sp/>or<sp/>DJGPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x01</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(VAXC)<sp/>||<sp/>defined(VMS)</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x02</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>F_OPEN(name,<sp/>mode)<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>fopen((name),<sp/>(mode),<sp/>&quot;mbc=60&quot;,<sp/>&quot;ctx=stm&quot;,<sp/>&quot;rfm=fix&quot;,<sp/>&quot;mrs=512&quot;)</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ATARI)<sp/>||<sp/>defined(atarist)</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x05</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OS2</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x06</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>M_I86</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MACOS)<sp/>||<sp/>defined(TARGET_OS_MAC)</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x07</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__MWERKS__)<sp/>&amp;&amp;<sp/>__dest_os<sp/>!=<sp/>__be_os<sp/>&amp;&amp;<sp/>__dest_os<sp/>!=<sp/>__win32_os</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;unix.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>fdopen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifndef<sp/>fdopen</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>fdopen(fd,mode)<sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>fdopen()<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TOPS20</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x0a</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>__CYGWIN__<sp/><sp/></highlight><highlight class="comment">/*<sp/>Cygwin<sp/>is<sp/>Unix,<sp/>not<sp/>Win32<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x0b</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__50SERIES<sp/></highlight><highlight class="comment">/*<sp/>Prime/PRIMOS<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x0f</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_BEOS_)<sp/>||<sp/>defined(RISCOS)</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>fdopen(fd,mode)<sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>fdopen()<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;<sp/>600))<sp/>&amp;&amp;<sp/>!defined<sp/>__INTERIX</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(_WIN32_WCE)</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>fdopen(fd,mode)<sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>fdopen()<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifndef<sp/>_PTRDIFF_T_DEFINED</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptrdiff_t;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_PTRDIFF_T_DEFINED</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>fdopen(fd,type)<sp/><sp/>_fdopen(fd,type)</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__BORLANDC__)</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>warn<sp/>-8004</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>warn<sp/>-8008</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>warn<sp/>-8066</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>provide<sp/>prototypes<sp/>for<sp/>these<sp/>when<sp/>building<sp/>zlib<sp/>without<sp/>LFS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_LARGEFILE64_SOURCE)<sp/>||<sp/>_LFS64_LARGEFILE-0<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a49b7f5eccfcc99e53178581632bc9589" kindref="member">ZEXTERN</ref><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="adler32_8c_1a98fd33ee7f4220ffab679979e6c27af9" kindref="member">adler32_combine64</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref>,<sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref>,<sp/><ref refid="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" kindref="member">z_off_t</ref>));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="zconf_8h_1a49b7f5eccfcc99e53178581632bc9589" kindref="member">ZEXTERN</ref><sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref><sp/><ref refid="zconf_8h_1a181415878f03b95a7094309d824a14b6" kindref="member">ZEXPORT</ref><sp/><ref refid="crc32_8c_1a0b151bcdd4cac1276809115f33a66fe4" kindref="member">crc32_combine64</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref>,<sp/><ref refid="zconf_8h_1acd2a5701a3aecf6700d2c66c606ecb40" kindref="member">uLong</ref>,<sp/><ref refid="zconf_8h_1a8cf4661a88ec12823d7cbdd3fa629eb0" kindref="member">z_off_t</ref>));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>common<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OS_CODE</highlight></codeline>
<codeline lineno="171" refid="zutil_8h_1a919da7d9b61966c3af796ab42e618bef" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>OS_CODE<sp/><sp/>0x03<sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>Unix<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>F_OPEN</highlight></codeline>
<codeline lineno="175" refid="zutil_8h_1a7d40e22cfc0ad4087bf371d61290a0f5" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>F_OPEN(name,<sp/>mode)<sp/>fopen((name),<sp/>(mode))</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STDC99)<sp/>||<sp/>(defined(__TURBOC__)<sp/>&amp;&amp;<sp/>__TURBOC__<sp/>&gt;=<sp/>0x550)</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>HAVE_VSNPRINTF</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>HAVE_VSNPRINTF</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(__CYGWIN__)</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>HAVE_VSNPRINTF</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>HAVE_VSNPRINTF</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_VSNPRINTF</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>MSDOS</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>vsnprintf<sp/>may<sp/>exist<sp/>on<sp/>some<sp/>MS-DOS<sp/>compilers<sp/>(DJGPP?),</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>for<sp/>now<sp/>we<sp/>just<sp/>assume<sp/>it<sp/>doesn&apos;t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>__TURBOC__</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>Win32,<sp/>vsnprintf<sp/>is<sp/>available<sp/>as<sp/>the<sp/>&quot;non-ANSI&quot;<sp/>_vsnprintf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>!defined(vsnprintf)<sp/>&amp;&amp;<sp/>!defined(NO_vsnprintf)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(_MSC_VER)<sp/>||<sp/>(<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&lt;<sp/>1500<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>vsnprintf<sp/>_vsnprintf</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>__SASC</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>VMS</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_vsnprintf</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(pyr)</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_MEMCPY</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(SMALL_MEDIUM)<sp/>&amp;&amp;<sp/>!defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(__SC__)</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>our<sp/>own<sp/>functions<sp/>for<sp/>small<sp/>and<sp/>medium<sp/>model<sp/>with<sp/>MSC<sp/>&lt;=<sp/>5.0.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/>*<sp/>You<sp/>may<sp/>have<sp/>to<sp/>use<sp/>the<sp/>same<sp/>strategy<sp/>for<sp/>Borland<sp/>C<sp/>(untested).</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>*<sp/>The<sp/>__SC__<sp/>check<sp/>is<sp/>for<sp/>Symantec.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>NO_MEMCPY</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(STDC)<sp/>&amp;&amp;<sp/>!defined(HAVE_MEMCPY)<sp/>&amp;&amp;<sp/>!defined(NO_MEMCPY)</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>HAVE_MEMCPY</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MEMCPY</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>SMALL_MEDIUM<sp/></highlight><highlight class="comment">/*<sp/>MSDOS<sp/>small<sp/>or<sp/>medium<sp/>model<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemcpy<sp/>_fmemcpy</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemcmp<sp/>_fmemcmp</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemzero(dest,<sp/>len)<sp/>_fmemset(dest,<sp/>0,<sp/>len)</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemcpy<sp/>memcpy</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemcmp<sp/>memcmp</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>zmemzero(dest,<sp/>len)<sp/>memset(dest,<sp/>0,<sp/>len)</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/><ref refid="zutil_8c_1a20971e15496f76249b852c9764cf38ef" kindref="member">zmemcpy</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>*<sp/>source,<sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/>len));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/><ref refid="zutil_8c_1a25f235744ff0e6b602a6fed428b00aa1" kindref="member">zmemcmp</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>*<sp/>s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>*<sp/>s2,<sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/>len));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/><ref refid="zutil_8c_1ae92187bde62d7c4e84b231576d291881" kindref="member">zmemzero</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1ac5613fe8160cbbf89d3e470574b755fb" kindref="member">Bytef</ref>*<sp/>dest,<sp/><ref refid="zconf_8h_1a87d141052bcd5ec8a80812a565c70369" kindref="member">uInt</ref><sp/>len));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Diagnostic<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/>z_verbose;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/>z_error<sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*m));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Assert(cond,msg)<sp/>{if(!(cond))<sp/>z_error(msg);}</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Trace(x)<sp/>{if<sp/>(z_verbose&gt;=0)<sp/>fprintf<sp/>x<sp/>;}</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracev(x)<sp/>{if<sp/>(z_verbose&gt;0)<sp/>fprintf<sp/>x<sp/>;}</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracevv(x)<sp/>{if<sp/>(z_verbose&gt;1)<sp/>fprintf<sp/>x<sp/>;}</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracec(c,x)<sp/>{if<sp/>(z_verbose&gt;0<sp/>&amp;&amp;<sp/>(c))<sp/>fprintf<sp/>x<sp/>;}</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracecv(c,x)<sp/>{if<sp/>(z_verbose&gt;1<sp/>&amp;&amp;<sp/>(c))<sp/>fprintf<sp/>x<sp/>;}</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="256" refid="zutil_8h_1a5c8d8d889189d1461d10df831f3cd40e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Assert(cond,msg)</highlight></codeline>
<codeline lineno="257" refid="zutil_8h_1a93bbe97269cf8304b452a4d472dba191" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Trace(x)</highlight></codeline>
<codeline lineno="258" refid="zutil_8h_1a67eab10382e740297e8a59d69f85464e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracev(x)</highlight></codeline>
<codeline lineno="259" refid="zutil_8h_1ae65182ff511f0b12345c20b6533f32d9" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracevv(x)</highlight></codeline>
<codeline lineno="260" refid="zutil_8h_1a15ce9096835263938f62694aee7a0a99" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracec(c,x)</highlight></codeline>
<codeline lineno="261" refid="zutil_8h_1a54a66ee51c61d67607b64678b055af6b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>Tracecv(c,x)</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/><ref refid="zutil_8c_1acd6de6ee77b7c44353e61511b6eb1d90" kindref="member">zcalloc</ref><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref><sp/>opaque,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>items,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="zutil_8h_1a59d4d7ef4d73655c759211ec33a5d44f" kindref="member">ZLIB_INTERNAL</ref><sp/><ref refid="zutil_8c_1ac5167b77f4a79cb68ba27c598b52485e" kindref="member">zcfree</ref><sp/><sp/><ref refid="zconf_8h_1aa6c3c093d0900e1d96d07c91b53c1b5d" kindref="member">OF</ref>((<ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref><sp/>opaque,<sp/><ref refid="zconf_8h_1aa93554e72bde12c322c25c3c1e8675a5" kindref="member">voidpf</ref><sp/>ptr));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="zutil_8h_1a39679d03501d691bdfc62a3324cb9548" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZALLOC(strm,<sp/>items,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*((strm)-&gt;zalloc))((strm)-&gt;opaque,<sp/>(items),<sp/>(size))</highlight></codeline>
<codeline lineno="271" refid="zutil_8h_1a71d7c4f186ae3a055367c92db5a8ab18" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZFREE(strm,<sp/>addr)<sp/><sp/>(*((strm)-&gt;zfree))((strm)-&gt;opaque,<sp/>(voidpf)(addr))</highlight></codeline>
<codeline lineno="272" refid="zutil_8h_1a8a5cef3599266dcaa129ed959a42bcf6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRY_FREE(s,<sp/>p)<sp/>{if<sp/>(p)<sp/>ZFREE(s,<sp/>p);}</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZUTIL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/zutil.h"/>
  </compounddef>
</doxygen>
