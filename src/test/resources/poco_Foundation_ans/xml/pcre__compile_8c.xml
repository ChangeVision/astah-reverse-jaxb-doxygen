<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="pcre__compile_8c" kind="file">
    <compoundname>pcre_compile.c</compoundname>
    <includes refid="pcre__config_8h" local="yes">pcre_config.h</includes>
    <includes refid="pcre__internal_8h" local="yes">pcre_internal.h</includes>
    <incdepgraph>
      <node id="959">
        <label>pcre_config.h</label>
        <link refid="pcre__config_8h"/>
      </node>
      <node id="968">
        <label>stdarg.h</label>
      </node>
      <node id="970">
        <label>ucp.h</label>
        <link refid="ucp_8h"/>
      </node>
      <node id="965">
        <label>stdlib.h</label>
      </node>
      <node id="967">
        <label>setjmp.h</label>
      </node>
      <node id="963">
        <label>stddef.h</label>
      </node>
      <node id="969">
        <label>pcre.h</label>
        <link refid="pcre_8h"/>
        <childnode refid="965" relation="include">
        </childnode>
      </node>
      <node id="962">
        <label>limits.h</label>
      </node>
      <node id="958">
        <label>src/pcre_compile.c</label>
        <link refid="pcre_compile.c"/>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="960" relation="include">
        </childnode>
      </node>
      <node id="960">
        <label>pcre_internal.h</label>
        <link refid="pcre__internal_8h"/>
        <childnode refid="961" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
      </node>
      <node id="966">
        <label>string.h</label>
      </node>
      <node id="961">
        <label>ctype.h</label>
      </node>
      <node id="964">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structverbitem" prot="public">verbitem</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pcre__compile_8c_1a95a3c07f6f5cdb6c70ce239175f163d0" prot="public" static="no">
        <name>NLBLOCK</name>
        <initializer>cd             /* Block containing newline information */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="47" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1a24a8ab0a4c94d7ad2ea58b502f552136" prot="public" static="no">
        <name>PSSTART</name>
        <initializer>start_pattern  /* Field containing processed string start */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="48" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1af7e8ae41e062a5935164c1e0c4c2b1f0" prot="public" static="no">
        <name>PSEND</name>
        <initializer>end_pattern    /* Field containing processed string end */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="49" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" prot="public" static="no">
        <name>SETBIT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>a[b/8] |= (1 &lt;&lt; (b%8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="64" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" prot="public" static="no">
        <name>OFLOW_MAX</name>
        <initializer>(INT_MAX - 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="71" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1ae6ca9bdec2edc32d0268bd41de2f9b18" prot="public" static="no">
        <name>COMPILE_WORK_SIZE</name>
        <initializer>(4096)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="90" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1ac44504206ba5e7edf67f453407103815" prot="public" static="no">
        <name>STRING</name>
        <param><defname>a</defname></param>
        <initializer># a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="214" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pcre__compile_8c_1aca706bf8dd2234d7d20c5284a653d73b" prot="public" static="no">
        <name>XSTRING</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="pcre__compile_8c_1ac44504206ba5e7edf67f453407103815" kindref="member">STRING</ref>(s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="215" column="9" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pcre__compile_8c_1a13cd3e999fdd31a4bdac5da1e0b7c11c" prot="public" static="no">
        <type>struct <ref refid="structverbitem" kindref="compound">verbitem</ref></type>
        <definition>typedef struct verbitem  verbitem</definition>
        <argsstring></argsstring>
        <name>verbitem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="148" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcre__compile_8c_1a01143afd5cd44379c19011cd36d390b5" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short int</type>
        <definition>const short int escapes[]</definition>
        <argsstring>[]</argsstring>
        <name>escapes</name>
        <initializer>= {
     0,      0,      0,      0,      0,      0,      0,      0,   
     0,      0,    &apos;:&apos;,    &apos;;&apos;,    &apos;&lt;&apos;,    &apos;=&apos;,    &apos;&gt;&apos;,    &apos;?&apos;,   
   &apos;@&apos;, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1434d7ebfcdba39d06d0b6cb0cf664d1" kindref="member">ESC_A</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a7f479d6e79cdf57b82a506a277907132" kindref="member">ESC_B</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a6331d1a197ba5296c60dd01728cc049d" kindref="member">ESC_C</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af04e9d033be103b364dad4a005b7b5d2" kindref="member">ESC_E</ref>,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04aa7a767d6163e18b9b2ce8c2a78f885b0" kindref="member">ESC_G</ref>,   
-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref>,      0,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a9c4c7a1bd134dd24b8ef141815066b5a" kindref="member">ESC_K</ref>,      0,      0,      0,      0,   
-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1c0b42b78dfc33f0f79a2a477ff60360" kindref="member">ESC_Q</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a25efd85a43d2bedd76e632e5bd45c681" kindref="member">ESC_R</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>,      0,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref>,   
-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref>,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a01c38ed66d58a64e110e4bdc8a8d7628" kindref="member">ESC_Z</ref>,    &apos;[&apos;,   &apos;\\&apos;,    &apos;]&apos;,    &apos;^&apos;,    &apos;_&apos;,   
   &apos;`&apos;,      7, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref>,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>,   27 ,   &apos;\f&apos; ,      0,   
-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>,      0,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a04258325836a53e4968cb8428400d699" kindref="member">ESC_k</ref>,      0,      0,   &apos;\n&apos; ,      0,   
-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>,      0,   &apos;\r&apos; , -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref>,   &apos;\t&apos; ,    0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>,   
     0,      0, -<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af9d13cdc08dd62023190214fe08b7faa" kindref="member">ESC_z</ref>                                            
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="99" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1aafc12a8e0e808933fc3d177896e1d484" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
        <definition>const char verbnames[]</definition>
        <argsstring>[]</argsstring>
        <name>verbnames</name>
        <initializer>=
  &quot;ACCEPT\0&quot;
  &quot;COMMIT\0&quot;
  &quot;F\0&quot;
  &quot;FAIL\0&quot;
  &quot;PRUNE\0&quot;
  &quot;SKIP\0&quot;
  &quot;THEN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="150" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1a1db14abd04bbf169e48668dcab0d18eb" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structverbitem" kindref="compound">verbitem</ref></type>
        <definition>const verbitem verbs[]</definition>
        <argsstring>[]</argsstring>
        <name>verbs</name>
        <initializer>= {
  { 6, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf9d3461927bdf610f76a29a74161897f" kindref="member">OP_ACCEPT</ref> },
  { 6, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cad13ef639ab8fd7faca1c30c88c9e0b0e" kindref="member">OP_COMMIT</ref> },
  { 1, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref> },
  { 4, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref> },
  { 5, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab7d74d0787b40b3b3a72f90411d49f8d" kindref="member">OP_PRUNE</ref> },
  { 4, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa28b93510594f0696c9661dc566670fb" kindref="member">OP_SKIP</ref>  },
  { 4, <ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8a901f5480cfae89918baa9225955b0a" kindref="member">OP_THEN</ref>  }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="159" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1a40fafe7bd27d71a0f8b4aa3071cb2da5" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> int</type>
        <definition>const int verbcount</definition>
        <argsstring></argsstring>
        <name>verbcount</name>
        <initializer>= sizeof(verbs)/sizeof(<ref refid="structverbitem" kindref="compound">verbitem</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="169" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1aa639971a2d1026508836387750e06924" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
        <definition>const char posix_names[]</definition>
        <argsstring>[]</argsstring>
        <name>posix_names</name>
        <initializer>=
  &quot;alpha\0&quot;  &quot;lower\0&quot;  &quot;upper\0&quot;  &quot;alnum\0&quot;  &quot;ascii\0&quot;  &quot;blank\0&quot;
  &quot;cntrl\0&quot;  &quot;digit\0&quot;  &quot;graph\0&quot;  &quot;print\0&quot;  &quot;punct\0&quot;  &quot;space\0&quot;
  &quot;word\0&quot;   &quot;xdigit&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="178" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1a7a8e26c822635e87d20127f45a2f21eb" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref></type>
        <definition>const uschar posix_name_lengths[]</definition>
        <argsstring>[]</argsstring>
        <name>posix_name_lengths</name>
        <initializer>= {
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 6, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="183" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1a931027d37ddda3fe4d990c84d93d1af2" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> int</type>
        <definition>const int posix_class_maps[]</definition>
        <argsstring>[]</argsstring>
        <name>posix_class_maps</name>
        <initializer>= {
   160  ,   64  , -2,             
   128  , -1,          0,             
   96  , -1,          0,             
   160  ,  -1,          2,             
   224  ,  288  ,  0,             
   0  , -1,          1,             
   288  , -1,          0,             
   64  , -1,          0,             
   192  , -1,          0,             
   224  , -1,          0,             
   256  , -1,          0,             
   0  , -1,          0,             
   160  ,  -1,          0,             
   32  ,-1,          0              
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="196" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1afbd78da6f03e9c9cbaa7b5801951baef" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
        <definition>const char error_texts[]</definition>
        <argsstring>[]</argsstring>
        <name>error_texts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="227" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcre__compile_8c_1a76c4a53b3b93041ff9a3026ae4e8c61a" prot="public" static="yes" mutable="no">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned char</type>
        <definition>const unsigned char digitab[]</definition>
        <argsstring>[]</argsstring>
        <name>digitab</name>
        <initializer>=
  {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c, 
  0x0c,0x0c,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="324" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcre__compile_8c_1a16f443baf4fd03f12fc5b615e40f8d9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL compile_regex</definition>
        <argsstring>(int, int, uschar **, const uschar **, int *, BOOL, BOOL, int, int *, int *, branch_chain *, compile_data *, int *)</argsstring>
        <name>compile_regex</name>
        <param>
          <type>int</type>
          <defname>options</defname>
        </param>
        <param>
          <type>int</type>
          <defname>oldims</defname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <defname>codeptr</defname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <defname>ptrptr</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>errorcodeptr</defname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <defname>lookbehind</defname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <defname>reset_bracount</defname>
        </param>
        <param>
          <type>int</type>
          <defname>skipbytes</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>firstbyteptr</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>reqbyteptr</defname>
        </param>
        <param>
          <type><ref refid="structbranch__chain" kindref="compound">branch_chain</ref> *</type>
          <defname>bcptr</defname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <defname>cd</defname>
        </param>
        <param>
          <type>int *</type>
          <defname>lengthptr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="434" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5450" bodyend="5684"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1abd61e90430285a27064e206712368e1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char* find_error_text</definition>
        <argsstring>(int n)</argsstring>
        <name>find_error_text</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="453" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="453" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a605b0e08a9e643ad1fe78b5e2d747631" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_escape</definition>
        <argsstring>(const uschar **ptrptr, int *errorcodeptr, int bracount, int options, BOOL isclass)</argsstring>
        <name>check_escape</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <declname>ptrptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>errorcodeptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bracount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>isclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="486" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="486" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a1079030cda790cb285a4ca8b24d8fde4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_ucp</definition>
        <argsstring>(const uschar **ptrptr, BOOL *negptr, int *dptr, int *errorcodeptr)</argsstring>
        <name>get_ucp</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <declname>ptrptr</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref> *</type>
          <declname>negptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>errorcodeptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="791" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="791" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a7de2d9c855388aad869fa011ee88b955" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL is_counted_repeat</definition>
        <argsstring>(const uschar *p)</argsstring>
        <name>is_counted_repeat</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="880" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="880" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a0d3410f0eb85c705f9026948a694e5f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
        <definition>static const uschar* read_repeat_counts</definition>
        <argsstring>(const uschar *p, int *minp, int *maxp, int *errorcodeptr)</argsstring>
        <name>read_repeat_counts</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>errorcodeptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="917" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="917" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a8c5b113457bcbc51296639b0a780e849" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_parens</definition>
        <argsstring>(const uschar *ptr, compile_data *cd, const uschar *name, int lorn, BOOL xmode)</argsstring>
        <name>find_parens</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lorn</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>xmode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="986" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="986" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1acdfae40aa45b326eba4da8538e4733b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
        <definition>static const uschar* first_significant_code</definition>
        <argsstring>(const uschar *code, int *options, int optbit, BOOL skipassert)</argsstring>
        <name>first_significant_code</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optbit</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>skipassert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1122" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1122" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a761b79c43b9f702c09ea5391aed9972f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_fixedlength</definition>
        <argsstring>(uschar *code, int options)</argsstring>
        <name>find_fixedlength</name>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1182" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1182" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1accf96ddbca0f0d10d2310da4010d3275" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
        <definition>static const uschar* find_bracket</definition>
        <argsstring>(const uschar *code, BOOL utf8, int number)</argsstring>
        <name>find_bracket</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1372" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1372" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1ad91d6792df4048dbde6437e2ef005c5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
        <definition>static const uschar* find_recurse</definition>
        <argsstring>(const uschar *code, BOOL utf8)</argsstring>
        <name>find_recurse</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1475" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1475" bodyend="1551"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a2f850b6f1e689a7546fecb41f6567303" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL could_be_empty_branch</definition>
        <argsstring>(const uschar *code, const uschar *endcode, BOOL utf8)</argsstring>
        <name>could_be_empty_branch</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>endcode</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1576" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1576" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a1d08c6648d50f9be18274e18d2e3e5f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL could_be_empty</definition>
        <argsstring>(const uschar *code, const uschar *endcode, branch_chain *bcptr, BOOL utf8)</argsstring>
        <name>could_be_empty</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>endcode</declname>
        </param>
        <param>
          <type><ref refid="structbranch__chain" kindref="compound">branch_chain</ref> *</type>
          <declname>bcptr</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1775" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1775" bodyend="1784"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1aa17deabcd9a827935c69f90c1aa9c751" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL check_posix_syntax</definition>
        <argsstring>(const uschar *ptr, const uschar **endptr)</argsstring>
        <name>check_posix_syntax</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <declname>endptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1820" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1820" bodyend="1837"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a867c03c0afa81a874b2024fd80da036c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_posix_name</definition>
        <argsstring>(const uschar *ptr, int len)</argsstring>
        <name>check_posix_name</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1857" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1857" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a175e632ee899ff014df6045a57725594" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adjust_recurse</definition>
        <argsstring>(uschar *group, int adjust, BOOL utf8, compile_data *cd, uschar *save_hwm)</argsstring>
        <name>adjust_recurse</name>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adjust</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>save_hwm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1904" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1904" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1abc82fd845089441396e7fbbea13dc8fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
        <definition>static uschar* auto_callout</definition>
        <argsstring>(uschar *code, const uschar *ptr, compile_data *cd)</argsstring>
        <name>auto_callout</name>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1958" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1958" bodyend="1965"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a6fcf3137fc8e02d1b4a37117865dfee1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void complete_callout</definition>
        <argsstring>(uschar *previous_callout, const uschar *ptr, compile_data *cd)</argsstring>
        <name>complete_callout</name>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>previous_callout</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="1986" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="1986" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1ab8e68d22089ec2d9c2997535d292891e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL get_othercase_range</definition>
        <argsstring>(unsigned int *cptr, unsigned int d, unsigned int *ocptr, unsigned int *odptr)</argsstring>
        <name>get_othercase_range</name>
        <param>
          <type>unsigned int *</type>
          <declname>cptr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>ocptr</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>odptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="2014" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="2014" bodyend="2037"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a9c44b72741bef33b0f54ee208846973a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL check_auto_possessive</definition>
        <argsstring>(int op_code, int item, BOOL utf8, uschar *utf8_char, const uschar *ptr, int options, compile_data *cd)</argsstring>
        <name>check_auto_possessive</name>
        <param>
          <type>int</type>
          <declname>op_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>utf8</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>utf8_char</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="2063" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="2063" bodyend="2371"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1af3e39418b4a9084f27da8a776832d6ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL compile_branch</definition>
        <argsstring>(int *optionsptr, uschar **codeptr, const uschar **ptrptr, int *errorcodeptr, int *firstbyteptr, int *reqbyteptr, branch_chain *bcptr, compile_data *cd, int *lengthptr)</argsstring>
        <name>compile_branch</name>
        <param>
          <type>int *</type>
          <declname>optionsptr</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <declname>codeptr</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> **</type>
          <declname>ptrptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>errorcodeptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>firstbyteptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>reqbyteptr</declname>
        </param>
        <param>
          <type><ref refid="structbranch__chain" kindref="compound">branch_chain</ref> *</type>
          <declname>bcptr</declname>
        </param>
        <param>
          <type><ref refid="structcompile__data" kindref="compound">compile_data</ref> *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lengthptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="2402" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="2402" bodyend="5409"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a4ba42ef5001cb47c7c30a696aacb3991" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL is_anchored</definition>
        <argsstring>(register const uschar *code, int *options, unsigned int bracket_map, unsigned int backref_map)</argsstring>
        <name>is_anchored</name>
        <param>
          <type>register <ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bracket_map</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>backref_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="5728" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5728" bodyend="5778"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a92ce130a0540801d875928de724b2a0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
        <definition>static BOOL is_startline</definition>
        <argsstring>(const uschar *code, unsigned int bracket_map, unsigned int backref_map)</argsstring>
        <name>is_startline</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bracket_map</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>backref_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="5804" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5804" bodyend="5851"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a857062b02c6c19948f9dbc5dafa56781" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_firstassertedchar</definition>
        <argsstring>(const uschar *code, int *options, BOOL inassert)</argsstring>
        <name>find_firstassertedchar</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref> *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></type>
          <declname>inassert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="5876" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5876" bodyend="5922"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a48fea4df452819e68493a442c1cbe114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre_8h_1a96cef57ec6796ba28e36092fd1e8d155" kindref="member">pcre</ref> *</type>
        <definition>pcre* pcre_compile</definition>
        <argsstring>(const char *pattern, int options, const char **errorptr, int *erroroffset, const unsigned char *tables)</argsstring>
        <name>pcre_compile</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>errorptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>erroroffset</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned char *</type>
          <declname>tables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="5949" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5949" bodyend="5953"/>
      </memberdef>
      <memberdef kind="function" id="pcre__compile_8c_1a445a6fe3b6e83b2e5a2158bb4f56da86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pcre_8h_1a96cef57ec6796ba28e36092fd1e8d155" kindref="member">pcre</ref> *</type>
        <definition>pcre* pcre_compile2</definition>
        <argsstring>(const char *pattern, int options, int *errorcodeptr, const char **errorptr, int *erroroffset, const unsigned char *tables)</argsstring>
        <name>pcre_compile2</name>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>errorcodeptr</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>errorptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>erroroffset</declname>
        </param>
        <param>
          <type><ref refid="zconf_8h_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned char *</type>
          <declname>tables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" line="5957" column="1" bodyfile="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c" bodystart="5957" bodyend="6378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Perl-Compatible<sp/>Regular<sp/>Expressions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PCRE<sp/>is<sp/>a<sp/>library<sp/>of<sp/>functions<sp/>to<sp/>support<sp/>regular<sp/>expressions<sp/>whose<sp/>syntax</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>semantics<sp/>are<sp/>as<sp/>close<sp/>as<sp/>possible<sp/>to<sp/>those<sp/>of<sp/>the<sp/>Perl<sp/>5<sp/>language.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Written<sp/>by<sp/>Philip<sp/>Hazel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>1997-2008<sp/>University<sp/>of<sp/>Cambridge</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment">modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>of<sp/>Cambridge<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="29"><highlight class="comment">ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="32"><highlight class="comment">SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="33"><highlight class="comment">INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="34"><highlight class="comment">CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="35"><highlight class="comment">ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="36"><highlight class="comment">POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>module<sp/>contains<sp/>the<sp/>external<sp/>function<sp/>pcre_compile(),<sp/>along<sp/>with</highlight></codeline>
<codeline lineno="42"><highlight class="comment">supporting<sp/>internal<sp/>functions<sp/>that<sp/>are<sp/>not<sp/>used<sp/>by<sp/>other<sp/>modules.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__config_8h" kindref="compound">pcre_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NLBLOCK<sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Block<sp/>containing<sp/>newline<sp/>information<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PSSTART<sp/>start_pattern<sp/><sp/></highlight><highlight class="comment">/*<sp/>Field<sp/>containing<sp/>processed<sp/>string<sp/>start<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PSEND<sp/><sp/><sp/>end_pattern<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Field<sp/>containing<sp/>processed<sp/>string<sp/>end<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pcre__internal_8h" kindref="compound">pcre_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>DEBUG<sp/>is<sp/>defined,<sp/>we<sp/>need<sp/>the<sp/>pcre_printint()<sp/>function,<sp/>which<sp/>is<sp/>also</highlight></codeline>
<codeline lineno="55"><highlight class="comment">used<sp/>by<sp/>pcretest.<sp/>DEBUG<sp/>is<sp/>not<sp/>defined<sp/>when<sp/>building<sp/>a<sp/>production<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;pcre_printint.src&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro<sp/>for<sp/>setting<sp/>individual<sp/>bits<sp/>in<sp/>class<sp/>bitmaps.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SETBIT(a,b)<sp/>a[b/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(b%8))</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>length<sp/>value<sp/>to<sp/>check<sp/>against<sp/>when<sp/>making<sp/>sure<sp/>that<sp/>the<sp/>integer<sp/>that</highlight></codeline>
<codeline lineno="67"><highlight class="comment">holds<sp/>the<sp/>compiled<sp/>pattern<sp/>length<sp/>does<sp/>not<sp/>overflow.<sp/>We<sp/>make<sp/>it<sp/>a<sp/>bit<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="68"><highlight class="comment">INT_MAX<sp/>to<sp/>allow<sp/>for<sp/>adding<sp/>in<sp/>group<sp/>terminating<sp/>bytes,<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>have</highlight></codeline>
<codeline lineno="69"><highlight class="comment">to<sp/>check<sp/>them<sp/>every<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFLOW_MAX<sp/>(INT_MAX<sp/>-<sp/>20)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Code<sp/>parameters<sp/>and<sp/>static<sp/>tables<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>value<sp/>specifies<sp/>the<sp/>size<sp/>of<sp/>stack<sp/>workspace<sp/>that<sp/>is<sp/>used<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="79"><highlight class="comment">first<sp/>pre-compile<sp/>phase<sp/>that<sp/>determines<sp/>how<sp/>much<sp/>memory<sp/>is<sp/>required.<sp/>The<sp/>regex</highlight></codeline>
<codeline lineno="80"><highlight class="comment">is<sp/>partly<sp/>compiled<sp/>into<sp/>this<sp/>space,<sp/>but<sp/>the<sp/>compiled<sp/>parts<sp/>are<sp/>discarded<sp/>as</highlight></codeline>
<codeline lineno="81"><highlight class="comment">soon<sp/>as<sp/>they<sp/>can<sp/>be,<sp/>so<sp/>that<sp/>hopefully<sp/>there<sp/>will<sp/>never<sp/>be<sp/>an<sp/>overrun.<sp/>The<sp/>code</highlight></codeline>
<codeline lineno="82"><highlight class="comment">does,<sp/>however,<sp/>check<sp/>for<sp/>an<sp/>overrun.<sp/>The<sp/>largest<sp/>amount<sp/>I&apos;ve<sp/>seen<sp/>used<sp/>is<sp/>218,</highlight></codeline>
<codeline lineno="83"><highlight class="comment">so<sp/>this<sp/>number<sp/>is<sp/>very<sp/>generous.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">The<sp/>same<sp/>workspace<sp/>is<sp/>used<sp/>during<sp/>the<sp/>second,<sp/>actual<sp/>compile<sp/>phase<sp/>for</highlight></codeline>
<codeline lineno="86"><highlight class="comment">remembering<sp/>forward<sp/>references<sp/>to<sp/>groups<sp/>so<sp/>that<sp/>they<sp/>can<sp/>be<sp/>filled<sp/>in<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="87"><highlight class="comment">end.<sp/>Each<sp/>entry<sp/>in<sp/>this<sp/>list<sp/>occupies<sp/>LINK_SIZE<sp/>bytes,<sp/>so<sp/>even<sp/>when<sp/>LINK_SIZE</highlight></codeline>
<codeline lineno="88"><highlight class="comment">is<sp/>4<sp/>there<sp/>is<sp/>plenty<sp/>of<sp/>room.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPILE_WORK_SIZE<sp/>(4096)</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Table<sp/>for<sp/>handling<sp/>escaped<sp/>characters<sp/>in<sp/>the<sp/>range<sp/>&apos;0&apos;-&apos;z&apos;.<sp/>Positive<sp/>returns</highlight></codeline>
<codeline lineno="94"><highlight class="comment">are<sp/>simple<sp/>data<sp/>values;<sp/>negative<sp/>values<sp/>are<sp/>for<sp/>special<sp/>things<sp/>like<sp/>\d<sp/>and<sp/>so</highlight></codeline>
<codeline lineno="95"><highlight class="comment">on.<sp/>Zero<sp/>means<sp/>further<sp/>processing<sp/>is<sp/>needed<sp/>(for<sp/>things<sp/>like<sp/>\x),<sp/>or<sp/>the<sp/>escape</highlight></codeline>
<codeline lineno="96"><highlight class="comment">is<sp/>invalid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>&quot;normal&quot;<sp/>table<sp/>for<sp/>ASCII<sp/>systems<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>escapes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>-<sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>-<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1434d7ebfcdba39d06d0b6cb0cf664d1" kindref="member">ESC_A</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a7f479d6e79cdf57b82a506a277907132" kindref="member">ESC_B</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a6331d1a197ba5296c60dd01728cc049d" kindref="member">ESC_C</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af04e9d033be103b364dad4a005b7b5d2" kindref="member">ESC_E</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04aa7a767d6163e18b9b2ce8c2a78f885b0" kindref="member">ESC_G</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@<sp/>-<sp/>G<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a9c4c7a1bd134dd24b8ef141815066b5a" kindref="member">ESC_K</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>H<sp/>-<sp/>O<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1c0b42b78dfc33f0f79a2a477ff60360" kindref="member">ESC_Q</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a25efd85a43d2bedd76e632e5bd45c681" kindref="member">ESC_R</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>P<sp/>-<sp/>W<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a01c38ed66d58a64e110e4bdc8a8d7628" kindref="member">ESC_Z</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X<sp/>-<sp/>_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;`&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>,<sp/><sp/><ref refid="pcre__internal_8h_1a05a66cf9806c1e659f8ba4363b35a6b0" kindref="member">ESC_e</ref>,<sp/><sp/><ref refid="pcre__internal_8h_1a72d3d175349da5df74b24b484437be03" kindref="member">ESC_f</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>`<sp/>-<sp/>g<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a04258325836a53e4968cb8428400d699" kindref="member">ESC_k</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="pcre__internal_8h_1a2f484b058c9ab98de78dbb1929689a8a" kindref="member">ESC_n</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>h<sp/>-<sp/>o<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="pcre__internal_8h_1a913b9c2f9aad72c48e31d052ab5268a6" kindref="member">ESC_r</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref>,<sp/><sp/><ref refid="pcre__internal_8h_1a3a1ae80c544188179241e2e3ad4d3bbf" kindref="member">ESC_tee</ref>,<sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>p<sp/>-<sp/>w<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af9d13cdc08dd62023190214fe08b7faa" kindref="member">ESC_z</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x<sp/>-<sp/>z<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>&quot;abnormal&quot;<sp/>table<sp/>for<sp/>EBCDIC<sp/>systems<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>escapes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>48<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>50<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>58<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>60<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>68<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>70<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>78<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;`&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>80<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>7,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>,<sp/><ref refid="pcre__internal_8h_1a05a66cf9806c1e659f8ba4363b35a6b0" kindref="member">ESC_e</ref>,<sp/><sp/><ref refid="pcre__internal_8h_1a72d3d175349da5df74b24b484437be03" kindref="member">ESC_f</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>88<sp/>*/</highlight><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>90<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a04258325836a53e4968cb8428400d699" kindref="member">ESC_k</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="pcre__internal_8h_1a2f484b058c9ab98de78dbb1929689a8a" kindref="member">ESC_n</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>98<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="pcre__internal_8h_1a913b9c2f9aad72c48e31d052ab5268a6" kindref="member">ESC_r</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>A0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref>,<sp/><ref refid="pcre__internal_8h_1a3a1ae80c544188179241e2e3ad4d3bbf" kindref="member">ESC_tee</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>A8<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af9d13cdc08dd62023190214fe08b7faa" kindref="member">ESC_z</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>B0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>B8<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>C0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1434d7ebfcdba39d06d0b6cb0cf664d1" kindref="member">ESC_A</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a7f479d6e79cdf57b82a506a277907132" kindref="member">ESC_B</ref>,<sp/><sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a6331d1a197ba5296c60dd01728cc049d" kindref="member">ESC_C</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref>,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af04e9d033be103b364dad4a005b7b5d2" kindref="member">ESC_E</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04aa7a767d6163e18b9b2ce8c2a78f885b0" kindref="member">ESC_G</ref>,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>C8<sp/>*/</highlight><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref>,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>D0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a9c4c7a1bd134dd24b8ef141815066b5a" kindref="member">ESC_K</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>D8<sp/>*/</highlight><highlight class="normal">-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1c0b42b78dfc33f0f79a2a477ff60360" kindref="member">ESC_Q</ref>,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a25efd85a43d2bedd76e632e5bd45c681" kindref="member">ESC_R</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>E0<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref>,<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>E8<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a01c38ed66d58a64e110e4bdc8a8d7628" kindref="member">ESC_Z</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>F0<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>F8<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Table<sp/>of<sp/>special<sp/>&quot;verbs&quot;<sp/>like<sp/>(*PRUNE).<sp/>This<sp/>is<sp/>a<sp/>short<sp/>table,<sp/>so<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="142"><highlight class="comment">searched<sp/>linearly.<sp/>Put<sp/>all<sp/>the<sp/>names<sp/>into<sp/>a<sp/>single<sp/>string,<sp/>in<sp/>order<sp/>to<sp/>reduce</highlight></codeline>
<codeline lineno="143"><highlight class="comment">the<sp/>number<sp/>of<sp/>relocations<sp/>when<sp/>a<sp/>shared<sp/>library<sp/>is<sp/>dynamically<sp/>linked.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structverbitem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structverbitem" kindref="compound">verbitem</ref><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structverbitem_1a994a1be4cb5b66cb2041ffe76476ce0b" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structverbitem_1a15cb4ddbd5304975ec67a2e50415e5d9" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/><ref refid="pcre__compile_8c_1a13cd3e999fdd31a4bdac5da1e0b7c11c" kindref="member">verbitem</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>verbnames[]<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;ACCEPT\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;COMMIT\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;F\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;FAIL\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;PRUNE\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;SKIP\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;THEN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structverbitem" kindref="compound">verbitem</ref><sp/>verbs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>{<sp/>6,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf9d3461927bdf610f76a29a74161897f" kindref="member">OP_ACCEPT</ref><sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{<sp/>6,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cad13ef639ab8fd7faca1c30c88c9e0b0e" kindref="member">OP_COMMIT</ref><sp/>},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{<sp/>1,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref><sp/>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{<sp/>4,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref><sp/>},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{<sp/>5,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab7d74d0787b40b3b3a72f90411d49f8d" kindref="member">OP_PRUNE</ref><sp/>},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{<sp/>4,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa28b93510594f0696c9661dc566670fb" kindref="member">OP_SKIP</ref><sp/><sp/>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{<sp/>4,<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8a901f5480cfae89918baa9225955b0a" kindref="member">OP_THEN</ref><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbcount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(verbs)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structverbitem" kindref="compound">verbitem</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Tables<sp/>of<sp/>names<sp/>of<sp/>POSIX<sp/>character<sp/>classes<sp/>and<sp/>their<sp/>lengths.<sp/>The<sp/>names<sp/>are</highlight></codeline>
<codeline lineno="173"><highlight class="comment">now<sp/>all<sp/>in<sp/>a<sp/>single<sp/>string,<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>relocations<sp/>when<sp/>a<sp/>shared</highlight></codeline>
<codeline lineno="174"><highlight class="comment">library<sp/>is<sp/>dynamically<sp/>loaded.<sp/>The<sp/>list<sp/>of<sp/>lengths<sp/>is<sp/>terminated<sp/>by<sp/>a<sp/>zero</highlight></codeline>
<codeline lineno="175"><highlight class="comment">length<sp/>entry.<sp/>The<sp/>first<sp/>three<sp/>must<sp/>be<sp/>alpha,<sp/>lower,<sp/>upper,<sp/>as<sp/>this<sp/>is<sp/>assumed</highlight></codeline>
<codeline lineno="176"><highlight class="comment">for<sp/>handling<sp/>case<sp/>independence.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>posix_names[]<sp/>=</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;alpha\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;lower\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;upper\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;alnum\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;ascii\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;blank\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;cntrl\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;digit\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;graph\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;print\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;punct\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;space\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;word\0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xdigit&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>posix_name_lengths[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>5,<sp/>4,<sp/>6,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Table<sp/>of<sp/>class<sp/>bit<sp/>maps<sp/>for<sp/>each<sp/>POSIX<sp/>class.<sp/>Each<sp/>class<sp/>is<sp/>formed<sp/>from<sp/>a</highlight></codeline>
<codeline lineno="187"><highlight class="comment">base<sp/>map,<sp/>with<sp/>an<sp/>optional<sp/>addition<sp/>or<sp/>removal<sp/>of<sp/>another<sp/>map.<sp/>Then,<sp/>for<sp/>some</highlight></codeline>
<codeline lineno="188"><highlight class="comment">classes,<sp/>there<sp/>is<sp/>some<sp/>additional<sp/>tweaking:<sp/>for<sp/>[:blank:]<sp/>the<sp/>vertical<sp/>space</highlight></codeline>
<codeline lineno="189"><highlight class="comment">characters<sp/>are<sp/>removed,<sp/>and<sp/>for<sp/>[:alpha:]<sp/>and<sp/>[:alnum:]<sp/>the<sp/>underscore</highlight></codeline>
<codeline lineno="190"><highlight class="comment">character<sp/>is<sp/>removed.<sp/>The<sp/>triples<sp/>in<sp/>the<sp/>table<sp/>consist<sp/>of<sp/>the<sp/>base<sp/>map<sp/>offset,</highlight></codeline>
<codeline lineno="191"><highlight class="comment">second<sp/>map<sp/>offset<sp/>or<sp/>-1<sp/>if<sp/>no<sp/>second<sp/>map,<sp/>and<sp/>a<sp/>non-negative<sp/>value<sp/>for<sp/>map</highlight></codeline>
<codeline lineno="192"><highlight class="comment">addition<sp/>or<sp/>a<sp/>negative<sp/>value<sp/>for<sp/>map<sp/>subtraction<sp/>(if<sp/>there<sp/>are<sp/>two<sp/>maps).<sp/>The</highlight></codeline>
<codeline lineno="193"><highlight class="comment">absolute<sp/>value<sp/>of<sp/>the<sp/>third<sp/>field<sp/>has<sp/>these<sp/>meanings:<sp/>0<sp/>=&gt;<sp/>no<sp/>tweaking,<sp/>1<sp/>=&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment">remove<sp/>vertical<sp/>space<sp/>characters,<sp/>2<sp/>=&gt;<sp/>remove<sp/>underscore.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posix_class_maps[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>,<sp/><sp/><ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>,<sp/>-2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alpha<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a59f70a6ab2726c7cefe65d09918427e6" kindref="member">cbit_lower</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lower<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ac1f4d1cc73f839880a87f93c4ac5fde0" kindref="member">cbit_upper</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>upper<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>,<sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alnum<sp/>-<sp/>word<sp/>without<sp/>underscore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1aeba4f3faf9967c0d5a182a3a526036c9" kindref="member">cbit_print</ref>,<sp/><ref refid="pcre__internal_8h_1a5bcd2cd4ec962e8dc973a627abdd634a" kindref="member">cbit_cntrl</ref>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ascii<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blank<sp/>-<sp/>a<sp/>GNU<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a5bcd2cd4ec962e8dc973a627abdd634a" kindref="member">cbit_cntrl</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cntrl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>digit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1af5641612b9cd173a5f9d4c03df44a62d" kindref="member">cbit_graph</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1aeba4f3faf9967c0d5a182a3a526036c9" kindref="member">cbit_print</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a2c877ee4100da3f593c190c60dfa2a44" kindref="member">cbit_punct</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>punct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>,<sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>,<sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>-<sp/>a<sp/>Perl<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ab33f4ee0d0dad2e338bdc0a629a38e38" kindref="member">cbit_xdigit</ref>,-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xdigit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING(a)<sp/><sp/>#<sp/>a</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XSTRING(s)<sp/>STRING(s)</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>texts<sp/>of<sp/>compile-time<sp/>error<sp/>messages.<sp/>These<sp/>are<sp/>&quot;char<sp/>*&quot;<sp/>because<sp/>they</highlight></codeline>
<codeline lineno="218"><highlight class="comment">are<sp/>passed<sp/>to<sp/>the<sp/>outside<sp/>world.<sp/>Do<sp/>not<sp/>ever<sp/>re-use<sp/>any<sp/>error<sp/>number,<sp/>because</highlight></codeline>
<codeline lineno="219"><highlight class="comment">they<sp/>are<sp/>documented.<sp/>Always<sp/>add<sp/>a<sp/>new<sp/>error<sp/>instead.<sp/>Messages<sp/>marked<sp/>DEAD<sp/>below</highlight></codeline>
<codeline lineno="220"><highlight class="comment">are<sp/>no<sp/>longer<sp/>used.<sp/>This<sp/>used<sp/>to<sp/>be<sp/>a<sp/>table<sp/>of<sp/>strings,<sp/>but<sp/>in<sp/>order<sp/>to<sp/>reduce</highlight></codeline>
<codeline lineno="221"><highlight class="comment">the<sp/>number<sp/>of<sp/>relocations<sp/>needed<sp/>when<sp/>a<sp/>shared<sp/>library<sp/>is<sp/>loaded<sp/>dynamically,</highlight></codeline>
<codeline lineno="222"><highlight class="comment">it<sp/>is<sp/>now<sp/>one<sp/>long<sp/>string.<sp/>We<sp/>cannot<sp/>use<sp/>a<sp/>table<sp/>of<sp/>offsets,<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="223"><highlight class="comment">lengths<sp/>of<sp/>inserts<sp/>such<sp/>as<sp/>XSTRING(MAX_NAME_SIZE)<sp/>are<sp/>not<sp/>known.<sp/>Instead,<sp/>we</highlight></codeline>
<codeline lineno="224"><highlight class="comment">simply<sp/>count<sp/>through<sp/>to<sp/>the<sp/>one<sp/>we<sp/>want<sp/>-<sp/>this<sp/>isn&apos;t<sp/>a<sp/>performance<sp/>issue</highlight></codeline>
<codeline lineno="225"><highlight class="comment">because<sp/>these<sp/>strings<sp/>are<sp/>used<sp/>only<sp/>when<sp/>there<sp/>is<sp/>a<sp/>compilation<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error_texts[]<sp/>=</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;no<sp/>error\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\<sp/>at<sp/>end<sp/>of<sp/>pattern\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\c<sp/>at<sp/>end<sp/>of<sp/>pattern\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unrecognized<sp/>character<sp/>follows<sp/>\\\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;numbers<sp/>out<sp/>of<sp/>order<sp/>in<sp/>{}<sp/>quantifier\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;number<sp/>too<sp/>big<sp/>in<sp/>{}<sp/>quantifier\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>terminating<sp/>]<sp/>for<sp/>character<sp/>class\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>escape<sp/>sequence<sp/>in<sp/>character<sp/>class\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;range<sp/>out<sp/>of<sp/>order<sp/>in<sp/>character<sp/>class\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;nothing<sp/>to<sp/>repeat\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;operand<sp/>of<sp/>unlimited<sp/>repeat<sp/>could<sp/>match<sp/>the<sp/>empty<sp/>string\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>unexpected<sp/>repeat\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unrecognized<sp/>character<sp/>after<sp/>(?<sp/>or<sp/>(?-\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;POSIX<sp/>named<sp/>classes<sp/>are<sp/>supported<sp/>only<sp/>within<sp/>a<sp/>class\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;reference<sp/>to<sp/>non-existent<sp/>subpattern\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;erroffset<sp/>passed<sp/>as<sp/>NULL\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>option<sp/>bit(s)<sp/>set\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>)<sp/>after<sp/>comment\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;parentheses<sp/>nested<sp/>too<sp/>deeply\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;regular<sp/>expression<sp/>is<sp/>too<sp/>large\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>get<sp/>memory\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unmatched<sp/>parentheses\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>code<sp/>overflow\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unrecognized<sp/>character<sp/>after<sp/>(?&lt;\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>25<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;lookbehind<sp/>assertion<sp/>is<sp/>not<sp/>fixed<sp/>length\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;malformed<sp/>number<sp/>or<sp/>name<sp/>after<sp/>(?(\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;conditional<sp/>group<sp/>contains<sp/>more<sp/>than<sp/>two<sp/>branches\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;assertion<sp/>expected<sp/>after<sp/>(?(\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;(?R<sp/>or<sp/>(?[+-]digits<sp/>must<sp/>be<sp/>followed<sp/>by<sp/>)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>30<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>POSIX<sp/>class<sp/>name\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;POSIX<sp/>collating<sp/>elements<sp/>are<sp/>not<sp/>supported\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;this<sp/>version<sp/>of<sp/>PCRE<sp/>is<sp/>not<sp/>compiled<sp/>with<sp/>PCRE_UTF8<sp/>support\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;spare<sp/>error\0&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;character<sp/>value<sp/>in<sp/>\\x{...}<sp/>sequence<sp/>is<sp/>too<sp/>large\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>35<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>condition<sp/>(?(0)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\C<sp/>not<sp/>allowed<sp/>in<sp/>lookbehind<sp/>assertion\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;PCRE<sp/>does<sp/>not<sp/>support<sp/>\\L,<sp/>\\l,<sp/>\\N,<sp/>\\U,<sp/>or<sp/>\\u\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;number<sp/>after<sp/>(?C<sp/>is<sp/>&gt;<sp/>255\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;closing<sp/>)<sp/>for<sp/>(?C<sp/>expected\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>40<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;recursive<sp/>call<sp/>could<sp/>loop<sp/>indefinitely\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unrecognized<sp/>character<sp/>after<sp/>(?P\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;syntax<sp/>error<sp/>in<sp/>subpattern<sp/>name<sp/>(missing<sp/>terminator)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;two<sp/>named<sp/>subpatterns<sp/>have<sp/>the<sp/>same<sp/>name\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>UTF-8<sp/>string\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>45<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;support<sp/>for<sp/>\\P,<sp/>\\p,<sp/>and<sp/>\\X<sp/>has<sp/>not<sp/>been<sp/>compiled\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;malformed<sp/>\\P<sp/>or<sp/>\\p<sp/>sequence\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>property<sp/>name<sp/>after<sp/>\\P<sp/>or<sp/>\\p\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;subpattern<sp/>name<sp/>is<sp/>too<sp/>long<sp/>(maximum<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="pcre__compile_8c_1aca706bf8dd2234d7d20c5284a653d73b" kindref="member">XSTRING</ref>(<ref refid="pcre__config_8h_1abdc276a3da6aba2279ae3e4a69731d9f" kindref="member">MAX_NAME_SIZE</ref>)<sp/></highlight><highlight class="stringliteral">&quot;<sp/>characters)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>named<sp/>subpatterns<sp/>(maximum<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="pcre__compile_8c_1aca706bf8dd2234d7d20c5284a653d73b" kindref="member">XSTRING</ref>(<ref refid="pcre__config_8h_1a4da103fc095c7035a46d6f5c4324b89f" kindref="member">MAX_NAME_COUNT</ref>)<sp/></highlight><highlight class="stringliteral">&quot;)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>50<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;repeated<sp/>subpattern<sp/>is<sp/>too<sp/>long\0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;octal<sp/>value<sp/>is<sp/>greater<sp/>than<sp/>\\377<sp/>(not<sp/>in<sp/>UTF-8<sp/>mode)\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>overran<sp/>compiling<sp/>workspace\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>previously-checked<sp/>referenced<sp/>subpattern<sp/>not<sp/>found\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;DEFINE<sp/>group<sp/>contains<sp/>more<sp/>than<sp/>one<sp/>branch\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>55<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;repeating<sp/>a<sp/>DEFINE<sp/>group<sp/>is<sp/>not<sp/>allowed\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;inconsistent<sp/>NEWLINE<sp/>options\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;\\g<sp/>is<sp/>not<sp/>followed<sp/>by<sp/>a<sp/>braced,<sp/>angle-bracketed,<sp/>or<sp/>quoted<sp/>name/number<sp/>or<sp/>by<sp/>a<sp/>plain<sp/>number\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>numbered<sp/>reference<sp/>must<sp/>not<sp/>be<sp/>zero\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;(*VERB)<sp/>with<sp/>an<sp/>argument<sp/>is<sp/>not<sp/>supported\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>60<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;(*VERB)<sp/>not<sp/>recognized\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;number<sp/>is<sp/>too<sp/>big\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;subpattern<sp/>name<sp/>expected\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;digit<sp/>expected<sp/>after<sp/>(?+\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;]<sp/>is<sp/>an<sp/>invalid<sp/>data<sp/>character<sp/>in<sp/>JavaScript<sp/>compatibility<sp/>mode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Table<sp/>to<sp/>identify<sp/>digits<sp/>and<sp/>hex<sp/>digits.<sp/>This<sp/>is<sp/>used<sp/>when<sp/>compiling</highlight></codeline>
<codeline lineno="308"><highlight class="comment">patterns.<sp/>Note<sp/>that<sp/>the<sp/>tables<sp/>in<sp/>chartables<sp/>are<sp/>dependent<sp/>on<sp/>the<sp/>locale,<sp/>and</highlight></codeline>
<codeline lineno="309"><highlight class="comment">may<sp/>mark<sp/>arbitrary<sp/>characters<sp/>as<sp/>digits<sp/>-<sp/>but<sp/>the<sp/>PCRE<sp/>compiling<sp/>code<sp/>expects</highlight></codeline>
<codeline lineno="310"><highlight class="comment">to<sp/>handle<sp/>only<sp/>0-9,<sp/>a-z,<sp/>and<sp/>A-Z<sp/>as<sp/>digits<sp/>when<sp/>compiling.<sp/>That<sp/>is<sp/>why<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="311"><highlight class="comment">a<sp/>private<sp/>table<sp/>here.<sp/>It<sp/>costs<sp/>256<sp/>bytes,<sp/>but<sp/>it<sp/>is<sp/>a<sp/>lot<sp/>faster<sp/>than<sp/>doing</highlight></codeline>
<codeline lineno="312"><highlight class="comment">character<sp/>value<sp/>tests<sp/>(at<sp/>least<sp/>in<sp/>some<sp/>simple<sp/>cases<sp/>I<sp/>timed),<sp/>and<sp/>in<sp/>some</highlight></codeline>
<codeline lineno="313"><highlight class="comment">applications<sp/>one<sp/>wants<sp/>PCRE<sp/>to<sp/>compile<sp/>efficiently<sp/>as<sp/>well<sp/>as<sp/>match</highlight></codeline>
<codeline lineno="314"><highlight class="comment">efficiently.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment">For<sp/>convenience,<sp/>we<sp/>use<sp/>the<sp/>same<sp/>bit<sp/>definitions<sp/>as<sp/>in<sp/>chartables:</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/>0x04<sp/><sp/><sp/>decimal<sp/>digit</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/>0x08<sp/><sp/><sp/>hexadecimal<sp/>digit</highlight></codeline>
<codeline lineno="320"><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">Then<sp/>we<sp/>can<sp/>use<sp/>ctype_digit<sp/>and<sp/>ctype_xdigit<sp/>in<sp/>the<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>&quot;normal&quot;<sp/>case,<sp/>for<sp/>ASCII<sp/>systems<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digitab[]<sp/>=</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>0-<sp/><sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>8-<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>16-<sp/>23<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>24-<sp/>31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>-<sp/>&apos;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>(<sp/>-<sp/>/<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,<sp/></highlight><highlight class="comment">/*<sp/><sp/>0<sp/>-<sp/>7<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>0x0c,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>8<sp/>-<sp/>?<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>@<sp/>-<sp/>G<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>H<sp/>-<sp/>O<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>P<sp/>-<sp/>W<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>X<sp/>-<sp/>_<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>`<sp/>-<sp/>g<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>h<sp/>-<sp/>o<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>p<sp/>-<sp/>w<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>x<sp/>-127<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>128-135<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>136-143<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>144-151<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>152-159<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>160-167<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>168-175<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>176-183<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>184-191<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>192-199<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>200-207<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>208-215<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>216-223<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>224-231<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>232-239<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>240-247<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};</highlight><highlight class="comment">/*<sp/>248-255<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>&quot;abnormal&quot;<sp/>case,<sp/>for<sp/>EBCDIC<sp/>systems<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digitab[]<sp/>=</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>0-<sp/><sp/>7<sp/><sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>8-<sp/>15<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>16-<sp/>23<sp/>10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>24-<sp/>31<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>32-<sp/>39<sp/>20<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>40-<sp/>47<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>48-<sp/>55<sp/>30<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>56-<sp/>63<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>-<sp/>71<sp/>40<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>72-<sp/>|<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>&amp;<sp/>-<sp/>87<sp/>50<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>88-<sp/>95<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>-<sp/>-103<sp/>60<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>104-<sp/>?<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>112-119<sp/>70<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>120-<sp/>&quot;<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,<sp/></highlight><highlight class="comment">/*<sp/>128-<sp/>g<sp/><sp/>80<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>h<sp/>-143<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>144-<sp/>p<sp/><sp/>90<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>q<sp/>-159<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>160-<sp/>x<sp/><sp/>A0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>y<sp/>-175<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>^<sp/>-183<sp/>B0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>184-191<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>{<sp/>-<sp/>G<sp/><sp/>C0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>H<sp/>-207<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>}<sp/>-<sp/>P<sp/><sp/>D0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>Q<sp/>-223<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>\<sp/>-<sp/>X<sp/><sp/>E0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>Y<sp/>-239<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,<sp/></highlight><highlight class="comment">/*<sp/><sp/>0<sp/>-<sp/>7<sp/><sp/>F0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>0x0c,0x0c,0x00,0x00,0x00,0x00,0x00,0x00};</highlight><highlight class="comment">/*<sp/><sp/>8<sp/>-255<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ebcdic_chartab[]<sp/>=<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>chartable<sp/>partial<sp/>dup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>0x80,0x00,0x00,0x00,0x00,0x01,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>0-<sp/><sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>8-<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>16-<sp/>23<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>24-<sp/>31<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>32-<sp/>39<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>40-<sp/>47<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>48-<sp/>55<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>56-<sp/>63<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>-<sp/>71<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x80,0x00,0x80,0x80,0x80,<sp/></highlight><highlight class="comment">/*<sp/><sp/>72-<sp/>|<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>&amp;<sp/>-<sp/>87<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>88-<sp/>95<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>-<sp/>-103<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x80,<sp/></highlight><highlight class="comment">/*<sp/>104-<sp/>?<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>112-119<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>120-<sp/>&quot;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>0x00,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x12,<sp/></highlight><highlight class="comment">/*<sp/>128-<sp/>g<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>h<sp/>-143<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,<sp/></highlight><highlight class="comment">/*<sp/>144-<sp/>p<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>q<sp/>-159<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>0x00,0x00,0x12,0x12,0x12,0x12,0x12,0x12,<sp/></highlight><highlight class="comment">/*<sp/>160-<sp/>x<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>y<sp/>-175<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>^<sp/>-183<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/>184-191<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>0x80,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x12,<sp/></highlight><highlight class="comment">/*<sp/><sp/>{<sp/>-<sp/>G<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>H<sp/>-207<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>0x00,0x12,0x12,0x12,0x12,0x12,0x12,0x12,<sp/></highlight><highlight class="comment">/*<sp/><sp/>}<sp/>-<sp/>P<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>Q<sp/>-223<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>0x00,0x00,0x12,0x12,0x12,0x12,0x12,0x12,<sp/></highlight><highlight class="comment">/*<sp/><sp/>\<sp/>-<sp/>X<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>0x12,0x12,0x00,0x00,0x00,0x00,0x00,0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/>Y<sp/>-239<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,<sp/></highlight><highlight class="comment">/*<sp/><sp/>0<sp/>-<sp/>7<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>0x1c,0x1c,0x00,0x00,0x00,0x00,0x00,0x00};</highlight><highlight class="comment">/*<sp/><sp/>8<sp/>-255<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Definition<sp/>to<sp/>allow<sp/>mutual<sp/>recursion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>compile_regex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref>,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="structbranch__chain" kindref="compound">branch_chain</ref><sp/>*,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="440"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>an<sp/>error<sp/>text<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="441"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>error<sp/>texts<sp/>are<sp/>now<sp/>all<sp/>in<sp/>one<sp/>long<sp/>string,<sp/>to<sp/>save<sp/>on<sp/>relocations.<sp/>As</highlight></codeline>
<codeline lineno="444"><highlight class="comment">some<sp/>of<sp/>the<sp/>text<sp/>is<sp/>of<sp/>unknown<sp/>length,<sp/>we<sp/>can&apos;t<sp/>use<sp/>a<sp/>table<sp/>of<sp/>offsets.</highlight></codeline>
<codeline lineno="445"><highlight class="comment">Instead,<sp/>just<sp/>count<sp/>through<sp/>the<sp/>strings.<sp/>This<sp/>is<sp/>not<sp/>a<sp/>performance<sp/>issue</highlight></codeline>
<codeline lineno="446"><highlight class="comment">because<sp/>it<sp/>happens<sp/>only<sp/>when<sp/>there<sp/>has<sp/>been<sp/>a<sp/>compilation<sp/>error.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">Argument:<sp/><sp/><sp/>the<sp/>error<sp/>number</highlight></codeline>
<codeline lineno="449"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>error<sp/>string</highlight></codeline>
<codeline lineno="450"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="453"><highlight class="normal">find_error_text(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>error_texts;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>n<sp/>&gt;<sp/>0;<sp/>n--)<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s++<sp/>!=<sp/>0)<sp/>{};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="462"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handle<sp/>escapes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="463"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>a<sp/>\<sp/>has<sp/>been<sp/>encountered.<sp/>It<sp/>either<sp/>returns<sp/>a</highlight></codeline>
<codeline lineno="466"><highlight class="comment">positive<sp/>value<sp/>for<sp/>a<sp/>simple<sp/>escape<sp/>such<sp/>as<sp/>\n,<sp/>or<sp/>a<sp/>negative<sp/>value<sp/>which</highlight></codeline>
<codeline lineno="467"><highlight class="comment">encodes<sp/>one<sp/>of<sp/>the<sp/>more<sp/>complicated<sp/>things<sp/>such<sp/>as<sp/>\d.<sp/>A<sp/>backreference<sp/>to<sp/>group</highlight></codeline>
<codeline lineno="468"><highlight class="comment">n<sp/>is<sp/>returned<sp/>as<sp/>-(ESC_REF<sp/>+<sp/>n);<sp/>ESC_REF<sp/>is<sp/>the<sp/>highest<sp/>ESC_xxx<sp/>macro.<sp/>When</highlight></codeline>
<codeline lineno="469"><highlight class="comment">UTF-8<sp/>is<sp/>enabled,<sp/>a<sp/>positive<sp/>value<sp/>greater<sp/>than<sp/>255<sp/>may<sp/>be<sp/>returned.<sp/>On<sp/>entry,</highlight></codeline>
<codeline lineno="470"><highlight class="comment">ptr<sp/>is<sp/>pointing<sp/>at<sp/>the<sp/>\.<sp/>On<sp/>exit,<sp/>it<sp/>is<sp/>on<sp/>the<sp/>final<sp/>character<sp/>of<sp/>the<sp/>escape</highlight></codeline>
<codeline lineno="471"><highlight class="comment">sequence.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"></highlight></codeline>
<codeline lineno="473"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/>ptrptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>pattern<sp/>position<sp/>pointer</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>errorcode<sp/>variable</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/>bracount<sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>previous<sp/>extracting<sp/>brackets</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>options<sp/>bits</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/>isclass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>inside<sp/>a<sp/>character<sp/>class</highlight></codeline>
<codeline lineno="479"><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero<sp/>or<sp/>positive<sp/>=&gt;<sp/>a<sp/>data<sp/>character</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negative<sp/>=&gt;<sp/>a<sp/>special<sp/>escape<sp/>sequence</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>error,<sp/>errorcodeptr<sp/>is<sp/>set</highlight></codeline>
<codeline lineno="483"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">check_escape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**ptrptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bracount,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>isclass)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8<sp/>=<sp/>(options<sp/>&amp;<sp/><ref refid="pcre_8h_1a177ec66f9b06aab7b37965b77b2cf1b8" kindref="member">PCRE_UTF8</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr<sp/>=<sp/>*ptrptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>i;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="pcre__internal_8h_1ac2ca46687f28438c1a2c62f4e8fd3312" kindref="member">GETCHARINCTEST</ref>(c,<sp/>ptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>character<sp/>value,<sp/>increment<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">ptr--;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>pointer<sp/>back<sp/>to<sp/>the<sp/>last<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>backslash<sp/>is<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>pattern,<sp/>it&apos;s<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)<sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea78872e320a40a52cccabc0b5b392e6f6" kindref="member">ERR1</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Non-alphanumerics<sp/>are<sp/>literals.<sp/>For<sp/>digits<sp/>or<sp/>letters,<sp/>do<sp/>an<sp/>initial<sp/>lookup</highlight></codeline>
<codeline lineno="501"><highlight class="comment">in<sp/>a<sp/>table.<sp/>A<sp/>non-zero<sp/>result<sp/>is<sp/>something<sp/>that<sp/>can<sp/>be<sp/>returned<sp/>immediately.</highlight></codeline>
<codeline lineno="502"><highlight class="comment">Otherwise<sp/>further<sp/>processing<sp/>may<sp/>be<sp/>required.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>&apos;0&apos;<sp/>||<sp/>c<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>alphanumeric<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>escapes[c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">])<sp/>!=<sp/>0)<sp/>c<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EBCDIC<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>||<sp/>(ebcdic_chartab[c]<sp/>&amp;<sp/>0x0E)<sp/>==<sp/>0)<sp/>{}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>alphanumeric<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>escapes[c<sp/>-<sp/>0x48])<sp/>!=<sp/>0)<sp/><sp/>c<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Escapes<sp/>that<sp/>need<sp/>further<sp/>processing,<sp/>or<sp/>are<sp/>illegal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*oldptr;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>braced,<sp/>negated;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>number<sp/>of<sp/>Perl<sp/>escapes<sp/>are<sp/>not<sp/>handled<sp/>by<sp/>PCRE.<sp/>We<sp/>give<sp/>an<sp/>explicit</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea829347d12700e8cec28b2948d216b61d" kindref="member">ERR37</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\g<sp/>must<sp/>be<sp/>followed<sp/>by<sp/>one<sp/>of<sp/>a<sp/>number<sp/>of<sp/>specific<sp/>things:</highlight></codeline>
<codeline lineno="534"><highlight class="comment"></highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>A<sp/>number,<sp/>either<sp/>plain<sp/>or<sp/>braced.<sp/>If<sp/>positive,<sp/>it<sp/>is<sp/>an<sp/>absolute</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/>backreference.<sp/>If<sp/>negative,<sp/>it<sp/>is<sp/>a<sp/>relative<sp/>backreference.<sp/>This<sp/>is<sp/>a<sp/>Perl</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/>5.10<sp/>feature.</highlight></codeline>
<codeline lineno="538"><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>Perl<sp/>5.10<sp/>also<sp/>supports<sp/>\g{name}<sp/>as<sp/>a<sp/>reference<sp/>to<sp/>a<sp/>named<sp/>group.<sp/>This</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>part<sp/>of<sp/>Perl&apos;s<sp/>movement<sp/>towards<sp/>a<sp/>unified<sp/>syntax<sp/>for<sp/>back<sp/>references.<sp/>As</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>is<sp/>synonymous<sp/>with<sp/>\k{name},<sp/>we<sp/>fudge<sp/>it<sp/>up<sp/>by<sp/>pretending<sp/>it<sp/>really</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/>was<sp/>\k.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/>(3)<sp/>For<sp/>Oniguruma<sp/>compatibility<sp/>we<sp/>also<sp/>support<sp/>\g<sp/>followed<sp/>by<sp/>a<sp/>name<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/>number<sp/>either<sp/>in<sp/>angle<sp/>brackets<sp/>or<sp/>in<sp/>single<sp/>quotes.<sp/>However,<sp/>these<sp/>are</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>(possibly<sp/>recursive)<sp/>subroutine<sp/>calls,<sp/>_not_<sp/>backreferences.<sp/>Just<sp/>return</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>-ESC_g<sp/>code<sp/>(cf<sp/>\k).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a705c8352d89965878a581d16772ad306" kindref="member">ESC_g</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>the<sp/>Perl-compatible<sp/>cases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*p;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ptr+2;<sp/>*p<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;<sp/>p++)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(digitab[*p]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a04258325836a53e4968cb8428400d699" kindref="member">ESC_k</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>braced<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>braced<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>negated<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>negated<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[ptr[1]]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>*<sp/>10<sp/>+<sp/>*(++ptr)<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Integer<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead833f1ecb8691a436aec691249d84ef2" kindref="member">ERR61</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(braced<sp/>&amp;&amp;<sp/>*(++ptr)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead42acbf3dcfe3fa994de8a64a404528b" kindref="member">ERR57</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eae19253a5c8d401311c853f7ed4d40b43" kindref="member">ERR58</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negated)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>bracount)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>bracount<sp/>-<sp/>(c<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-(<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a858962ab240b31fe71c9cac16c7c4515" kindref="member">ESC_REF</ref><sp/>+<sp/>c);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>handling<sp/>of<sp/>escape<sp/>sequences<sp/>consisting<sp/>of<sp/>a<sp/>string<sp/>of<sp/>digits</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/>starting<sp/>with<sp/>one<sp/>that<sp/>is<sp/>not<sp/>zero<sp/>is<sp/>not<sp/>straightforward.<sp/>By<sp/>experiment,</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>way<sp/>Perl<sp/>works<sp/>seems<sp/>to<sp/>be<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="618"><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/>Outside<sp/>a<sp/>character<sp/>class,<sp/>the<sp/>digits<sp/>are<sp/>read<sp/>as<sp/>a<sp/>decimal<sp/>number.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/>number<sp/>is<sp/>less<sp/>than<sp/>10,<sp/>or<sp/>if<sp/>there<sp/>are<sp/>that<sp/>many<sp/>previous<sp/>extracting</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/>left<sp/>brackets,<sp/>then<sp/>it<sp/>is<sp/>a<sp/>back<sp/>reference.<sp/>Otherwise,<sp/>up<sp/>to<sp/>three<sp/>octal</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>digits<sp/>are<sp/>read<sp/>to<sp/>form<sp/>an<sp/>escaped<sp/>byte.<sp/>Thus<sp/>\123<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>octal</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>123<sp/>(cf<sp/>\0123,<sp/>which<sp/>is<sp/>octal<sp/>012<sp/>followed<sp/>by<sp/>the<sp/>literal<sp/>3).<sp/>If<sp/>the<sp/>octal</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/>value<sp/>is<sp/>greater<sp/>than<sp/>377,<sp/>the<sp/>least<sp/>significant<sp/>8<sp/>bits<sp/>are<sp/>taken.<sp/>Inside<sp/>a</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/>character<sp/>class,<sp/>\<sp/>followed<sp/>by<sp/>a<sp/>digit<sp/>is<sp/>always<sp/>an<sp/>octal<sp/>number.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isclass)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>-=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[ptr[1]]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>*<sp/>10<sp/>+<sp/>*(++ptr)<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Integer<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead833f1ecb8691a436aec691249d84ef2" kindref="member">ERR61</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>10<sp/>||<sp/>c<sp/>&lt;=<sp/>bracount)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-(<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a858962ab240b31fe71c9cac16c7c4515" kindref="member">ESC_REF</ref><sp/>+<sp/>c);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>oldptr;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>pointer<sp/>back<sp/>and<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>an<sp/>octal<sp/>number<sp/>following<sp/>\.<sp/>If<sp/>the<sp/>first<sp/>digit<sp/>is<sp/>8<sp/>or<sp/>9,<sp/>Perl</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>generates<sp/>a<sp/>binary<sp/>zero<sp/>byte<sp/>and<sp/>treats<sp/>the<sp/>digit<sp/>as<sp/>a<sp/>following<sp/>literal.</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>Thus<sp/>we<sp/>have<sp/>to<sp/>pull<sp/>back<sp/>the<sp/>pointer<sp/>by<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*ptr)<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr--;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\0<sp/>always<sp/>starts<sp/>an<sp/>octal<sp/>number,<sp/>but<sp/>we<sp/>may<sp/>drop<sp/>through<sp/>to<sp/>here<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/>larger<sp/>first<sp/>octal<sp/>digit.<sp/>The<sp/>original<sp/>code<sp/>used<sp/>just<sp/>to<sp/>take<sp/>the<sp/>least</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/>significant<sp/>8<sp/>bits<sp/>of<sp/>octal<sp/>numbers<sp/>(I<sp/>think<sp/>this<sp/>is<sp/>what<sp/>early<sp/>Perls<sp/>used</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>do).<sp/>Nowadays<sp/>we<sp/>allow<sp/>for<sp/>larger<sp/>numbers<sp/>in<sp/>UTF-8<sp/>mode,<sp/>but<sp/>no<sp/>more</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/>than<sp/>3<sp/>octal<sp/>digits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>-=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i++<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>ptr[1]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>*<sp/>8<sp/>+<sp/>*(++ptr)<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;<sp/>255)<sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea3c25c921e6e98675022207a3686d6acd" kindref="member">ERR51</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\x<sp/>is<sp/>complicated.<sp/>\x{ddd}<sp/>is<sp/>a<sp/>character<sp/>number<sp/>which<sp/>can<sp/>be<sp/>greater</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/>than<sp/>0xff<sp/>in<sp/>utf8<sp/>mode,<sp/>but<sp/>only<sp/>if<sp/>the<sp/>ddd<sp/>are<sp/>hex<sp/>digits.<sp/>If<sp/>not,<sp/>{<sp/>is</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/>treated<sp/>as<sp/>a<sp/>data<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*pt<sp/>=<sp/>ptr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*pt]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3664754fb10bf65932bf8f0c8ed543ce" kindref="member">ctype_xdigit</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>*pt++;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cc<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Leading<sp/>zeroes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>cc<sp/>-=<sp/>32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>upper<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(c<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>cc<sp/>-<sp/>((cc<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EBCDIC<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cc<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>cc<sp/>+=<sp/>64;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>upper<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(c<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>cc<sp/>-<sp/>((cc<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pt<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0<sp/>||<sp/>count<sp/>&gt;<sp/>(utf8?<sp/>8<sp/>:<sp/>2))<sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea3949935e19a4c518d123f710a982d854" kindref="member">ERR34</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>pt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>sequence<sp/>of<sp/>hex<sp/>digits<sp/>does<sp/>not<sp/>end<sp/>with<sp/>&apos;}&apos;,<sp/>then<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>recognize<sp/>this<sp/>construct;<sp/>fall<sp/>through<sp/>to<sp/>the<sp/>normal<sp/>\x<sp/>handling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>just<sp/>a<sp/>single-byte<sp/>hex-defined<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i++<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>(digitab[ptr[1]]<sp/>&amp;<sp/>ctype_xdigit)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>compilers<sp/>don&apos;t<sp/>like<sp/>++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>*(++ptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>initializers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>cc<sp/>-=<sp/>32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>upper<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>*<sp/>16<sp/>+<sp/>cc<sp/>-<sp/>((cc<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EBCDIC<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="721"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>cc<sp/>+=<sp/>64;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>upper<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>*<sp/>16<sp/>+<sp/>cc<sp/>-<sp/>((cc<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>\c,<sp/>a<sp/>following<sp/>letter<sp/>is<sp/>upper-cased;<sp/>then<sp/>the<sp/>0x40<sp/>bit<sp/>is<sp/>flipped.</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>coding<sp/>is<sp/>ASCII-specific,<sp/>but<sp/>then<sp/>the<sp/>whole<sp/>concept<sp/>of<sp/>\cx<sp/>is</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/><sp/>ASCII-specific.<sp/>(However,<sp/>an<sp/>EBCDIC<sp/>equivalent<sp/>has<sp/>now<sp/>been<sp/>added.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaceb8c2e6386733c07b9e5e4a7c881897" kindref="member">ERR2</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EBCDIC<sp/><sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>c<sp/>-=<sp/>32;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>^=<sp/>0x40;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EBCDIC<sp/>coding<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="743"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>c<sp/>+=<sp/>64;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>^=<sp/>0xC0;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="746"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCRE_EXTRA<sp/>enables<sp/>extensions<sp/>to<sp/>Perl<sp/>in<sp/>the<sp/>matter<sp/>of<sp/>escapes.<sp/>Any</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/>other<sp/>alphanumeric<sp/>following<sp/>\<sp/>is<sp/>an<sp/>error<sp/>if<sp/>PCRE_EXTRA<sp/>was<sp/>set;</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/>otherwise,<sp/>for<sp/>Perl<sp/>compatibility,<sp/>it<sp/>is<sp/>a<sp/>literal.<sp/>This<sp/>code<sp/>looks<sp/>a<sp/>bit</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/>odd,<sp/>but<sp/>there<sp/>used<sp/>to<sp/>be<sp/>some<sp/>cases<sp/>other<sp/>than<sp/>the<sp/>default,<sp/>and<sp/>there<sp/>may</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>again<sp/>in<sp/>future,<sp/>so<sp/>I<sp/>haven&apos;t<sp/>&quot;optimized&quot;<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1ae356b5a19de6096863c0b9e39e74b92b" kindref="member">PCRE_EXTRA</ref>)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea0b33b66e9da176737d00405189208fd5" kindref="member">ERR3</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal">*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="773"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handle<sp/>\P<sp/>and<sp/>\p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="774"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>after<sp/>\P<sp/>or<sp/>\p<sp/>has<sp/>been<sp/>encountered,<sp/>provided<sp/>that</highlight></codeline>
<codeline lineno="777"><highlight class="comment">PCRE<sp/>is<sp/>compiled<sp/>with<sp/>support<sp/>for<sp/>Unicode<sp/>properties.<sp/>On<sp/>entry,<sp/>ptrptr<sp/>is</highlight></codeline>
<codeline lineno="778"><highlight class="comment">pointing<sp/>at<sp/>the<sp/>P<sp/>or<sp/>p.<sp/>On<sp/>exit,<sp/>it<sp/>is<sp/>pointing<sp/>at<sp/>the<sp/>final<sp/>character<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="779"><highlight class="comment">escape<sp/>sequence.</highlight></codeline>
<codeline lineno="780"><highlight class="comment"></highlight></codeline>
<codeline lineno="781"><highlight class="comment">Argument:</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/>ptrptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>pattern<sp/>position<sp/>pointer</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/>negptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>a<sp/>boolean<sp/>that<sp/>is<sp/>set<sp/>TRUE<sp/>for<sp/>negation<sp/>else<sp/>FALSE</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/>dptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>an<sp/>int<sp/>that<sp/>is<sp/>set<sp/>to<sp/>the<sp/>detailed<sp/>property<sp/>value</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>error<sp/>code<sp/>variable</highlight></codeline>
<codeline lineno="786"><highlight class="comment"></highlight></codeline>
<codeline lineno="787"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>value<sp/>from<sp/>ucp_type_table,<sp/>or<sp/>-1<sp/>for<sp/>an<sp/>invalid<sp/>type</highlight></codeline>
<codeline lineno="788"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal">get_ucp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**ptrptr,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>*negptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>i,<sp/>bot,<sp/>top;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr<sp/>=<sp/>*ptrptr;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[32];</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">c<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR_RETURN;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">*negptr<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\P<sp/>or<sp/>\p<sp/>can<sp/>be<sp/>followed<sp/>by<sp/>a<sp/>name<sp/>in<sp/>{},<sp/>optionally<sp/>preceded<sp/>by<sp/>^<sp/>for</highlight></codeline>
<codeline lineno="803"><highlight class="comment">negation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>*negptr<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(name)<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR_RETURN;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>name[i]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR_RETURN;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>name[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>there<sp/>is<sp/>just<sp/>one<sp/>following<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>name[0]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>name[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Search<sp/>for<sp/>a<sp/>recognized<sp/>property<sp/>name<sp/>using<sp/>binary<sp/>chop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">bot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="836"><highlight class="normal">top<sp/>=<sp/><ref refid="pcre__internal_8h_1a72075c0dbd7e2bf8e3ecc22741e6642f" kindref="member">_pcre_utt_size</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bot<sp/>&lt;<sp/>top)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>(bot<sp/>+<sp/>top)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>strcmp(name,<sp/><ref refid="pcre__internal_8h_1a19c3f14c7720a1fb2e21b843c96a6633" kindref="member">_pcre_utt_names</ref><sp/>+<sp/><ref refid="pcre__internal_8h_1a41c5fc249435097be05c9ddc8dc57f17" kindref="member">_pcre_utt</ref>[i].name_offset);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>*dptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a41c5fc249435097be05c9ddc8dc57f17" kindref="member">_pcre_utt</ref>[i].<ref refid="structucp__type__table_1a4adbaf2a4ff811876e537e596ec80dd1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a41c5fc249435097be05c9ddc8dc57f17" kindref="member">_pcre_utt</ref>[i].<ref refid="structucp__type__table_1a50bf031a6568c12e69119f618918eb8f" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>0)<sp/>bot<sp/>=<sp/>i<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal">*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea012cd7d44f1b83340af8668c3aa71c25" kindref="member">ERR47</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal">ERROR_RETURN:</highlight></codeline>
<codeline lineno="855"><highlight class="normal">*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea35bc7f51c4ec0276193e5a25f1f4e33d" kindref="member">ERR46</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="860"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="865"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>counted<sp/>repeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="866"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>a<sp/>&apos;{&apos;<sp/>is<sp/>encountered<sp/>in<sp/>a<sp/>place<sp/>where<sp/>it<sp/>might</highlight></codeline>
<codeline lineno="869"><highlight class="comment">start<sp/>a<sp/>quantifier.<sp/>It<sp/>looks<sp/>ahead<sp/>to<sp/>see<sp/>if<sp/>it<sp/>really<sp/>is<sp/>a<sp/>quantifier<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="870"><highlight class="comment">It<sp/>is<sp/>only<sp/>a<sp/>quantifier<sp/>if<sp/>it<sp/>is<sp/>one<sp/>of<sp/>the<sp/>forms<sp/>{ddd}<sp/>{ddd,}<sp/>or<sp/>{ddd,ddd}</highlight></codeline>
<codeline lineno="871"><highlight class="comment">where<sp/>the<sp/>ddds<sp/>are<sp/>digits.</highlight></codeline>
<codeline lineno="872"><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>char<sp/>after<sp/>&apos;{&apos;</highlight></codeline>
<codeline lineno="875"><highlight class="comment"></highlight></codeline>
<codeline lineno="876"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="877"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="880"><highlight class="normal">is_counted_repeat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*p)</highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((digitab[*p++]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)<sp/>p++;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p++<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((digitab[*p++]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)<sp/>p++;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="898"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>repeat<sp/>counts<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="899"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>an<sp/>item<sp/>of<sp/>the<sp/>form<sp/>{n,m}<sp/>and<sp/>return<sp/>the<sp/>values.<sp/>This<sp/>is<sp/>called<sp/>only</highlight></codeline>
<codeline lineno="902"><highlight class="comment">after<sp/>is_counted_repeat()<sp/>has<sp/>confirmed<sp/>that<sp/>a<sp/>repeat-count<sp/>quantifier<sp/>exists,</highlight></codeline>
<codeline lineno="903"><highlight class="comment">so<sp/>the<sp/>syntax<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>correct,<sp/>but<sp/>we<sp/>need<sp/>to<sp/>check<sp/>the<sp/>values.</highlight></codeline>
<codeline lineno="904"><highlight class="comment"></highlight></codeline>
<codeline lineno="905"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>first<sp/>char<sp/>after<sp/>&apos;{&apos;</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/>minp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>int<sp/>for<sp/>min</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/>maxp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>int<sp/>for<sp/>max</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>as<sp/>-1<sp/>if<sp/>no<sp/>max</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/><sp/>points<sp/>to<sp/>error<sp/>code<sp/>variable</highlight></codeline>
<codeline lineno="911"><highlight class="comment"></highlight></codeline>
<codeline lineno="912"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>&apos;}&apos;<sp/>on<sp/>success;</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>ptr<sp/>on<sp/>error,<sp/>with<sp/>errorcodeptr<sp/>set<sp/>non-zero</highlight></codeline>
<codeline lineno="914"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*</highlight></codeline>
<codeline lineno="917"><highlight class="normal">read_repeat_counts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*minp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*maxp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr)</highlight></codeline>
<codeline lineno="918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>minimum<sp/>value<sp/>and<sp/>do<sp/>a<sp/>paranoid<sp/>check:<sp/>a<sp/>negative<sp/>value<sp/>indicates</highlight></codeline>
<codeline lineno="923"><highlight class="comment">an<sp/>integer<sp/>overflow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)<sp/>min<sp/>=<sp/>min<sp/>*<sp/>10<sp/>+<sp/>*p++<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&lt;<sp/>0<sp/>||<sp/>min<sp/>&gt;<sp/>65535)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea663dac87a0288c33ee30e27d34ae3e17" kindref="member">ERR5</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>maximum<sp/>value<sp/>if<sp/>there<sp/>is<sp/>one,<sp/>and<sp/>again<sp/>do<sp/>a<sp/>paranoid<sp/>on<sp/>its<sp/>size.</highlight></codeline>
<codeline lineno="933"><highlight class="comment">Also,<sp/>max<sp/>must<sp/>not<sp/>be<sp/>less<sp/>than<sp/>min.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>max<sp/>=<sp/>min;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++p)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((digitab[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)<sp/>max<sp/>=<sp/>max<sp/>*<sp/>10<sp/>+<sp/>*p++<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>0<sp/>||<sp/>max<sp/>&gt;<sp/>65535)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea663dac87a0288c33ee30e27d34ae3e17" kindref="member">ERR5</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea324c934201c4898ee322dc69b65f15df" kindref="member">ERR4</ref>;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>the<sp/>required<sp/>variables,<sp/>and<sp/>pass<sp/>back<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>terminating</highlight></codeline>
<codeline lineno="955"><highlight class="comment">&apos;}&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal">*minp<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">*maxp<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="965"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>forward<sp/>referenced<sp/>subpattern<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="966"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>scans<sp/>along<sp/>a<sp/>pattern&apos;s<sp/>text<sp/>looking<sp/>for<sp/>capturing</highlight></codeline>
<codeline lineno="969"><highlight class="comment">subpatterns,<sp/>and<sp/>counting<sp/>them.<sp/>If<sp/>it<sp/>finds<sp/>a<sp/>named<sp/>pattern<sp/>that<sp/>matches<sp/>the</highlight></codeline>
<codeline lineno="970"><highlight class="comment">name<sp/>it<sp/>is<sp/>given,<sp/>it<sp/>returns<sp/>its<sp/>number.<sp/>Alternatively,<sp/>if<sp/>the<sp/>name<sp/>is<sp/>NULL,<sp/>it</highlight></codeline>
<codeline lineno="971"><highlight class="comment">returns<sp/>when<sp/>it<sp/>reaches<sp/>a<sp/>given<sp/>numbered<sp/>subpattern.<sp/>This<sp/>is<sp/>used<sp/>for<sp/>forward</highlight></codeline>
<codeline lineno="972"><highlight class="comment">references<sp/>to<sp/>subpatterns.<sp/>We<sp/>know<sp/>that<sp/>if<sp/>(?P&lt;<sp/>is<sp/>encountered,<sp/>the<sp/>name<sp/>will</highlight></codeline>
<codeline lineno="973"><highlight class="comment">be<sp/>terminated<sp/>by<sp/>&apos;&gt;&apos;<sp/>because<sp/>that<sp/>is<sp/>checked<sp/>in<sp/>the<sp/>first<sp/>pass.</highlight></codeline>
<codeline lineno="974"><highlight class="comment"></highlight></codeline>
<codeline lineno="975"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>position<sp/>in<sp/>the<sp/>pattern</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compile<sp/>background<sp/>data</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>to<sp/>seek,<sp/>or<sp/>NULL<sp/>if<sp/>seeking<sp/>a<sp/>numbered<sp/>subpattern</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/>lorn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>length,<sp/>or<sp/>subpattern<sp/>number<sp/>if<sp/>name<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/>xmode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>we<sp/>are<sp/>in<sp/>/x<sp/>mode</highlight></codeline>
<codeline lineno="981"><highlight class="comment"></highlight></codeline>
<codeline lineno="982"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>the<sp/>named<sp/>subpattern,<sp/>or<sp/>-1<sp/>if<sp/>not<sp/>found</highlight></codeline>
<codeline lineno="983"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal">find_parens(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lorn,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>xmode)</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*thisname;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*ptr<sp/>!=<sp/>0;<sp/>ptr++)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>term;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>backslashed<sp/>characters<sp/>and<sp/>also<sp/>entire<sp/>\Q...\E<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>{};</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>character<sp/>classes;<sp/>this<sp/>logic<sp/>must<sp/>be<sp/>similar<sp/>to<sp/>the<sp/>way<sp/>they</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/>are<sp/>handled<sp/>for<sp/>real.<sp/>If<sp/>the<sp/>first<sp/>character<sp/>is<sp/>&apos;^&apos;,<sp/>skip<sp/>it.<sp/>Also,<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/>first<sp/>few<sp/>characters<sp/>(either<sp/>before<sp/>or<sp/>after<sp/>^)<sp/>are<sp/>\Q\E<sp/>or<sp/>\E<sp/>we<sp/>skip<sp/>them</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/>too.<sp/>This<sp/>makes<sp/>for<sp/>compatibility<sp/>with<sp/>Perl.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>negate_class<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>ptr++;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr+1,<sp/></highlight><highlight class="stringliteral">&quot;Q\\E&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/>ptr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!negate_class<sp/>&amp;&amp;<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negate_class<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>next<sp/>character<sp/>is<sp/>&apos;]&apos;,<sp/>it<sp/>is<sp/>a<sp/>data<sp/>character<sp/>that<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/>skipped,<sp/>except<sp/>in<sp/>JavaScript<sp/>compatibility<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1ace7a6cc63c092711e2db20e250950573" kindref="member">PCRE_JAVASCRIPT_COMPAT</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>{};</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>comments<sp/>in<sp/>/x<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmode<sp/>&amp;&amp;<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{};</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>opening<sp/>parens<sp/>must<sp/>now<sp/>be<sp/>a<sp/>real<sp/>metacharacter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>count<sp/>==<sp/>lorn)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">)<sp/>ptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>optional<sp/>P<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>to<sp/>disambiguate<sp/>(?&lt;!<sp/>and<sp/>(?&lt;=<sp/>from<sp/>(?&lt;name&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>count<sp/>==<sp/>lorn)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>term<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(term<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)<sp/>term<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>thisname<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>term)<sp/>ptr++;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>lorn<sp/>==<sp/>ptr<sp/>-<sp/>thisname<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)thisname,<sp/>lorn)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1102"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>first<sp/>significant<sp/>op<sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1103"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>called<sp/>by<sp/>several<sp/>functions<sp/>that<sp/>scan<sp/>a<sp/>compiled<sp/>expression<sp/>looking</highlight></codeline>
<codeline lineno="1106"><highlight class="comment">for<sp/>a<sp/>fixed<sp/>first<sp/>character,<sp/>or<sp/>an<sp/>anchoring<sp/>op<sp/>code<sp/>etc.<sp/>It<sp/>skips<sp/>over<sp/>things</highlight></codeline>
<codeline lineno="1107"><highlight class="comment">that<sp/>do<sp/>not<sp/>influence<sp/>this.<sp/>For<sp/>some<sp/>calls,<sp/>a<sp/>change<sp/>of<sp/>option<sp/>is<sp/>important.</highlight></codeline>
<codeline lineno="1108"><highlight class="comment">For<sp/>some<sp/>calls,<sp/>it<sp/>makes<sp/>sense<sp/>to<sp/>skip<sp/>negative<sp/>forward<sp/>and<sp/>all<sp/>backward</highlight></codeline>
<codeline lineno="1109"><highlight class="comment">assertions,<sp/>and<sp/>also<sp/>the<sp/>\b<sp/>assertion;<sp/>for<sp/>others<sp/>it<sp/>does<sp/>not.</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"></highlight></codeline>
<codeline lineno="1111"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>external<sp/>options</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/>optbit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>option<sp/>bit<sp/>whose<sp/>changing<sp/>is<sp/>significant,<sp/>or</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero<sp/>if<sp/>none<sp/>are</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/><sp/>skipassert<sp/><sp/><sp/>TRUE<sp/>if<sp/>certain<sp/>assertions<sp/>are<sp/>to<sp/>be<sp/>skipped</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"></highlight></codeline>
<codeline lineno="1118"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>first<sp/>significant<sp/>opcode</highlight></codeline>
<codeline lineno="1119"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref>*</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">first_significant_code(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*<ref refid="structcode" kindref="compound">code</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optbit,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>skipassert)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*code)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>:</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optbit<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)code[1]<sp/>&amp;<sp/>optbit)<sp/>!=<sp/>(*options<sp/>&amp;<sp/>optbit))</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*options<sp/>=<sp/>(int)code[1];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca35f4c2f9d4ea06d18ed08f6cce7214ad" kindref="member">OP_ASSERT_NOT</ref>:</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1ce25e7cd4fdba6d53cc4b316773e439" kindref="member">OP_ASSERTBACK</ref>:</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5057097bced86c4c7554843df46264d9" kindref="member">OP_ASSERTBACK_NOT</ref>:</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!skipassert)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*code];</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafb9eaedc60da3dd32b2628166ee2479b" kindref="member">OP_WORD_BOUNDARY</ref>:</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca648fba1672e02e405d3caef23b94930b" kindref="member">OP_NOT_WORD_BOUNDARY</ref>:</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!skipassert)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca679273f5fe2d1faf9d486eb30ae86d5a" kindref="member">OP_CALLOUT</ref>:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e61d18b6a4379a4668e4a5584c12595" kindref="member">OP_CREF</ref>:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca51d06bf1e6e003c4ec76150a46128902" kindref="member">OP_RREF</ref>:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>:</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*code];</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>never<sp/>reaches<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>the<sp/>fixed<sp/>length<sp/>of<sp/>a<sp/>pattern<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1167"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scan<sp/>a<sp/>pattern<sp/>and<sp/>compute<sp/>the<sp/>fixed<sp/>length<sp/>of<sp/>subject<sp/>that<sp/>will<sp/>match<sp/>it,</highlight></codeline>
<codeline lineno="1170"><highlight class="comment">if<sp/>the<sp/>length<sp/>is<sp/>fixed.<sp/>This<sp/>is<sp/>needed<sp/>for<sp/>dealing<sp/>with<sp/>backward<sp/>assertions.</highlight></codeline>
<codeline lineno="1171"><highlight class="comment">In<sp/>UTF8<sp/>mode,<sp/>the<sp/>result<sp/>is<sp/>in<sp/>characters<sp/>rather<sp/>than<sp/>bytes.</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"></highlight></codeline>
<codeline lineno="1173"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern<sp/>(the<sp/>bracket)</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/><sp/>options<sp/><sp/>the<sp/>compiling<sp/>options</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"></highlight></codeline>
<codeline lineno="1177"><highlight class="comment">Returns:<sp/><sp/><sp/>the<sp/>fixed<sp/>length,<sp/>or<sp/>-1<sp/>if<sp/>there<sp/>is<sp/>no<sp/>fixed<sp/>length,</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>-2<sp/>if<sp/>\C<sp/>was<sp/>encountered</highlight></codeline>
<codeline lineno="1179"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal">find_fixedlength(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branchlength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*cc<sp/>=<sp/>code<sp/>+<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scan<sp/>along<sp/>the<sp/>opcodes<sp/>for<sp/>this<sp/>branch.<sp/>If<sp/>we<sp/>get<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1190"><highlight class="comment">branch,<sp/>check<sp/>the<sp/>length<sp/>against<sp/>that<sp/>of<sp/>the<sp/>other<sp/>branches.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>*cc;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>:</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>:</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>:</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>:</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>find_fixedlength(cc<sp/>+<sp/>((op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>)?<sp/>2:0),<sp/>options);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>cc<sp/>+=<sp/>GET(cc,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cc<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reached<sp/>end<sp/>of<sp/>a<sp/>branch;<sp/>if<sp/>it&apos;s<sp/>a<sp/>ket<sp/>it<sp/>is<sp/>the<sp/>end<sp/>of<sp/>a<sp/>nested</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/>call.<sp/>If<sp/>it&apos;s<sp/>ALT<sp/>it<sp/>is<sp/>an<sp/>alternation<sp/>in<sp/>a<sp/>nested<sp/>call.<sp/>If<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/><sp/><sp/><sp/>END<sp/>it&apos;s<sp/>the<sp/>end<sp/>of<sp/>the<sp/>outer<sp/>call.<sp/>All<sp/>can<sp/>be<sp/>handled<sp/>by<sp/>the<sp/>same<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>:</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>:</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca95b5857e05fc32abfe03c637b6fb7a51" kindref="member">OP_KETRMAX</ref>:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca76e0ea39f8c85ca2f32ae6f5bbf40de4" kindref="member">OP_KETRMIN</ref>:</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>:</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>0)<sp/>length<sp/>=<sp/>branchlength;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>!=<sp/>branchlength)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cc<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>assertive<sp/>subpatterns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>:</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca35f4c2f9d4ea06d18ed08f6cce7214ad" kindref="member">OP_ASSERT_NOT</ref>:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1ce25e7cd4fdba6d53cc4b316773e439" kindref="member">OP_ASSERTBACK</ref>:</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5057097bced86c4c7554843df46264d9" kindref="member">OP_ASSERTBACK_NOT</ref>:</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>cc<sp/>+=<sp/>GET(cc,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cc<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>things<sp/>that<sp/>don&apos;t<sp/>match<sp/>chars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca71a96996291adee64ecab873b24408b5" kindref="member">OP_REVERSE</ref>:</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e61d18b6a4379a4668e4a5584c12595" kindref="member">OP_CREF</ref>:</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca51d06bf1e6e003c4ec76150a46128902" kindref="member">OP_RREF</ref>:</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>:</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca679273f5fe2d1faf9d486eb30ae86d5a" kindref="member">OP_CALLOUT</ref>:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac8fe565884937735dbafcbba6c3578d1" kindref="member">OP_SOD</ref>:</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb212b8059dbea634f17e931e7538f4b" kindref="member">OP_SOM</ref>:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf35846db22a12bff585c9b37bc1b692f" kindref="member">OP_EOD</ref>:</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca82ce2835231171cc2d3d208e96873efb" kindref="member">OP_EODN</ref>:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafdc903d143097092a157b6026f8a240c" kindref="member">OP_CIRC</ref>:</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b9b980bfe36403e04531dcdd56d4e0b" kindref="member">OP_DOLL</ref>:</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca648fba1672e02e405d3caef23b94930b" kindref="member">OP_NOT_WORD_BOUNDARY</ref>:</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafb9eaedc60da3dd32b2628166ee2479b" kindref="member">OP_WORD_BOUNDARY</ref>:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*cc];</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>literal<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength++;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a177ec66f9b06aab7b37965b77b2cf1b8" kindref="member">PCRE_UTF8</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*cc<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80)<sp/>cc++;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>exact<sp/>repetitions.<sp/>The<sp/>count<sp/>is<sp/>already<sp/>in<sp/>characters,<sp/>but<sp/>we</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/>need<sp/>to<sp/>skip<sp/>over<sp/>a<sp/>multibyte<sp/>character<sp/>in<sp/>UTF8<sp/>mode.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength<sp/>+=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(cc,1);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1275"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_UTF8)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*cc<sp/>&amp;<sp/>0x80)<sp/>==<sp/>0x80)<sp/>cc++;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1280"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref>:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength<sp/>+=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(cc,1);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cc[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>cc[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>cc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>single-char<sp/>matchers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref>:</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>:</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caccf027bd6c08cde017717172a120a9f2" kindref="member">OP_ANY</ref>:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref>:</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>branchlength++;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>cc++;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>single-byte<sp/>matcher<sp/>isn&apos;t<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9e600523d3f4d01acac276ff0c331af8" kindref="member">OP_ANYBYTE</ref>:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>a<sp/>class<sp/>for<sp/>variable<sp/>quantification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1315"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref>:</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>GET(cc,<sp/>1)<sp/>-<sp/>33;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1319"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f99e671caee687d352cce89c95e04c9" kindref="member">OP_CLASS</ref>:</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca73f1f5998cb564a4df3d4424f44fa974" kindref="member">OP_NCLASS</ref>:</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>33;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*cc)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab178cbd2052d88d8a045cd6dbb97c71e" kindref="member">OP_CRSTAR</ref>:</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6152241e808fd894af73c7603a6969e9" kindref="member">OP_CRMINSTAR</ref>:</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca4ed5d933aaca7d07f0641e8971680673" kindref="member">OP_CRQUERY</ref>:</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca0724a5442fb6ae4d9ee4695e7ebff538" kindref="member">OP_CRMINQUERY</ref>:</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca27e60147a7e03aca767f97da8338f76e" kindref="member">OP_CRRANGE</ref>:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6be76e9a7c0cf0c3087fa5298b4f5611" kindref="member">OP_CRMINRANGE</ref>:</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(cc,1)<sp/>!=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(cc,3))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>branchlength<sp/>+=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(cc,1);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>branchlength++;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Anything<sp/>else<sp/>is<sp/>variable<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>never<sp/>gets<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1357"><highlight class="comment">*<sp/><sp/><sp/><sp/>Scan<sp/>compiled<sp/>regex<sp/>for<sp/>numbered<sp/>bracket<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1358"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>little<sp/>function<sp/>scans<sp/>through<sp/>a<sp/>compiled<sp/>pattern<sp/>until<sp/>it<sp/>finds<sp/>a</highlight></codeline>
<codeline lineno="1361"><highlight class="comment">capturing<sp/>bracket<sp/>with<sp/>the<sp/>given<sp/>number.</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"></highlight></codeline>
<codeline lineno="1363"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>expression</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/><sp/>number<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>required<sp/>bracket<sp/>number</highlight></codeline>
<codeline lineno="1367"><highlight class="comment"></highlight></codeline>
<codeline lineno="1368"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>opcode<sp/>for<sp/>the<sp/>bracket,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>found</highlight></codeline>
<codeline lineno="1369"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">find_bracket(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>XCLASS<sp/>is<sp/>used<sp/>for<sp/>classes<sp/>that<sp/>cannot<sp/>be<sp/>represented<sp/>just<sp/>by<sp/>a<sp/>bit</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/><sp/>map.<sp/>This<sp/>includes<sp/>negated<sp/>single<sp/>high-valued<sp/>characters.<sp/>The<sp/>length<sp/>in</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/><sp/>the<sp/>table<sp/>is<sp/>zero;<sp/>the<sp/>actual<sp/>length<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>compiled<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref>)<sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>capturing<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(code,<sp/>1+LINK_SIZE);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>number)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)code;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[c];</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>we<sp/>can<sp/>get<sp/>the<sp/>item&apos;s<sp/>length<sp/>from<sp/>the<sp/>table,<sp/>except<sp/>that<sp/>for</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/>repeated<sp/>character<sp/>types,<sp/>we<sp/>have<sp/>to<sp/>test<sp/>for<sp/>\p<sp/>and<sp/>\P,<sp/>which<sp/>have<sp/>an<sp/>extra</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/>two<sp/>bytes<sp/>of<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref>:</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref>:</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca22c4991eef1371652cde137ae2bd218e" kindref="member">OP_TYPEPLUS</ref>:</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca14b55a6ebf5d9b6ce22082d701a01959" kindref="member">OP_TYPEMINPLUS</ref>:</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca17536428c3af7314bbf2640e508ca33b" kindref="member">OP_TYPEQUERY</ref>:</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa23453b3105f120bcbe1a02f163082fd" kindref="member">OP_TYPEMINQUERY</ref>:</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d6bc3632971622542cbe167f7c170e3" kindref="member">OP_TYPEPOSPLUS</ref>:</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac492dc1f53782d42def24d2b923f18c4" kindref="member">OP_TYPEPOSQUERY</ref>:</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb10e8776178fe6d76db8258f428c9b8" kindref="member">OP_TYPEUPTO</ref>:</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3c3c4557f2af900243692be9334cd913" kindref="member">OP_TYPEMINUPTO</ref>:</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref>:</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7a2e8e9d3619df87610f1da24d4de5a0" kindref="member">OP_TYPEPOSUPTO</ref>:</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>in<sp/>the<sp/>fixed<sp/>length<sp/>from<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[c];</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>opcodes<sp/>that<sp/>are<sp/>followed<sp/>by<sp/>a<sp/>character<sp/>may<sp/>be<sp/>followed<sp/>by</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/>a<sp/>multi-byte<sp/>character.<sp/>The<sp/>length<sp/>in<sp/>the<sp/>table<sp/>is<sp/>a<sp/>minimum,<sp/>so<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="1428"><highlight class="comment"><sp/><sp/>arrange<sp/>to<sp/>skip<sp/>the<sp/>extra<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1431"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref>:</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caaedd676e6d3581adbcde869c050bc25b" kindref="member">OP_MINUPTO</ref>:</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6f80145741d9621bc3d7051cebb42fd2" kindref="member">OP_POSUPTO</ref>:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab76952c741418e37c7cca2fd5143e0fc" kindref="member">OP_MINSTAR</ref>:</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d707075c9fc986dd75283dcf43602b5" kindref="member">OP_POSSTAR</ref>:</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca79fa28dc4f1c9a45d3a0bb8372f5b70a" kindref="member">OP_MINPLUS</ref>:</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>:</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref>:</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c0e7b19d7f9e002a1d916c7a0381c4d" kindref="member">OP_MINQUERY</ref>:</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab2bd21819f67d9a8de41a9fff9c29aad" kindref="member">OP_POSQUERY</ref>:</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[-1]<sp/>&gt;=<sp/>0xc0)<sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1af5a9186462ce5ab24b3617a98f4f8b9c" kindref="member">_pcre_utf8_table4</ref>[code[-1]<sp/>&amp;<sp/>0x3f];</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1452"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>(void)(utf8);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>compiler<sp/>happy<sp/>by<sp/>referencing<sp/>function<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1454"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1461"><highlight class="comment">*<sp/><sp/><sp/>Scan<sp/>compiled<sp/>regex<sp/>for<sp/>recursion<sp/>reference<sp/><sp/>*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>little<sp/>function<sp/>scans<sp/>through<sp/>a<sp/>compiled<sp/>pattern<sp/>until<sp/>it<sp/>finds<sp/>an</highlight></codeline>
<codeline lineno="1465"><highlight class="comment">instance<sp/>of<sp/>OP_RECURSE.</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"></highlight></codeline>
<codeline lineno="1467"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>expression</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"></highlight></codeline>
<codeline lineno="1471"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>opcode<sp/>for<sp/>OP_RECURSE,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>found</highlight></codeline>
<codeline lineno="1472"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">find_recurse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6c9584ec1f81cb6747db96dd11243a25" kindref="member">OP_RECURSE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>XCLASS<sp/>is<sp/>used<sp/>for<sp/>classes<sp/>that<sp/>cannot<sp/>be<sp/>represented<sp/>just<sp/>by<sp/>a<sp/>bit</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/>map.<sp/>This<sp/>includes<sp/>negated<sp/>single<sp/>high-valued<sp/>characters.<sp/>The<sp/>length<sp/>in</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/>the<sp/>table<sp/>is<sp/>zero;<sp/>the<sp/>actual<sp/>length<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>compiled<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref>)<sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>we<sp/>can<sp/>get<sp/>the<sp/>item&apos;s<sp/>length<sp/>from<sp/>the<sp/>table,<sp/>except<sp/>that<sp/>for</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/>repeated<sp/>character<sp/>types,<sp/>we<sp/>have<sp/>to<sp/>test<sp/>for<sp/>\p<sp/>and<sp/>\P,<sp/>which<sp/>have<sp/>an<sp/>extra</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/>two<sp/>bytes<sp/>of<sp/>parameters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref>:</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref>:</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca22c4991eef1371652cde137ae2bd218e" kindref="member">OP_TYPEPLUS</ref>:</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca14b55a6ebf5d9b6ce22082d701a01959" kindref="member">OP_TYPEMINPLUS</ref>:</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca17536428c3af7314bbf2640e508ca33b" kindref="member">OP_TYPEQUERY</ref>:</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa23453b3105f120bcbe1a02f163082fd" kindref="member">OP_TYPEMINQUERY</ref>:</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>:</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d6bc3632971622542cbe167f7c170e3" kindref="member">OP_TYPEPOSPLUS</ref>:</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac492dc1f53782d42def24d2b923f18c4" kindref="member">OP_TYPEPOSQUERY</ref>:</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7a2e8e9d3619df87610f1da24d4de5a0" kindref="member">OP_TYPEPOSUPTO</ref>:</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb10e8776178fe6d76db8258f428c9b8" kindref="member">OP_TYPEUPTO</ref>:</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3c3c4557f2af900243692be9334cd913" kindref="member">OP_TYPEMINUPTO</ref>:</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref>:</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>in<sp/>the<sp/>fixed<sp/>length<sp/>from<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[c];</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>opcodes<sp/>that<sp/>are<sp/>followed<sp/>by<sp/>a<sp/>character<sp/>may<sp/>be<sp/>followed</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>a<sp/>multi-byte<sp/>character.<sp/>The<sp/>length<sp/>in<sp/>the<sp/>table<sp/>is<sp/>a<sp/>minimum,<sp/>so<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>arrange<sp/>to<sp/>skip<sp/>the<sp/>extra<sp/>bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1526"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref>:</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caaedd676e6d3581adbcde869c050bc25b" kindref="member">OP_MINUPTO</ref>:</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6f80145741d9621bc3d7051cebb42fd2" kindref="member">OP_POSUPTO</ref>:</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>:</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab76952c741418e37c7cca2fd5143e0fc" kindref="member">OP_MINSTAR</ref>:</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d707075c9fc986dd75283dcf43602b5" kindref="member">OP_POSSTAR</ref>:</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca79fa28dc4f1c9a45d3a0bb8372f5b70a" kindref="member">OP_MINPLUS</ref>:</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>:</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref>:</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c0e7b19d7f9e002a1d916c7a0381c4d" kindref="member">OP_MINQUERY</ref>:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab2bd21819f67d9a8de41a9fff9c29aad" kindref="member">OP_POSQUERY</ref>:</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[-1]<sp/>&gt;=<sp/>0xc0)<sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1af5a9186462ce5ab24b3617a98f4f8b9c" kindref="member">_pcre_utf8_table4</ref>[code[-1]<sp/>&amp;<sp/>0x3f];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1547"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>(void)(utf8);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>compiler<sp/>happy<sp/>by<sp/>referencing<sp/>function<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1549"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1556"><highlight class="comment">*<sp/><sp/><sp/><sp/>Scan<sp/>compiled<sp/>branch<sp/>for<sp/>non-emptiness<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1557"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>scans<sp/>through<sp/>a<sp/>branch<sp/>of<sp/>a<sp/>compiled<sp/>pattern<sp/>to<sp/>see<sp/>whether<sp/>it</highlight></codeline>
<codeline lineno="1560"><highlight class="comment">can<sp/>match<sp/>the<sp/>empty<sp/>string<sp/>or<sp/>not.<sp/>It<sp/>is<sp/>called<sp/>from<sp/>could_be_empty()</highlight></codeline>
<codeline lineno="1561"><highlight class="comment">below<sp/>and<sp/>from<sp/>compile_branch()<sp/>when<sp/>checking<sp/>for<sp/>an<sp/>unlimited<sp/>repeat<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="1562"><highlight class="comment">group<sp/>that<sp/>can<sp/>match<sp/>nothing.<sp/>Note<sp/>that<sp/>first_significant_code()<sp/>skips<sp/>over</highlight></codeline>
<codeline lineno="1563"><highlight class="comment">backward<sp/>and<sp/>negative<sp/>forward<sp/>assertions<sp/>when<sp/>its<sp/>final<sp/>argument<sp/>is<sp/>TRUE.<sp/>If<sp/>we</highlight></codeline>
<codeline lineno="1564"><highlight class="comment">hit<sp/>an<sp/>unclosed<sp/>bracket,<sp/>we<sp/>return<sp/>&quot;empty&quot;<sp/>-<sp/>this<sp/>means<sp/>we&apos;ve<sp/>struck<sp/>an<sp/>inner</highlight></codeline>
<codeline lineno="1565"><highlight class="comment">bracket<sp/>whose<sp/>current<sp/>branch<sp/>will<sp/>already<sp/>have<sp/>been<sp/>scanned.</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"></highlight></codeline>
<codeline lineno="1567"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>search</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/>endcode<sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>where<sp/>to<sp/>stop</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>UTF8<sp/>mode</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"></highlight></codeline>
<codeline lineno="1572"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>what<sp/>is<sp/>matched<sp/>could<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="1573"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="1576"><highlight class="normal">could_be_empty_branch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*endcode,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(code<sp/>=<sp/>first_significant_code(code<sp/>+<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*code],<sp/>NULL,<sp/>0,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>code<sp/>&lt;<sp/>endcode;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>first_significant_code(code<sp/>+<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[c],<sp/>NULL,<sp/>0,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>))</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ccode;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>forward<sp/>assertions;<sp/>the<sp/>other<sp/>assertions<sp/>are<sp/>skipped<sp/>by</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/><sp/>first_significant_code()<sp/>with<sp/>a<sp/>TRUE<sp/>final<sp/>argument.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Groups<sp/>with<sp/>zero<sp/>repeats<sp/>can<sp/>of<sp/>course<sp/>be<sp/>empty;<sp/>skip<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca98bb31f21c3d8f37d590633469623cc7" kindref="member">OP_BRAZERO</ref><sp/>||<sp/>c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca41541e9aeb8c834c9e755f4eb7fcc5ff" kindref="member">OP_BRAMINZERO</ref><sp/>||<sp/>c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca04c6c600fb26f33500b9b20ce0d23784" kindref="member">OP_SKIPZERO</ref>)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[c];</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>other<sp/>groups,<sp/>scan<sp/>the<sp/>branches.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref><sp/>||<sp/>c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref><sp/>||<sp/>c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref><sp/>||<sp/>c<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>empty_branch;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GET(code,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hit<sp/>unclosed<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>a<sp/>closed<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_branch<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_branch<sp/>&amp;&amp;<sp/>could_be_empty_branch(code,<sp/>endcode,<sp/>utf8))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_branch<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_branch)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>branches<sp/>are<sp/>non-empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*code;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>the<sp/>other<sp/>opcodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>quantifiers<sp/>after<sp/>a<sp/>class.<sp/>XCLASS<sp/>is<sp/>used<sp/>for<sp/>classes<sp/>that</highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/><sp/><sp/><sp/>cannot<sp/>be<sp/>represented<sp/>just<sp/>by<sp/>a<sp/>bit<sp/>map.<sp/>This<sp/>includes<sp/>negated<sp/>single</highlight></codeline>
<codeline lineno="1635"><highlight class="comment"><sp/><sp/><sp/><sp/>high-valued<sp/>characters.<sp/>The<sp/>length<sp/>in<sp/>_pcre_OP_lengths[]<sp/>is<sp/>zero;<sp/>the</highlight></codeline>
<codeline lineno="1636"><highlight class="comment"><sp/><sp/><sp/><sp/>actual<sp/>length<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>compiled<sp/>code,<sp/>so<sp/>we<sp/>must<sp/>update<sp/>&quot;code&quot;</highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/><sp/><sp/><sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1640"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref>:</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>ccode<sp/>=<sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>CHECK_CLASS_REPEAT;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1644"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f99e671caee687d352cce89c95e04c9" kindref="member">OP_CLASS</ref>:</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca73f1f5998cb564a4df3d4424f44fa974" kindref="member">OP_NCLASS</ref>:</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>ccode<sp/>=<sp/>code<sp/>+<sp/>33;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1650"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_CLASS_REPEAT:</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1652"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*ccode)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab178cbd2052d88d8a045cd6dbb97c71e" kindref="member">OP_CRSTAR</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>could<sp/>be<sp/>empty;<sp/>continue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6152241e808fd894af73c7603a6969e9" kindref="member">OP_CRMINSTAR</ref>:</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca4ed5d933aaca7d07f0641e8971680673" kindref="member">OP_CRQUERY</ref>:</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca0724a5442fb6ae4d9ee4695e7ebff538" kindref="member">OP_CRMINQUERY</ref>:</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-repeat<sp/>=&gt;<sp/>class<sp/>must<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac303a560989ad3a69b3cbc84030d2b68" kindref="member">OP_CRPLUS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>repeats<sp/>aren&apos;t<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca27d8763524624e3ee68403b1839f4a74" kindref="member">OP_CRMINPLUS</ref>:</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca27e60147a7e03aca767f97da8338f76e" kindref="member">OP_CRRANGE</ref>:</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6be76e9a7c0cf0c3087fa5298b4f5611" kindref="member">OP_CRMINRANGE</ref>:</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(ccode,<sp/>1)<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Minimum<sp/>&gt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Opcodes<sp/>that<sp/>must<sp/>match<sp/>a<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref>:</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>:</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf2d5d09579bb7ba796ee5cdaf22c90a0" kindref="member">OP_EXTUNI</ref>:</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caccf027bd6c08cde017717172a120a9f2" kindref="member">OP_ANY</ref>:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref>:</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9e600523d3f4d01acac276ff0c331af8" kindref="member">OP_ANYBYTE</ref>:</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>:</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca79fa28dc4f1c9a45d3a0bb8372f5b70a" kindref="member">OP_MINPLUS</ref>:</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>:</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca13cdebdbc084ee1dd01425be339effda" kindref="member">OP_NOTPLUS</ref>:</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca977ac204fe430a34ad51f9207cd12838" kindref="member">OP_NOTMINPLUS</ref>:</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafbcfa09fe11e6b50626ea47a3609488a" kindref="member">OP_NOTPOSPLUS</ref>:</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf86dda71ee43c5bffffeb5334bffbeed" kindref="member">OP_NOTEXACT</ref>:</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca22c4991eef1371652cde137ae2bd218e" kindref="member">OP_TYPEPLUS</ref>:</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca14b55a6ebf5d9b6ce22082d701a01959" kindref="member">OP_TYPEMINPLUS</ref>:</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d6bc3632971622542cbe167f7c170e3" kindref="member">OP_TYPEPOSPLUS</ref>:</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref>:</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>going<sp/>to<sp/>continue,<sp/>as<sp/>they<sp/>may<sp/>be<sp/>empty,<sp/>but<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/><sp/><sp/><sp/>fudge<sp/>the<sp/>length<sp/>for<sp/>the<sp/>\p<sp/>and<sp/>\P<sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref>:</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref>:</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>:</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca17536428c3af7314bbf2640e508ca33b" kindref="member">OP_TYPEQUERY</ref>:</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa23453b3105f120bcbe1a02f163082fd" kindref="member">OP_TYPEMINQUERY</ref>:</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac492dc1f53782d42def24d2b923f18c4" kindref="member">OP_TYPEPOSQUERY</ref>:</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Same<sp/>for<sp/>these<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb10e8776178fe6d76db8258f428c9b8" kindref="member">OP_TYPEUPTO</ref>:</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3c3c4557f2af900243692be9334cd913" kindref="member">OP_TYPEMINUPTO</ref>:</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7a2e8e9d3619df87610f1da24d4de5a0" kindref="member">OP_TYPEPOSUPTO</ref>:</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>code[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)<sp/>code<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>:</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca95b5857e05fc32abfe03c637b6fb7a51" kindref="member">OP_KETRMAX</ref>:</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca76e0ea39f8c85ca2f32ae6f5bbf40de4" kindref="member">OP_KETRMIN</ref>:</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>:</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>STAR,<sp/>MINSTAR,<sp/>POSSTAR,<sp/>QUERY,<sp/>MINQUERY,<sp/>POSQUERY,<sp/>UPTO,</highlight></codeline>
<codeline lineno="1733"><highlight class="comment"><sp/><sp/><sp/><sp/>MINUPTO,<sp/>and<sp/>POSUPTO<sp/>may<sp/>be<sp/>followed<sp/>by<sp/>a<sp/>multibyte<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="1736"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>:</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab76952c741418e37c7cca2fd5143e0fc" kindref="member">OP_MINSTAR</ref>:</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d707075c9fc986dd75283dcf43602b5" kindref="member">OP_POSSTAR</ref>:</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref>:</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7c0e7b19d7f9e002a1d916c7a0381c4d" kindref="member">OP_MINQUERY</ref>:</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab2bd21819f67d9a8de41a9fff9c29aad" kindref="member">OP_POSQUERY</ref>:</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref>:</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caaedd676e6d3581adbcde869c050bc25b" kindref="member">OP_MINUPTO</ref>:</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6f80145741d9621bc3d7051cebb42fd2" kindref="member">OP_POSUPTO</ref>:</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((code[2]<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80)<sp/>code++;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1748"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1757"><highlight class="comment">*<sp/><sp/><sp/><sp/>Scan<sp/>compiled<sp/>regex<sp/>for<sp/>non-emptiness<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1758"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>to<sp/>check<sp/>for<sp/>left<sp/>recursive<sp/>calls.<sp/>We<sp/>want<sp/>to<sp/>check</highlight></codeline>
<codeline lineno="1761"><highlight class="comment">the<sp/>current<sp/>branch<sp/>of<sp/>the<sp/>current<sp/>pattern<sp/>to<sp/>see<sp/>if<sp/>it<sp/>could<sp/>match<sp/>the<sp/>empty</highlight></codeline>
<codeline lineno="1762"><highlight class="comment">string.<sp/>If<sp/>it<sp/>could,<sp/>we<sp/>must<sp/>look<sp/>outwards<sp/>for<sp/>branches<sp/>at<sp/>other<sp/>levels,</highlight></codeline>
<codeline lineno="1763"><highlight class="comment">stopping<sp/>when<sp/>we<sp/>pass<sp/>beyond<sp/>the<sp/>bracket<sp/>which<sp/>is<sp/>the<sp/>subject<sp/>of<sp/>the<sp/>recursion.</highlight></codeline>
<codeline lineno="1764"><highlight class="comment"></highlight></codeline>
<codeline lineno="1765"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>the<sp/>recursion</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/><sp/>endcode<sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>where<sp/>to<sp/>stop<sp/>(current<sp/>RECURSE<sp/>item)</highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/><sp/>bcptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>chain<sp/>of<sp/>current<sp/>(unclosed)<sp/>branch<sp/>starts</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"></highlight></codeline>
<codeline lineno="1771"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>what<sp/>is<sp/>matched<sp/>could<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="1772"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="1775"><highlight class="normal">could_be_empty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*endcode,<sp/><ref refid="structbranch__chain" kindref="compound">branch_chain</ref><sp/>*bcptr,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bcptr<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>bcptr-&gt;<ref refid="structbranch__chain_1af2487cda81d3edc81f8e95d124bd648f" kindref="member">current</ref><sp/>&gt;=<sp/>code)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!could_be_empty_branch(bcptr-&gt;<ref refid="structbranch__chain_1af2487cda81d3edc81f8e95d124bd648f" kindref="member">current</ref>,<sp/>endcode,<sp/>utf8))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>bcptr<sp/>=<sp/>bcptr-&gt;<ref refid="structbranch__chain_1a31ea7a80e9f42fabbcd2c63103f8528a" kindref="member">outer</ref>;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1789"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>POSIX<sp/>class<sp/>syntax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1790"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>the<sp/>sequence<sp/>&quot;[:&quot;<sp/>or<sp/>&quot;[.&quot;<sp/>or<sp/>&quot;[=&quot;<sp/>is</highlight></codeline>
<codeline lineno="1793"><highlight class="comment">encountered<sp/>in<sp/>a<sp/>character<sp/>class.<sp/>It<sp/>checks<sp/>whether<sp/>this<sp/>is<sp/>followed<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="1794"><highlight class="comment">sequence<sp/>of<sp/>characters<sp/>terminated<sp/>by<sp/>a<sp/>matching<sp/>&quot;:]&quot;<sp/>or<sp/>&quot;.]&quot;<sp/>or<sp/>&quot;=]&quot;.<sp/>If<sp/>we</highlight></codeline>
<codeline lineno="1795"><highlight class="comment">reach<sp/>an<sp/>unescaped<sp/>&apos;]&apos;<sp/>without<sp/>the<sp/>special<sp/>preceding<sp/>character,<sp/>return<sp/>FALSE.</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"></highlight></codeline>
<codeline lineno="1797"><highlight class="comment">Originally,<sp/>this<sp/>function<sp/>only<sp/>recognized<sp/>a<sp/>sequence<sp/>of<sp/>letters<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="1798"><highlight class="comment">terminators,<sp/>but<sp/>it<sp/>seems<sp/>that<sp/>Perl<sp/>recognizes<sp/>any<sp/>sequence<sp/>of<sp/>characters,</highlight></codeline>
<codeline lineno="1799"><highlight class="comment">though<sp/>of<sp/>course<sp/>unknown<sp/>POSIX<sp/>names<sp/>are<sp/>subsequently<sp/>rejected.<sp/>Perl<sp/>gives<sp/>an</highlight></codeline>
<codeline lineno="1800"><highlight class="comment">&quot;Unknown<sp/>POSIX<sp/>class&quot;<sp/>error<sp/>for<sp/>[:f\oo:]<sp/>for<sp/>example,<sp/>where<sp/>previously<sp/>PCRE</highlight></codeline>
<codeline lineno="1801"><highlight class="comment">didn&apos;t<sp/>consider<sp/>this<sp/>to<sp/>be<sp/>a<sp/>POSIX<sp/>class.<sp/>Likewise<sp/>for<sp/>[:1234:].</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"></highlight></codeline>
<codeline lineno="1803"><highlight class="comment">The<sp/>problem<sp/>in<sp/>trying<sp/>to<sp/>be<sp/>exactly<sp/>like<sp/>Perl<sp/>is<sp/>in<sp/>the<sp/>handling<sp/>of<sp/>escapes.<sp/>We</highlight></codeline>
<codeline lineno="1804"><highlight class="comment">have<sp/>to<sp/>be<sp/>sure<sp/>that<sp/>[abc[:x\]pqr]<sp/>is<sp/>*not*<sp/>treated<sp/>as<sp/>containing<sp/>a<sp/>POSIX</highlight></codeline>
<codeline lineno="1805"><highlight class="comment">class,<sp/>but<sp/>[abc[:x\]pqr:]]<sp/>is<sp/>(so<sp/>that<sp/>an<sp/>error<sp/>can<sp/>be<sp/>generated).<sp/>The<sp/>code</highlight></codeline>
<codeline lineno="1806"><highlight class="comment">below<sp/>handles<sp/>the<sp/>special<sp/>case<sp/>of<sp/>\],<sp/>but<sp/>does<sp/>not<sp/>try<sp/>to<sp/>do<sp/>any<sp/>other<sp/>escape</highlight></codeline>
<codeline lineno="1807"><highlight class="comment">processing.<sp/>This<sp/>makes<sp/>it<sp/>different<sp/>from<sp/>Perl<sp/>for<sp/>cases<sp/>such<sp/>as<sp/>[:l\ower:]</highlight></codeline>
<codeline lineno="1808"><highlight class="comment">where<sp/>Perl<sp/>recognizes<sp/>it<sp/>as<sp/>the<sp/>POSIX<sp/>class<sp/>&quot;lower&quot;<sp/>but<sp/>PCRE<sp/>does<sp/>not<sp/>recognize</highlight></codeline>
<codeline lineno="1809"><highlight class="comment">&quot;l\ower&quot;.<sp/>This<sp/>is<sp/>a<sp/>lesser<sp/>evil<sp/>that<sp/>not<sp/>diagnosing<sp/>bad<sp/>classes<sp/>when<sp/>Perl<sp/>does,</highlight></codeline>
<codeline lineno="1810"><highlight class="comment">I<sp/>think.</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"></highlight></codeline>
<codeline lineno="1812"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>initial<sp/>[</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/>endptr<sp/><sp/><sp/>where<sp/>to<sp/>return<sp/>the<sp/>end<sp/>pointer</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"></highlight></codeline>
<codeline lineno="1816"><highlight class="comment">Returns:<sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="1817"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="1820"><highlight class="normal">check_posix_syntax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**endptr)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>terminator;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>combine<sp/>these<sp/>lines;<sp/>the<sp/>Solaris<sp/>cc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal">terminator<sp/>=<sp/>*(++ptr);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compiler<sp/>warns<sp/>about<sp/>&quot;non-constant&quot;<sp/>initializer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++ptr;<sp/>*ptr<sp/>!=<sp/>0;<sp/>ptr++)</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/>ptr++;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>terminator<sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*endptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1843"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>POSIX<sp/>class<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1844"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>to<sp/>check<sp/>the<sp/>name<sp/>given<sp/>in<sp/>a<sp/>POSIX-style<sp/>class<sp/>entry</highlight></codeline>
<codeline lineno="1847"><highlight class="comment">such<sp/>as<sp/>[:alnum:].</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"></highlight></codeline>
<codeline lineno="1849"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>first<sp/>letter</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>length<sp/>of<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"></highlight></codeline>
<codeline lineno="1853"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/>a<sp/>value<sp/>representing<sp/>the<sp/>name,<sp/>or<sp/>-1<sp/>if<sp/>unknown</highlight></codeline>
<codeline lineno="1854"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal">check_posix_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pn<sp/>=<sp/>posix_names;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yield<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(posix_name_lengths[yield]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>posix_name_lengths[yield]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr,<sp/>pn,<sp/>len)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yield;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>pn<sp/>+=<sp/>posix_name_lengths[yield]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/>yield++;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1873"><highlight class="comment">*<sp/><sp/><sp/><sp/>Adjust<sp/>OP_RECURSE<sp/>items<sp/>in<sp/>repeated<sp/>group<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1874"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OP_RECURSE<sp/>items<sp/>contain<sp/>an<sp/>offset<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the<sp/>regex<sp/>to<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="1877"><highlight class="comment">that<sp/>is<sp/>referenced.<sp/>This<sp/>means<sp/>that<sp/>groups<sp/>can<sp/>be<sp/>replicated<sp/>for<sp/>fixed</highlight></codeline>
<codeline lineno="1878"><highlight class="comment">repetition<sp/>simply<sp/>by<sp/>copying<sp/>(because<sp/>the<sp/>recursion<sp/>is<sp/>allowed<sp/>to<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="1879"><highlight class="comment">earlier<sp/>groups<sp/>that<sp/>are<sp/>outside<sp/>the<sp/>current<sp/>group).<sp/>However,<sp/>when<sp/>a<sp/>group<sp/>is</highlight></codeline>
<codeline lineno="1880"><highlight class="comment">optional<sp/>(i.e.<sp/>the<sp/>minimum<sp/>quantifier<sp/>is<sp/>zero),<sp/>OP_BRAZERO<sp/>or<sp/>OP_SKIPZERO<sp/>is</highlight></codeline>
<codeline lineno="1881"><highlight class="comment">inserted<sp/>before<sp/>it,<sp/>after<sp/>it<sp/>has<sp/>been<sp/>compiled.<sp/>This<sp/>means<sp/>that<sp/>any<sp/>OP_RECURSE</highlight></codeline>
<codeline lineno="1882"><highlight class="comment">items<sp/>within<sp/>it<sp/>that<sp/>refer<sp/>to<sp/>the<sp/>group<sp/>itself<sp/>or<sp/>any<sp/>contained<sp/>groups<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="1883"><highlight class="comment">have<sp/>their<sp/>offsets<sp/>adjusted.<sp/>That<sp/>one<sp/>of<sp/>the<sp/>jobs<sp/>of<sp/>this<sp/>function.<sp/>Before<sp/>it</highlight></codeline>
<codeline lineno="1884"><highlight class="comment">is<sp/>called,<sp/>the<sp/>partially<sp/>compiled<sp/>regex<sp/>must<sp/>be<sp/>temporarily<sp/>terminated<sp/>with</highlight></codeline>
<codeline lineno="1885"><highlight class="comment">OP_END.</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"></highlight></codeline>
<codeline lineno="1887"><highlight class="comment">This<sp/>function<sp/>has<sp/>been<sp/>extended<sp/>with<sp/>the<sp/>possibility<sp/>of<sp/>forward<sp/>references<sp/>for</highlight></codeline>
<codeline lineno="1888"><highlight class="comment">recursions<sp/>and<sp/>subroutine<sp/>calls.<sp/>It<sp/>must<sp/>also<sp/>check<sp/>the<sp/>list<sp/>of<sp/>such<sp/>references</highlight></codeline>
<codeline lineno="1889"><highlight class="comment">for<sp/>the<sp/>group<sp/>we<sp/>are<sp/>dealing<sp/>with.<sp/>If<sp/>it<sp/>finds<sp/>that<sp/>one<sp/>of<sp/>the<sp/>recursions<sp/>in</highlight></codeline>
<codeline lineno="1890"><highlight class="comment">the<sp/>current<sp/>group<sp/>is<sp/>on<sp/>this<sp/>list,<sp/>it<sp/>adjusts<sp/>the<sp/>offset<sp/>in<sp/>the<sp/>list,<sp/>not<sp/>the</highlight></codeline>
<codeline lineno="1891"><highlight class="comment">value<sp/>in<sp/>the<sp/>reference<sp/>(which<sp/>is<sp/>a<sp/>group<sp/>number).</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"></highlight></codeline>
<codeline lineno="1893"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1894"><highlight class="comment"><sp/><sp/>group<sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/><sp/>adjust<sp/><sp/><sp/><sp/><sp/>the<sp/>amount<sp/>by<sp/>which<sp/>the<sp/>group<sp/>is<sp/>to<sp/>be<sp/>moved</highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>pointers<sp/>to<sp/>tables<sp/>etc.</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/><sp/>save_hwm<sp/><sp/><sp/>the<sp/>hwm<sp/>forward<sp/>reference<sp/>pointer<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="1899"><highlight class="comment"></highlight></codeline>
<codeline lineno="1900"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/>nothing</highlight></codeline>
<codeline lineno="1901"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal">adjust_recurse(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*group,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adjust,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*save_hwm)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr<sp/>=<sp/>group;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr<sp/>=<sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)find_recurse(ptr,<sp/>utf8))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*hc;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>this<sp/>recursion<sp/>is<sp/>on<sp/>the<sp/>forward<sp/>reference<sp/>list.<sp/>If<sp/>so,<sp/>adjust<sp/>the</highlight></codeline>
<codeline lineno="1915"><highlight class="comment"><sp/><sp/>reference.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hc<sp/>=<sp/>save_hwm;<sp/>hc<sp/>&lt;<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>;<sp/>hc<sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>GET(hc,<sp/>0);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>+<sp/>offset<sp/>==<sp/>ptr<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PUT(hc,<sp/>0,<sp/>offset<sp/>+<sp/>adjust);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>adjust<sp/>the<sp/>recursion<sp/>offset<sp/>if<sp/>it&apos;s<sp/>after<sp/>the<sp/>start<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/><sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hc<sp/>&gt;=<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>GET(ptr,<sp/>1);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>+<sp/>offset<sp/>&gt;=<sp/>group)<sp/>PUT(ptr,<sp/>1,<sp/>offset<sp/>+<sp/>adjust);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1943"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Insert<sp/>an<sp/>automatic<sp/>callout<sp/>point<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1944"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>when<sp/>the<sp/>PCRE_AUTO_CALLOUT<sp/>option<sp/>is<sp/>set,<sp/>to<sp/>insert</highlight></codeline>
<codeline lineno="1947"><highlight class="comment">callout<sp/>points<sp/>before<sp/>each<sp/>pattern<sp/>item.</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"></highlight></codeline>
<codeline lineno="1949"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>code<sp/>pointer</highlight></codeline>
<codeline lineno="1951"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>pattern<sp/>pointer</highlight></codeline>
<codeline lineno="1952"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointers<sp/>to<sp/>tables<sp/>etc</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"></highlight></codeline>
<codeline lineno="1954"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>code<sp/>pointer</highlight></codeline>
<codeline lineno="1955"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*</highlight></codeline>
<codeline lineno="1958"><highlight class="normal">auto_callout(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd)</highlight></codeline>
<codeline lineno="1959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca679273f5fe2d1faf9d486eb30ae86d5a" kindref="member">OP_CALLOUT</ref>;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">*code++<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal">PUT(code,<sp/>0,<sp/>ptr<sp/>-<sp/>cd-&gt;<ref refid="structcompile__data_1af9b4ca5374f72fe75329c9034be93eb9" kindref="member">start_pattern</ref>);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Pattern<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal">PUT(code,<sp/>LINK_SIZE,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code<sp/>+<sp/>2*<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1970"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Complete<sp/>a<sp/>callout<sp/>item<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1971"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>callout<sp/>item<sp/>contains<sp/>the<sp/>length<sp/>of<sp/>the<sp/>next<sp/>item<sp/>in<sp/>the<sp/>pattern,<sp/>which</highlight></codeline>
<codeline lineno="1974"><highlight class="comment">we<sp/>can&apos;t<sp/>fill<sp/>in<sp/>till<sp/>after<sp/>we<sp/>have<sp/>reached<sp/>the<sp/>relevant<sp/>point.<sp/>This<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="1975"><highlight class="comment">for<sp/>both<sp/>automatic<sp/>and<sp/>manual<sp/>callouts.</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"></highlight></codeline>
<codeline lineno="1977"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/><sp/>previous_callout<sp/><sp/><sp/>points<sp/>to<sp/>previous<sp/>callout<sp/>item</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>pattern<sp/>pointer</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointers<sp/>to<sp/>tables<sp/>etc</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"></highlight></codeline>
<codeline lineno="1982"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nothing</highlight></codeline>
<codeline lineno="1983"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal">complete_callout(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*previous_callout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>ptr<sp/>-<sp/>cd-&gt;<ref refid="structcompile__data_1af9b4ca5374f72fe75329c9034be93eb9" kindref="member">start_pattern</ref><sp/>-<sp/>GET(previous_callout,<sp/>2);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal">PUT(previous_callout,<sp/>2<sp/>+<sp/>LINK_SIZE,<sp/>length);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="1995"><highlight class="preprocessor"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="1996"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get<sp/>othercase<sp/>range<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1997"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>passed<sp/>the<sp/>start<sp/>and<sp/>end<sp/>of<sp/>a<sp/>class<sp/>range,<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="2000"><highlight class="comment">with<sp/>UCP<sp/>support.<sp/>It<sp/>searches<sp/>up<sp/>the<sp/>characters,<sp/>looking<sp/>for<sp/>internal<sp/>ranges<sp/>of</highlight></codeline>
<codeline lineno="2001"><highlight class="comment">characters<sp/>in<sp/>the<sp/>&quot;other&quot;<sp/>case.<sp/>Each<sp/>call<sp/>returns<sp/>the<sp/>next<sp/>one,<sp/>updating<sp/>the</highlight></codeline>
<codeline lineno="2002"><highlight class="comment">start<sp/>address.</highlight></codeline>
<codeline lineno="2003"><highlight class="comment"></highlight></codeline>
<codeline lineno="2004"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="2005"><highlight class="comment"><sp/><sp/>cptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>starting<sp/>character<sp/>value;<sp/>updated</highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/><sp/>d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>value</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/><sp/>ocptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>to<sp/>put<sp/>start<sp/>of<sp/>othercase<sp/>range</highlight></codeline>
<codeline lineno="2008"><highlight class="comment"><sp/><sp/>odptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>to<sp/>put<sp/>end<sp/>of<sp/>othercase<sp/>range</highlight></codeline>
<codeline lineno="2009"><highlight class="comment"></highlight></codeline>
<codeline lineno="2010"><highlight class="comment">Yield:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>when<sp/>range<sp/>returned;<sp/>FALSE<sp/>when<sp/>no<sp/>more</highlight></codeline>
<codeline lineno="2011"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="2014"><highlight class="normal">get_othercase_range(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ocptr,</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*odptr)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>othercase,<sp/>next;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>*cptr;<sp/>c<sp/>&lt;=<sp/>d;<sp/>c++)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1acfffcba9402d3a92d4dcdc9b0871ff7f" kindref="member">UCD_OTHERCASE</ref>(c))<sp/>!=<sp/>c)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>d)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal">*ocptr<sp/>=<sp/>othercase;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">next<sp/>=<sp/>othercase<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++c;<sp/>c<sp/>&lt;=<sp/>d;<sp/>c++)</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1acfffcba9402d3a92d4dcdc9b0871ff7f" kindref="member">UCD_OTHERCASE</ref>(c)<sp/>!=<sp/>next)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>next++;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal">*odptr<sp/>=<sp/>next<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal">*cptr<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UCP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2039"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2043"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>Check<sp/>if<sp/>auto-possessifying<sp/>is<sp/>possible<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2044"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>for<sp/>unlimited<sp/>repeats<sp/>of<sp/>certain<sp/>items,<sp/>to<sp/>see</highlight></codeline>
<codeline lineno="2047"><highlight class="comment">whether<sp/>the<sp/>next<sp/>thing<sp/>could<sp/>possibly<sp/>match<sp/>the<sp/>repeated<sp/>item.<sp/>If<sp/>not,<sp/>it<sp/>makes</highlight></codeline>
<codeline lineno="2048"><highlight class="comment">sense<sp/>to<sp/>automatically<sp/>possessify<sp/>the<sp/>repeated<sp/>item.</highlight></codeline>
<codeline lineno="2049"><highlight class="comment"></highlight></codeline>
<codeline lineno="2050"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="2051"><highlight class="comment"><sp/><sp/>op_code<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>repeated<sp/>op<sp/>code</highlight></codeline>
<codeline lineno="2052"><highlight class="comment"><sp/><sp/>this<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>for<sp/>this<sp/>item,<sp/>depends<sp/>on<sp/>the<sp/>opcode</highlight></codeline>
<codeline lineno="2053"><highlight class="comment"><sp/><sp/>utf8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>in<sp/>UTF-8<sp/>mode</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/>utf8_char<sp/><sp/><sp/><sp/><sp/>used<sp/>for<sp/>utf8<sp/>character<sp/>bytes,<sp/>NULL<sp/>if<sp/>not<sp/>relevant</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/>ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>character<sp/>in<sp/>pattern</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/>options<sp/>bits</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>pointers<sp/>to<sp/>tables<sp/>etc.</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"></highlight></codeline>
<codeline lineno="2059"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>possessifying<sp/>is<sp/>wanted</highlight></codeline>
<codeline lineno="2060"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="2063"><highlight class="normal">check_auto_possessive(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op_code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8,<sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*utf8_char,</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd)</highlight></codeline>
<codeline lineno="2065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skip<sp/>whitespace<sp/>and<sp/>comments<sp/>in<sp/>extended<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a24c767567bde49a4ebdc33783ae2c914" kindref="member">PCRE_EXTENDED</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a65dc078d774490ba90c0d33d3fdece35" kindref="member">ctype_space</ref>)<sp/>!=<sp/>0)<sp/>ptr++;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1aa2114a8b1a4144413857626d01cee5d8" kindref="member">IS_NEWLINE</ref>(ptr))<sp/>{<sp/>ptr<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1afffec692f99b0882a2f360f07a8e9a60" kindref="member">nllen</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>next<sp/>item<sp/>is<sp/>one<sp/>that<sp/>we<sp/>can<sp/>handle,<sp/>get<sp/>its<sp/>value.<sp/>A<sp/>non-negative</highlight></codeline>
<codeline lineno="2085"><highlight class="comment">value<sp/>is<sp/>a<sp/>character,<sp/>a<sp/>negative<sp/>value<sp/>is<sp/>an<sp/>escape<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temperrorcode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>check_escape(&amp;ptr,<sp/>&amp;temperrorcode,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>,<sp/>options,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temperrorcode<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>ptr++;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Point<sp/>after<sp/>the<sp/>escape<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1af254c479da59731eb98c178ba2db0430" kindref="member">ctype_meta</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2098"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/>{<sp/><ref refid="pcre__internal_8h_1adfb348264f16106d98a89bb0c4a1a974" kindref="member">GETCHARINC</ref>(next,<sp/>ptr);<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2100"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skip<sp/>whitespace<sp/>and<sp/>comments<sp/>in<sp/>extended<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_EXTENDED)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/>ctype_space)<sp/>!=<sp/>0)<sp/>ptr++;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1aa2114a8b1a4144413857626d01cee5d8" kindref="member">IS_NEWLINE</ref>(ptr))<sp/>{<sp/>ptr<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1afffec692f99b0882a2f360f07a8e9a60" kindref="member">nllen</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>next<sp/>thing<sp/>is<sp/>itself<sp/>optional,<sp/>we<sp/>have<sp/>to<sp/>give<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>||<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>||<sp/>strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr,<sp/></highlight><highlight class="stringliteral">&quot;{0,&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Now<sp/>compare<sp/>the<sp/>next<sp/>item<sp/>with<sp/>the<sp/>previous<sp/>opcode.<sp/>If<sp/>the<sp/>previous<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="2127"><highlight class="comment">positive<sp/>single<sp/>character<sp/>match,<sp/>&quot;item&quot;<sp/>either<sp/>contains<sp/>the<sp/>character<sp/>or,<sp/>if</highlight></codeline>
<codeline lineno="2128"><highlight class="comment">&quot;item&quot;<sp/>is<sp/>greater<sp/>than<sp/>127<sp/>in<sp/>utf8<sp/>mode,<sp/>the<sp/>character&apos;s<sp/>bytes<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="2129"><highlight class="comment">utf8_char.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Handle<sp/>cases<sp/>when<sp/>the<sp/>next<sp/>item<sp/>is<sp/>a<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(op_code)</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2138"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>item<sp/>&gt;<sp/>127)<sp/>{<sp/><ref refid="pcre__internal_8h_1ad47e83ffa53e3592279b023d7d72cb9b" kindref="member">GETCHAR</ref>(item,<sp/>utf8_char);<sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2140"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>(void)(utf8_char);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>compiler<sp/>happy<sp/>by<sp/>referencing<sp/>function<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2142"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>!=<sp/>next;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>CHARNC<sp/>(caseless<sp/>character)<sp/>we<sp/>must<sp/>check<sp/>the<sp/>other<sp/>case.<sp/>If<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="2145"><highlight class="comment"><sp/><sp/>Unicode<sp/>property<sp/>support,<sp/>we<sp/>can<sp/>use<sp/>it<sp/>to<sp/>test<sp/>the<sp/>other<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="2146"><highlight class="comment"><sp/><sp/>high-valued<sp/>characters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2150"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>item<sp/>&gt;<sp/>127)<sp/>{<sp/><ref refid="pcre__internal_8h_1ad47e83ffa53e3592279b023d7d72cb9b" kindref="member">GETCHAR</ref>(item,<sp/>utf8_char);<sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2152"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>next)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2154"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>othercase;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>128)<sp/>othercase<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[next];<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="2159"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1acfffcba9402d3a92d4dcdc9b0871ff7f" kindref="member">UCD_OTHERCASE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)next);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2161"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1a6be6c01c0ca008bbeefe0375f13c104f" kindref="member">NOTACHAR</ref>;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2163"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)item<sp/>!=<sp/>othercase;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2167"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(item<sp/>!=<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[next]);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-UTF-8<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>OP_NOT,<sp/>&quot;item&quot;<sp/>must<sp/>be<sp/>a<sp/>single-byte<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>:</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>next)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2175"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>othercase;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>128)<sp/>othercase<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[next];<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="2180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1acfffcba9402d3a92d4dcdc9b0871ff7f" kindref="member">UCD_OTHERCASE</ref>(next);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2182"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1a6be6c01c0ca008bbeefe0375f13c104f" kindref="member">NOTACHAR</ref>;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2184"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)item<sp/>==<sp/>othercase;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2188"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[next]);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-UTF-8<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a65dc078d774490ba90c0d33d3fdece35" kindref="member">ctype_space</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a65dc078d774490ba90c0d33d3fdece35" kindref="member">ctype_space</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a442a60d2ab94f56f28e04ab175faf43f" kindref="member">ctype_word</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[next]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a442a60d2ab94f56f28e04ab175faf43f" kindref="member">ctype_word</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca24350737c4a63c02a3e2e885f23f1c71" kindref="member">OP_HSPACE</ref>:</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cad09035a6d79b8b1ba57f56c766528668" kindref="member">OP_NOT_HSPACE</ref>:</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(next)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x09:</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x20:</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xa0:</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1680:</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x180e:</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2000:</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2001:</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2002:</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2003:</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2004:</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2005:</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2006:</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2007:</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2008:</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2009:</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x200A:</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x202f:</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x205f:</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x3000:</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op_code<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca24350737c4a63c02a3e2e885f23f1c71" kindref="member">OP_HSPACE</ref>;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op_code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca24350737c4a63c02a3e2e885f23f1c71" kindref="member">OP_HSPACE</ref>;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab1e4402f64fc17ad93d9223b8ea22400" kindref="member">OP_VSPACE</ref>:</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab138380a45977a8779745e4b37e7d6a7" kindref="member">OP_NOT_VSPACE</ref>:</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(next)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0a:</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0b:</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0c:</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0d:</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x85:</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2028:</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2029:</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op_code<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab1e4402f64fc17ad93d9223b8ea22400" kindref="member">OP_VSPACE</ref>;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>op_code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab1e4402f64fc17ad93d9223b8ea22400" kindref="member">OP_VSPACE</ref>;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Handle<sp/>the<sp/>case<sp/>when<sp/>the<sp/>next<sp/>item<sp/>is<sp/>\d,<sp/>\s,<sp/>etc.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(op_code)</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2264"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>item<sp/>&gt;<sp/>127)<sp/>{<sp/><ref refid="pcre__internal_8h_1ad47e83ffa53e3592279b023d7d72cb9b" kindref="member">GETCHAR</ref>(item,<sp/>utf8_char);<sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(-next)</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>:</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref>:</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref>:</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a65dc078d774490ba90c0d33d3fdece35" kindref="member">ctype_space</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>:</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a65dc078d774490ba90c0d33d3fdece35" kindref="member">ctype_space</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>:</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&gt;<sp/>127<sp/>||<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a442a60d2ab94f56f28e04ab175faf43f" kindref="member">ctype_word</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref>:</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>&lt;=<sp/>127<sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[item]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a442a60d2ab94f56f28e04ab175faf43f" kindref="member">ctype_word</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>:</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref>:</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(item)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x09:</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x20:</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xa0:</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x1680:</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x180e:</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2000:</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2001:</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2002:</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2003:</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2004:</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2005:</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2006:</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2007:</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2008:</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2009:</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x200A:</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x202f:</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x205f:</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x3000:</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-next<sp/>!=<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-next<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>:</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref>:</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(item)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0a:</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0b:</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0c:</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0d:</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x85:</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2028:</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x2029:</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-next<sp/>!=<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-next<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca53e5ee88b4188aceee840c08dd60e323" kindref="member">OP_DIGIT</ref>:</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref><sp/>||</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca661af19bdaec558fe9a162cc9fec90b6" kindref="member">OP_NOT_DIGIT</ref>:</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5ba0b30351bb132ebc61126cc4e1204a" kindref="member">OP_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa2ec5baa8002a63dc530e8b0f7c817d8" kindref="member">OP_NOT_WHITESPACE</ref>:</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca24350737c4a63c02a3e2e885f23f1c71" kindref="member">OP_HSPACE</ref>:</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cad09035a6d79b8b1ba57f56c766528668" kindref="member">OP_NOT_HSPACE</ref>:</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>have<sp/>\S<sp/>in<sp/>here<sp/>because<sp/>VT<sp/>matches<sp/>\S<sp/>(Perl<sp/>anomaly)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab1e4402f64fc17ad93d9223b8ea22400" kindref="member">OP_VSPACE</ref>:</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab138380a45977a8779745e4b37e7d6a7" kindref="member">OP_NOT_VSPACE</ref>:</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7b3f7ff50f45e7e3f81bb59f64c361e6" kindref="member">OP_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca25fe62376e9a07aaf3cc8c27f8484501" kindref="member">OP_NOT_WORDCHAR</ref>:</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref><sp/>||<sp/>next<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>does<sp/>not<sp/>reach<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2376"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compile<sp/>one<sp/>branch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2377"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scan<sp/>the<sp/>pattern,<sp/>compiling<sp/>it<sp/>into<sp/>the<sp/>a<sp/>vector.<sp/>If<sp/>the<sp/>options<sp/>are</highlight></codeline>
<codeline lineno="2380"><highlight class="comment">changed<sp/>during<sp/>the<sp/>branch,<sp/>the<sp/>pointer<sp/>is<sp/>used<sp/>to<sp/>change<sp/>the<sp/>external<sp/>options</highlight></codeline>
<codeline lineno="2381"><highlight class="comment">bits.<sp/>This<sp/>function<sp/>is<sp/>used<sp/>during<sp/>the<sp/>pre-compile<sp/>phase<sp/>when<sp/>we<sp/>are<sp/>trying</highlight></codeline>
<codeline lineno="2382"><highlight class="comment">to<sp/>find<sp/>out<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>needed,<sp/>as<sp/>well<sp/>as<sp/>during<sp/>the<sp/>real<sp/>compile</highlight></codeline>
<codeline lineno="2383"><highlight class="comment">phase.<sp/>The<sp/>value<sp/>of<sp/>lengthptr<sp/>distinguishes<sp/>the<sp/>two<sp/>phases.</highlight></codeline>
<codeline lineno="2384"><highlight class="comment"></highlight></codeline>
<codeline lineno="2385"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="2386"><highlight class="comment"><sp/><sp/>optionsptr<sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>option<sp/>bits</highlight></codeline>
<codeline lineno="2387"><highlight class="comment"><sp/><sp/>codeptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>current<sp/>code<sp/>point</highlight></codeline>
<codeline lineno="2388"><highlight class="comment"><sp/><sp/>ptrptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>current<sp/>pattern<sp/>pointer</highlight></codeline>
<codeline lineno="2389"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/><sp/>points<sp/>to<sp/>error<sp/>code<sp/>variable</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/>firstbyteptr<sp/><sp/><sp/>set<sp/>to<sp/>initial<sp/>literal<sp/>character,<sp/>or<sp/>&lt;<sp/>0<sp/>(REQ_UNSET,<sp/>REQ_NONE)</highlight></codeline>
<codeline lineno="2391"><highlight class="comment"><sp/><sp/>reqbyteptr<sp/><sp/><sp/><sp/><sp/>set<sp/>to<sp/>the<sp/>last<sp/>literal<sp/>character<sp/>required,<sp/>else<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"><sp/><sp/>bcptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>current<sp/>branch<sp/>chain</highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>pointers<sp/>to<sp/>tables<sp/>etc.</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/><sp/>lengthptr<sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>during<sp/>the<sp/>real<sp/>compile<sp/>phase</highlight></codeline>
<codeline lineno="2395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>length<sp/>accumulator<sp/>during<sp/>pre-compile<sp/>phase</highlight></codeline>
<codeline lineno="2396"><highlight class="comment"></highlight></codeline>
<codeline lineno="2397"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>on<sp/>success</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/>with<sp/>*errorcodeptr<sp/>set<sp/>non-zero<sp/>on<sp/>error</highlight></codeline>
<codeline lineno="2399"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="2402"><highlight class="normal">compile_branch(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*optionsptr,<sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**codeptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**ptrptr,</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*firstbyteptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*reqbyteptr,<sp/><ref refid="structbranch__chain" kindref="compound">branch_chain</ref><sp/>*bcptr,</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lengthptr)</highlight></codeline>
<codeline lineno="2405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat_type,<sp/>op_type;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat_min<sp/>=<sp/>0,<sp/>repeat_max<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>please<sp/>picky<sp/>compilers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bravalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>greedy_default,<sp/>greedy_non_default;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstbyte,<sp/>reqbyte;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeroreqbyte,<sp/>zerofirstbyte;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_caseopt,<sp/>reqvary,<sp/>tempreqvary;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>*optionsptr;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>after_manual_callout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_prevgroup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code<sp/>=<sp/>*codeptr;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*last_code<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*orig_code<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*tempcode;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>groupsetfirstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr<sp/>=<sp/>*ptrptr;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*tempptr;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*previous_callout<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*save_hwm<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>classbits[32];</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2431"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>class_utf8;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8<sp/>=<sp/>(options<sp/>&amp;<sp/><ref refid="pcre_8h_1a177ec66f9b06aab7b37965b77b2cf1b8" kindref="member">PCRE_UTF8</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*class_utf8data;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*class_utf8data_base;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>utf8_char[6];</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2437"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*utf8_char<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2440"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="2442"><highlight class="preprocessor"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)<sp/><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;&gt;&gt;<sp/>start<sp/>branch\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2444"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>default<sp/>and<sp/>non-default<sp/>settings<sp/>for<sp/>greediness<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal">greedy_default<sp/>=<sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1afe50a7c890619904dd88d86af5621337" kindref="member">PCRE_UNGREEDY</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal">greedy_non_default<sp/>=<sp/>greedy_default<sp/>^<sp/>1;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>no<sp/>first<sp/>byte,<sp/>no<sp/>required<sp/>byte.<sp/>REQ_UNSET<sp/>means<sp/>&quot;no<sp/>char</highlight></codeline>
<codeline lineno="2451"><highlight class="comment">matching<sp/>encountered<sp/>yet&quot;.<sp/>It<sp/>gets<sp/>changed<sp/>to<sp/>REQ_NONE<sp/>if<sp/>we<sp/>hit<sp/>something<sp/>that</highlight></codeline>
<codeline lineno="2452"><highlight class="comment">matches<sp/>a<sp/>non-fixed<sp/>char<sp/>first<sp/>char;<sp/>reqbyte<sp/>just<sp/>remains<sp/>unset<sp/>if<sp/>we<sp/>never</highlight></codeline>
<codeline lineno="2453"><highlight class="comment">find<sp/>one.</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"></highlight></codeline>
<codeline lineno="2455"><highlight class="comment">When<sp/>we<sp/>hit<sp/>a<sp/>repeat<sp/>whose<sp/>minimum<sp/>is<sp/>zero,<sp/>we<sp/>may<sp/>have<sp/>to<sp/>adjust<sp/>these<sp/>values</highlight></codeline>
<codeline lineno="2456"><highlight class="comment">to<sp/>take<sp/>the<sp/>zero<sp/>repeat<sp/>into<sp/>account.<sp/>This<sp/>is<sp/>implemented<sp/>by<sp/>setting<sp/>them<sp/>to</highlight></codeline>
<codeline lineno="2457"><highlight class="comment">zerofirstbyte<sp/>and<sp/>zeroreqbyte<sp/>when<sp/>such<sp/>a<sp/>repeat<sp/>is<sp/>encountered.<sp/>The<sp/>individual</highlight></codeline>
<codeline lineno="2458"><highlight class="comment">item<sp/>types<sp/>that<sp/>can<sp/>be<sp/>repeated<sp/>set<sp/>these<sp/>backoff<sp/>variables<sp/>appropriately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal">firstbyte<sp/>=<sp/>reqbyte<sp/>=<sp/>zerofirstbyte<sp/>=<sp/>zeroreqbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>variable<sp/>req_caseopt<sp/>contains<sp/>either<sp/>the<sp/>REQ_CASELESS<sp/>value<sp/>or<sp/>zero,</highlight></codeline>
<codeline lineno="2463"><highlight class="comment">according<sp/>to<sp/>the<sp/>current<sp/>setting<sp/>of<sp/>the<sp/>caseless<sp/>flag.<sp/>REQ_CASELESS<sp/>is<sp/>a<sp/>bit</highlight></codeline>
<codeline lineno="2464"><highlight class="comment">value<sp/>&gt;<sp/>255.<sp/>It<sp/>is<sp/>added<sp/>into<sp/>the<sp/>firstbyte<sp/>or<sp/>reqbyte<sp/>variables<sp/>to<sp/>record<sp/>the</highlight></codeline>
<codeline lineno="2465"><highlight class="comment">case<sp/>status<sp/>of<sp/>the<sp/>value.<sp/>This<sp/>is<sp/>used<sp/>only<sp/>for<sp/>ASCII<sp/>characters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal">req_caseopt<sp/>=<sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>!=<sp/>0)?<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Switch<sp/>on<sp/>next<sp/>character<sp/>until<sp/>the<sp/>end<sp/>of<sp/>the<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;<sp/>ptr++)</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>negate_class;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>should_flip_negation;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>possessive_quantifier;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>is_quantifier;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>is_recurse;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>reset_bracount;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_charcount;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_lastchar;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newoptions;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recno;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refsign;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipbytes;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subreqbyte;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subfirstbyte;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>terminator;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mclength;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>mcbuffer[8];</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>next<sp/>byte<sp/>in<sp/>the<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>in<sp/>the<sp/>pre-compile<sp/>phase,<sp/>accumulate<sp/>the<sp/>length<sp/>used<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="2496"><highlight class="comment"><sp/><sp/>previous<sp/>cycle<sp/>of<sp/>this<sp/>loop.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="2501"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>)<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>=<sp/>code;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>High<sp/>water<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2503"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1a005326cbb0e879863e49bb0c0c77729f" kindref="member">start_workspace</ref><sp/>+<sp/><ref refid="pcre__compile_8c_1ae6ca9bdec2edc32d0268bd41de2f9b18" kindref="member">COMPILE_WORK_SIZE</ref>)<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>overrun<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea54a2ad731d9c2263b2ed27b64886e9ab" kindref="member">ERR52</ref>;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>at<sp/>least<sp/>one<sp/>situation<sp/>where<sp/>code<sp/>goes<sp/>backwards:<sp/>this<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="2510"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>of<sp/>a<sp/>zero<sp/>quantifier<sp/>after<sp/>a<sp/>class<sp/>(e.g.<sp/>[ab]{0}).<sp/>At<sp/>compile<sp/>time,</highlight></codeline>
<codeline lineno="2511"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>class<sp/>is<sp/>simply<sp/>eliminated.<sp/>However,<sp/>it<sp/>is<sp/>created<sp/>first,<sp/>so<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="2512"><highlight class="comment"><sp/><sp/><sp/><sp/>allow<sp/>memory<sp/>for<sp/>it.<sp/>Therefore,<sp/>don&apos;t<sp/>ever<sp/>reduce<sp/>the<sp/>length<sp/>at<sp/>this<sp/>point.</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>last_code)<sp/>code<sp/>=<sp/>last_code;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Paranoid<sp/>check<sp/>for<sp/>integer<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>code<sp/>-<sp/>last_code)</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>code<sp/>-<sp/>last_code;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;length=%d<sp/>added<sp/>%d<sp/>c=%c\n&quot;</highlight><highlight class="normal">,<sp/>*lengthptr,<sp/>code<sp/>-<sp/>last_code,<sp/>c));</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>&quot;previous&quot;<sp/>is<sp/>set<sp/>and<sp/>it<sp/>is<sp/>not<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>work<sp/>space,<sp/>move</highlight></codeline>
<codeline lineno="2529"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>back<sp/>to<sp/>there,<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>filling<sp/>up<sp/>the<sp/>work<sp/>space.<sp/>Otherwise,</highlight></codeline>
<codeline lineno="2530"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>&quot;previous&quot;<sp/>is<sp/>NULL,<sp/>reset<sp/>the<sp/>current<sp/>code<sp/>pointer<sp/>to<sp/>the<sp/>start.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous<sp/>&gt;<sp/>orig_code)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(orig_code,<sp/>previous,<sp/>code<sp/>-<sp/>previous);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>-=<sp/>previous<sp/>-<sp/>orig_code;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>orig_code;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>orig_code;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>where<sp/>this<sp/>code<sp/>item<sp/>starts<sp/>so<sp/>we<sp/>can<sp/>pick<sp/>up<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="2544"><highlight class="comment"><sp/><sp/><sp/><sp/>next<sp/>time<sp/>round.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>last_code<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>real<sp/>compile<sp/>phase,<sp/>just<sp/>check<sp/>the<sp/>workspace<sp/>used<sp/>by<sp/>the<sp/>forward</highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/><sp/>reference<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1a005326cbb0e879863e49bb0c0c77729f" kindref="member">start_workspace</ref><sp/>+<sp/><ref refid="pcre__compile_8c_1ae6ca9bdec2edc32d0268bd41de2f9b18" kindref="member">COMPILE_WORK_SIZE</ref>)</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea54a2ad731d9c2263b2ed27b64886e9ab" kindref="member">ERR52</ref>;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>in<sp/>\Q...\E,<sp/>check<sp/>for<sp/>the<sp/>end;<sp/>if<sp/>not,<sp/>we<sp/>have<sp/>a<sp/>literal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inescq<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_callout<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>attempt<sp/>in<sp/>pre-compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete_callout(previous_callout,<sp/>ptr,<sp/>cd);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_callout<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a35ee92b3d85086e3b978e268be40a25a" kindref="member">PCRE_AUTO_CALLOUT</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_callout<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>auto_callout(code,<sp/>ptr,<sp/>cd);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NORMAL_CHAR;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>length<sp/>of<sp/>a<sp/>previous<sp/>callout,<sp/>except<sp/>when<sp/>the<sp/>next<sp/>thing<sp/>is</highlight></codeline>
<codeline lineno="2586"><highlight class="comment"><sp/><sp/>a<sp/>quantifier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>is_quantifier<sp/>=<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>is_counted_repeat(ptr+1));</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_quantifier<sp/>&amp;&amp;<sp/>previous_callout<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after_manual_callout--<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>attempt<sp/>in<sp/>pre-compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>complete_callout(previous_callout,<sp/>ptr,<sp/>cd);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_callout<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>extended<sp/>mode,<sp/>skip<sp/>white<sp/>space<sp/>and<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_EXTENDED)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[c]<sp/>&amp;<sp/>ctype_space)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__internal_8h_1aa2114a8b1a4144413857626d01cee5d8" kindref="member">IS_NEWLINE</ref>(ptr))<sp/>{<sp/>ptr<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1afffec692f99b0882a2f360f07a8e9a60" kindref="member">nllen</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Else<sp/>fall<sp/>through<sp/>to<sp/>handle<sp/>end<sp/>of<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>auto<sp/>callout<sp/>for<sp/>quantifiers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a35ee92b3d85086e3b978e268be40a25a" kindref="member">PCRE_AUTO_CALLOUT</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!is_quantifier)</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_callout<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>auto_callout(code,<sp/>ptr,<sp/>cd);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>branch<sp/>terminates<sp/>at<sp/>string<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>or<sp/>|<sp/>or<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>*firstbyteptr<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>*reqbyteptr<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>*codeptr<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>code<sp/>-<sp/>last_code)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>code<sp/>-<sp/>last_code;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>include<sp/>callout<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;&gt;&gt;<sp/>end<sp/>branch\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>single-character<sp/>metacharacters.<sp/>In<sp/>multiline<sp/>mode,<sp/>^<sp/>disables</highlight></codeline>
<codeline lineno="2650"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>setting<sp/>of<sp/>any<sp/>following<sp/>char<sp/>as<sp/>a<sp/>first<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a5e2fa0a3acfe44bf19e83ebc4b0b5ad4" kindref="member">PCRE_MULTILINE</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafdc903d143097092a157b6026f8a240c" kindref="member">OP_CIRC</ref>;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca2b9b980bfe36403e04531dcdd56d4e0b" kindref="member">OP_DOLL</ref>;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>can<sp/>never<sp/>be<sp/>a<sp/>first<sp/>char<sp/>if<sp/>&apos;.&apos;<sp/>is<sp/>first,<sp/>whatever<sp/>happens<sp/>about</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/><sp/><sp/><sp/>repeats.<sp/>The<sp/>value<sp/>of<sp/>reqbyte<sp/>doesn&apos;t<sp/>change<sp/>either.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1aa20620f0b3ffd7d5778d86e98d2d4536" kindref="member">PCRE_DOTALL</ref>)<sp/>!=<sp/>0)?<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref>:<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caccf027bd6c08cde017717172a120a9f2" kindref="member">OP_ANY</ref>;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Character<sp/>classes.<sp/>If<sp/>the<sp/>included<sp/>characters<sp/>are<sp/>all<sp/>&lt;<sp/>256,<sp/>we<sp/>build<sp/>a</highlight></codeline>
<codeline lineno="2680"><highlight class="comment"><sp/><sp/><sp/><sp/>32-byte<sp/>bitmap<sp/>of<sp/>the<sp/>permitted<sp/>characters,<sp/>except<sp/>in<sp/>the<sp/>special<sp/>case</highlight></codeline>
<codeline lineno="2681"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>there<sp/>is<sp/>only<sp/>one<sp/>such<sp/>character.<sp/>For<sp/>negated<sp/>classes,<sp/>we<sp/>build<sp/>the</highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/><sp/><sp/><sp/>map<sp/>as<sp/>usual,<sp/>then<sp/>invert<sp/>it<sp/>at<sp/>the<sp/>end.<sp/>However,<sp/>we<sp/>use<sp/>a<sp/>different<sp/>opcode</highlight></codeline>
<codeline lineno="2683"><highlight class="comment"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>data<sp/>characters<sp/>&gt;<sp/>255<sp/>can<sp/>be<sp/>handled<sp/>correctly.</highlight></codeline>
<codeline lineno="2684"><highlight class="comment"></highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>class<sp/>contains<sp/>characters<sp/>outside<sp/>the<sp/>0-255<sp/>range,<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="2686"><highlight class="comment"><sp/><sp/><sp/><sp/>opcode<sp/>is<sp/>compiled.<sp/>It<sp/>may<sp/>optionally<sp/>have<sp/>a<sp/>bit<sp/>map<sp/>for<sp/>characters<sp/>&lt;<sp/>256,</highlight></codeline>
<codeline lineno="2687"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>those<sp/>above<sp/>are<sp/>are<sp/>explicitly<sp/>listed<sp/>afterwards.<sp/>A<sp/>flag<sp/>byte<sp/>tells</highlight></codeline>
<codeline lineno="2688"><highlight class="comment"><sp/><sp/><sp/><sp/>whether<sp/>the<sp/>bitmap<sp/>is<sp/>present,<sp/>and<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>negated<sp/>class<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="2689"><highlight class="comment"></highlight></codeline>
<codeline lineno="2690"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>JavaScript<sp/>compatibility<sp/>mode,<sp/>an<sp/>isolated<sp/>&apos;]&apos;<sp/>causes<sp/>an<sp/>error.<sp/>In</highlight></codeline>
<codeline lineno="2691"><highlight class="comment"><sp/><sp/><sp/><sp/>default<sp/>(Perl)<sp/>mode,<sp/>it<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>data<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1ace7a6cc63c092711e2db20e250950573" kindref="member">PCRE_JAVASCRIPT_COMPAT</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea4cc3afaf1791ab3d488c16a63941dcd0" kindref="member">ERR64</ref>;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NORMAL_CHAR;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCRE<sp/>supports<sp/>POSIX<sp/>class<sp/>stuff<sp/>inside<sp/>a<sp/>class.<sp/>Perl<sp/>gives<sp/>an<sp/>error<sp/>if</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/><sp/><sp/><sp/>they<sp/>are<sp/>encountered<sp/>at<sp/>the<sp/>top<sp/>level,<sp/>so<sp/>we&apos;ll<sp/>do<sp/>that<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_posix_syntax(ptr,<sp/>&amp;tempptr))</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)?<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaadf10a072707fe902741149d32166795" kindref="member">ERR13</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaca025e6764678e389a51d314a058671e" kindref="member">ERR31</ref>;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>first<sp/>character<sp/>is<sp/>&apos;^&apos;,<sp/>set<sp/>the<sp/>negation<sp/>flag<sp/>and<sp/>skip<sp/>it.<sp/>Also,</highlight></codeline>
<codeline lineno="2715"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>the<sp/>first<sp/>few<sp/>characters<sp/>(either<sp/>before<sp/>or<sp/>after<sp/>^)<sp/>are<sp/>\Q\E<sp/>or<sp/>\E<sp/>we</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/><sp/><sp/><sp/>skip<sp/>them<sp/>too.<sp/>This<sp/>makes<sp/>for<sp/>compatibility<sp/>with<sp/>Perl.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/>negate_class<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>ptr++;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr+1,<sp/></highlight><highlight class="stringliteral">&quot;Q\\E&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/>ptr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!negate_class<sp/>&amp;&amp;<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negate_class<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Empty<sp/>classes<sp/>are<sp/>allowed<sp/>in<sp/>JavaScript<sp/>compatibility<sp/>mode.<sp/>Otherwise,</highlight></codeline>
<codeline lineno="2734"><highlight class="comment"><sp/><sp/><sp/><sp/>an<sp/>initial<sp/>&apos;]&apos;<sp/>is<sp/>taken<sp/>as<sp/>a<sp/>data<sp/>character<sp/>--<sp/>the<sp/>code<sp/>below<sp/>handles</highlight></codeline>
<codeline lineno="2735"><highlight class="comment"><sp/><sp/><sp/><sp/>that.<sp/>In<sp/>JS<sp/>mode,<sp/>[]<sp/>must<sp/>always<sp/>fail,<sp/>so<sp/>generate<sp/>OP_FAIL,<sp/>whereas</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/><sp/><sp/><sp/>[^]<sp/>must<sp/>match<sp/>any<sp/>character,<sp/>so<sp/>generate<sp/>OP_ALLANY.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1ace7a6cc63c092711e2db20e250950573" kindref="member">PCRE_JAVASCRIPT_COMPAT</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>negate_class?<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref>;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>class<sp/>contains<sp/>a<sp/>negative<sp/>special<sp/>such<sp/>as<sp/>\S,<sp/>we<sp/>need<sp/>to<sp/>flip<sp/>the</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/><sp/>negation<sp/>flag<sp/>at<sp/>the<sp/>end,<sp/>so<sp/>that<sp/>support<sp/>for<sp/>characters<sp/>&gt;<sp/>255<sp/>works</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/><sp/>correctly<sp/>(they<sp/>are<sp/>all<sp/>included<sp/>in<sp/>the<sp/>class).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>should_flip_negation<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>a<sp/>count<sp/>of<sp/>chars<sp/>with<sp/>values<sp/>&lt;<sp/>256<sp/>so<sp/>that<sp/>we<sp/>can<sp/>optimize<sp/>the<sp/>case</highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>just<sp/>a<sp/>single<sp/>character<sp/>(as<sp/>long<sp/>as<sp/>it&apos;s<sp/>&lt;<sp/>256).<sp/>However,<sp/>For<sp/>higher</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/><sp/><sp/><sp/>valued<sp/>UTF-8<sp/>characters,<sp/>we<sp/>don&apos;t<sp/>yet<sp/>do<sp/>any<sp/>optimization.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/>class_charcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>class_lastchar<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>32-char<sp/>bit<sp/>map<sp/>to<sp/>all<sp/>zeros.<sp/>We<sp/>build<sp/>the<sp/>map<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="2760"><highlight class="comment"><sp/><sp/><sp/><sp/>temporary<sp/>bit<sp/>of<sp/>memory,<sp/>in<sp/>case<sp/>the<sp/>class<sp/>contains<sp/>only<sp/>1<sp/>character<sp/>(less</highlight></codeline>
<codeline lineno="2761"><highlight class="comment"><sp/><sp/><sp/><sp/>than<sp/>256),<sp/>because<sp/>in<sp/>that<sp/>case<sp/>the<sp/>compiled<sp/>code<sp/>doesn&apos;t<sp/>use<sp/>the<sp/>bit<sp/>map.</highlight></codeline>
<codeline lineno="2762"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(classbits,<sp/>0,<sp/>32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref>));</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2767"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>chars<sp/>&gt;=<sp/>256<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>class_utf8data<sp/>=<sp/>code<sp/>+<sp/>LINK_SIZE<sp/>+<sp/>2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>UTF-8<sp/>items<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/>class_utf8data_base<sp/>=<sp/>class_utf8data;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>resetting<sp/>in<sp/>pass<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2771"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>characters<sp/>until<sp/>]<sp/>is<sp/>reached.<sp/>By<sp/>writing<sp/>this<sp/>as<sp/>a<sp/>&quot;do&quot;<sp/>it</highlight></codeline>
<codeline lineno="2773"><highlight class="comment"><sp/><sp/><sp/><sp/>means<sp/>that<sp/>an<sp/>initial<sp/>]<sp/>is<sp/>taken<sp/>as<sp/>a<sp/>data<sp/>character.<sp/>At<sp/>the<sp/>start<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2774"><highlight class="comment"><sp/><sp/><sp/><sp/>loop,<sp/>c<sp/>contains<sp/>the<sp/>first<sp/>byte<sp/>of<sp/>the<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*oldptr;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2781"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;<sp/>127)</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Braces<sp/>are<sp/>required<sp/>because<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1adb9edaa643276abb04bdca4e2958d8bd" kindref="member">GETCHARLEN</ref>(c,<sp/>ptr,<sp/>ptr);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>macro<sp/>generates<sp/>multiple<sp/>statements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>accumulate<sp/>the<sp/>length<sp/>of<sp/>any<sp/>UTF-8<sp/>extra</highlight></codeline>
<codeline lineno="2787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>and<sp/>reset<sp/>the<sp/>pointer.<sp/>This<sp/>is<sp/>so<sp/>that<sp/>very<sp/>large<sp/>classes<sp/>that</highlight></codeline>
<codeline lineno="2788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>contain<sp/>a<sp/>zillion<sp/>UTF-8<sp/>characters<sp/>no<sp/>longer<sp/>overwrite<sp/>the<sp/>work<sp/>space</highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>(which<sp/>is<sp/>on<sp/>the<sp/>stack).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>class_utf8data<sp/>-<sp/>class_utf8data_base;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>=<sp/>class_utf8data_base;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2798"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inside<sp/>\Q...\E<sp/>everything<sp/>is<sp/>literal<sp/>except<sp/>\E<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inescq)</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>at<sp/>\E<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>literal<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>the<sp/>&apos;E&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Carry<sp/>on<sp/>with<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>CHECK_RANGE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Could<sp/>be<sp/>range<sp/>if<sp/>\E<sp/>follows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>POSIX<sp/>class<sp/>names.<sp/>Perl<sp/>allows<sp/>a<sp/>negation<sp/>extension<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>form<sp/>[:^name:].<sp/>A<sp/>square<sp/>bracket<sp/>that<sp/>doesn&apos;t<sp/>match<sp/>the<sp/>syntax<sp/>is</highlight></codeline>
<codeline lineno="2814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>treated<sp/>as<sp/>a<sp/>literal.<sp/>We<sp/>also<sp/>recognize<sp/>the<sp/>POSIX<sp/>constructions</highlight></codeline>
<codeline lineno="2815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[.ch.]<sp/>and<sp/>[=ch=]<sp/>(&quot;collating<sp/>elements&quot;)<sp/>and<sp/>fault<sp/>them,<sp/>as<sp/>Perl</highlight></codeline>
<codeline lineno="2816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>5.6<sp/>and<sp/>5.8<sp/>do.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_posix_syntax(ptr,<sp/>&amp;tempptr))</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>local_negate<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posix_class,<sp/>taboffset,<sp/>tabopt;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*cbits<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>pbits[32];</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaca025e6764678e389a51d314a058671e" kindref="member">ERR31</ref>;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_negate<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_flip_negation<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>negative<sp/>special<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_class<sp/>=<sp/>check_posix_name(ptr,<sp/>tempptr<sp/>-<sp/>ptr);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posix_class<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaf44acd0c75b79a8dd8a6032abdefc377" kindref="member">ERR30</ref>;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>matching<sp/>is<sp/>caseless,<sp/>upper<sp/>and<sp/>lower<sp/>are<sp/>converted<sp/>to</highlight></codeline>
<codeline lineno="2849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha.<sp/>This<sp/>relies<sp/>on<sp/>the<sp/>fact<sp/>that<sp/>the<sp/>class<sp/>table<sp/>starts<sp/>with</highlight></codeline>
<codeline lineno="2850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,<sp/>lower,<sp/>upper<sp/>as<sp/>the<sp/>first<sp/>3<sp/>entries.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>posix_class<sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_class<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>build<sp/>the<sp/>bit<sp/>map<sp/>for<sp/>the<sp/>POSIX<sp/>class<sp/>in<sp/>a<sp/>chunk<sp/>of<sp/>local<sp/>store</highlight></codeline>
<codeline lineno="2856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>we<sp/>may<sp/>be<sp/>adding<sp/>and<sp/>subtracting<sp/>from<sp/>it,<sp/>and<sp/>we<sp/>don&apos;t<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract<sp/>bits<sp/>that<sp/>may<sp/>be<sp/>in<sp/>the<sp/>main<sp/>map<sp/>already.<sp/>At<sp/>the<sp/>end<sp/>we<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>into<sp/>the<sp/>bit<sp/>map<sp/>that<sp/>is<sp/>being<sp/>built.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posix_class<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>in<sp/>the<sp/>first<sp/>table<sp/>(always<sp/>present)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pbits,<sp/>cbits<sp/>+<sp/>posix_class_maps[posix_class],</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref>));</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>is<sp/>a<sp/>second<sp/>table,<sp/>add<sp/>or<sp/>remove<sp/>it<sp/>as<sp/>required.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>taboffset<sp/>=<sp/>posix_class_maps[posix_class<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabopt<sp/>=<sp/>posix_class_maps[posix_class<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(taboffset<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tabopt<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>pbits[c]<sp/>|=<sp/>cbits[c<sp/>+<sp/>taboffset];</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>pbits[c]<sp/>&amp;=<sp/>~cbits[c<sp/>+<sp/>taboffset];</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>see<sp/>if<sp/>we<sp/>need<sp/>to<sp/>remove<sp/>any<sp/>special<sp/>characters.<sp/>An<sp/>option</highlight></codeline>
<codeline lineno="2881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>of<sp/>1<sp/>removes<sp/>vertical<sp/>space<sp/>and<sp/>2<sp/>removes<sp/>underscore.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tabopt<sp/>&lt;<sp/>0)<sp/>tabopt<sp/>=<sp/>-tabopt;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tabopt<sp/>==<sp/>1)<sp/>pbits[1]<sp/>&amp;=<sp/>~0x3c;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tabopt<sp/>==<sp/>2)<sp/>pbits[11]<sp/>&amp;=<sp/>0x7f;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>POSIX<sp/>table<sp/>or<sp/>its<sp/>complement<sp/>into<sp/>the<sp/>main<sp/>table<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="2888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>being<sp/>built<sp/>and<sp/>we<sp/>are<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_negate)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>~pbits[c];</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>pbits[c];</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>tempptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount<sp/>=<sp/>10;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>&gt;<sp/>1;<sp/>assumes<sp/>more<sp/>than<sp/>1<sp/>per<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>POSIX<sp/>syntax<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Backslash<sp/>may<sp/>introduce<sp/>a<sp/>single<sp/>character,<sp/>or<sp/>it<sp/>may<sp/>introduce<sp/>one</highlight></codeline>
<codeline lineno="2901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>specials,<sp/>which<sp/>just<sp/>set<sp/>a<sp/>flag.<sp/>The<sp/>sequence<sp/>\b<sp/>is<sp/>a<sp/>special</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>case.<sp/>Inside<sp/>a<sp/>class<sp/>(and<sp/>only<sp/>there)<sp/>it<sp/>is<sp/>treated<sp/>as<sp/>backspace.</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Elsewhere<sp/>it<sp/>marks<sp/>a<sp/>word<sp/>boundary.<sp/>Other<sp/>escapes<sp/>have<sp/>preset<sp/>maps<sp/>ready</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>&apos;or&apos;<sp/>into<sp/>the<sp/>one<sp/>we<sp/>are<sp/>building.<sp/>We<sp/>assume<sp/>they<sp/>have<sp/>more<sp/>than<sp/>one</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>character<sp/>in<sp/>them,<sp/>so<sp/>set<sp/>class_charcount<sp/>bigger<sp/>than<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>check_escape(&amp;ptr,<sp/>errorcodeptr,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>,<sp/>options,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*errorcodeptr<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref>)<sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\b<sp/>is<sp/>backspace<sp/>in<sp/>a<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref>)<sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\X<sp/>is<sp/>literal<sp/>X<sp/>in<sp/>a<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a25efd85a43d2bedd76e632e5bd45c681" kindref="member">ESC_R</ref>)<sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\R<sp/>is<sp/>literal<sp/>R<sp/>in<sp/>a<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1c0b42b78dfc33f0f79a2a477ff60360" kindref="member">ESC_Q</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>start<sp/>of<sp/>quoted<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>empty<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af04e9d033be103b364dad4a005b7b5d2" kindref="member">ESC_E</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>orphan<sp/>\E<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*cbits<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref>;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount<sp/>+=<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Greater<sp/>than<sp/>1<sp/>is<sp/>what<sp/>matters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>time<sp/>by<sp/>not<sp/>doing<sp/>this<sp/>in<sp/>the<sp/>pre-compile<sp/>phase.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(-c)</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref>:</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>cbits[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref>:</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_flip_negation<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>~cbits[c+<ref refid="pcre__internal_8h_1a435151c0c1724be9024d8c70ffdf017b" kindref="member">cbit_digit</ref>];</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref>:</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>cbits[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref>:</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_flip_negation<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>~cbits[c+<ref refid="pcre__internal_8h_1aa674bbdc6d619279dc1687e380874e7e" kindref="member">cbit_word</ref>];</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref>:</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>cbits[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[1]<sp/>&amp;=<sp/>~0x08;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perl<sp/>5.004<sp/>onwards<sp/>omits<sp/>VT<sp/>from<sp/>\s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>:</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_flip_negation<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>classbits[c]<sp/>|=<sp/>~cbits[c+<ref refid="pcre__internal_8h_1a39d8c4a79369ab41b5387859520a0bb7" kindref="member">cbit_space</ref>];</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[1]<sp/>|=<sp/>0x08;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perl<sp/>5.004<sp/>onwards<sp/>omits<sp/>VT<sp/>from<sp/>\s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>recognized;<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>&quot;default&quot;<sp/>setting<sp/>to<sp/>stop<sp/>compiler<sp/>warning.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>just<sp/>do<sp/>the<sp/>recognition.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a27c82b44f42f90a4905edcbce7056072" kindref="member">ESC_d</ref><sp/>||<sp/>c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1571052abb3b5d272174e59fee02d258" kindref="member">ESC_D</ref><sp/>||<sp/>c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ac5080ee1def33294e8ed4f13f5b47e46" kindref="member">ESC_w</ref><sp/>||</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a8c05f297c94d96b15d7fe362d7bba9fe" kindref="member">ESC_W</ref><sp/>||<sp/>c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2cbb3cb6547720d56493abd9014f99ff" kindref="member">ESC_s</ref><sp/>||<sp/>c<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a49c45ea3f68c45d3513f30d8e2f9dec8" kindref="member">ESC_S</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>deal<sp/>with<sp/>\H,<sp/>\h,<sp/>\V,<sp/>and<sp/>\v<sp/>in<sp/>both<sp/>phases<sp/>because</highlight></codeline>
<codeline lineno="2974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>use<sp/>extra<sp/>memory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1dded98efc528ea7385e9a6cab3aecf2" kindref="member">ESC_h</ref>)</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x09);<sp/></highlight><highlight class="comment">/*<sp/>VT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x20);<sp/></highlight><highlight class="comment">/*<sp/>SPACE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0xa0);<sp/></highlight><highlight class="comment">/*<sp/>NSBP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="2982"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x1680,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x180e,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2000,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x200A,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x202f,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x205f,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x3000,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3000"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a2de3b4d4b8441e683e3b24f2bc084276" kindref="member">ESC_H</ref>)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x09/8:<sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x09%8);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x20/8:<sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x20%8);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xa0/8:<sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0xa0%8);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[c]<sp/>|=<sp/>x;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3019"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x0100,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x167f,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x1681,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x180d,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x180f,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x1fff,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x200B,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x202e,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2030,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x205e,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2060,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2fff,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x3001,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x7fffffff,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3045"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04ae15c299882d400f680189571d623dc71" kindref="member">ESC_v</ref>)</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x0a);<sp/></highlight><highlight class="comment">/*<sp/>LF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x0b);<sp/></highlight><highlight class="comment">/*<sp/>VT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x0c);<sp/></highlight><highlight class="comment">/*<sp/>FF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x0d);<sp/></highlight><highlight class="comment">/*<sp/>CR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1ac47a41bc402846743c4490200f23ed2c" kindref="member">SETBIT</ref>(classbits,<sp/>0x85);<sp/></highlight><highlight class="comment">/*<sp/>NEL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3056"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2028,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2029,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3064"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a198c47e60a31a0d501f078f61057241d" kindref="member">ESC_V</ref>)</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0a/8:<sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x0a%8);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x0b%8);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x0c%8);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x0d%8);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x85/8:<sp/>x<sp/>^=<sp/>1<sp/>&lt;&lt;<sp/>(0x85%8);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[c]<sp/>|=<sp/>x;</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3086"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x0100,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2027,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x2029,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(0x7fffffff,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3097"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>deal<sp/>with<sp/>\P<sp/>and<sp/>\p<sp/>in<sp/>both<sp/>phases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="3103"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref><sp/>||<sp/>-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref>)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>negated;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdata;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptype<sp/>=<sp/>get_ucp(&amp;ptr,<sp/>&amp;negated,<sp/>&amp;pdata,<sp/>errorcodeptr);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptype<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/>((-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>)<sp/>!=<sp/>negated)?</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1aa52c6e4343ace7a216e24f5fef2dcca2" kindref="member">XCL_PROP</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1a453e08e2935ec98a71efef92baa3cf26" kindref="member">XCL_NOTPROP</ref>;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/>ptype;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/>pdata;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount<sp/>-=<sp/>2;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>a<sp/>&lt;<sp/>256<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3118"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unrecognized<sp/>escapes<sp/>are<sp/>faulted<sp/>if<sp/>PCRE<sp/>is<sp/>running<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="3119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strict<sp/>mode.<sp/>By<sp/>default,<sp/>for<sp/>compatibility<sp/>with<sp/>Perl,<sp/>they<sp/>are</highlight></codeline>
<codeline lineno="3120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>treated<sp/>as<sp/>literals.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1ae356b5a19de6096863c0b9e39e74b92b" kindref="member">PCRE_EXTRA</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaad4658cafaced6369ad36f657ea715ff" kindref="member">ERR7</ref>;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount<sp/>-=<sp/>2;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Undo<sp/>the<sp/>default<sp/>count<sp/>from<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*ptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>final<sp/>character<sp/>and<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>if<sp/>we<sp/>have<sp/>a<sp/>single<sp/>character<sp/>(c<sp/>&gt;=<sp/>0).<sp/>This<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greater<sp/>than<sp/>256<sp/>in<sp/>UTF-8<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>backslash<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>single<sp/>character<sp/>may<sp/>be<sp/>followed<sp/>by<sp/>&apos;-&apos;<sp/>to<sp/>form<sp/>a<sp/>range.<sp/>However,</highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Perl<sp/>does<sp/>not<sp/>permit<sp/>&apos;]&apos;<sp/>to<sp/>be<sp/>the<sp/>end<sp/>of<sp/>the<sp/>range.<sp/>A<sp/>&apos;-&apos;<sp/>character</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>the<sp/>end<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>literal.<sp/>Perl<sp/>ignores<sp/>orphaned<sp/>\E<sp/>sequences</highlight></codeline>
<codeline lineno="3140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>entirely.<sp/>The<sp/>code<sp/>for<sp/>handling<sp/>\Q<sp/>and<sp/>\E<sp/>is<sp/>messy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_RANGE:</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>\r<sp/>or<sp/>\n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a812a945823796f9a6db7bd05bda219e7" kindref="member">PCRE_HASCRORLF</ref>;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inescq<sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>hit<sp/>\Q<sp/>(not<sp/>followed<sp/>by<sp/>\E)<sp/>at<sp/>this<sp/>point,<sp/>go<sp/>into<sp/>escaped</highlight></codeline>
<codeline lineno="3164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;Q&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>{<sp/>ptr<sp/>+=<sp/>2;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0<sp/>||<sp/>(!inescq<sp/>&amp;&amp;<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>oldptr;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>LONE_SINGLE_CHARACTER;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3181"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Braces<sp/>are<sp/>required<sp/>because<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1adb9edaa643276abb04bdca4e2958d8bd" kindref="member">GETCHARLEN</ref>(d,<sp/>ptr,<sp/>ptr);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>macro<sp/>generates<sp/>multiple<sp/>statements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3187"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>*ptr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>UTF-8<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>second<sp/>part<sp/>of<sp/>a<sp/>range<sp/>can<sp/>be<sp/>a<sp/>single-character<sp/>escape,<sp/>but</highlight></codeline>
<codeline lineno="3190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>any<sp/>of<sp/>the<sp/>other<sp/>escapes.<sp/>Perl<sp/>5.6<sp/>treats<sp/>a<sp/>hyphen<sp/>as<sp/>a<sp/>literal</highlight></codeline>
<codeline lineno="3191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>such<sp/>circumstances.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inescq<sp/>&amp;&amp;<sp/>d<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>check_escape(&amp;ptr,<sp/>errorcodeptr,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>,<sp/>options,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*errorcodeptr<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\b<sp/>is<sp/>backspace;<sp/>\X<sp/>is<sp/>literal<sp/>X;<sp/>\R<sp/>is<sp/>literal<sp/>R;<sp/>any<sp/>other</highlight></codeline>
<codeline lineno="3199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>means<sp/>the<sp/>&apos;-&apos;<sp/>was<sp/>literal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref>)<sp/>d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref>)<sp/>d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>-<ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a25efd85a43d2bedd76e632e5bd45c681" kindref="member">ESC_R</ref>)<sp/>d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>oldptr;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>LONE_SINGLE_CHARACTER;<sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>lines<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>the<sp/>two<sp/>values<sp/>are<sp/>in<sp/>the<sp/>correct<sp/>order.<sp/>Optimize</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one-character<sp/>ranges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>c)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaddf64b274098451ad95c4c719549613b" kindref="member">ERR8</ref>;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>c)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>LONE_SINGLE_CHARACTER;<sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>lines<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>\r<sp/>or<sp/>\n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>d<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a812a945823796f9a6db7bd05bda219e7" kindref="member">PCRE_HASCRORLF</ref>;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>if<sp/>the<sp/>upper<sp/>limit<sp/>is<sp/>&gt;<sp/>255,<sp/>or<sp/>&gt;<sp/>127<sp/>for<sp/>caseless</highlight></codeline>
<codeline lineno="3229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching,<sp/>we<sp/>have<sp/>to<sp/>use<sp/>an<sp/>XCLASS<sp/>with<sp/>extra<sp/>data<sp/>items.<sp/>Caseless</highlight></codeline>
<codeline lineno="3230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching<sp/>for<sp/>characters<sp/>&gt;<sp/>127<sp/>is<sp/>available<sp/>only<sp/>if<sp/>UCP<sp/>support<sp/>is</highlight></codeline>
<codeline lineno="3231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3234"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>(d<sp/>&gt;<sp/>255<sp/>||<sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>d<sp/>&gt;<sp/>127)))</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>With<sp/>UCP<sp/>support,<sp/>we<sp/>can<sp/>find<sp/>the<sp/>other<sp/>case<sp/>equivalents<sp/>of</highlight></codeline>
<codeline lineno="3239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>relevant<sp/>characters.<sp/>There<sp/>may<sp/>be<sp/>several<sp/>ranges.<sp/>Optimize<sp/>how</highlight></codeline>
<codeline lineno="3240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>fit<sp/>with<sp/>the<sp/>basic<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="3243"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>occ,<sp/>ocd;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origd<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(get_othercase_range(&amp;cc,<sp/>origd,<sp/>&amp;occ,<sp/>&amp;ocd))</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(occ<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocd<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)d)</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>embedded<sp/>ranges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(occ<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c<sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocd<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c<sp/>-<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extend<sp/>the<sp/>basic<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>is<sp/>overlap,<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>occ;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>noting<sp/>that<sp/>if<sp/>occ<sp/>&lt;<sp/>c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>can&apos;t<sp/>have<sp/>ocd<sp/>&gt;<sp/>d<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>because<sp/>a<sp/>subrange<sp/>is<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocd<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)d<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>occ<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)d<sp/>+<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>always<sp/>shorter<sp/>than<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>basic<sp/>range.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>ocd;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(occ<sp/>==<sp/>ocd)</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(occ,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(ocd,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UCP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3280"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>record<sp/>the<sp/>original<sp/>range,<sp/>possibly<sp/>modified<sp/>for<sp/>UCP<sp/>caseless</highlight></codeline>
<codeline lineno="3282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlapping<sp/>ranges.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a8cf9b4e27fdd6615271ba4aa9cc20850" kindref="member">XCL_RANGE</ref>;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(c,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(d,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>With<sp/>UCP<sp/>support,<sp/>we<sp/>are<sp/>done.<sp/>Without<sp/>UCP<sp/>support,<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="3289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caseless<sp/>matching<sp/>for<sp/>UTF-8<sp/>characters<sp/>&gt;<sp/>127;<sp/>we<sp/>can<sp/>use<sp/>the<sp/>bit<sp/>map</highlight></codeline>
<codeline lineno="3290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>smaller<sp/>ones.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="3293"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>With<sp/>next<sp/>character<sp/>in<sp/>the<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3295"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>==<sp/>0<sp/>||<sp/>c<sp/>&gt;<sp/>127)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjust<sp/>upper<sp/>limit<sp/>and<sp/>fall<sp/>through<sp/>to<sp/>set<sp/>up<sp/>the<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>127;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UCP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3302"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3304"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>bit<sp/>map<sp/>for<sp/>all<sp/>cases<sp/>when<sp/>not<sp/>in<sp/>UTF-8<sp/>mode;<sp/>else</highlight></codeline>
<codeline lineno="3306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranges<sp/>that<sp/>lie<sp/>entirely<sp/>within<sp/>0-127<sp/>when<sp/>there<sp/>is<sp/>UCP<sp/>support;<sp/>else</highlight></codeline>
<codeline lineno="3307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>partial<sp/>ranges<sp/>without<sp/>UCP<sp/>support.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount<sp/>+=<sp/>d<sp/>-<sp/>c<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_lastchar<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>save<sp/>a<sp/>bit<sp/>of<sp/>time<sp/>by<sp/>skipping<sp/>this<sp/>in<sp/>the<sp/>pre-compile.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>c<sp/>&lt;=<sp/>d;<sp/>c++)</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[c/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(c&amp;7));</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uc<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[c];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flip<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[uc/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(uc&amp;7));</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>get<sp/>the<sp/>next<sp/>char<sp/>in<sp/>the<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>a<sp/>lone<sp/>single<sp/>character<sp/>-<sp/>we<sp/>can<sp/>get<sp/>here<sp/>for<sp/>a<sp/>normal</highlight></codeline>
<codeline lineno="3328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>non-escape<sp/>char,<sp/>or<sp/>after<sp/>\<sp/>that<sp/>introduces<sp/>a<sp/>single<sp/>character<sp/>or<sp/>for<sp/>an</highlight></codeline>
<codeline lineno="3329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>apparent<sp/>range<sp/>that<sp/>isn&apos;t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LONE_SINGLE_CHARACTER:</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>a<sp/>character<sp/>that<sp/>cannot<sp/>go<sp/>in<sp/>the<sp/>bit<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3336"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>(c<sp/>&gt;<sp/>255<sp/>||<sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>&gt;<sp/>127)))</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(c,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="3343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>othercase;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((othercase<sp/>=<sp/><ref refid="pcre__internal_8h_1acfffcba9402d3a92d4dcdc9b0871ff7f" kindref="member">UCD_OTHERCASE</ref>(c))<sp/>!=<sp/>c)</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1af43a3d4893ab8f30efec6b29d942ed86" kindref="member">XCL_SINGLE</ref>;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_utf8data<sp/>+=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(othercase,<sp/>class_utf8data);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UCP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3353"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SUPPORT_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3357"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>a<sp/>single-byte<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[c/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(c&amp;7));</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[c];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flip<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classbits[c/8]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(c&amp;7));</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_charcount++;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_lastchar<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>until<sp/>&apos;]&apos;<sp/>reached.<sp/>This<sp/>&quot;while&quot;<sp/>is<sp/>the<sp/>end<sp/>of<sp/>the<sp/>&quot;do&quot;<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*(++ptr))<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>||<sp/>inescq));</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Missing<sp/>terminating<sp/>&apos;]&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaa2ca9170a79f25df117aee289dbb0f6b" kindref="member">ERR6</ref>;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>code<sp/>has<sp/>been<sp/>disabled<sp/>because<sp/>it<sp/>would<sp/>mean<sp/>that<sp/>\s<sp/>counts<sp/>as</highlight></codeline>
<codeline lineno="3383"><highlight class="comment">an<sp/>explicit<sp/>\r<sp/>or<sp/>\n<sp/>reference,<sp/>and<sp/>that&apos;s<sp/>not<sp/>really<sp/>what<sp/>is<sp/>wanted.<sp/>Now</highlight></codeline>
<codeline lineno="3384"><highlight class="comment">we<sp/>set<sp/>the<sp/>flag<sp/>only<sp/>if<sp/>there<sp/>is<sp/>a<sp/>literal<sp/>&quot;\r&quot;<sp/>or<sp/>&quot;\n&quot;<sp/>in<sp/>the<sp/>class.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="3387"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>whether<sp/>\r<sp/>or<sp/>\n<sp/>are<sp/>in<sp/>this<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negate_class)</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((classbits[1]<sp/>&amp;<sp/>0x24)<sp/>!=<sp/>0x24)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a812a945823796f9a6db7bd05bda219e7" kindref="member">PCRE_HASCRORLF</ref>;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((classbits[1]<sp/>&amp;<sp/>0x24)<sp/>!=<sp/>0)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a812a945823796f9a6db7bd05bda219e7" kindref="member">PCRE_HASCRORLF</ref>;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3398"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>class_charcount<sp/>is<sp/>1,<sp/>we<sp/>saw<sp/>precisely<sp/>one<sp/>character<sp/>whose<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="3401"><highlight class="comment"><sp/><sp/><sp/><sp/>less<sp/>than<sp/>256.<sp/>As<sp/>long<sp/>as<sp/>there<sp/>were<sp/>no<sp/>characters<sp/>&gt;=<sp/>128<sp/>and<sp/>there<sp/>was<sp/>no</highlight></codeline>
<codeline lineno="3402"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>of<sp/>\p<sp/>or<sp/>\P,<sp/>in<sp/>other<sp/>words,<sp/>no<sp/>use<sp/>of<sp/>any<sp/>XCLASS<sp/>features,<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="3403"><highlight class="comment"><sp/><sp/><sp/><sp/>optimize.</highlight></codeline>
<codeline lineno="3404"><highlight class="comment"></highlight></codeline>
<codeline lineno="3405"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>UTF-8<sp/>mode,<sp/>we<sp/>can<sp/>optimize<sp/>the<sp/>negative<sp/>case<sp/>only<sp/>if<sp/>there<sp/>were<sp/>no</highlight></codeline>
<codeline lineno="3406"><highlight class="comment"><sp/><sp/><sp/><sp/>characters<sp/>&gt;=<sp/>128<sp/>because<sp/>OP_NOT<sp/>and<sp/>the<sp/>related<sp/>opcodes<sp/>like<sp/>OP_NOTSTAR</highlight></codeline>
<codeline lineno="3407"><highlight class="comment"><sp/><sp/><sp/><sp/>operate<sp/>on<sp/>single-bytes<sp/>only.<sp/>This<sp/>is<sp/>an<sp/>historical<sp/>hangover.<sp/>Maybe<sp/>one<sp/>day</highlight></codeline>
<codeline lineno="3408"><highlight class="comment"><sp/><sp/><sp/><sp/>we<sp/>can<sp/>tidy<sp/>these<sp/>opcodes<sp/>to<sp/>handle<sp/>multi-byte<sp/>characters.</highlight></codeline>
<codeline lineno="3409"><highlight class="comment"></highlight></codeline>
<codeline lineno="3410"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>optimization<sp/>throws<sp/>away<sp/>the<sp/>bit<sp/>map.<sp/>We<sp/>turn<sp/>the<sp/>item<sp/>into<sp/>a</highlight></codeline>
<codeline lineno="3411"><highlight class="comment"><sp/><sp/><sp/><sp/>1-character<sp/>OP_CHAR[NC]<sp/>if<sp/>it&apos;s<sp/>positive,<sp/>or<sp/>OP_NOT<sp/>if<sp/>it&apos;s<sp/>negative.<sp/>Note</highlight></codeline>
<codeline lineno="3412"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>OP_NOT<sp/>does<sp/>not<sp/>support<sp/>multibyte<sp/>characters.<sp/>In<sp/>the<sp/>positive<sp/>case,<sp/>it</highlight></codeline>
<codeline lineno="3413"><highlight class="comment"><sp/><sp/><sp/><sp/>can<sp/>cause<sp/>firstbyte<sp/>to<sp/>be<sp/>set.<sp/>Otherwise,<sp/>there<sp/>can<sp/>be<sp/>no<sp/>first<sp/>char<sp/>if</highlight></codeline>
<codeline lineno="3414"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>item<sp/>is<sp/>first,<sp/>whatever<sp/>repeat<sp/>count<sp/>may<sp/>follow.<sp/>In<sp/>the<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="3415"><highlight class="comment"><sp/><sp/><sp/><sp/>reqbyte,<sp/>save<sp/>the<sp/>previous<sp/>value<sp/>for<sp/>reinstating.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3418"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_charcount<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!class_utf8<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!utf8<sp/>||<sp/>!negate_class<sp/>||<sp/>class_lastchar<sp/>&lt;<sp/>128))</highlight></codeline>
<codeline lineno="3420"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_charcount<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3423"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>OP_NOT<sp/>opcode<sp/>works<sp/>on<sp/>one-byte<sp/>characters<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negate_class)</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>class_lastchar;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>single,<sp/>positive<sp/>character,<sp/>get<sp/>the<sp/>value<sp/>into<sp/>mcbuffer,<sp/>and</highlight></codeline>
<codeline lineno="3438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>we<sp/>can<sp/>handle<sp/>this<sp/>with<sp/>the<sp/>normal<sp/>one-character<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3441"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>class_lastchar<sp/>&gt;<sp/>127)</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mclength<sp/>=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(class_lastchar,<sp/>mcbuffer);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3445"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcbuffer[0]<sp/>=<sp/>class_lastchar;</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mclength<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ONE_CHAR;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>1-char<sp/>optimization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>general<sp/>case<sp/>-<sp/>not<sp/>the<sp/>one-char<sp/>optimization.<sp/>If<sp/>this<sp/>is<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="3453"><highlight class="comment"><sp/><sp/><sp/><sp/>thing<sp/>in<sp/>the<sp/>branch,<sp/>there<sp/>can<sp/>be<sp/>no<sp/>first<sp/>char<sp/>setting,<sp/>whatever<sp/>the</highlight></codeline>
<codeline lineno="3454"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat<sp/>count.<sp/>Any<sp/>reqbyte<sp/>setting<sp/>must<sp/>remain<sp/>unchanged<sp/>after<sp/>any<sp/>kind<sp/>of</highlight></codeline>
<codeline lineno="3455"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>are<sp/>characters<sp/>with<sp/>values<sp/>&gt;<sp/>255,<sp/>we<sp/>have<sp/>to<sp/>compile<sp/>an</highlight></codeline>
<codeline lineno="3462"><highlight class="comment"><sp/><sp/><sp/><sp/>extended<sp/>class,<sp/>with<sp/>its<sp/>own<sp/>opcode,<sp/>unless<sp/>there<sp/>was<sp/>a<sp/>negated<sp/>special</highlight></codeline>
<codeline lineno="3463"><highlight class="comment"><sp/><sp/><sp/><sp/>such<sp/>as<sp/>\S<sp/>in<sp/>the<sp/>class,<sp/>because<sp/>in<sp/>that<sp/>case<sp/>all<sp/>characters<sp/>&gt;<sp/>255<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="3464"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>class,<sp/>so<sp/>any<sp/>that<sp/>were<sp/>explicitly<sp/>given<sp/>as<sp/>well<sp/>can<sp/>be<sp/>ignored.<sp/>If</highlight></codeline>
<codeline lineno="3465"><highlight class="comment"><sp/><sp/><sp/><sp/>(when<sp/>there<sp/>are<sp/>explicit<sp/>characters<sp/>&gt;<sp/>255<sp/>that<sp/>must<sp/>be<sp/>listed)<sp/>there<sp/>are<sp/>no</highlight></codeline>
<codeline lineno="3466"><highlight class="comment"><sp/><sp/><sp/><sp/>characters<sp/>&lt;<sp/>256,<sp/>we<sp/>can<sp/>omit<sp/>the<sp/>bitmap<sp/>in<sp/>the<sp/>actual<sp/>compiled<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3469"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_utf8<sp/>&amp;&amp;<sp/>!should_flip_negation)</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*class_utf8data++<sp/>=<sp/><ref refid="pcre__internal_8h_1a04b5e33bae61968528821a82fd464b34" kindref="member">XCL_END</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Marks<sp/>the<sp/>end<sp/>of<sp/>extra<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref>;</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/>negate_class?<sp/><ref refid="pcre__internal_8h_1a67239aceb7a3a46c22ce32c9e17b4d78" kindref="member">XCL_NOT</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>map<sp/>is<sp/>required,<sp/>move<sp/>up<sp/>the<sp/>extra<sp/>data<sp/>to<sp/>make<sp/>room<sp/>for<sp/>it;</highlight></codeline>
<codeline lineno="3477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>just<sp/>move<sp/>the<sp/>code<sp/>pointer<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>extra<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_charcount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>|=<sp/><ref refid="pcre__internal_8h_1ae1fdbc9124ca5c922fe49dbcb07ac9c0" kindref="member">XCL_MAP</ref>;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(code<sp/>+<sp/>32,<sp/>code,<sp/>class_utf8data<sp/>-<sp/>code);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>classbits,<sp/>32);</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>class_utf8data<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>class_utf8data;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>fill<sp/>in<sp/>the<sp/>complete<sp/>length<sp/>of<sp/>the<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PUT(previous,<sp/>1,<sp/>code<sp/>-<sp/>previous);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>class<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3494"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>are<sp/>no<sp/>characters<sp/>&gt;<sp/>255,<sp/>set<sp/>the<sp/>opcode<sp/>to<sp/>OP_CLASS<sp/>or</highlight></codeline>
<codeline lineno="3496"><highlight class="comment"><sp/><sp/><sp/><sp/>OP_NCLASS,<sp/>depending<sp/>on<sp/>whether<sp/>the<sp/>whole<sp/>class<sp/>was<sp/>negated<sp/>and<sp/>whether</highlight></codeline>
<codeline lineno="3497"><highlight class="comment"><sp/><sp/><sp/><sp/>there<sp/>were<sp/>negative<sp/>specials<sp/>such<sp/>as<sp/>\S<sp/>in<sp/>the<sp/>class.<sp/>Then<sp/>copy<sp/>the<sp/>32-byte</highlight></codeline>
<codeline lineno="3498"><highlight class="comment"><sp/><sp/><sp/><sp/>map<sp/>into<sp/>the<sp/>code<sp/>vector,<sp/>negating<sp/>it<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>(negate_class<sp/>==<sp/>should_flip_negation)<sp/>?<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f99e671caee687d352cce89c95e04c9" kindref="member">OP_CLASS</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca73f1f5998cb564a4df3d4424f44fa974" kindref="member">OP_NCLASS</ref>;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(negate_class)</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>time<sp/>in<sp/>the<sp/>pre-compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>32;<sp/>c++)<sp/>code[c]<sp/>=<sp/>~classbits[c];</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>classbits,<sp/>32);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Various<sp/>kinds<sp/>of<sp/>repeat;<sp/>&apos;{&apos;<sp/>is<sp/>not<sp/>necessarily<sp/>a<sp/>quantifier,<sp/>but<sp/>this</highlight></codeline>
<codeline lineno="3516"><highlight class="comment"><sp/><sp/><sp/><sp/>has<sp/>been<sp/>tested<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_quantifier)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NORMAL_CHAR;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>read_repeat_counts(ptr+1,<sp/>&amp;repeat_min,<sp/>&amp;repeat_max,<sp/>errorcodeptr);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*errorcodeptr<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>REPEAT;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_max<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>REPEAT;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_min<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_max<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>REPEAT;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat_max<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>REPEAT:</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea1a7e27a3f4b1adfe1a364ff18774ea7a" kindref="member">ERR9</ref>;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/>zerofirstbyte;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjust<sp/>for<sp/>zero<sp/>repeat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reqbyte<sp/>=<sp/>zeroreqbyte;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ditto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>variable<sp/>length<sp/>repeat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/>reqvary<sp/>=<sp/>(repeat_min<sp/>==<sp/>repeat_max)?<sp/>0<sp/>:<sp/><ref refid="pcre__internal_8h_1a1a5a2f42aaea27efaa2abc899f29703c" kindref="member">REQ_VARY</ref>;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/>op_type<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>single-char<sp/>op<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>possessive_quantifier<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>not<sp/>possessive<sp/>quantifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>start<sp/>of<sp/>previous<sp/>item,<sp/>in<sp/>case<sp/>we<sp/>have<sp/>to<sp/>move<sp/>it<sp/>up<sp/>to<sp/>make<sp/>space</highlight></codeline>
<codeline lineno="3559"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>an<sp/>inserted<sp/>OP_ONCE<sp/>for<sp/>the<sp/>additional<sp/>&apos;+&apos;<sp/>extension.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/>tempcode<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>next<sp/>character<sp/>is<sp/>&apos;+&apos;,<sp/>we<sp/>have<sp/>a<sp/>possessive<sp/>quantifier.<sp/>This</highlight></codeline>
<codeline lineno="3564"><highlight class="comment"><sp/><sp/><sp/><sp/>implies<sp/>greediness,<sp/>whatever<sp/>the<sp/>setting<sp/>of<sp/>the<sp/>PCRE_UNGREEDY<sp/>option.</highlight></codeline>
<codeline lineno="3565"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>next<sp/>character<sp/>is<sp/>&apos;?&apos;<sp/>this<sp/>is<sp/>a<sp/>minimizing<sp/>repeat,<sp/>by<sp/>default,</highlight></codeline>
<codeline lineno="3566"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>if<sp/>PCRE_UNGREEDY<sp/>is<sp/>set,<sp/>it<sp/>works<sp/>the<sp/>other<sp/>way<sp/>round.<sp/>We<sp/>change<sp/>the</highlight></codeline>
<codeline lineno="3567"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat<sp/>type<sp/>to<sp/>the<sp/>non-default.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>greedy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>possessive_quantifier<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>=<sp/>greedy_non_default;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>repeat_type<sp/>=<sp/>greedy_default;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>was<sp/>a<sp/>character<sp/>match,<sp/>abolish<sp/>the<sp/>item<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline lineno="3583"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat<sp/>item<sp/>instead.<sp/>If<sp/>a<sp/>char<sp/>item<sp/>has<sp/>a<sp/>minumum<sp/>of<sp/>more<sp/>than<sp/>one,<sp/>ensure</highlight></codeline>
<codeline lineno="3584"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>it<sp/>is<sp/>set<sp/>in<sp/>reqbyte<sp/>-<sp/>it<sp/>might<sp/>not<sp/>be<sp/>if<sp/>a<sp/>sequence<sp/>such<sp/>as<sp/>x{3}<sp/>is</highlight></codeline>
<codeline lineno="3585"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>first<sp/>thing<sp/>in<sp/>a<sp/>branch<sp/>because<sp/>the<sp/>x<sp/>will<sp/>have<sp/>gone<sp/>into<sp/>firstbyte</highlight></codeline>
<codeline lineno="3586"><highlight class="comment"><sp/><sp/><sp/><sp/>instead.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref><sp/>||<sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>)</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>UTF-8<sp/>characters<sp/>that<sp/>take<sp/>up<sp/>more<sp/>than<sp/>one<sp/>byte.<sp/>It&apos;s</highlight></codeline>
<codeline lineno="3591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>easier<sp/>to<sp/>write<sp/>this<sp/>out<sp/>separately<sp/>than<sp/>try<sp/>to<sp/>macrify<sp/>it.<sp/>Use<sp/>c<sp/>to</highlight></codeline>
<codeline lineno="3592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>hold<sp/>the<sp/>length<sp/>of<sp/>the<sp/>character<sp/>in<sp/>bytes,<sp/>plus<sp/>0x80<sp/>to<sp/>flag<sp/>that<sp/>it&apos;s<sp/>a</highlight></codeline>
<codeline lineno="3593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>rather<sp/>than<sp/>a<sp/>small<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3596"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>(code[-1]<sp/>&amp;<sp/>0x80)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*lastchar<sp/>=<sp/>code<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*lastchar<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80)<sp/>lastchar--;</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>code<sp/>-<sp/>lastchar;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>UTF-8<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(utf8_char,<sp/>lastchar,<sp/>c);<sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>|=<sp/>0x80;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>c<sp/>as<sp/>a<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3606"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>the<sp/>case<sp/>of<sp/>a<sp/>single<sp/>byte<sp/>-<sp/>either<sp/>with<sp/>no<sp/>UTF8<sp/>support,<sp/>or</highlight></codeline>
<codeline lineno="3608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>UTF-8<sp/>disabled,<sp/>or<sp/>for<sp/>a<sp/>UTF-8<sp/>character<sp/>&lt;<sp/>128.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>code[-1];</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>&gt;<sp/>1)<sp/>reqbyte<sp/>=<sp/>c<sp/>|<sp/>req_caseopt<sp/>|<sp/>cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref>;</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>repetition<sp/>is<sp/>unlimited,<sp/>it<sp/>pays<sp/>to<sp/>see<sp/>if<sp/>the<sp/>next<sp/>thing<sp/>on</highlight></codeline>
<codeline lineno="3616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>line<sp/>is<sp/>something<sp/>that<sp/>cannot<sp/>possibly<sp/>match<sp/>this<sp/>character.<sp/>If<sp/>so,</highlight></codeline>
<codeline lineno="3617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>automatically<sp/>possessifying<sp/>this<sp/>item<sp/>gains<sp/>some<sp/>performance<sp/>in<sp/>the<sp/>case</highlight></codeline>
<codeline lineno="3618"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>the<sp/>match<sp/>fails.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!possessive_quantifier<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_max<sp/>&lt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_auto_possessive(*previous,<sp/>c,<sp/>utf8,<sp/>utf8_char,<sp/>ptr<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,<sp/>cd))</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>greedy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possessive_quantifier<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OUTPUT_SINGLE_REPEAT;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Code<sp/>shared<sp/>with<sp/>single<sp/>character<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>was<sp/>a<sp/>single<sp/>negated<sp/>character<sp/>([^a]<sp/>or<sp/>similar),<sp/>we<sp/>use</highlight></codeline>
<codeline lineno="3633"><highlight class="comment"><sp/><sp/><sp/><sp/>one<sp/>of<sp/>the<sp/>special<sp/>opcodes,<sp/>replacing<sp/>it.<sp/>The<sp/>code<sp/>is<sp/>shared<sp/>with<sp/>single-</highlight></codeline>
<codeline lineno="3634"><highlight class="comment"><sp/><sp/><sp/><sp/>character<sp/>repeats<sp/>by<sp/>setting<sp/>opt_type<sp/>to<sp/>add<sp/>a<sp/>suitable<sp/>offset<sp/>into</highlight></codeline>
<codeline lineno="3635"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat_type.<sp/>We<sp/>can<sp/>also<sp/>test<sp/>for<sp/>auto-possessification.<sp/>OP_NOT<sp/>is</highlight></codeline>
<codeline lineno="3636"><highlight class="comment"><sp/><sp/><sp/><sp/>currently<sp/>used<sp/>only<sp/>for<sp/>single-byte<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>)</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op_type<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa6487aefb16e0f5dcad93fdce1e3f373" kindref="member">OP_NOTSTAR</ref><sp/>-<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>&quot;not&quot;<sp/>opcodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>previous[1];</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!possessive_quantifier<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_max<sp/>&lt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_auto_possessive(<ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca36a6b73cc4823f54891a013e2cc760d1" kindref="member">OP_NOT</ref>,<sp/>c,<sp/>utf8,<sp/>NULL,<sp/>ptr<sp/>+<sp/>1,<sp/>options,<sp/>cd))</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>greedy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possessive_quantifier<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OUTPUT_SINGLE_REPEAT;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>was<sp/>a<sp/>character<sp/>type<sp/>match<sp/>(\d<sp/>or<sp/>similar),<sp/>abolish<sp/>it<sp/>and</highlight></codeline>
<codeline lineno="3653"><highlight class="comment"><sp/><sp/><sp/><sp/>create<sp/>a<sp/>suitable<sp/>repeat<sp/>item.<sp/>The<sp/>code<sp/>is<sp/>shared<sp/>with<sp/>single-character</highlight></codeline>
<codeline lineno="3654"><highlight class="comment"><sp/><sp/><sp/><sp/>repeats<sp/>by<sp/>setting<sp/>op_type<sp/>to<sp/>add<sp/>a<sp/>suitable<sp/>offset<sp/>into<sp/>repeat_type.<sp/>Note</highlight></codeline>
<codeline lineno="3655"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>the<sp/>Unicode<sp/>property<sp/>types<sp/>will<sp/>be<sp/>present<sp/>only<sp/>when<sp/>SUPPORT_UCP<sp/>is</highlight></codeline>
<codeline lineno="3656"><highlight class="comment"><sp/><sp/><sp/><sp/>defined,<sp/>but<sp/>we<sp/>don&apos;t<sp/>wrap<sp/>the<sp/>little<sp/>bits<sp/>of<sp/>code<sp/>here<sp/>because<sp/>it<sp/>just</highlight></codeline>
<codeline lineno="3657"><highlight class="comment"><sp/><sp/><sp/><sp/>makes<sp/>it<sp/>horribly<sp/>messy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>&lt;<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca82ce2835231171cc2d3d208e96873efb" kindref="member">OP_EODN</ref>)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*oldcode;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prop_type,<sp/>prop_value;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op_type<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref><sp/>-<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbac82509d3e6ec4e48888a58a65fea0" kindref="member">OP_STAR</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>type<sp/>opcodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*previous;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!possessive_quantifier<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_max<sp/>&lt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_auto_possessive(c,<sp/>0,<sp/>utf8,<sp/>NULL,<sp/>ptr<sp/>+<sp/>1,<sp/>options,<sp/>cd))</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>greedy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possessive_quantifier<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_SINGLE_REPEAT:</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>)</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop_type<sp/>=<sp/>previous[1];</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop_value<sp/>=<sp/>previous[2];</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>prop_type<sp/>=<sp/>prop_value<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldcode<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>previous;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Usually<sp/>overwrite<sp/>previous<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>zero<sp/>then<sp/>the<sp/>minimum<sp/>must<sp/>also<sp/>be<sp/>zero;<sp/>Perl<sp/>allows</highlight></codeline>
<codeline lineno="3686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>case,<sp/>so<sp/>we<sp/>do<sp/>too<sp/>-<sp/>by<sp/>simply<sp/>omitting<sp/>the<sp/>item<sp/>altogether.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>real<sp/>repeats<sp/>make<sp/>it<sp/>impossible<sp/>to<sp/>handle<sp/>partial<sp/>matching<sp/>(maybe</highlight></codeline>
<codeline lineno="3691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>day<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>remove<sp/>this<sp/>restriction).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>!=<sp/>1)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a7eada40373dcbebeba6d3d984530fa51" kindref="member">PCRE_NOPARTIAL</ref>;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Combine<sp/>the<sp/>op_type<sp/>with<sp/>the<sp/>repeat_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>repeat_type<sp/>+=<sp/>op_type;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>minimum<sp/>of<sp/>zero<sp/>is<sp/>handled<sp/>either<sp/>as<sp/>the<sp/>special<sp/>case<sp/>*<sp/>or<sp/>?,<sp/>or<sp/>as</highlight></codeline>
<codeline lineno="3700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>UPTO,<sp/>with<sp/>the<sp/>maximum<sp/>given.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>-1)<sp/>*code++<sp/>=<sp/>OP_STAR<sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>1)<sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_max);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>repeat<sp/>minimum<sp/>of<sp/>1<sp/>is<sp/>optimized<sp/>into<sp/>some<sp/>special<sp/>cases.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="3714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>maximum<sp/>is<sp/>unlimited,<sp/>we<sp/>use<sp/>OP_PLUS.<sp/>Otherwise,<sp/>the<sp/>original<sp/>item<sp/>is</highlight></codeline>
<codeline lineno="3715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>in<sp/>place<sp/>and,<sp/>if<sp/>the<sp/>maximum<sp/>is<sp/>greater<sp/>than<sp/>1,<sp/>we<sp/>use<sp/>OP_UPTO<sp/>with</highlight></codeline>
<codeline lineno="3716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>less<sp/>than<sp/>the<sp/>maximum.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>oldcode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>leave<sp/>previous<sp/>item<sp/>in<sp/>place<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_max<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>case<sp/>{n,n}<sp/>is<sp/>just<sp/>an<sp/>EXACT,<sp/>while<sp/>the<sp/>general<sp/>case<sp/>{n,m}<sp/>is</highlight></codeline>
<codeline lineno="3732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>as<sp/>an<sp/>EXACT<sp/>followed<sp/>by<sp/>an<sp/>UPTO.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref><sp/>+<sp/>op_type;<sp/><sp/></highlight><highlight class="comment">/*<sp/>NB<sp/>EXACT<sp/>doesn&apos;t<sp/>have<sp/>repeat_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_min);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>unlimited,<sp/>insert<sp/>an<sp/>OP_STAR.<sp/>Before<sp/>doing<sp/>so,</highlight></codeline>
<codeline lineno="3740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>have<sp/>to<sp/>insert<sp/>the<sp/>character<sp/>for<sp/>the<sp/>previous<sp/>code.<sp/>For<sp/>a<sp/>repeated</highlight></codeline>
<codeline lineno="3741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unicode<sp/>property<sp/>match,<sp/>there<sp/>are<sp/>two<sp/>extra<sp/>bytes<sp/>that<sp/>define<sp/>the</highlight></codeline>
<codeline lineno="3742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>property.<sp/>In<sp/>UTF-8<sp/>mode,<sp/>long<sp/>characters<sp/>have<sp/>their<sp/>length<sp/>in</highlight></codeline>
<codeline lineno="3743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,<sp/>with<sp/>the<sp/>0x80<sp/>bit<sp/>as<sp/>a<sp/>flag.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3748"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;=<sp/>128)</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>utf8_char,<sp/>c<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>c<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3755"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop_type<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_type;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_value;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>OP_STAR<sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Else<sp/>insert<sp/>an<sp/>UPTO<sp/>if<sp/>the<sp/>max<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>min,<sp/>again</highlight></codeline>
<codeline lineno="3767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preceded<sp/>by<sp/>the<sp/>character,<sp/>for<sp/>the<sp/>previously<sp/>inserted<sp/>code.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="3768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPTO<sp/>is<sp/>just<sp/>for<sp/>1<sp/>instance,<sp/>we<sp/>can<sp/>use<sp/>QUERY<sp/>instead.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>!=<sp/>repeat_min)</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3773"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;=<sp/>128)</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>utf8_char,<sp/>c<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>c<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3780"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop_type<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_type;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_value;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_max<sp/>-=<sp/>repeat_min;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_max);</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>character<sp/>or<sp/>character<sp/>type<sp/>itself<sp/>comes<sp/>last<sp/>in<sp/>all<sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="3803"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;=<sp/>128)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>utf8_char,<sp/>c<sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>c<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3810"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>repeated<sp/>Unicode<sp/>property<sp/>match,<sp/>there<sp/>are<sp/>two<sp/>extra<sp/>bytes<sp/>that</highlight></codeline>
<codeline lineno="3813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>the<sp/>required<sp/>property.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="3816"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop_type<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_type;</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>prop_value;</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3822"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>was<sp/>a<sp/>character<sp/>class<sp/>or<sp/>a<sp/>back<sp/>reference,<sp/>we<sp/>put<sp/>the<sp/>repeat</highlight></codeline>
<codeline lineno="3825"><highlight class="comment"><sp/><sp/><sp/><sp/>stuff<sp/>after<sp/>it,<sp/>but<sp/>just<sp/>skip<sp/>the<sp/>item<sp/>if<sp/>the<sp/>repeat<sp/>was<sp/>{0,0}.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1f99e671caee687d352cce89c95e04c9" kindref="member">OP_CLASS</ref><sp/>||</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca73f1f5998cb564a4df3d4424f44fa974" kindref="member">OP_NCLASS</ref><sp/>||</highlight></codeline>
<codeline lineno="3829"><highlight class="normal">#ifdef<sp/><ref refid="pcre__config_8h_1a6413a9723e5adba3279597ef388625e5" kindref="member">SUPPORT_UTF8</ref></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacd62821c239c3917560a909bb19bceb3" kindref="member">OP_XCLASS</ref><sp/>||</highlight></codeline>
<codeline lineno="3831"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac86259a3769caa81a0a61a9ec3c58129" kindref="member">OP_REF</ref>)</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>real<sp/>repeats<sp/>make<sp/>it<sp/>impossible<sp/>to<sp/>handle<sp/>partial<sp/>matching<sp/>(maybe</highlight></codeline>
<codeline lineno="3841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>day<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>remove<sp/>this<sp/>restriction).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>!=<sp/>1)<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a7eada40373dcbebeba6d3d984530fa51" kindref="member">PCRE_NOPARTIAL</ref>;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>repeat_max<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab178cbd2052d88d8a045cd6dbb97c71e" kindref="member">OP_CRSTAR</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>repeat_max<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac303a560989ad3a69b3cbc84030d2b68" kindref="member">OP_CRPLUS</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>repeat_max<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca4ed5d933aaca7d07f0641e8971680673" kindref="member">OP_CRQUERY</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca27e60147a7e03aca767f97da8338f76e" kindref="member">OP_CRRANGE</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_min);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>-1)<sp/>repeat_max<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>2-byte<sp/>encoding<sp/>for<sp/>max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>repeat_max);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>was<sp/>a<sp/>bracket<sp/>group,<sp/>we<sp/>may<sp/>have<sp/>to<sp/>replicate<sp/>it<sp/>in<sp/>certain</highlight></codeline>
<codeline lineno="3861"><highlight class="comment"><sp/><sp/><sp/><sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref><sp/><sp/>||<sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref><sp/>||</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref><sp/>||<sp/>*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>)</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ketoffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>code<sp/>-<sp/>previous;</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*bralink<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Repeating<sp/>a<sp/>DEFINE<sp/>group<sp/>is<sp/>pointless<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref><sp/>&amp;&amp;<sp/>previous[LINK_SIZE+1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>)</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea239126741bd9351518b92a368084e0d6" kindref="member">ERR55</ref>;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>repeat<sp/>count<sp/>is<sp/>unlimited,<sp/>find<sp/>the<sp/>end<sp/>of<sp/>the<sp/>bracket</highlight></codeline>
<codeline lineno="3880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>scanning<sp/>through<sp/>from<sp/>the<sp/>start,<sp/>and<sp/>compute<sp/>the<sp/>offset<sp/>back<sp/>to<sp/>it</highlight></codeline>
<codeline lineno="3881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>current<sp/>code<sp/>pointer.<sp/>There<sp/>may<sp/>be<sp/>an<sp/>OP_OPT<sp/>setting<sp/>following</highlight></codeline>
<codeline lineno="3882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>final<sp/>KET,<sp/>so<sp/>we<sp/>can&apos;t<sp/>find<sp/>the<sp/>end<sp/>just<sp/>by<sp/>going<sp/>back<sp/>from<sp/>the<sp/>code</highlight></codeline>
<codeline lineno="3883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ket<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ket<sp/>+=<sp/>GET(ket,<sp/>1);<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ket<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ketoffset<sp/>=<sp/>code<sp/>-<sp/>ket;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>case<sp/>of<sp/>a<sp/>zero<sp/>minimum<sp/>is<sp/>special<sp/>because<sp/>of<sp/>the<sp/>need<sp/>to<sp/>stick</highlight></codeline>
<codeline lineno="3893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>OP_BRAZERO<sp/>in<sp/>front<sp/>of<sp/>it,<sp/>and<sp/>because<sp/>the<sp/>group<sp/>appears<sp/>once<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="3894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>whereas<sp/>in<sp/>other<sp/>cases<sp/>it<sp/>appears<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>times.<sp/>For</highlight></codeline>
<codeline lineno="3895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reason,<sp/>it<sp/>is<sp/>simplest<sp/>to<sp/>treat<sp/>this<sp/>case<sp/>separately,<sp/>as<sp/>otherwise</highlight></codeline>
<codeline lineno="3896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>code<sp/>gets<sp/>far<sp/>too<sp/>messy.<sp/>There<sp/>are<sp/>several<sp/>special<sp/>subcases<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="3897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>minimum<sp/>is<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>also<sp/>zero,<sp/>we<sp/>used<sp/>to<sp/>just<sp/>omit<sp/>the<sp/>group<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="3902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>altogether,<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="3903"><highlight class="comment"></highlight></codeline>
<codeline lineno="3904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>if<sp/>(repeat_max<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/>code<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="3907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/>goto<sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="3908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3909"><highlight class="comment"></highlight></codeline>
<codeline lineno="3910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>that<sp/>fails<sp/>when<sp/>a<sp/>group<sp/>is<sp/>referenced<sp/>as<sp/>a<sp/>subroutine<sp/>from</highlight></codeline>
<codeline lineno="3911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elsewhere<sp/>in<sp/>the<sp/>pattern,<sp/>so<sp/>now<sp/>we<sp/>stick<sp/>in<sp/>OP_SKIPZERO<sp/>in<sp/>front<sp/>of<sp/>it</highlight></codeline>
<codeline lineno="3912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>that<sp/>it<sp/>is<sp/>skipped<sp/>on<sp/>execution.<sp/>As<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>list<sp/>of<sp/>which</highlight></codeline>
<codeline lineno="3913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groups<sp/>are<sp/>referenced,<sp/>we<sp/>cannot<sp/>do<sp/>this<sp/>selectively.</highlight></codeline>
<codeline lineno="3914"><highlight class="comment"></highlight></codeline>
<codeline lineno="3915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>1<sp/>or<sp/>unlimited,<sp/>we<sp/>just<sp/>have<sp/>to<sp/>stick<sp/>in<sp/>the<sp/>BRAZERO</highlight></codeline>
<codeline lineno="3916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>do<sp/>no<sp/>more<sp/>at<sp/>this<sp/>point.<sp/>However,<sp/>we<sp/>do<sp/>need<sp/>to<sp/>adjust<sp/>any</highlight></codeline>
<codeline lineno="3917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OP_RECURSE<sp/>calls<sp/>inside<sp/>the<sp/>group<sp/>that<sp/>refer<sp/>to<sp/>the<sp/>group<sp/>itself<sp/>or<sp/>any</highlight></codeline>
<codeline lineno="3918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal<sp/>or<sp/>forward<sp/>referenced<sp/>group,<sp/>because<sp/>the<sp/>offset<sp/>is<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="3919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>of<sp/>the<sp/>whole<sp/>regex.<sp/>Temporarily<sp/>terminate<sp/>the<sp/>pattern<sp/>while<sp/>doing</highlight></codeline>
<codeline lineno="3920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>&lt;=<sp/>1)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Covers<sp/>0,<sp/>1,<sp/>and<sp/>unlimited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>;</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_recurse(previous,<sp/>1,<sp/>utf8,<sp/>cd,<sp/>save_hwm);</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(previous+1,<sp/>previous,<sp/>len);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code++;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca04c6c600fb26f33500b9b20ce0d23784" kindref="member">OP_SKIPZERO</ref>;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca98bb31f21c3d8f37d590633469623cc7" kindref="member">OP_BRAZERO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>greater<sp/>than<sp/>1<sp/>and<sp/>limited,<sp/>we<sp/>have<sp/>to<sp/>replicate</highlight></codeline>
<codeline lineno="3937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>nested<sp/>fashion,<sp/>sticking<sp/>OP_BRAZERO<sp/>before<sp/>each<sp/>set<sp/>of<sp/>brackets.</highlight></codeline>
<codeline lineno="3938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>first<sp/>one<sp/>has<sp/>to<sp/>be<sp/>handled<sp/>carefully<sp/>because<sp/>it&apos;s<sp/>the<sp/>original</highlight></codeline>
<codeline lineno="3939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy,<sp/>which<sp/>has<sp/>to<sp/>be<sp/>moved<sp/>up.<sp/>The<sp/>remainder<sp/>can<sp/>be<sp/>handled<sp/>by<sp/>code</highlight></codeline>
<codeline lineno="3940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>common<sp/>with<sp/>the<sp/>non-zero<sp/>minimum<sp/>case<sp/>below.<sp/>We<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="3941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust<sp/>the<sp/>value<sp/>or<sp/>repeat_max,<sp/>since<sp/>one<sp/>less<sp/>copy<sp/>is<sp/>required.<sp/>Once</highlight></codeline>
<codeline lineno="3942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>again,<sp/>we<sp/>may<sp/>have<sp/>to<sp/>adjust<sp/>any<sp/>OP_RECURSE<sp/>calls<sp/>inside<sp/>the<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_recurse(previous,<sp/>2<sp/>+<sp/>LINK_SIZE,<sp/>utf8,<sp/>cd,<sp/>save_hwm);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(previous<sp/>+<sp/>2<sp/>+<sp/>LINK_SIZE,<sp/>previous,<sp/>len);</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>2<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca98bb31f21c3d8f37d590633469623cc7" kindref="member">OP_BRAZERO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*previous++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>chain<sp/>together<sp/>the<sp/>bracket<sp/>offset<sp/>fields<sp/>that<sp/>have<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="3955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filled<sp/>in<sp/>later<sp/>when<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>brackets<sp/>are<sp/>reached.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(bralink<sp/>==<sp/>NULL)?<sp/>0<sp/>:<sp/>previous<sp/>-<sp/>bralink;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bralink<sp/>=<sp/>previous;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(previous,<sp/>0,<sp/>offset);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeat_max--;</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>minimum<sp/>is<sp/>greater<sp/>than<sp/>zero,<sp/>replicate<sp/>the<sp/>group<sp/>as<sp/>many</highlight></codeline>
<codeline lineno="3966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>as<sp/>necessary,<sp/>and<sp/>adjust<sp/>the<sp/>maximum<sp/>to<sp/>the<sp/>number<sp/>of<sp/>subsequent</highlight></codeline>
<codeline lineno="3967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>copies<sp/>that<sp/>we<sp/>need.<sp/>If<sp/>we<sp/>set<sp/>a<sp/>first<sp/>char<sp/>from<sp/>the<sp/>group,<sp/>and<sp/>didn&apos;t</highlight></codeline>
<codeline lineno="3968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>a<sp/>required<sp/>char,<sp/>copy<sp/>the<sp/>latter<sp/>from<sp/>the<sp/>former.<sp/>If<sp/>there<sp/>are<sp/>any</highlight></codeline>
<codeline lineno="3969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>forward<sp/>reference<sp/>subroutine<sp/>calls<sp/>in<sp/>the<sp/>group,<sp/>there<sp/>will<sp/>be<sp/>entries<sp/>on</highlight></codeline>
<codeline lineno="3970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>workspace<sp/>list;<sp/>replicate<sp/>these<sp/>with<sp/>an<sp/>appropriate<sp/>increment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_min<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>we<sp/>don&apos;t<sp/>actually<sp/>do<sp/>the<sp/>replication.<sp/>We</highlight></codeline>
<codeline lineno="3977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>adjust<sp/>the<sp/>length<sp/>as<sp/>if<sp/>we<sp/>had.<sp/>Do<sp/>some<sp/>paranoid<sp/>checks<sp/>for</highlight></codeline>
<codeline lineno="3978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential<sp/>integer<sp/>overflow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(repeat_min<sp/>-<sp/>1)*length_prevgroup;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(repeat_min<sp/>-<sp/>1)*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)length_prevgroup<sp/>&gt;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)INT_MAX<sp/>||</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>delta)</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>compiling<sp/>for<sp/>real<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupsetfirstbyte<sp/>&amp;&amp;<sp/>reqbyte<sp/>&lt;<sp/>0)<sp/>reqbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>repeat_min;<sp/>i++)</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*hc;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*this_hwm<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>previous,<sp/>len);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hc<sp/>=<sp/>save_hwm;<sp/>hc<sp/>&lt;<sp/>this_hwm;<sp/>hc<sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>)</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>,<sp/>0,<sp/>GET(hc,<sp/>0)<sp/>+<sp/>len);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_hwm<sp/>=<sp/>this_hwm;</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>&gt;<sp/>0)<sp/>repeat_max<sp/>-=<sp/>repeat_min;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>code<sp/>is<sp/>common<sp/>to<sp/>both<sp/>the<sp/>zero<sp/>and<sp/>non-zero<sp/>minimum<sp/>cases.<sp/>If</highlight></codeline>
<codeline lineno="4018"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>maximum<sp/>is<sp/>limited,<sp/>it<sp/>replicates<sp/>the<sp/>group<sp/>in<sp/>a<sp/>nested<sp/>fashion,</highlight></codeline>
<codeline lineno="4019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>remembering<sp/>the<sp/>bracket<sp/>starts<sp/>on<sp/>a<sp/>stack.<sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>zero<sp/>minimum,</highlight></codeline>
<codeline lineno="4020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>first<sp/>one<sp/>was<sp/>set<sp/>up<sp/>above.<sp/>In<sp/>all<sp/>cases<sp/>the<sp/>repeat_max<sp/>now<sp/>specifies</highlight></codeline>
<codeline lineno="4021"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>additional<sp/>copies<sp/>needed.<sp/>Again,<sp/>we<sp/>must<sp/>remember<sp/>to</highlight></codeline>
<codeline lineno="4022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>replicate<sp/>entries<sp/>on<sp/>the<sp/>forward<sp/>reference<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeat_max<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>we<sp/>don&apos;t<sp/>actually<sp/>do<sp/>the<sp/>replication.<sp/>We</highlight></codeline>
<codeline lineno="4027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>adjust<sp/>the<sp/>length<sp/>as<sp/>if<sp/>we<sp/>had.<sp/>For<sp/>each<sp/>repetition<sp/>we<sp/>must<sp/>add<sp/>1</highlight></codeline>
<codeline lineno="4028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>length<sp/>for<sp/>BRAZERO<sp/>and<sp/>for<sp/>all<sp/>but<sp/>the<sp/>last<sp/>repetition<sp/>we<sp/>must</highlight></codeline>
<codeline lineno="4029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>2<sp/>+<sp/>2*LINKSIZE<sp/>to<sp/>allow<sp/>for<sp/>the<sp/>nesting<sp/>that<sp/>occurs.<sp/>Do<sp/>some</highlight></codeline>
<codeline lineno="4030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paranoid<sp/>checks<sp/>to<sp/>avoid<sp/>integer<sp/>overflow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>repeat_max<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>repeat_max<sp/>*<sp/>(length_prevgroup<sp/>+<sp/>1<sp/>+<sp/>2<sp/>+<sp/>2*<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>)<sp/>-</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>-<sp/>2*LINK_SIZE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>one<sp/>doesn&apos;t<sp/>nest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)repeat_max<sp/>*</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)(length_prevgroup<sp/>+<sp/>1<sp/>+<sp/>2<sp/>+<sp/>2*LINK_SIZE)</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(double)INT_MAX<sp/>||</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>delta)</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>compiling<sp/>for<sp/>real<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>repeat_max<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*hc;</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*this_hwm<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca98bb31f21c3d8f37d590633469623cc7" kindref="member">OP_BRAZERO</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>but<sp/>the<sp/>final<sp/>copy<sp/>start<sp/>a<sp/>new<sp/>nesting,<sp/>maintaining<sp/>the</highlight></codeline>
<codeline lineno="4057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain<sp/>of<sp/>brackets<sp/>outstanding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(bralink<sp/>==<sp/>NULL)?<sp/>0<sp/>:<sp/>code<sp/>-<sp/>bralink;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bralink<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>offset);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(code,<sp/>previous,<sp/>len);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hc<sp/>=<sp/>save_hwm;<sp/>hc<sp/>&lt;<sp/>this_hwm;<sp/>hc<sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>)</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>,<sp/>0,<sp/>GET(hc,<sp/>0)<sp/>+<sp/>len<sp/>+<sp/>((i<sp/>!=<sp/>0)?<sp/>2+LINK_SIZE<sp/>:<sp/>1));</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>+=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_hwm<sp/>=<sp/>this_hwm;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>chain<sp/>through<sp/>the<sp/>pending<sp/>brackets,<sp/>and<sp/>fill<sp/>in<sp/>their<sp/>length</highlight></codeline>
<codeline lineno="4079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields<sp/>(which<sp/>are<sp/>holding<sp/>the<sp/>chain<sp/>links<sp/>pro<sp/>tem).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bralink<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldlinkoffset;</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>code<sp/>-<sp/>bralink<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*bra<sp/>=<sp/>code<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldlinkoffset<sp/>=<sp/>GET(bra,<sp/>1);</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bralink<sp/>=<sp/>(oldlinkoffset<sp/>==<sp/>0)?<sp/>NULL<sp/>:<sp/>bralink<sp/>-<sp/>oldlinkoffset;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>offset);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(bra,<sp/>1,<sp/>offset);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>maximum<sp/>is<sp/>unlimited,<sp/>set<sp/>a<sp/>repeater<sp/>in<sp/>the<sp/>final<sp/>copy.<sp/>We</highlight></codeline>
<codeline lineno="4095"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>can&apos;t<sp/>just<sp/>offset<sp/>backwards<sp/>from<sp/>the<sp/>current<sp/>code<sp/>point,<sp/>because<sp/>we</highlight></codeline>
<codeline lineno="4096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>don&apos;t<sp/>know<sp/>if<sp/>there&apos;s<sp/>been<sp/>an<sp/>options<sp/>resetting<sp/>after<sp/>the<sp/>ket.<sp/>The</highlight></codeline>
<codeline lineno="4097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>correct<sp/>offset<sp/>was<sp/>computed<sp/>above.</highlight></codeline>
<codeline lineno="4098"><highlight class="comment"></highlight></codeline>
<codeline lineno="4099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Then,<sp/>when<sp/>we<sp/>are<sp/>doing<sp/>the<sp/>actual<sp/>compile<sp/>phase,<sp/>check<sp/>to<sp/>see<sp/>whether</highlight></codeline>
<codeline lineno="4100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>group<sp/>is<sp/>a<sp/>non-atomic<sp/>one<sp/>that<sp/>could<sp/>match<sp/>an<sp/>empty<sp/>string.<sp/>If<sp/>so,</highlight></codeline>
<codeline lineno="4101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>the<sp/>initial<sp/>operator<sp/>to<sp/>the<sp/>S<sp/>form<sp/>(e.g.<sp/>OP_BRA<sp/>-&gt;<sp/>OP_SBRA)<sp/>so</highlight></codeline>
<codeline lineno="4102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>runtime<sp/>checking<sp/>can<sp/>be<sp/>done.<sp/>[This<sp/>check<sp/>is<sp/>also<sp/>applied<sp/>to</highlight></codeline>
<codeline lineno="4103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>atomic<sp/>groups<sp/>at<sp/>runtime,<sp/>but<sp/>in<sp/>a<sp/>different<sp/>way.]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ketcode<sp/>=<sp/>code<sp/>-<sp/>ketoffset;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*bracode<sp/>=<sp/>ketcode<sp/>-<sp/>GET(ketcode,<sp/>1);</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ketcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca95b5857e05fc32abfe03c637b6fb7a51" kindref="member">OP_KETRMAX</ref><sp/>+<sp/>repeat_type;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>*bracode<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>)</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*scode<sp/>=<sp/>bracode;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(could_be_empty_branch(scode,<sp/>ketcode,<sp/>utf8))</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bracode<sp/>+=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca0dc451c6b96cc15a135fec342b96fe46" kindref="member">OP_SBRA</ref><sp/>-<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scode<sp/>+=<sp/>GET(scode,<sp/>1);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*scode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>previous<sp/>is<sp/>OP_FAIL,<sp/>it<sp/>was<sp/>generated<sp/>by<sp/>an<sp/>empty<sp/>class<sp/>[]<sp/>in</highlight></codeline>
<codeline lineno="4128"><highlight class="comment"><sp/><sp/><sp/><sp/>JavaScript<sp/>mode.<sp/>The<sp/>other<sp/>ways<sp/>in<sp/>which<sp/>OP_FAIL<sp/>can<sp/>be<sp/>generated,<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="4129"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>(*FAIL)<sp/>or<sp/>(?!)<sp/>set<sp/>previous<sp/>to<sp/>NULL,<sp/>which<sp/>gives<sp/>a<sp/>&quot;nothing<sp/>to<sp/>repeat&quot;</highlight></codeline>
<codeline lineno="4130"><highlight class="comment"><sp/><sp/><sp/><sp/>error<sp/>above.<sp/>We<sp/>can<sp/>just<sp/>ignore<sp/>the<sp/>repeat<sp/>in<sp/>JS<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*previous<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>END_REPEAT;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Else<sp/>there&apos;s<sp/>some<sp/>kind<sp/>of<sp/>shambles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eac17c2e6c781cac9f1b4dc7d586429fc1" kindref="member">ERR11</ref>;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>character<sp/>following<sp/>a<sp/>repeat<sp/>is<sp/>&apos;+&apos;,<sp/>or<sp/>if<sp/>certain<sp/>optimization</highlight></codeline>
<codeline lineno="4143"><highlight class="comment"><sp/><sp/><sp/><sp/>tests<sp/>above<sp/>succeeded,<sp/>possessive_quantifier<sp/>is<sp/>TRUE.<sp/>For<sp/>some<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="4144"><highlight class="comment"><sp/><sp/><sp/><sp/>simpler<sp/>opcodes,<sp/>there<sp/>is<sp/>an<sp/>special<sp/>alternative<sp/>opcode<sp/>for<sp/>this.<sp/>For</highlight></codeline>
<codeline lineno="4145"><highlight class="comment"><sp/><sp/><sp/><sp/>anything<sp/>else,<sp/>we<sp/>wrap<sp/>the<sp/>entire<sp/>repeated<sp/>item<sp/>inside<sp/>OP_ONCE<sp/>brackets.</highlight></codeline>
<codeline lineno="4146"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>&apos;+&apos;<sp/>notation<sp/>is<sp/>just<sp/>syntactic<sp/>sugar,<sp/>taken<sp/>from<sp/>Sun&apos;s<sp/>Java<sp/>package,</highlight></codeline>
<codeline lineno="4147"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>the<sp/>special<sp/>opcodes<sp/>can<sp/>optimize<sp/>it<sp/>a<sp/>bit.<sp/>The<sp/>repeated<sp/>item<sp/>starts<sp/>at</highlight></codeline>
<codeline lineno="4148"><highlight class="comment"><sp/><sp/><sp/><sp/>tempcode,<sp/>not<sp/>at<sp/>previous,<sp/>which<sp/>might<sp/>be<sp/>the<sp/>first<sp/>part<sp/>of<sp/>a<sp/>string<sp/>whose</highlight></codeline>
<codeline lineno="4149"><highlight class="comment"><sp/><sp/><sp/><sp/>(former)<sp/>last<sp/>char<sp/>we<sp/>repeated.</highlight></codeline>
<codeline lineno="4150"><highlight class="comment"></highlight></codeline>
<codeline lineno="4151"><highlight class="comment"><sp/><sp/><sp/><sp/>Possessifying<sp/>an<sp/>&apos;exact&apos;<sp/>quantifier<sp/>has<sp/>no<sp/>effect,<sp/>so<sp/>we<sp/>can<sp/>ignore<sp/>it.<sp/>But</highlight></codeline>
<codeline lineno="4152"><highlight class="comment"><sp/><sp/><sp/><sp/>an<sp/>&apos;upto&apos;<sp/>may<sp/>follow.<sp/>We<sp/>skip<sp/>over<sp/>an<sp/>&apos;exact&apos;<sp/>item,<sp/>and<sp/>then<sp/>test<sp/>the</highlight></codeline>
<codeline lineno="4153"><highlight class="comment"><sp/><sp/><sp/><sp/>length<sp/>of<sp/>what<sp/>remains<sp/>before<sp/>proceeding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(possessive_quantifier)</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*tempcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref><sp/>||<sp/>*tempcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref><sp/>||</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tempcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf86dda71ee43c5bffffeb5334bffbeed" kindref="member">OP_NOTEXACT</ref>)</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcode<sp/>+=<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*tempcode]<sp/>+</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*tempcode<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca59bed76d4deeb1a60c32f36b30e8eb13" kindref="member">OP_TYPEEXACT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tempcode[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>||<sp/>tempcode[3]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>))?<sp/>2:0);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>code<sp/>-<sp/>tempcode;</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*tempcode)</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OP_STAR:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d707075c9fc986dd75283dcf43602b5" kindref="member">OP_POSSTAR</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9026f8e43659827c81499cb779f2a580" kindref="member">OP_QUERY</ref>:<sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cab2bd21819f67d9a8de41a9fff9c29aad" kindref="member">OP_POSQUERY</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca901fa38b2789592c62864196546c1f40" kindref="member">OP_UPTO</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6f80145741d9621bc3d7051cebb42fd2" kindref="member">OP_POSUPTO</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca22c4991eef1371652cde137ae2bd218e" kindref="member">OP_TYPEPLUS</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3d6bc3632971622542cbe167f7c170e3" kindref="member">OP_TYPEPOSPLUS</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca17536428c3af7314bbf2640e508ca33b" kindref="member">OP_TYPEQUERY</ref>:<sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac492dc1f53782d42def24d2b923f18c4" kindref="member">OP_TYPEPOSQUERY</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb10e8776178fe6d76db8258f428c9b8" kindref="member">OP_TYPEUPTO</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca7a2e8e9d3619df87610f1da24d4de5a0" kindref="member">OP_TYPEPOSUPTO</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caa6487aefb16e0f5dcad93fdce1e3f373" kindref="member">OP_NOTSTAR</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca94581d3d5b2bebc9b85e718026b8e335" kindref="member">OP_NOTPOSSTAR</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca13cdebdbc084ee1dd01425be339effda" kindref="member">OP_NOTPLUS</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafbcfa09fe11e6b50626ea47a3609488a" kindref="member">OP_NOTPOSPLUS</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae1e18938521bff596d493a927571e23c" kindref="member">OP_NOTQUERY</ref>:<sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac9bd027ba175584ea72bd033160de8e7" kindref="member">OP_NOTPOSQUERY</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ebb928e44fd590059c04b9eba983365" kindref="member">OP_NOTUPTO</ref>:<sp/><sp/>*tempcode<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca716c014b118ca6c3bec583b22958166d" kindref="member">OP_NOTPOSUPTO</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(tempcode<sp/>+<sp/>1+LINK_SIZE,<sp/>tempcode,<sp/>len);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcode[0]<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>;</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(tempcode,<sp/>1,<sp/>len);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>all<sp/>case<sp/>we<sp/>no<sp/>longer<sp/>have<sp/>a<sp/>previous<sp/>item.<sp/>We<sp/>also<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="4194"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;follows<sp/>varying<sp/>string&quot;<sp/>flag<sp/>for<sp/>subsequently<sp/>encountered<sp/>reqbytes<sp/>if</highlight></codeline>
<codeline lineno="4195"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>isn&apos;t<sp/>already<sp/>set<sp/>and<sp/>we<sp/>have<sp/>just<sp/>passed<sp/>a<sp/>varying<sp/>length<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/>END_REPEAT:</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref><sp/>|=<sp/>reqvary;</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>of<sp/>nested<sp/>parenthesized<sp/>sub-expression,<sp/>or<sp/>comment<sp/>or<sp/>lookahead<sp/>or</highlight></codeline>
<codeline lineno="4205"><highlight class="comment"><sp/><sp/><sp/><sp/>lookbehind<sp/>or<sp/>option<sp/>setting<sp/>or<sp/>condition<sp/>or<sp/>all<sp/>the<sp/>other<sp/>extended</highlight></codeline>
<codeline lineno="4206"><highlight class="comment"><sp/><sp/><sp/><sp/>parenthesis<sp/>forms.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions<sp/>=<sp/>options;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/>skipbytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>;</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/>save_hwm<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>;</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_bracount<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>deal<sp/>with<sp/>various<sp/>&quot;verbs&quot;<sp/>that<sp/>can<sp/>be<sp/>introduced<sp/>by<sp/>&apos;*&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[ptr[1]]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a2dd2a83bdb0c180d49a1f14f9fda9c1e" kindref="member">ctype_letter</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>namelen;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vn<sp/>=<sp/>verbnames;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*name<sp/>=<sp/>++ptr;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*++ptr]<sp/>&amp;<sp/>ctype_letter)<sp/>!=<sp/>0)<sp/>{};</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea3107bc9449002b493f6338e4e190a7b4" kindref="member">ERR59</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea534d09db169638aa6db8af6bd06bc8b2" kindref="member">ERR60</ref>;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>namelen<sp/>=<sp/>ptr<sp/>-<sp/>name;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>verbcount;<sp/>i++)</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>==<sp/>verbs[i].len<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/>vn,<sp/>namelen)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/>verbs[i].<ref refid="structverbitem_1a15cb4ddbd5304975ec67a2e50415e5d9" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*code++<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caf9d3461927bdf610f76a29a74161897f" kindref="member">OP_ACCEPT</ref>)<sp/>cd-&gt;<ref refid="structcompile__data_1a7e66e09e50e8110573a3132af307f983" kindref="member">had_accept</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vn<sp/>+=<sp/>verbs[i].<ref refid="structverbitem_1a994a1be4cb5b66cb2041ffe76476ce0b" kindref="member">len</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>verbcount)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea534d09db169638aa6db8af6bd06bc8b2" kindref="member">ERR60</ref>;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>the<sp/>extended<sp/>parentheses;<sp/>all<sp/>are<sp/>introduced<sp/>by<sp/>&apos;?&apos;,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="4252"><highlight class="comment"><sp/><sp/><sp/><sp/>appearance<sp/>of<sp/>any<sp/>of<sp/>them<sp/>means<sp/>that<sp/>this<sp/>is<sp/>not<sp/>a<sp/>capturing<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>set,<sp/>unset,<sp/>namelen;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*optset;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*name;</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*slot;</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*(++ptr))</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Comment;<sp/>skip<sp/>to<sp/>ket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>ptr++;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea4cbc065161d7930f657c47b6e11a31ff" kindref="member">ERR18</ref>;</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>capture<sp/>count<sp/>for<sp/>each<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_bracount<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-capturing<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Conditional<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>condition<sp/>can<sp/>be<sp/>an<sp/>assertion,<sp/>a<sp/>number<sp/>(referring<sp/>to<sp/>a<sp/>numbered</highlight></codeline>
<codeline lineno="4291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group),<sp/>a<sp/>name<sp/>(referring<sp/>to<sp/>a<sp/>named<sp/>group),<sp/>or<sp/>&apos;R&apos;,<sp/>referring<sp/>to</highlight></codeline>
<codeline lineno="4292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recursion.<sp/>R&lt;digits&gt;<sp/>and<sp/>R&amp;name<sp/>are<sp/>also<sp/>permitted<sp/>for<sp/>recursion<sp/>tests.</highlight></codeline>
<codeline lineno="4293"><highlight class="comment"></highlight></codeline>
<codeline lineno="4294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>There<sp/>are<sp/>several<sp/>syntaxes<sp/>for<sp/>testing<sp/>a<sp/>named<sp/>group:<sp/>(?(name))<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="4295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>Python;<sp/>Perl<sp/>5.10<sp/>onwards<sp/>uses<sp/>(?(&lt;name&gt;)<sp/>or<sp/>(?(&apos;name&apos;)).</highlight></codeline>
<codeline lineno="4296"><highlight class="comment"></highlight></codeline>
<codeline lineno="4297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>There<sp/>are<sp/>two<sp/>unfortunate<sp/>ambiguities,<sp/>caused<sp/>by<sp/>history.<sp/>(a)<sp/>&apos;R&apos;<sp/>can</highlight></codeline>
<codeline lineno="4298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>the<sp/>recursive<sp/>thing<sp/>or<sp/>the<sp/>name<sp/>&apos;R&apos;<sp/>(and<sp/>similarly<sp/>for<sp/>&apos;R&apos;<sp/>followed</highlight></codeline>
<codeline lineno="4299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>digits),<sp/>and<sp/>(b)<sp/>a<sp/>number<sp/>could<sp/>be<sp/>a<sp/>name<sp/>that<sp/>consists<sp/>of<sp/>digits.</highlight></codeline>
<codeline lineno="4300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>both<sp/>cases,<sp/>we<sp/>look<sp/>for<sp/>a<sp/>name<sp/>first;<sp/>if<sp/>not<sp/>found,<sp/>we<sp/>try<sp/>the<sp/>other</highlight></codeline>
<codeline lineno="4301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>conditions<sp/>that<sp/>are<sp/>assertions,<sp/>check<sp/>the<sp/>syntax,<sp/>and<sp/>then<sp/>exit</highlight></codeline>
<codeline lineno="4304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>switch.<sp/>This<sp/>will<sp/>take<sp/>control<sp/>down<sp/>to<sp/>where<sp/>bracketed<sp/>groups,</highlight></codeline>
<codeline lineno="4305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>including<sp/>assertions,<sp/>are<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Most<sp/>other<sp/>conditions<sp/>use<sp/>OP_CREF<sp/>(a<sp/>couple<sp/>change<sp/>to<sp/>OP_RREF</highlight></codeline>
<codeline lineno="4311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>below),<sp/>and<sp/>all<sp/>need<sp/>to<sp/>skip<sp/>3<sp/>bytes<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code[1+<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>]<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e61d18b6a4379a4668e4a5584c12595" kindref="member">OP_CREF</ref>;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipbytes<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refsign<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>a<sp/>test<sp/>for<sp/>recursion<sp/>in<sp/>a<sp/>named<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code[1+<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>]<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca51d06bf1e6e003c4ec76150a46128902" kindref="member">OP_RREF</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>the<sp/>type<sp/>of<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>a<sp/>test<sp/>for<sp/>a<sp/>named<sp/>group&apos;s<sp/>having<sp/>been<sp/>set,<sp/>using<sp/>the<sp/>Perl</highlight></codeline>
<codeline lineno="4327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax<sp/>(?(&lt;name&gt;)<sp/>or<sp/>(?(&apos;name&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>refsign<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>now<sp/>expect<sp/>to<sp/>read<sp/>a<sp/>name;<sp/>any<sp/>thing<sp/>else<sp/>is<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[ptr[1]]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a442a60d2ab94f56f28e04ab175faf43f" kindref="member">ctype_word</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>get<sp/>the<sp/>right<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaa8b3c73eb69daac87861fb69153636e0" kindref="member">ERR28</ref>;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>name,<sp/>but<sp/>also<sp/>get<sp/>it<sp/>as<sp/>a<sp/>number<sp/>if<sp/>it&apos;s<sp/>all<sp/>digits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>++ptr;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/>ctype_word)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>((digitab[*ptr]<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3d4364a50c8029c795b0e0a0e7ca7fbd" kindref="member">ctype_digit</ref>)<sp/>!=<sp/>0)?</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>*<sp/>10<sp/>+<sp/>*ptr<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namelen<sp/>=<sp/>ptr<sp/>-<sp/>name;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((terminator<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>*ptr++<sp/>!=<sp/>terminator)<sp/>||<sp/>*ptr++<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr--;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eafc7f016789b94a45ab2117fb357bb731" kindref="member">ERR26</ref>;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>no<sp/>further<sp/>checking<sp/>in<sp/>the<sp/>pre-compile<sp/>phase.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>real<sp/>compile<sp/>we<sp/>do<sp/>the<sp/>work<sp/>of<sp/>looking<sp/>for<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="4379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference.<sp/>If<sp/>the<sp/>string<sp/>started<sp/>with<sp/>&quot;+&quot;<sp/>or<sp/>&quot;-&quot;<sp/>we<sp/>require<sp/>the<sp/>rest<sp/>to</highlight></codeline>
<codeline lineno="4380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>digits,<sp/>in<sp/>which<sp/>case<sp/>recno<sp/>will<sp/>be<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refsign<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eae19253a5c8d401311c853f7ed4d40b43" kindref="member">ERR58</ref>;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>(refsign<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)?</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>-<sp/>recno<sp/>+<sp/>1<sp/>:<sp/>recno<sp/>+cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(recno<sp/>&lt;=<sp/>0<sp/>||<sp/>recno<sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1a6d164ca6626dcd16f4e0550fa05acfc3" kindref="member">final_bracount</ref>)</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>2+LINK_SIZE,<sp/>recno);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>(did<sp/>not<sp/>start<sp/>with<sp/>&quot;+&quot;<sp/>or<sp/>&quot;-&quot;),<sp/>start<sp/>by<sp/>looking<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="4401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref>;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)slot+2,<sp/>namelen)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"></highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Found<sp/>a<sp/>previous<sp/>named<sp/>subpattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>cd-&gt;names_found)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(slot,<sp/>0);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>2+LINK_SIZE,<sp/>recno);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>the<sp/>pattern<sp/>for<sp/>a<sp/>forward<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>find_parens(ptr,<sp/>cd,<sp/>name,<sp/>namelen,</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(options<sp/>&amp;<sp/>PCRE_EXTENDED)<sp/>!=<sp/>0))<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>2+LINK_SIZE,<sp/>i);</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"></highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>terminator<sp/>==<sp/>0<sp/>it<sp/>means<sp/>that<sp/>the<sp/>name<sp/>followed<sp/>directly<sp/>after</highlight></codeline>
<codeline lineno="4427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>opening<sp/>parenthesis<sp/>[e.g.<sp/>(?(abc)...]<sp/>and<sp/>in<sp/>this<sp/>case<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="4428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>some<sp/>further<sp/>alternatives<sp/>to<sp/>try.<sp/>For<sp/>the<sp/>cases<sp/>where<sp/>terminator<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="4429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[things<sp/>like<sp/>(?(&lt;name&gt;...<sp/>or<sp/>(?(&apos;name&apos;)...<sp/>or<sp/>(?(R&amp;name)...<sp/>]<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="4430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>checked<sp/>all<sp/>the<sp/>possibilities,<sp/>so<sp/>give<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(terminator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>(?(R)<sp/>for<sp/>recursion.<sp/>Allow<sp/>digits<sp/>after<sp/>R<sp/>to<sp/>specify<sp/>a</highlight></codeline>
<codeline lineno="4439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>group<sp/>number.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>namelen;<sp/>i++)</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((digitab[name[i]]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>recno<sp/>*<sp/>10<sp/>+<sp/>name[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>==<sp/>0)<sp/>recno<sp/>=<sp/><ref refid="pcre__internal_8h_1a880aa9d44c5f542d7afe3b7652befb63" kindref="member">RREF_ANY</ref>;</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code[1+<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>]<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca51d06bf1e6e003c4ec76150a46128902" kindref="member">OP_RREF</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>test<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>2+LINK_SIZE,<sp/>recno);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Similarly,<sp/>check<sp/>for<sp/>the<sp/>(?(DEFINE)<sp/>&quot;condition&quot;,<sp/>which<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="4459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>==<sp/>6<sp/>&amp;&amp;<sp/>strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/></highlight><highlight class="stringliteral">&quot;DEFINE&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code[1+<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>]<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>;</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipbytes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>the<sp/>&quot;name&quot;<sp/>actually<sp/>being<sp/>a<sp/>subpattern<sp/>number.<sp/>We<sp/>are</highlight></codeline>
<codeline lineno="4468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>second<sp/>pass<sp/>here,<sp/>so<sp/>final_bracount<sp/>is<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>recno<sp/>&lt;=<sp/>cd-&gt;final_bracount)</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>2+LINK_SIZE,<sp/>recno);</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Either<sp/>an<sp/>unidentified<sp/>subpattern,<sp/>or<sp/>a<sp/>reference<sp/>to<sp/>(?(0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/>(recno<sp/>==<sp/>0)?<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaef7514762e68a7a74bf1bd0035ad975e" kindref="member">ERR35</ref>:<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Positive<sp/>lookahead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Negative<sp/>lookahead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Optimize<sp/>(?!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cadad4289276b97b650558ce66d141d648" kindref="member">OP_FAIL</ref>;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca35f4c2f9d4ea06d18ed08f6cce7214ad" kindref="member">OP_ASSERT_NOT</ref>;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lookbehind<sp/>or<sp/>named<sp/>define<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ptr[1])</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Positive<sp/>lookbehind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1ce25e7cd4fdba6d53cc4b316773e439" kindref="member">OP_ASSERTBACK</ref>;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Negative<sp/>lookbehind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5057097bced86c4c7554843df46264d9" kindref="member">OP_ASSERTBACK_NOT</ref>;</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"></highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Could<sp/>be<sp/>name<sp/>define,<sp/>else<sp/>bad<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[ptr[1]]<sp/>&amp;<sp/>ctype_word)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>DEFINE_NAME;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Correct<sp/>offset<sp/>for<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea5ea45cc2c45962cb6d0104957479ad93" kindref="member">ERR24</ref>;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One-time<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>;</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Callout<sp/>-<sp/>may<sp/>be<sp/>followed<sp/>by<sp/>digits;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_callout<sp/>=<sp/>code;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>for<sp/>later<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after_manual_callout<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>one<sp/>item<sp/>before<sp/>completing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca679273f5fe2d1faf9d486eb30ae86d5a" kindref="member">OP_CALLOUT</ref>;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*(++ptr)]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n<sp/>*<sp/>10<sp/>+<sp/>*ptr<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea7b311dd8fe2aa43010404fab0bbfb0d5" kindref="member">ERR39</ref>;</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea911ef6e8defd1c0477f03383a6588cf1" kindref="member">ERR38</ref>;</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(code,<sp/>0,<sp/>ptr<sp/>-<sp/>cd-&gt;<ref refid="structcompile__data_1af9b4ca5374f72fe75329c9034be93eb9" kindref="member">start_pattern</ref><sp/>+<sp/>1);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Pattern<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(code,<sp/>LINK_SIZE,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>2<sp/>*<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Python-style<sp/>named<sp/>subpattern<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal"><sp/>||<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Reference<sp/>or<sp/>recursion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_recurse<sp/>=<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NAMED_REF_OR_RECURSE;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>Python-style<sp/>definition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea56b6d72d7ee88008ce1e25fd28f2cd04" kindref="member">ERR41</ref>;</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>to<sp/>handle<sp/>(?P&lt;<sp/>as<sp/>(?&lt;<sp/>is<sp/>handled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEFINE_NAME:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Come<sp/>here<sp/>from<sp/>(?&lt;<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>++ptr;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/>ctype_word)<sp/>!=<sp/>0)<sp/>ptr++;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namelen<sp/>=<sp/>ptr<sp/>-<sp/>name;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>just<sp/>do<sp/>a<sp/>syntax<sp/>check.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>terminator)</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead73664c6c12d14fbe1ddc14a4f41ae50" kindref="member">ERR42</ref>;</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref><sp/>&gt;=<sp/><ref refid="pcre__config_8h_1a4da103fc095c7035a46d6f5c4324b89f" kindref="member">MAX_NAME_COUNT</ref>)</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea4b22cb2139c24ccf762434bc8c310b80" kindref="member">ERR49</ref>;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>+<sp/>3<sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>)</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref><sp/>=<sp/>namelen<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>&gt;<sp/><ref refid="pcre__config_8h_1abdc276a3da6aba2279ae3e4a69731d9f" kindref="member">MAX_NAME_SIZE</ref>)</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea470f75e3ede1e43d1c6c6bc8dbdc15d5" kindref="member">ERR48</ref>;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>real<sp/>compile,<sp/>create<sp/>the<sp/>entry<sp/>in<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref>;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crc<sp/>=<sp/>memcmp(name,<sp/>slot+2,<sp/>namelen);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slot[2+namelen]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1ac200fe10b745df0961d1f1801266ace1" kindref="member">PCRE_DUPNAMES</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eabc2b100663e70cb4862735358a89d373" kindref="member">ERR43</ref>;</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>crc<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>name<sp/>is<sp/>substring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ad12df83f1d3a090b658adc645555ca79" kindref="member">memmove</ref>(slot<sp/>+<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>,<sp/>slot,</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref><sp/>-<sp/>i)<sp/>*<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>);</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(slot,<sp/>0,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(slot<sp/>+<sp/>2,<sp/>name,<sp/>namelen);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot[2+namelen]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>both<sp/>cases,<sp/>count<sp/>the<sp/>number<sp/>of<sp/>names<sp/>we&apos;ve<sp/>encountered.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>past<sp/>&gt;<sp/>or<sp/>&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref>++;</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NUMBERED_GROUP;</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perl<sp/>recursion/subroutine<sp/>syntax<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_recurse<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>come<sp/>here<sp/>from<sp/>the<sp/>Python<sp/>syntax<sp/>above<sp/>that<sp/>handles<sp/>both</highlight></codeline>
<codeline lineno="4663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>references<sp/>(?P=name)<sp/>and<sp/>recursion<sp/>(?P&gt;name),<sp/>as<sp/>well<sp/>as<sp/>falling</highlight></codeline>
<codeline lineno="4664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>through<sp/>from<sp/>the<sp/>Perl<sp/>recursion<sp/>syntax<sp/>(?&amp;name).<sp/>We<sp/>also<sp/>come<sp/>here<sp/>from</highlight></codeline>
<codeline lineno="4665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Perl<sp/>\k&lt;name&gt;<sp/>or<sp/>\k&apos;name&apos;<sp/>back<sp/>reference<sp/>syntax<sp/>and<sp/>the<sp/>\k{name}</highlight></codeline>
<codeline lineno="4666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NET<sp/>syntax,<sp/>and<sp/>the<sp/>Oniguruma<sp/>\g&lt;...&gt;<sp/>and<sp/>\g&apos;...&apos;<sp/>subroutine<sp/>syntax.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAMED_REF_OR_RECURSE:</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>++ptr;</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*ptr]<sp/>&amp;<sp/>ctype_word)<sp/>!=<sp/>0)<sp/>ptr++;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namelen<sp/>=<sp/>ptr<sp/>-<sp/>name;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>do<sp/>a<sp/>syntax<sp/>check<sp/>and<sp/>set<sp/>a<sp/>dummy</highlight></codeline>
<codeline lineno="4674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>number.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea8c4e8db474743a2f0a2911dde05b1816" kindref="member">ERR62</ref>;</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>terminator)</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead73664c6c12d14fbe1ddc14a4f41ae50" kindref="member">ERR42</ref>;</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namelen<sp/>&gt;<sp/><ref refid="pcre__config_8h_1abdc276a3da6aba2279ae3e4a69731d9f" kindref="member">MAX_NAME_SIZE</ref>)</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea470f75e3ede1e43d1c6c6bc8dbdc15d5" kindref="member">ERR48</ref>;</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>real<sp/>compile,<sp/>seek<sp/>the<sp/>name<sp/>in<sp/>the<sp/>table.<sp/>We<sp/>check<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="4697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first,<sp/>and<sp/>then<sp/>check<sp/>that<sp/>we<sp/>have<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>name<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="4698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table.<sp/>That<sp/>way,<sp/>if<sp/>the<sp/>name<sp/>that<sp/>is<sp/>longer<sp/>than<sp/>any<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="4699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>comparison<sp/>will<sp/>fail<sp/>without<sp/>reading<sp/>beyond<sp/>the<sp/>table<sp/>entry.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref>;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)slot+2,<sp/>namelen)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot[2+namelen]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>cd-&gt;names_found)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Back<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(slot,<sp/>0);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((recno<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forward<sp/>back<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find_parens(ptr,<sp/>cd,<sp/>name,<sp/>namelen,</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(options<sp/>&amp;<sp/>PCRE_EXTENDED)<sp/>!=<sp/>0))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>both<sp/>phases,<sp/>we<sp/>can<sp/>now<sp/>go<sp/>to<sp/>the<sp/>code<sp/>than<sp/>handles<sp/>numerical</highlight></codeline>
<codeline lineno="4726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recursion<sp/>or<sp/>backreferences.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_recurse)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>HANDLE_RECURSION;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>HANDLE_REFERENCE;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"></highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Same<sp/>as<sp/>(?0)<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursion<sp/>or<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>subroutine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*called;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Come<sp/>here<sp/>from<sp/>the<sp/>\g&lt;...&gt;<sp/>and<sp/>\g&apos;...&apos;<sp/>code<sp/>(Oniguruma</highlight></codeline>
<codeline lineno="4747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatibility).<sp/>However,<sp/>the<sp/>syntax<sp/>has<sp/>been<sp/>checked<sp/>to<sp/>ensure<sp/>that</highlight></codeline>
<codeline lineno="4748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>...<sp/>are<sp/>a<sp/>(signed)<sp/>number,<sp/>so<sp/>that<sp/>neither<sp/>ERR63<sp/>nor<sp/>ERR29<sp/>will</highlight></codeline>
<codeline lineno="4749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>called<sp/>on<sp/>this<sp/>path,<sp/>nor<sp/>with<sp/>the<sp/>jump<sp/>to<sp/>OTHER_CHAR_AFTER_QUERY</highlight></codeline>
<codeline lineno="4750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ever<sp/>be<sp/>taken.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4751"><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE_NUMERICAL_RECURSION:</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((refsign<sp/>=<sp/>*ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((digitab[*ptr]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea798e1a5e313d7d559d9dd4e58e69c012" kindref="member">ERR63</ref>;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refsign<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((digitab[ptr[1]]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OTHER_CHAR_AFTER_QUERY;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((digitab[*ptr]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>recno<sp/>*<sp/>10<sp/>+<sp/>*ptr++<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"></highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/>terminator)</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eadb9e1cb0f0f729dce4b985cbff0dcc7d" kindref="member">ERR29</ref>;</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refsign<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eae19253a5c8d401311c853f7ed4d40b43" kindref="member">ERR58</ref>;</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>-<sp/>recno<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refsign<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eae19253a5c8d401311c853f7ed4d40b43" kindref="member">ERR58</ref>;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>+=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Come<sp/>here<sp/>from<sp/>code<sp/>above<sp/>that<sp/>handles<sp/>a<sp/>named<sp/>recursion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE_RECURSION:</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref>;</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>we<sp/>are<sp/>actually<sp/>compiling,<sp/>find<sp/>the<sp/>bracket<sp/>that<sp/>is<sp/>being</highlight></codeline>
<codeline lineno="4812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenced.<sp/>Temporarily<sp/>end<sp/>the<sp/>regex<sp/>in<sp/>case<sp/>it<sp/>doesn&apos;t<sp/>exist<sp/>before</highlight></codeline>
<codeline lineno="4813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>point.<sp/>If<sp/>we<sp/>end<sp/>up<sp/>with<sp/>a<sp/>forward<sp/>reference,<sp/>first<sp/>check<sp/>that</highlight></codeline>
<codeline lineno="4814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>bracket<sp/>does<sp/>occur<sp/>later<sp/>so<sp/>we<sp/>can<sp/>give<sp/>the<sp/>error<sp/>(and<sp/>position)</highlight></codeline>
<codeline lineno="4815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now.<sp/>Then<sp/>remember<sp/>this<sp/>forward<sp/>reference<sp/>in<sp/>the<sp/>workspace<sp/>so<sp/>it<sp/>can</highlight></codeline>
<codeline lineno="4816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>filled<sp/>in<sp/>at<sp/>the<sp/>end.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>!=<sp/>0)<sp/>called<sp/>=<sp/>find_bracket(cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref>,<sp/>utf8,<sp/>recno);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forward<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(called<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find_parens(ptr,<sp/>cd,<sp/>NULL,<sp/>recno,</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(options<sp/>&amp;<sp/>PCRE_EXTENDED)<sp/>!=<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>+<sp/>recno;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>,<sp/>0,<sp/>code<sp/>+<sp/>2<sp/>+<sp/>LINK_SIZE<sp/>-<sp/>cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref>);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>a<sp/>forward<sp/>reference,<sp/>and<sp/>the<sp/>subpattern<sp/>is<sp/>still<sp/>open,</highlight></codeline>
<codeline lineno="4838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>a<sp/>recursive<sp/>call.<sp/>We<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>is<sp/>a<sp/>left</highlight></codeline>
<codeline lineno="4839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recursion<sp/>that<sp/>could<sp/>loop<sp/>for<sp/>ever,<sp/>and<sp/>diagnose<sp/>that<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GET(called,<sp/>1)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>could_be_empty(called,<sp/>code,<sp/>bcptr,<sp/>utf8))</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea5c2fc263561836a67315210c6094aae5" kindref="member">ERR40</ref>;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>the<sp/>recursion/subroutine<sp/>item,<sp/>automatically<sp/>wrapped<sp/>inside</highlight></codeline>
<codeline lineno="4850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;once&quot;<sp/>brackets.<sp/>Set<sp/>up<sp/>a<sp/>&quot;previous<sp/>group&quot;<sp/>length<sp/>so<sp/>that<sp/>a</highlight></codeline>
<codeline lineno="4851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsequent<sp/>quantifier<sp/>will<sp/>work.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(code,<sp/>1,<sp/>2<sp/>+<sp/>2*LINK_SIZE);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6c9584ec1f81cb6747db96dd11243a25" kindref="member">OP_RECURSE</ref>;</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(code,<sp/>1,<sp/>called<sp/>-<sp/>cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref>);</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>;</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(code,<sp/>1,<sp/>2<sp/>+<sp/>2*LINK_SIZE);</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_prevgroup<sp/>=<sp/>3<sp/>+<sp/>3*<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>determine<sp/>a<sp/>first<sp/>byte<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>characters:<sp/>check<sp/>option<sp/>setting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTHER_CHAR_AFTER_QUERY:</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>=<sp/>unset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optset<sp/>=<sp/>&amp;set;</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*ptr++)</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:<sp/>optset<sp/>=<sp/>&amp;unset;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Record<sp/>that<sp/>it<sp/>changed<sp/>in<sp/>the<sp/>external<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1ac200fe10b745df0961d1f1801266ace1" kindref="member">PCRE_DUPNAMES</ref>;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1ace1a0fedb1f4bdffcc0f0a97cc2f1489" kindref="member">PCRE_JCHANGED</ref>;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1a5e2fa0a3acfe44bf19e83ebc4b0b5ad4" kindref="member">PCRE_MULTILINE</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1aa20620f0b3ffd7d5778d86e98d2d4536" kindref="member">PCRE_DOTALL</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1a24c767567bde49a4ebdc33783ae2c914" kindref="member">PCRE_EXTENDED</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1afe50a7c890619904dd88d86af5621337" kindref="member">PCRE_UNGREEDY</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:<sp/>*optset<sp/>|=<sp/><ref refid="pcre_8h_1ae356b5a19de6096863c0b9e39e74b92b" kindref="member">PCRE_EXTRA</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea7b3b216f5fe60dd1ddab54168c6f0763" kindref="member">ERR12</ref>;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr--;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Correct<sp/>the<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>changed<sp/>option<sp/>bits,<sp/>but<sp/>don&apos;t<sp/>change<sp/>anything<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newoptions<sp/>=<sp/>(options<sp/>|<sp/>set)<sp/>&amp;<sp/>(~unset);</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"></highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>options<sp/>ended<sp/>with<sp/>&apos;)&apos;<sp/>this<sp/>is<sp/>not<sp/>the<sp/>start<sp/>of<sp/>a<sp/>nested</highlight></codeline>
<codeline lineno="4909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>with<sp/>option<sp/>changes,<sp/>so<sp/>the<sp/>options<sp/>change<sp/>at<sp/>this<sp/>level.<sp/>If<sp/>this</highlight></codeline>
<codeline lineno="4910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>is<sp/>right<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern,<sp/>the<sp/>options<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="4911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abstracted<sp/>and<sp/>made<sp/>external<sp/>in<sp/>the<sp/>pre-compile<sp/>phase,<sp/>and<sp/>ignored<sp/>in</highlight></codeline>
<codeline lineno="4912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>compile<sp/>phase.<sp/>This<sp/>can<sp/>be<sp/>helpful<sp/>when<sp/>matching<sp/>--<sp/>for<sp/>instance<sp/>in</highlight></codeline>
<codeline lineno="4913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caseless<sp/>checking<sp/>of<sp/>required<sp/>bytes.</highlight></codeline>
<codeline lineno="4914"><highlight class="comment"></highlight></codeline>
<codeline lineno="4915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>code<sp/>pointer<sp/>is<sp/>not<sp/>(cd-&gt;start_code<sp/>+<sp/>1<sp/>+<sp/>LINK_SIZE),<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="4916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definitely<sp/>*not*<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern<sp/>because<sp/>something<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="4917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiled.<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>however,<sp/>the<sp/>code<sp/>pointer<sp/>can<sp/>have</highlight></codeline>
<codeline lineno="4918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>value<sp/>after<sp/>the<sp/>start,<sp/>because<sp/>it<sp/>gets<sp/>reset<sp/>as<sp/>code<sp/>is<sp/>discarded</highlight></codeline>
<codeline lineno="4919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>during<sp/>the<sp/>pre-compile.<sp/>However,<sp/>this<sp/>can<sp/>happen<sp/>only<sp/>at<sp/>top<sp/>level<sp/>-<sp/>if</highlight></codeline>
<codeline lineno="4920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>are<sp/>within<sp/>parentheses,<sp/>the<sp/>starting<sp/>BRA<sp/>will<sp/>still<sp/>be<sp/>present.<sp/>At</highlight></codeline>
<codeline lineno="4921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>parenthesis<sp/>level,<sp/>the<sp/>length<sp/>value<sp/>can<sp/>be<sp/>used<sp/>to<sp/>test<sp/>if<sp/>anything</highlight></codeline>
<codeline lineno="4922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>compiled<sp/>at<sp/>that<sp/>level.<sp/>Thus,<sp/>a<sp/>test<sp/>for<sp/>both<sp/>these<sp/>conditions</highlight></codeline>
<codeline lineno="4923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>necessary<sp/>to<sp/>ensure<sp/>we<sp/>correctly<sp/>detect<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern<sp/>in</highlight></codeline>
<codeline lineno="4924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>both<sp/>phases.</highlight></codeline>
<codeline lineno="4925"><highlight class="comment"></highlight></codeline>
<codeline lineno="4926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>we<sp/>are<sp/>not<sp/>at<sp/>the<sp/>pattern<sp/>start,<sp/>compile<sp/>code<sp/>to<sp/>change<sp/>the<sp/>ims</highlight></codeline>
<codeline lineno="4927"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options<sp/>if<sp/>this<sp/>setting<sp/>actually<sp/>changes<sp/>any<sp/>of<sp/>them,<sp/>and<sp/>reset<sp/>the</highlight></codeline>
<codeline lineno="4928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greedy<sp/>defaults<sp/>and<sp/>the<sp/>case<sp/>value<sp/>for<sp/>firstbyte<sp/>and<sp/>reqbyte.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>+<sp/>1<sp/>+<sp/>LINK_SIZE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lengthptr<sp/>==<sp/>NULL<sp/>||<sp/>*lengthptr<sp/>==<sp/>2<sp/>+<sp/>2*LINK_SIZE))</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>=<sp/>newoptions;</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a42868e7975a4b7882c42db075ee54358" kindref="member">PCRE_IMS</ref>)<sp/>!=<sp/>(newoptions<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a42868e7975a4b7882c42db075ee54358" kindref="member">PCRE_IMS</ref>))</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>newoptions<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a42868e7975a4b7882c42db075ee54358" kindref="member">PCRE_IMS</ref>;</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greedy_default<sp/>=<sp/>((newoptions<sp/>&amp;<sp/><ref refid="pcre_8h_1afe50a7c890619904dd88d86af5621337" kindref="member">PCRE_UNGREEDY</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>greedy_non_default<sp/>=<sp/>greedy_default<sp/>^<sp/>1;</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req_caseopt<sp/>=<sp/>((newoptions<sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>!=<sp/>0)?<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"></highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>options<sp/>at<sp/>this<sp/>level,<sp/>and<sp/>pass<sp/>them<sp/>back<sp/>for<sp/>use</highlight></codeline>
<codeline lineno="4950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>subsequent<sp/>branches.<sp/>When<sp/>not<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern,<sp/>this</highlight></codeline>
<codeline lineno="4951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information<sp/>is<sp/>also<sp/>necessary<sp/>so<sp/>that<sp/>a<sp/>resetting<sp/>item<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="4952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiled<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>group<sp/>(if<sp/>we<sp/>are<sp/>in<sp/>a<sp/>group).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"></highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*optionsptr<sp/>=<sp/>options<sp/>=<sp/>newoptions;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>item<sp/>can&apos;t<sp/>be<sp/>repeated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>options<sp/>ended<sp/>with<sp/>&apos;:&apos;<sp/>we<sp/>are<sp/>heading<sp/>into<sp/>a<sp/>nested<sp/>group</highlight></codeline>
<codeline lineno="4960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>possible<sp/>change<sp/>of<sp/>options.<sp/>Such<sp/>groups<sp/>are<sp/>non-capturing<sp/>and<sp/>are</highlight></codeline>
<codeline lineno="4961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>assertions<sp/>of<sp/>any<sp/>kind.<sp/>All<sp/>we<sp/>need<sp/>to<sp/>do<sp/>is<sp/>skip<sp/>over<sp/>the<sp/>&apos;:&apos;;</highlight></codeline>
<codeline lineno="4962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>newoptions<sp/>value<sp/>is<sp/>handled<sp/>below.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>switch<sp/>for<sp/>character<sp/>following<sp/>(?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>(?<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Opening<sp/>parenthesis<sp/>not<sp/>followed<sp/>by<sp/>&apos;?&apos;.<sp/>If<sp/>PCRE_NO_AUTO_CAPTURE<sp/>is<sp/>set,</highlight></codeline>
<codeline lineno="4970"><highlight class="comment"><sp/><sp/><sp/><sp/>all<sp/>unadorned<sp/>brackets<sp/>become<sp/>non-capturing<sp/>and<sp/>behave<sp/>like<sp/>(?:...)</highlight></codeline>
<codeline lineno="4971"><highlight class="comment"><sp/><sp/><sp/><sp/>brackets.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4972"><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a89eae5b0859fda718d6924e2548c0039" kindref="member">PCRE_NO_AUTO_CAPTURE</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Else<sp/>we<sp/>have<sp/>a<sp/>capturing<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NUMBERED_GROUP:</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a3bba6362450b5ef3ad330eaf746a5c2b" kindref="member">PUT2</ref>(code,<sp/>1+LINK_SIZE,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>);</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>skipbytes<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>nested<sp/>bracketed<sp/>regex.<sp/>Assertions<sp/>may<sp/>not<sp/>be<sp/>repeated,<sp/>but</highlight></codeline>
<codeline lineno="4989"><highlight class="comment"><sp/><sp/><sp/><sp/>other<sp/>kinds<sp/>can<sp/>be.<sp/>All<sp/>their<sp/>opcodes<sp/>are<sp/>&gt;=<sp/>OP_ONCE.<sp/>We<sp/>copy<sp/>code<sp/>into<sp/>a</highlight></codeline>
<codeline lineno="4990"><highlight class="comment"><sp/><sp/><sp/><sp/>non-register<sp/>variable<sp/>in<sp/>order<sp/>to<sp/>be<sp/>able<sp/>to<sp/>pass<sp/>its<sp/>address<sp/>because<sp/>some</highlight></codeline>
<codeline lineno="4991"><highlight class="comment"><sp/><sp/><sp/><sp/>compilers<sp/>complain<sp/>otherwise.<sp/>Pass<sp/>in<sp/>a<sp/>new<sp/>setting<sp/>for<sp/>the<sp/>ims<sp/>options<sp/>if</highlight></codeline>
<codeline lineno="4992"><highlight class="comment"><sp/><sp/><sp/><sp/>they<sp/>have<sp/>changed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>(bravalue<sp/>&gt;=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>)?<sp/>code<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/>*code<sp/>=<sp/>bravalue;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/>tempcode<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>tempreqvary<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>value<sp/>before<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/>length_prevgroup<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>for<sp/>pre-compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compile_regex(</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newoptions,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>complete<sp/>new<sp/>option<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a42868e7975a4b7882c42db075ee54358" kindref="member">PCRE_IMS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>previous<sp/>ims<sp/>option<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tempcode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>put<sp/>code<sp/>(updated)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>pointer<sp/>(updated)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorcodeptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>put<sp/>an<sp/>error<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bravalue<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1ce25e7cd4fdba6d53cc4b316773e439" kindref="member">OP_ASSERTBACK</ref><sp/>||</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5057097bced86c4c7554843df46264d9" kindref="member">OP_ASSERTBACK_NOT</ref>),<sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>back<sp/>assert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_bracount,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>if<sp/>(?|<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipbytes,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>over<sp/>bracket<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;subfirstbyte,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>possible<sp/>first<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;subreqbyte,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>possible<sp/>last<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>branch<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tables<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lengthptr<sp/>==<sp/>NULL)?<sp/>NULL<sp/>:<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actual<sp/>compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;length_prevgroup<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-compile<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>the<sp/>end<sp/>of<sp/>compiling,<sp/>code<sp/>is<sp/>still<sp/>pointing<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="5020"><highlight class="comment"><sp/><sp/><sp/><sp/>group,<sp/>while<sp/>tempcode<sp/>has<sp/>been<sp/>updated<sp/>to<sp/>point<sp/>past<sp/>the<sp/>end<sp/>of<sp/>the<sp/>group</highlight></codeline>
<codeline lineno="5021"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>any<sp/>option<sp/>resetting<sp/>that<sp/>may<sp/>follow<sp/>it.<sp/>The<sp/>pattern<sp/>pointer<sp/>(ptr)</highlight></codeline>
<codeline lineno="5022"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>on<sp/>the<sp/>bracket.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5023"><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>a<sp/>conditional<sp/>bracket,<sp/>check<sp/>that<sp/>there<sp/>are<sp/>no<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="5025"><highlight class="comment"><sp/><sp/><sp/><sp/>two<sp/>branches<sp/>in<sp/>the<sp/>group,<sp/>or<sp/>just<sp/>one<sp/>if<sp/>it&apos;s<sp/>a<sp/>DEFINE<sp/>group.<sp/>We<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="5026"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>real<sp/>compile<sp/>phase,<sp/>not<sp/>in<sp/>the<sp/>pre-pass,<sp/>where<sp/>the<sp/>whole<sp/>group<sp/>may</highlight></codeline>
<codeline lineno="5027"><highlight class="comment"><sp/><sp/><sp/><sp/>not<sp/>be<sp/>available.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bravalue<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref><sp/>&amp;&amp;<sp/>lengthptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*tc<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condcount++;</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tc<sp/>+=<sp/>GET(tc,1);</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*tc<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>DEFINE<sp/>group<sp/>is<sp/>never<sp/>obeyed<sp/>inline<sp/>(the<sp/>&quot;condition&quot;<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="5041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>false).<sp/>It<sp/>must<sp/>have<sp/>only<sp/>one<sp/>branch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code[LINK_SIZE+1]<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>)</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condcount<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea8444c77776c9ede4e06506b63c7d3304" kindref="member">ERR54</ref>;</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bravalue<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>a<sp/>flag<sp/>to<sp/>suppress<sp/>char<sp/>handling<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>&quot;normal&quot;<sp/>conditional<sp/>group.<sp/>If<sp/>there<sp/>is<sp/>just<sp/>one<sp/>branch,<sp/>we<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="5054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>make<sp/>use<sp/>of<sp/>its<sp/>firstbyte<sp/>or<sp/>reqbyte,<sp/>because<sp/>this<sp/>is<sp/>equivalent<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="5055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>empty<sp/>second<sp/>branch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"></highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condcount<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea7488057c49c7c0bd37a9930cc8f9b2b1" kindref="member">ERR27</ref>;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condcount<sp/>==<sp/>1)<sp/>subfirstbyte<sp/>=<sp/>subreqbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"></highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>if<sp/>hit<sp/>end<sp/>of<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea41e1c7dd6ad5ee72a69d96dd7efac87a" kindref="member">ERR14</ref>;</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"></highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>update<sp/>the<sp/>length<sp/>by<sp/>the<sp/>length<sp/>of<sp/>the<sp/>group,</highlight></codeline>
<codeline lineno="5077"><highlight class="comment"><sp/><sp/><sp/><sp/>less<sp/>the<sp/>brackets<sp/>at<sp/>either<sp/>end.<sp/>Then<sp/>reduce<sp/>the<sp/>compiled<sp/>code<sp/>to<sp/>just<sp/>a</highlight></codeline>
<codeline lineno="5078"><highlight class="comment"><sp/><sp/><sp/><sp/>set<sp/>of<sp/>non-capturing<sp/>brackets<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>use<sp/>much<sp/>memory<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="5079"><highlight class="comment"><sp/><sp/><sp/><sp/>duplicated<sp/>by<sp/>a<sp/>quantifier.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>length_prevgroup<sp/>-<sp/>2<sp/>-<sp/>2*LINK_SIZE)</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>length_prevgroup<sp/>-<sp/>2<sp/>-<sp/>2*<ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>1<sp/>+<sp/>LINK_SIZE);</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>;</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>1<sp/>+<sp/>LINK_SIZE);</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>to<sp/>waste<sp/>time<sp/>with<sp/>special<sp/>character<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>update<sp/>the<sp/>main<sp/>code<sp/>pointer<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>tempcode;</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>DEFINE<sp/>group,<sp/>required<sp/>and<sp/>first<sp/>character<sp/>settings<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="5101"><highlight class="comment"><sp/><sp/><sp/><sp/>relevant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bravalue<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabcc7660b4b965fabb50f7f1183ed6855" kindref="member">OP_DEF</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"></highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>updating<sp/>of<sp/>the<sp/>required<sp/>and<sp/>first<sp/>characters<sp/>for<sp/>other<sp/>types<sp/>of</highlight></codeline>
<codeline lineno="5106"><highlight class="comment"><sp/><sp/><sp/><sp/>group.<sp/>Update<sp/>for<sp/>normal<sp/>brackets<sp/>of<sp/>all<sp/>kinds,<sp/>and<sp/>conditions<sp/>with<sp/>two</highlight></codeline>
<codeline lineno="5107"><highlight class="comment"><sp/><sp/><sp/><sp/>branches<sp/>(see<sp/>code<sp/>above).<sp/>If<sp/>the<sp/>bracket<sp/>is<sp/>followed<sp/>by<sp/>a<sp/>quantifier<sp/>with</highlight></codeline>
<codeline lineno="5108"><highlight class="comment"><sp/><sp/><sp/><sp/>zero<sp/>repeat,<sp/>we<sp/>have<sp/>to<sp/>back<sp/>off.<sp/>Hence<sp/>the<sp/>definition<sp/>of<sp/>zeroreqbyte<sp/>and</highlight></codeline>
<codeline lineno="5109"><highlight class="comment"><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>outside<sp/>the<sp/>main<sp/>loop<sp/>so<sp/>that<sp/>they<sp/>can<sp/>be<sp/>accessed<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="5110"><highlight class="comment"><sp/><sp/><sp/><sp/>back<sp/>off.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/>groupsetfirstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bravalue<sp/>&gt;=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>)</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>not<sp/>yet<sp/>set<sp/>a<sp/>firstbyte<sp/>in<sp/>this<sp/>branch,<sp/>take<sp/>it<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="5119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>subpattern,<sp/>remembering<sp/>that<sp/>it<sp/>was<sp/>set<sp/>here<sp/>so<sp/>that<sp/>a<sp/>repeat<sp/>of<sp/>more</highlight></codeline>
<codeline lineno="5120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>than<sp/>one<sp/>can<sp/>replicate<sp/>it<sp/>as<sp/>reqbyte<sp/>if<sp/>necessary.<sp/>If<sp/>the<sp/>subpattern<sp/>has</highlight></codeline>
<codeline lineno="5121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>firstbyte,<sp/>set<sp/>&quot;none&quot;<sp/>for<sp/>the<sp/>whole<sp/>branch.<sp/>In<sp/>both<sp/>cases,<sp/>a<sp/>zero</highlight></codeline>
<codeline lineno="5122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>repeat<sp/>forces<sp/>firstbyte<sp/>to<sp/>&quot;none&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5123"><highlight class="normal"></highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subfirstbyte<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/>subfirstbyte;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupsetfirstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>firstbyte<sp/>was<sp/>previously<sp/>set,<sp/>convert<sp/>the<sp/>subpattern&apos;s<sp/>firstbyte</highlight></codeline>
<codeline lineno="5136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>reqbyte<sp/>if<sp/>there<sp/>wasn&apos;t<sp/>one,<sp/>using<sp/>the<sp/>vary<sp/>flag<sp/>that<sp/>was<sp/>in</highlight></codeline>
<codeline lineno="5137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>existence<sp/>beforehand.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subfirstbyte<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>subreqbyte<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subreqbyte<sp/>=<sp/>subfirstbyte<sp/>|<sp/>tempreqvary;</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"></highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>subpattern<sp/>set<sp/>a<sp/>required<sp/>byte<sp/>(or<sp/>set<sp/>a<sp/>first<sp/>byte<sp/>that<sp/>isn&apos;t</highlight></codeline>
<codeline lineno="5143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>really<sp/>the<sp/>first<sp/>byte<sp/>-<sp/>see<sp/>above),<sp/>set<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"></highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subreqbyte<sp/>&gt;=<sp/>0)<sp/>reqbyte<sp/>=<sp/>subreqbyte;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>forward<sp/>assertion,<sp/>we<sp/>take<sp/>the<sp/>reqbyte,<sp/>if<sp/>set.<sp/>This<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="5149"><highlight class="comment"><sp/><sp/><sp/><sp/>helpful<sp/>if<sp/>the<sp/>pattern<sp/>that<sp/>follows<sp/>the<sp/>assertion<sp/>doesn&apos;t<sp/>set<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="5150"><highlight class="comment"><sp/><sp/><sp/><sp/>char.<sp/>For<sp/>example,<sp/>it&apos;s<sp/>useful<sp/>for<sp/>/(?=abcde).+/.<sp/>We<sp/>can&apos;t<sp/>set<sp/>firstbyte</highlight></codeline>
<codeline lineno="5151"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>an<sp/>assertion,<sp/>however<sp/>because<sp/>it<sp/>leads<sp/>to<sp/>incorrect<sp/>effect<sp/>for<sp/>patterns</highlight></codeline>
<codeline lineno="5152"><highlight class="comment"><sp/><sp/><sp/><sp/>such<sp/>as<sp/>/(?=a)a.+/<sp/>when<sp/>the<sp/>&quot;real&quot;<sp/>&quot;a&quot;<sp/>would<sp/>then<sp/>become<sp/>a<sp/>reqbyte<sp/>instead</highlight></codeline>
<codeline lineno="5153"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>a<sp/>firstbyte.<sp/>This<sp/>is<sp/>overcome<sp/>by<sp/>a<sp/>scan<sp/>at<sp/>the<sp/>end<sp/>if<sp/>there&apos;s<sp/>no</highlight></codeline>
<codeline lineno="5154"><highlight class="comment"><sp/><sp/><sp/><sp/>firstbyte,<sp/>looking<sp/>for<sp/>an<sp/>asserted<sp/>first<sp/>char.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bravalue<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref><sp/>&amp;&amp;<sp/>subreqbyte<sp/>&gt;=<sp/>0)<sp/>reqbyte<sp/>=<sp/>subreqbyte;</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>processing<sp/>&apos;(&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"></highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>metasequences<sp/>introduced<sp/>by<sp/>\.<sp/>For<sp/>ones<sp/>like<sp/>\d,<sp/>the<sp/>ESC_<sp/>values</highlight></codeline>
<codeline lineno="5162"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>arranged<sp/>to<sp/>be<sp/>the<sp/>negation<sp/>of<sp/>the<sp/>corresponding<sp/>OP_values.<sp/>For<sp/>the</highlight></codeline>
<codeline lineno="5163"><highlight class="comment"><sp/><sp/><sp/><sp/>back<sp/>references,<sp/>the<sp/>values<sp/>are<sp/>ESC_REF<sp/>plus<sp/>the<sp/>reference<sp/>number.<sp/>Only</highlight></codeline>
<codeline lineno="5164"><highlight class="comment"><sp/><sp/><sp/><sp/>back<sp/>references<sp/>and<sp/>those<sp/>types<sp/>that<sp/>consume<sp/>a<sp/>character<sp/>may<sp/>be<sp/>repeated.</highlight></codeline>
<codeline lineno="5165"><highlight class="comment"><sp/><sp/><sp/><sp/>We<sp/>can<sp/>test<sp/>for<sp/>values<sp/>between<sp/>ESC_b<sp/>and<sp/>ESC_Z<sp/>for<sp/>the<sp/>latter;<sp/>this<sp/>may</highlight></codeline>
<codeline lineno="5166"><highlight class="comment"><sp/><sp/><sp/><sp/>have<sp/>to<sp/>change<sp/>if<sp/>any<sp/>new<sp/>ones<sp/>are<sp/>ever<sp/>created.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/>tempptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>check_escape(&amp;ptr,<sp/>errorcodeptr,<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>,<sp/>options,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*errorcodeptr<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1c0b42b78dfc33f0f79a2a477ff60360" kindref="member">ESC_Q</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>start<sp/>of<sp/>quoted<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>ptr<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>empty<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>inescq<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"></highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af04e9d033be103b364dad4a005b7b5d2" kindref="member">ESC_E</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Perl<sp/>ignores<sp/>an<sp/>orphan<sp/>\E<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5183"><highlight class="normal"></highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>metasequences<sp/>that<sp/>actually<sp/>match<sp/>a<sp/>character,<sp/>we<sp/>disable<sp/>the</highlight></codeline>
<codeline lineno="5185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>setting<sp/>of<sp/>a<sp/>first<sp/>character<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>already<sp/>been<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"></highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref><sp/>&amp;&amp;<sp/>-c<sp/>&gt;<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref><sp/>&amp;&amp;<sp/>-c<sp/>&lt;<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a01c38ed66d58a64e110e4bdc8a8d7628" kindref="member">ESC_Z</ref>)</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>values<sp/>to<sp/>reset<sp/>to<sp/>if<sp/>this<sp/>is<sp/>followed<sp/>by<sp/>a<sp/>zero<sp/>repeat.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\g&lt;name&gt;<sp/>or<sp/>\g&apos;name&apos;<sp/>is<sp/>a<sp/>subroutine<sp/>call<sp/>by<sp/>name<sp/>and<sp/>\g&lt;n&gt;<sp/>or<sp/>\g&apos;n&apos;</highlight></codeline>
<codeline lineno="5196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>a<sp/>subroutine<sp/>call<sp/>by<sp/>number<sp/>(Oniguruma<sp/>syntax).<sp/>In<sp/>fact,<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="5197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-ESC_g<sp/>is<sp/>returned<sp/>only<sp/>for<sp/>these<sp/>cases.<sp/>So<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>check<sp/>for<sp/>&lt;</highlight></codeline>
<codeline lineno="5198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>&apos;<sp/>if<sp/>the<sp/>value<sp/>is<sp/>-ESC_g.<sp/>For<sp/>the<sp/>Perl<sp/>syntax<sp/>\g{n}<sp/>the<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="5199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-ESC_REF+n,<sp/>and<sp/>for<sp/>the<sp/>Perl<sp/>syntax<sp/>\g{name}<sp/>the<sp/>result<sp/>is<sp/>-ESC_k<sp/>(as</highlight></codeline>
<codeline lineno="5200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>a<sp/>synonym<sp/>for<sp/>a<sp/>named<sp/>back<sp/>reference).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a705c8352d89965878a581d16772ad306" kindref="member">ESC_g</ref>)</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*p;</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_hwm<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normally<sp/>this<sp/>is<sp/>set<sp/>when<sp/>&apos;(&apos;<sp/>is<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>two<sp/>statements<sp/>stop<sp/>the<sp/>compiler<sp/>for<sp/>warning<sp/>about<sp/>possibly</highlight></codeline>
<codeline lineno="5209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unset<sp/>variables<sp/>caused<sp/>by<sp/>the<sp/>jump<sp/>to<sp/>HANDLE_NUMERICAL_RECURSION.<sp/>In</highlight></codeline>
<codeline lineno="5210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact,<sp/>because<sp/>we<sp/>actually<sp/>check<sp/>for<sp/>a<sp/>number<sp/>below,<sp/>the<sp/>paths<sp/>that</highlight></codeline>
<codeline lineno="5211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>would<sp/>actually<sp/>be<sp/>in<sp/>error<sp/>are<sp/>never<sp/>taken.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipbytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_bracount<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>a<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5217"><highlight class="normal"></highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>isnumber<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>ptr<sp/>+<sp/>1;<sp/>*p<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*p<sp/>!=<sp/>terminator;<sp/>p++)</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>==<sp/>0)<sp/>isnumber<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref>[*p]<sp/>&amp;<sp/>ctype_word)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/>terminator)</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead42acbf3dcfe3fa994de8a64a404528b" kindref="member">ERR57</ref>;</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnumber)</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>HANDLE_NUMERICAL_RECURSION;</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_recurse<sp/>=<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NAMED_REF_OR_RECURSE;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>a<sp/>signed<sp/>number<sp/>in<sp/>angle<sp/>brackets<sp/>or<sp/>quotes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>ptr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((digitab[*p]<sp/>&amp;<sp/>ctype_digit)<sp/>!=<sp/>0)<sp/>p++;</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/>terminator)</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ead42acbf3dcfe3fa994de8a64a404528b" kindref="member">ERR57</ref>;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>HANDLE_NUMERICAL_RECURSION;</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\k&lt;name&gt;<sp/>or<sp/>\k&apos;name&apos;<sp/>is<sp/>a<sp/>back<sp/>reference<sp/>by<sp/>name<sp/>(Perl<sp/>syntax).</highlight></codeline>
<codeline lineno="5254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>also<sp/>support<sp/>\k{name}<sp/>(.NET<sp/>syntax)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5255"><highlight class="normal"></highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a04258325836a53e4968cb8428400d699" kindref="member">ESC_k</ref><sp/>&amp;&amp;<sp/>(ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_recurse<sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminator<sp/>=<sp/>(*(++ptr)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>:<sp/>(*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)?<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>NAMED_REF_OR_RECURSE;</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"></highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Back<sp/>references<sp/>are<sp/>handled<sp/>specially;<sp/>must<sp/>disable<sp/>firstbyte<sp/>if</highlight></codeline>
<codeline lineno="5264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>set<sp/>to<sp/>cope<sp/>with<sp/>cases<sp/>like<sp/>(?=(\w+))\1:<sp/>which<sp/>would<sp/>otherwise<sp/>set</highlight></codeline>
<codeline lineno="5265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&apos;:&apos;<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>&gt;=<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a858962ab240b31fe71c9cac16c7c4515" kindref="member">ESC_REF</ref>)</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recno<sp/>=<sp/>-c<sp/>-<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a858962ab240b31fe71c9cac16c7c4515" kindref="member">ESC_REF</ref>;</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"></highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE_REFERENCE:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Come<sp/>here<sp/>from<sp/>named<sp/>backref<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)<sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac86259a3769caa81a0a61a9ec3c58129" kindref="member">OP_REF</ref>;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a9f6c2a31264e683b2fd6525955abf115" kindref="member">PUT2INC</ref>(code,<sp/>0,<sp/>recno);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1add03843bc9b81fa0b63b9d8ee730cf5c" kindref="member">backref_map</ref><sp/>|=<sp/>(recno<sp/>&lt;<sp/>32)?<sp/>(1<sp/>&lt;&lt;<sp/>recno)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recno<sp/>&gt;<sp/>cd-&gt;<ref refid="structcompile__data_1a13384c0fe520de7e485444824e410305" kindref="member">top_backref</ref>)<sp/>cd-&gt;<ref refid="structcompile__data_1a13384c0fe520de7e485444824e410305" kindref="member">top_backref</ref><sp/>=<sp/>recno;</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"></highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>So<sp/>are<sp/>Unicode<sp/>property<sp/>matches,<sp/>if<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UCP</highlight></codeline>
<codeline lineno="5283"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref><sp/>||<sp/>-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>)</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>negated;</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pdata;</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptype<sp/>=<sp/>get_ucp(&amp;ptr,<sp/>&amp;negated,<sp/>&amp;pdata,<sp/>errorcodeptr);</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptype<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>((-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>)<sp/>!=<sp/>negated)?<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca9401977b66a8b590fdc4c769cab73868" kindref="member">OP_PROP</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1357d93ff70849561f64cfc072a685d1" kindref="member">OP_NOTPROP</ref>;</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>ptype;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>pdata;</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="5295"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Unicode<sp/>properties<sp/>are<sp/>not<sp/>supported,<sp/>\X,<sp/>\P,<sp/>and<sp/>\p<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="5297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>allowed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5298"><highlight class="normal"></highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04abe0201eb170f3c62f45959bf67080371" kindref="member">ESC_X</ref><sp/>||<sp/>-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a1f5c1fc51cdc4bbe7815d7ca13d6b06e" kindref="member">ESC_P</ref><sp/>||<sp/>-c<sp/>==<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04af7dd5a3c0c0138b9b8eb080bcaf7e9cc" kindref="member">ESC_p</ref>)</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eadcb43f1b21cbf87cdddc375c56d20123" kindref="member">ERR45</ref>;</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>FAILED;</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5305"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>the<sp/>rest<sp/>(including<sp/>\X<sp/>when<sp/>Unicode<sp/>properties<sp/>are<sp/>supported),<sp/>we</highlight></codeline>
<codeline lineno="5307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>obtain<sp/>the<sp/>OP<sp/>value<sp/>by<sp/>negating<sp/>the<sp/>escape<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5308"><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>(-c<sp/>&gt;<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a12c6f5129f87a458cbac8abef29d37e7" kindref="member">ESC_b</ref><sp/>&amp;&amp;<sp/>-c<sp/>&lt;<sp/><ref refid="pcre__internal_8h_1abc6126af1d45847bc59afa0aa3216b04a01c38ed66d58a64e110e4bdc8a8d7628" kindref="member">ESC_Z</ref>)?<sp/>code<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>-c;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>a<sp/>data<sp/>character<sp/>whose<sp/>value<sp/>is<sp/>in<sp/>c.<sp/>In<sp/>UTF-8<sp/>mode<sp/>it<sp/>may<sp/>have</highlight></codeline>
<codeline lineno="5318"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>value<sp/>&gt;<sp/>127.<sp/>We<sp/>set<sp/>its<sp/>representation<sp/>in<sp/>the<sp/>length/buffer,<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="5319"><highlight class="comment"><sp/><sp/><sp/><sp/>handle<sp/>it<sp/>as<sp/>a<sp/>data<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="5322"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;<sp/>127)</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mclength<sp/>=<sp/><ref refid="pcre__internal_8h_1a68040d6db1fef2290d880892d27d7d47" kindref="member">_pcre_ord2utf8</ref>(c,<sp/>mcbuffer);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5326"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mcbuffer[0]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mclength<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ONE_CHAR;</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"></highlight></codeline>
<codeline lineno="5333"><highlight class="normal"></highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>===================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>a<sp/>literal<sp/>character.<sp/>It<sp/>is<sp/>guaranteed<sp/>not<sp/>to<sp/>be<sp/>whitespace<sp/>or<sp/>#</highlight></codeline>
<codeline lineno="5336"><highlight class="comment"><sp/><sp/><sp/><sp/>when<sp/>the<sp/>extended<sp/>flag<sp/>is<sp/>set.<sp/>If<sp/>we<sp/>are<sp/>in<sp/>UTF-8<sp/>mode,<sp/>it<sp/>may<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="5337"><highlight class="comment"><sp/><sp/><sp/><sp/>multi-byte<sp/>literal<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"></highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/>NORMAL_CHAR:</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/>mclength<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/>mcbuffer[0]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="5345"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>c<sp/>&gt;=<sp/>0xc0)</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr[1]<sp/>&amp;<sp/>0xc0)<sp/>==<sp/>0x80)</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcbuffer[mclength++]<sp/>=<sp/>*(++ptr);</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5351"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>we<sp/>have<sp/>the<sp/>character&apos;s<sp/>bytes<sp/>in<sp/>mcbuffer,<sp/>and<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="5353"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>mclength.<sp/>When<sp/>not<sp/>in<sp/>UTF-8<sp/>mode,<sp/>the<sp/>length<sp/>is<sp/>always<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/>ONE_CHAR:</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>((options<sp/>&amp;<sp/><ref refid="pcre_8h_1a3397d9f91a9b3523e0afa45d85b46950" kindref="member">PCRE_CASELESS</ref>)<sp/>!=<sp/>0)?<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>;</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>mclength;<sp/>c++)<sp/>*code++<sp/>=<sp/>mcbuffer[c];</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>if<sp/>\r<sp/>or<sp/>\n<sp/>were<sp/>seen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mcbuffer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>mcbuffer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a812a945823796f9a6db7bd05bda219e7" kindref="member">PCRE_HASCRORLF</ref>;</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>first<sp/>and<sp/>required<sp/>bytes<sp/>appropriately.<sp/>If<sp/>no<sp/>previous<sp/>first</highlight></codeline>
<codeline lineno="5366"><highlight class="comment"><sp/><sp/><sp/><sp/>byte,<sp/>set<sp/>it<sp/>from<sp/>this<sp/>character,<sp/>but<sp/>revert<sp/>to<sp/>none<sp/>on<sp/>a<sp/>zero<sp/>repeat.</highlight></codeline>
<codeline lineno="5367"><highlight class="comment"><sp/><sp/><sp/><sp/>Otherwise,<sp/>leave<sp/>the<sp/>firstbyte<sp/>value<sp/>alone,<sp/>and<sp/>don&apos;t<sp/>change<sp/>it<sp/>on<sp/>a<sp/>zero</highlight></codeline>
<codeline lineno="5368"><highlight class="comment"><sp/><sp/><sp/><sp/>repeat.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"></highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>==<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>)</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"></highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>character<sp/>is<sp/>more<sp/>than<sp/>one<sp/>byte<sp/>long,<sp/>we<sp/>can<sp/>set<sp/>firstbyte</highlight></codeline>
<codeline lineno="5376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>if<sp/>it<sp/>is<sp/>not<sp/>to<sp/>be<sp/>matched<sp/>caselessly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5377"><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mclength<sp/>==<sp/>1<sp/>||<sp/>req_caseopt<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/>mcbuffer[0]<sp/>|<sp/>req_caseopt;</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mclength<sp/>!=<sp/>1)<sp/>reqbyte<sp/>=<sp/>code[-1]<sp/>|<sp/>cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref>;</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>firstbyte<sp/>=<sp/>reqbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>firstbyte<sp/>was<sp/>previously<sp/>set;<sp/>we<sp/>can<sp/>set<sp/>reqbyte<sp/>only<sp/>the<sp/>length<sp/>is</highlight></codeline>
<codeline lineno="5387"><highlight class="comment"><sp/><sp/><sp/><sp/>1<sp/>or<sp/>the<sp/>matching<sp/>is<sp/>caseful.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5388"><highlight class="normal"></highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zerofirstbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zeroreqbyte<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mclength<sp/>==<sp/>1<sp/>||<sp/>req_caseopt<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reqbyte<sp/>=<sp/>code[-1]<sp/>|<sp/>req_caseopt<sp/>|<sp/>cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref>;</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"></highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>literal<sp/>character<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>big<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5400"><highlight class="normal"></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"></highlight></codeline>
<codeline lineno="5402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>never<sp/>reaches<sp/>here<sp/>by<sp/>falling<sp/>through,<sp/>only<sp/>by<sp/>a<sp/>goto<sp/>for<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="5403"><highlight class="comment">error<sp/>states.<sp/>Pass<sp/>back<sp/>the<sp/>position<sp/>in<sp/>the<sp/>pattern<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>displayed</highlight></codeline>
<codeline lineno="5404"><highlight class="comment">to<sp/>the<sp/>user<sp/>for<sp/>diagnosing<sp/>the<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal">FAILED:</highlight></codeline>
<codeline lineno="5407"><highlight class="normal">*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"></highlight></codeline>
<codeline lineno="5411"><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"></highlight></codeline>
<codeline lineno="5414"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="5415"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>Compile<sp/>sequence<sp/>of<sp/>alternatives<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5416"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5417"><highlight class="normal"></highlight></codeline>
<codeline lineno="5418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>On<sp/>entry,<sp/>ptr<sp/>is<sp/>pointing<sp/>past<sp/>the<sp/>bracket<sp/>character,<sp/>but<sp/>on<sp/>return<sp/>it</highlight></codeline>
<codeline lineno="5419"><highlight class="comment">points<sp/>to<sp/>the<sp/>closing<sp/>bracket,<sp/>or<sp/>vertical<sp/>bar,<sp/>or<sp/>end<sp/>of<sp/>string.<sp/>The<sp/>code</highlight></codeline>
<codeline lineno="5420"><highlight class="comment">variable<sp/>is<sp/>pointing<sp/>at<sp/>the<sp/>byte<sp/>into<sp/>which<sp/>the<sp/>BRA<sp/>operator<sp/>has<sp/>been<sp/>stored.</highlight></codeline>
<codeline lineno="5421"><highlight class="comment">If<sp/>the<sp/>ims<sp/>options<sp/>are<sp/>changed<sp/>at<sp/>the<sp/>start<sp/>(for<sp/>a<sp/>(?ims:<sp/>group)<sp/>or<sp/>during<sp/>any</highlight></codeline>
<codeline lineno="5422"><highlight class="comment">branch,<sp/>we<sp/>need<sp/>to<sp/>insert<sp/>an<sp/>OP_OPT<sp/>item<sp/>at<sp/>the<sp/>start<sp/>of<sp/>every<sp/>following<sp/>branch</highlight></codeline>
<codeline lineno="5423"><highlight class="comment">to<sp/>ensure<sp/>they<sp/>get<sp/>set<sp/>correctly<sp/>at<sp/>run<sp/>time,<sp/>and<sp/>also<sp/>pass<sp/>the<sp/>new<sp/>options</highlight></codeline>
<codeline lineno="5424"><highlight class="comment">into<sp/>every<sp/>subsequent<sp/>branch<sp/>compile.</highlight></codeline>
<codeline lineno="5425"><highlight class="comment"></highlight></codeline>
<codeline lineno="5426"><highlight class="comment">This<sp/>function<sp/>is<sp/>used<sp/>during<sp/>the<sp/>pre-compile<sp/>phase<sp/>when<sp/>we<sp/>are<sp/>trying<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="5427"><highlight class="comment">out<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>needed,<sp/>as<sp/>well<sp/>as<sp/>during<sp/>the<sp/>real<sp/>compile<sp/>phase.<sp/>The</highlight></codeline>
<codeline lineno="5428"><highlight class="comment">value<sp/>of<sp/>lengthptr<sp/>distinguishes<sp/>the<sp/>two<sp/>phases.</highlight></codeline>
<codeline lineno="5429"><highlight class="comment"></highlight></codeline>
<codeline lineno="5430"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="5431"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>bits,<sp/>including<sp/>any<sp/>changes<sp/>for<sp/>this<sp/>subpattern</highlight></codeline>
<codeline lineno="5432"><highlight class="comment"><sp/><sp/>oldims<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>settings<sp/>of<sp/>ims<sp/>option<sp/>bits</highlight></codeline>
<codeline lineno="5433"><highlight class="comment"><sp/><sp/>codeptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>the<sp/>address<sp/>of<sp/>the<sp/>current<sp/>code<sp/>pointer</highlight></codeline>
<codeline lineno="5434"><highlight class="comment"><sp/><sp/>ptrptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>the<sp/>address<sp/>of<sp/>the<sp/>current<sp/>pattern<sp/>pointer</highlight></codeline>
<codeline lineno="5435"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/><sp/>-&gt;<sp/>pointer<sp/>to<sp/>error<sp/>code<sp/>variable</highlight></codeline>
<codeline lineno="5436"><highlight class="comment"><sp/><sp/>lookbehind<sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>this<sp/>is<sp/>a<sp/>lookbehind<sp/>assertion</highlight></codeline>
<codeline lineno="5437"><highlight class="comment"><sp/><sp/>reset_bracount<sp/>TRUE<sp/>to<sp/>reset<sp/>the<sp/>count<sp/>for<sp/>each<sp/>branch</highlight></codeline>
<codeline lineno="5438"><highlight class="comment"><sp/><sp/>skipbytes<sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>this<sp/>many<sp/>bytes<sp/>at<sp/>start<sp/>(for<sp/>brackets<sp/>and<sp/>OP_COND)</highlight></codeline>
<codeline lineno="5439"><highlight class="comment"><sp/><sp/>firstbyteptr<sp/><sp/><sp/>place<sp/>to<sp/>put<sp/>the<sp/>first<sp/>required<sp/>character,<sp/>or<sp/>a<sp/>negative<sp/>number</highlight></codeline>
<codeline lineno="5440"><highlight class="comment"><sp/><sp/>reqbyteptr<sp/><sp/><sp/><sp/><sp/>place<sp/>to<sp/>put<sp/>the<sp/>last<sp/>required<sp/>character,<sp/>or<sp/>a<sp/>negative<sp/>number</highlight></codeline>
<codeline lineno="5441"><highlight class="comment"><sp/><sp/>bcptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>chain<sp/>of<sp/>currently<sp/>open<sp/>branches</highlight></codeline>
<codeline lineno="5442"><highlight class="comment"><sp/><sp/>cd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>data<sp/>block<sp/>with<sp/>tables<sp/>pointers<sp/>etc.</highlight></codeline>
<codeline lineno="5443"><highlight class="comment"><sp/><sp/>lengthptr<sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>during<sp/>the<sp/>real<sp/>compile<sp/>phase</highlight></codeline>
<codeline lineno="5444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>length<sp/>accumulator<sp/>during<sp/>pre-compile<sp/>phase</highlight></codeline>
<codeline lineno="5445"><highlight class="comment"></highlight></codeline>
<codeline lineno="5446"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>on<sp/>success</highlight></codeline>
<codeline lineno="5447"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"></highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="5450"><highlight class="normal">compile_regex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldims,<sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**codeptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>**ptrptr,</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>lookbehind,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>reset_bracount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipbytes,</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*firstbyteptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*reqbyteptr,<sp/><ref refid="structbranch__chain" kindref="compound">branch_chain</ref><sp/>*bcptr,<sp/><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd,</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lengthptr)</highlight></codeline>
<codeline lineno="5454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr<sp/>=<sp/>*ptrptr;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code<sp/>=<sp/>*codeptr;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*last_branch<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*start_bracket<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*reverse_count<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstbyte,<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branchfirstbyte,<sp/>branchreqbyte;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_bracount;</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bracount;</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><ref refid="structbranch__chain" kindref="compound">branch_chain</ref><sp/>bc;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"></highlight></codeline>
<codeline lineno="5467"><highlight class="normal">bc.<ref refid="structbranch__chain_1a31ea7a80e9f42fabbcd2c63103f8528a" kindref="member">outer</ref><sp/>=<sp/>bcptr;</highlight></codeline>
<codeline lineno="5468"><highlight class="normal">bc.<ref refid="structbranch__chain_1af2487cda81d3edc81f8e95d124bd648f" kindref="member">current</ref><sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal">firstbyte<sp/>=<sp/>reqbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a9ec509dea3821287522b780beb9b5d8e" kindref="member">REQ_UNSET</ref>;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"></highlight></codeline>
<codeline lineno="5472"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Accumulate<sp/>the<sp/>length<sp/>for<sp/>use<sp/>in<sp/>the<sp/>pre-compile<sp/>phase.<sp/>Start<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="5473"><highlight class="comment">length<sp/>of<sp/>the<sp/>BRA<sp/>and<sp/>KET<sp/>and<sp/>any<sp/>extra<sp/>bytes<sp/>that<sp/>are<sp/>required<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="5474"><highlight class="comment">beginning.<sp/>We<sp/>accumulate<sp/>in<sp/>a<sp/>local<sp/>variable<sp/>to<sp/>save<sp/>frequent<sp/>testing<sp/>of</highlight></codeline>
<codeline lineno="5475"><highlight class="comment">lenthptr<sp/>for<sp/>NULL.<sp/>We<sp/>cannot<sp/>do<sp/>this<sp/>by<sp/>looking<sp/>at<sp/>the<sp/>value<sp/>of<sp/>code<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="5476"><highlight class="comment">start<sp/>and<sp/>end<sp/>of<sp/>each<sp/>alternative,<sp/>because<sp/>compiled<sp/>items<sp/>are<sp/>discarded<sp/>during</highlight></codeline>
<codeline lineno="5477"><highlight class="comment">the<sp/>pre-compile<sp/>phase<sp/>so<sp/>that<sp/>the<sp/>work<sp/>space<sp/>is<sp/>not<sp/>exceeded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5478"><highlight class="normal"></highlight></codeline>
<codeline lineno="5479"><highlight class="normal">length<sp/>=<sp/>2<sp/>+<sp/>2*LINK_SIZE<sp/>+<sp/>skipbytes;</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"></highlight></codeline>
<codeline lineno="5481"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>If<sp/>the<sp/>above<sp/>line<sp/>is<sp/>changed<sp/>for<sp/>any<sp/>reason,<sp/>you<sp/>must<sp/>also<sp/>change</highlight></codeline>
<codeline lineno="5482"><highlight class="comment">the<sp/>code<sp/>that<sp/>abstracts<sp/>option<sp/>settings<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern<sp/>and<sp/>makes</highlight></codeline>
<codeline lineno="5483"><highlight class="comment">them<sp/>global.<sp/>It<sp/>tests<sp/>the<sp/>value<sp/>of<sp/>length<sp/>for<sp/>(2<sp/>+<sp/>2*LINK_SIZE)<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5484"><highlight class="comment">pre-compile<sp/>phase<sp/>to<sp/>find<sp/>out<sp/>whether<sp/>anything<sp/>has<sp/>yet<sp/>been<sp/>compiled<sp/>or<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"></highlight></codeline>
<codeline lineno="5486"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Offset<sp/>is<sp/>set<sp/>zero<sp/>to<sp/>mark<sp/>that<sp/>this<sp/>bracket<sp/>is<sp/>still<sp/>open<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5487"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal">PUT(code,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="5489"><highlight class="normal">code<sp/>+=<sp/>1<sp/>+<sp/>LINK_SIZE<sp/>+<sp/>skipbytes;</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"></highlight></codeline>
<codeline lineno="5491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Loop<sp/>for<sp/>each<sp/>alternative<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5492"><highlight class="normal"></highlight></codeline>
<codeline lineno="5493"><highlight class="normal">orig_bracount<sp/>=<sp/>max_bracount<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>(?|<sp/>group,<sp/>reset<sp/>the<sp/>capturing<sp/>bracket<sp/>count<sp/>so<sp/>that<sp/>each<sp/>branch</highlight></codeline>
<codeline lineno="5497"><highlight class="comment"><sp/><sp/>uses<sp/>the<sp/>same<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_bracount)<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>=<sp/>orig_bracount;</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"></highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>a<sp/>change<sp/>of<sp/>ims<sp/>options<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5502"><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_IMS)<sp/>!=<sp/>oldims)</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>;</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>options<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a42868e7975a4b7882c42db075ee54358" kindref="member">PCRE_IMS</ref>;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"></highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>dummy<sp/>OP_REVERSE<sp/>if<sp/>lookbehind<sp/>assertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lookbehind)</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca71a96996291adee64ecab873b24408b5" kindref="member">OP_REVERSE</ref>;</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse_count<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1ab460a9968f7284daf5d3bbf285676081" kindref="member">PUTINC</ref>(code,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>compile<sp/>the<sp/>branch;<sp/>in<sp/>the<sp/>pre-compile<sp/>phase<sp/>its<sp/>length<sp/>gets<sp/>added</highlight></codeline>
<codeline lineno="5521"><highlight class="comment"><sp/><sp/>into<sp/>the<sp/>length.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compile_branch(&amp;options,<sp/>&amp;code,<sp/>&amp;ptr,<sp/>errorcodeptr,<sp/>&amp;branchfirstbyte,</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;branchreqbyte,<sp/>&amp;bc,<sp/>cd,<sp/>(lengthptr<sp/>==<sp/>NULL)?<sp/>NULL<sp/>:<sp/>&amp;length))</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>the<sp/>highest<sp/>bracket<sp/>count<sp/>in<sp/>case<sp/>(?|<sp/>was<sp/>used<sp/>and<sp/>some<sp/>branch</highlight></codeline>
<codeline lineno="5531"><highlight class="comment"><sp/><sp/>has<sp/>fewer<sp/>than<sp/>the<sp/>rest.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5532"><highlight class="normal"></highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>&gt;<sp/>max_bracount)<sp/>max_bracount<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"></highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>real<sp/>compile<sp/>phase,<sp/>there<sp/>is<sp/>some<sp/>post-processing<sp/>to<sp/>be<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5536"><highlight class="normal"></highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>the<sp/>first<sp/>branch,<sp/>the<sp/>firstbyte<sp/>and<sp/>reqbyte<sp/>values<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="5540"><highlight class="comment"><sp/><sp/><sp/><sp/>branch<sp/>become<sp/>the<sp/>values<sp/>for<sp/>the<sp/>regex.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5541"><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*last_branch<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>)</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/>branchfirstbyte;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reqbyte<sp/>=<sp/>branchreqbyte;</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>not<sp/>the<sp/>first<sp/>branch,<sp/>the<sp/>first<sp/>char<sp/>and<sp/>reqbyte<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="5549"><highlight class="comment"><sp/><sp/><sp/><sp/>match<sp/>the<sp/>values<sp/>from<sp/>all<sp/>the<sp/>previous<sp/>branches,<sp/>except<sp/>that<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="5550"><highlight class="comment"><sp/><sp/><sp/><sp/>previous<sp/>value<sp/>for<sp/>reqbyte<sp/>didn&apos;t<sp/>have<sp/>REQ_VARY<sp/>set,<sp/>it<sp/>can<sp/>still<sp/>match,</highlight></codeline>
<codeline lineno="5551"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>we<sp/>set<sp/>REQ_VARY<sp/>for<sp/>the<sp/>regex.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5552"><highlight class="normal"></highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>previously<sp/>had<sp/>a<sp/>firstbyte,<sp/>but<sp/>it<sp/>doesn&apos;t<sp/>match<sp/>the<sp/>new<sp/>branch,</highlight></codeline>
<codeline lineno="5556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>have<sp/>to<sp/>abandon<sp/>the<sp/>firstbyte<sp/>for<sp/>the<sp/>regex,<sp/>but<sp/>if<sp/>there<sp/>was</highlight></codeline>
<codeline lineno="5557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>previously<sp/>no<sp/>reqbyte,<sp/>it<sp/>takes<sp/>on<sp/>the<sp/>value<sp/>of<sp/>the<sp/>old<sp/>firstbyte.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5558"><highlight class="normal"></highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>firstbyte<sp/>!=<sp/>branchfirstbyte)</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reqbyte<sp/>&lt;<sp/>0)<sp/>reqbyte<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>(now<sp/>or<sp/>from<sp/>before)<sp/>have<sp/>no<sp/>firstbyte,<sp/>a<sp/>firstbyte<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="5566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>branch<sp/>becomes<sp/>a<sp/>reqbyte<sp/>if<sp/>there<sp/>isn&apos;t<sp/>a<sp/>branch<sp/>reqbyte.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5567"><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>branchfirstbyte<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>branchreqbyte<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branchreqbyte<sp/>=<sp/>branchfirstbyte;</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>ensure<sp/>that<sp/>the<sp/>reqbytes<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((reqbyte<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1a1a5a2f42aaea27efaa2abc899f29703c" kindref="member">REQ_VARY</ref>)<sp/>!=<sp/>(branchreqbyte<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1a1a5a2f42aaea27efaa2abc899f29703c" kindref="member">REQ_VARY</ref>))</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reqbyte<sp/>=<sp/><ref refid="pcre__internal_8h_1a185b688e6437c1e1e58d35953efa79d5" kindref="member">REQ_NONE</ref>;</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>reqbyte<sp/>|=<sp/>branchreqbyte;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>&quot;or&quot;<sp/>REQ_VARY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>lookbehind,<sp/>check<sp/>that<sp/>this<sp/>branch<sp/>matches<sp/>a<sp/>fixed-length<sp/>string,<sp/>and</highlight></codeline>
<codeline lineno="5579"><highlight class="comment"><sp/><sp/><sp/><sp/>put<sp/>the<sp/>length<sp/>into<sp/>the<sp/>OP_REVERSE<sp/>item.<sp/>Temporarily<sp/>mark<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="5580"><highlight class="comment"><sp/><sp/><sp/><sp/>branch<sp/>with<sp/>OP_END.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"></highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lookbehind)</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fixed_length;</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>;</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fixed_length<sp/>=<sp/>find_fixedlength(last_branch,<sp/>options);</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;fixed<sp/>length<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>fixed_length));</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixed_length<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/>(fixed_length<sp/>==<sp/>-2)?<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea70ba06bc1cd0627b777a9fe55ffd0bfb" kindref="member">ERR36</ref><sp/>:<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaf06467f4726430aaba25a11fe26e630b" kindref="member">ERR25</ref>;</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PUT(reverse_count,<sp/>0,<sp/>fixed_length);</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reached<sp/>end<sp/>of<sp/>expression,<sp/>either<sp/>&apos;)&apos;<sp/>or<sp/>end<sp/>of<sp/>pattern.<sp/>In<sp/>the<sp/>real</highlight></codeline>
<codeline lineno="5599"><highlight class="comment"><sp/><sp/>compile<sp/>phase,<sp/>go<sp/>back<sp/>through<sp/>the<sp/>alternative<sp/>branches<sp/>and<sp/>reverse<sp/>the<sp/>chain</highlight></codeline>
<codeline lineno="5600"><highlight class="comment"><sp/><sp/>of<sp/>offsets,<sp/>with<sp/>the<sp/>field<sp/>in<sp/>the<sp/>BRA<sp/>item<sp/>now<sp/>becoming<sp/>an<sp/>offset<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="5601"><highlight class="comment"><sp/><sp/>first<sp/>alternative.<sp/>If<sp/>there<sp/>are<sp/>no<sp/>alternatives,<sp/>it<sp/>points<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="5602"><highlight class="comment"><sp/><sp/>group.<sp/>The<sp/>length<sp/>in<sp/>the<sp/>terminating<sp/>ket<sp/>is<sp/>always<sp/>the<sp/>length<sp/>of<sp/>the<sp/>whole</highlight></codeline>
<codeline lineno="5603"><highlight class="comment"><sp/><sp/>bracketed<sp/>item.<sp/>If<sp/>any<sp/>of<sp/>the<sp/>ims<sp/>options<sp/>were<sp/>changed<sp/>inside<sp/>the<sp/>group,</highlight></codeline>
<codeline lineno="5604"><highlight class="comment"><sp/><sp/>compile<sp/>a<sp/>resetting<sp/>op-code<sp/>following,<sp/>except<sp/>at<sp/>the<sp/>very<sp/>end<sp/>of<sp/>the<sp/>pattern.</highlight></codeline>
<codeline lineno="5605"><highlight class="comment"><sp/><sp/>Return<sp/>leaving<sp/>the<sp/>pointer<sp/>at<sp/>the<sp/>terminating<sp/>char.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5606"><highlight class="normal"></highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branch_length<sp/>=<sp/>code<sp/>-<sp/>last_branch;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_length<sp/>=<sp/>GET(last_branch,<sp/>1);</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUT(last_branch,<sp/>1,<sp/>branch_length);</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branch_length<sp/>=<sp/>prev_length;</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_branch<sp/>-=<sp/>branch_length;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(branch_length<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"></highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>the<sp/>ket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5623"><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca651404a0e57966ae3eeebbdae4b31463" kindref="member">OP_KET</ref>;</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/>PUT(code,<sp/>1,<sp/>code<sp/>-<sp/>start_bracket);</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resetting<sp/>option<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_IMS)<sp/>!=<sp/>oldims<sp/>&amp;&amp;<sp/>*ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca515427908c95ce98157543ac44cfb6fb" kindref="member">OP_OPT</ref>;</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*code++<sp/>=<sp/>oldims;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retain<sp/>the<sp/>highest<sp/>bracket<sp/>number,<sp/>in<sp/>case<sp/>resetting<sp/>was<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>=<sp/>max_bracount;</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"></highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>values<sp/>to<sp/>pass<sp/>back<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/>*codeptr<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptrptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/>*firstbyteptr<sp/>=<sp/>firstbyte;</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/>*reqbyteptr<sp/>=<sp/>reqbyte;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pcre__compile_8c_1aadb8b9f58ce39150beab75aa4003816a" kindref="member">OFLOW_MAX</ref><sp/>-<sp/>*lengthptr<sp/>&lt;<sp/>length)</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*lengthptr<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"></highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Another<sp/>branch<sp/>follows.<sp/>In<sp/>the<sp/>pre-compile<sp/>phase,<sp/>we<sp/>can<sp/>move<sp/>the<sp/>code</highlight></codeline>
<codeline lineno="5660"><highlight class="comment"><sp/><sp/>pointer<sp/>back<sp/>to<sp/>where<sp/>it<sp/>was<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>first<sp/>branch.<sp/>(That<sp/>is,</highlight></codeline>
<codeline lineno="5661"><highlight class="comment"><sp/><sp/>pretend<sp/>that<sp/>each<sp/>branch<sp/>is<sp/>the<sp/>only<sp/>one.)</highlight></codeline>
<codeline lineno="5662"><highlight class="comment"></highlight></codeline>
<codeline lineno="5663"><highlight class="comment"><sp/><sp/>In<sp/>the<sp/>real<sp/>compile<sp/>phase,<sp/>insert<sp/>an<sp/>ALT<sp/>node.<sp/>Its<sp/>length<sp/>field<sp/>points<sp/>back</highlight></codeline>
<codeline lineno="5664"><highlight class="comment"><sp/><sp/>to<sp/>the<sp/>previous<sp/>branch<sp/>while<sp/>the<sp/>bracket<sp/>remains<sp/>open.<sp/>At<sp/>the<sp/>end<sp/>the<sp/>chain</highlight></codeline>
<codeline lineno="5665"><highlight class="comment"><sp/><sp/>is<sp/>reversed.<sp/>It&apos;s<sp/>done<sp/>like<sp/>this<sp/>so<sp/>that<sp/>the<sp/>start<sp/>of<sp/>the<sp/>bracket<sp/>has<sp/>a</highlight></codeline>
<codeline lineno="5666"><highlight class="comment"><sp/><sp/>zero<sp/>offset<sp/>until<sp/>it<sp/>is<sp/>closed,<sp/>making<sp/>it<sp/>possible<sp/>to<sp/>detect<sp/>recursion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthptr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>*codeptr<sp/>+<sp/>1<sp/>+<sp/>LINK_SIZE<sp/>+<sp/>skipbytes;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/>*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>;</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/>PUT(code,<sp/>1,<sp/>code<sp/>-<sp/>last_branch);</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/>bc.<ref refid="structbranch__chain_1af2487cda81d3edc81f8e95d124bd648f" kindref="member">current</ref><sp/>=<sp/>last_branch<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>1<sp/>+<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"></highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>never<sp/>reaches<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"></highlight></codeline>
<codeline lineno="5686"><highlight class="normal"></highlight></codeline>
<codeline lineno="5687"><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"></highlight></codeline>
<codeline lineno="5689"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="5690"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>anchored<sp/>expression<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5691"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5692"><highlight class="normal"></highlight></codeline>
<codeline lineno="5693"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>find<sp/>out<sp/>if<sp/>this<sp/>is<sp/>an<sp/>anchored<sp/>regular<sp/>expression.<sp/>Consider<sp/>each</highlight></codeline>
<codeline lineno="5694"><highlight class="comment">alternative<sp/>branch.<sp/>If<sp/>they<sp/>all<sp/>start<sp/>with<sp/>OP_SOD<sp/>or<sp/>OP_CIRC,<sp/>or<sp/>with<sp/>a<sp/>bracket</highlight></codeline>
<codeline lineno="5695"><highlight class="comment">all<sp/>of<sp/>whose<sp/>alternatives<sp/>start<sp/>with<sp/>OP_SOD<sp/>or<sp/>OP_CIRC<sp/>(recurse<sp/>ad<sp/>lib),<sp/>then</highlight></codeline>
<codeline lineno="5696"><highlight class="comment">it&apos;s<sp/>anchored.<sp/>However,<sp/>if<sp/>this<sp/>is<sp/>a<sp/>multiline<sp/>pattern,<sp/>then<sp/>only<sp/>OP_SOD</highlight></codeline>
<codeline lineno="5697"><highlight class="comment">counts,<sp/>since<sp/>OP_CIRC<sp/>can<sp/>match<sp/>in<sp/>the<sp/>middle.</highlight></codeline>
<codeline lineno="5698"><highlight class="comment"></highlight></codeline>
<codeline lineno="5699"><highlight class="comment">We<sp/>can<sp/>also<sp/>consider<sp/>a<sp/>regex<sp/>to<sp/>be<sp/>anchored<sp/>if<sp/>OP_SOM<sp/>starts<sp/>all<sp/>its<sp/>branches.</highlight></codeline>
<codeline lineno="5700"><highlight class="comment">This<sp/>is<sp/>the<sp/>code<sp/>for<sp/>\G,<sp/>which<sp/>means<sp/>&quot;match<sp/>at<sp/>start<sp/>of<sp/>match<sp/>position,<sp/>taking</highlight></codeline>
<codeline lineno="5701"><highlight class="comment">into<sp/>account<sp/>the<sp/>match<sp/>offset&quot;.</highlight></codeline>
<codeline lineno="5702"><highlight class="comment"></highlight></codeline>
<codeline lineno="5703"><highlight class="comment">A<sp/>branch<sp/>is<sp/>also<sp/>implicitly<sp/>anchored<sp/>if<sp/>it<sp/>starts<sp/>with<sp/>.*<sp/>and<sp/>DOTALL<sp/>is<sp/>set,</highlight></codeline>
<codeline lineno="5704"><highlight class="comment">because<sp/>that<sp/>will<sp/>try<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>pattern<sp/>at<sp/>all<sp/>possible<sp/>matching<sp/>points,</highlight></codeline>
<codeline lineno="5705"><highlight class="comment">so<sp/>there<sp/>is<sp/>no<sp/>point<sp/>trying<sp/>again....<sp/>er<sp/>....</highlight></codeline>
<codeline lineno="5706"><highlight class="comment"></highlight></codeline>
<codeline lineno="5707"><highlight class="comment">....<sp/>except<sp/>when<sp/>the<sp/>.*<sp/>appears<sp/>inside<sp/>capturing<sp/>parentheses,<sp/>and<sp/>there<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="5708"><highlight class="comment">subsequent<sp/>back<sp/>reference<sp/>to<sp/>those<sp/>parentheses.<sp/>We<sp/>haven&apos;t<sp/>enough<sp/>information</highlight></codeline>
<codeline lineno="5709"><highlight class="comment">to<sp/>catch<sp/>that<sp/>case<sp/>precisely.</highlight></codeline>
<codeline lineno="5710"><highlight class="comment"></highlight></codeline>
<codeline lineno="5711"><highlight class="comment">At<sp/>first,<sp/>the<sp/>best<sp/>we<sp/>could<sp/>do<sp/>was<sp/>to<sp/>detect<sp/>when<sp/>.*<sp/>was<sp/>in<sp/>capturing<sp/>brackets</highlight></codeline>
<codeline lineno="5712"><highlight class="comment">and<sp/>the<sp/>highest<sp/>back<sp/>reference<sp/>was<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>that<sp/>level.</highlight></codeline>
<codeline lineno="5713"><highlight class="comment">However,<sp/>by<sp/>keeping<sp/>a<sp/>bitmap<sp/>of<sp/>the<sp/>first<sp/>31<sp/>back<sp/>references,<sp/>we<sp/>can<sp/>catch<sp/>some</highlight></codeline>
<codeline lineno="5714"><highlight class="comment">of<sp/>the<sp/>more<sp/>common<sp/>cases<sp/>more<sp/>precisely.</highlight></codeline>
<codeline lineno="5715"><highlight class="comment"></highlight></codeline>
<codeline lineno="5716"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="5717"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>expression<sp/>(the<sp/>bracket)</highlight></codeline>
<codeline lineno="5718"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>the<sp/>options<sp/>setting</highlight></codeline>
<codeline lineno="5719"><highlight class="comment"><sp/><sp/>bracket_map<sp/><sp/><sp/><sp/>a<sp/>bitmap<sp/>of<sp/>which<sp/>brackets<sp/>we<sp/>are<sp/>inside<sp/>while<sp/>testing;<sp/>this</highlight></codeline>
<codeline lineno="5720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handles<sp/>up<sp/>to<sp/>substring<sp/>31;<sp/>after<sp/>that<sp/>we<sp/>just<sp/>have<sp/>to<sp/>take</highlight></codeline>
<codeline lineno="5721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>less<sp/>precise<sp/>approach</highlight></codeline>
<codeline lineno="5722"><highlight class="comment"><sp/><sp/>backref_map<sp/><sp/><sp/><sp/>the<sp/>back<sp/>reference<sp/>bitmap</highlight></codeline>
<codeline lineno="5723"><highlight class="comment"></highlight></codeline>
<codeline lineno="5724"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="5725"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5726"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="5728"><highlight class="normal">is_anchored(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*options,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bracket_map,</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backref_map)</highlight></codeline>
<codeline lineno="5730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*scode<sp/>=<sp/>first_significant_code(code<sp/>+<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*code],</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>options,<sp/>PCRE_MULTILINE,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>*scode;</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"></highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-capturing<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"></highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>)</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_anchored(scode,<sp/>options,<sp/>bracket_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Capturing<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"></highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>)</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(scode,<sp/>1+LINK_SIZE);</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_map<sp/>=<sp/>bracket_map<sp/>|<sp/>((n<sp/>&lt;<sp/>32)?<sp/>(1<sp/>&lt;&lt;<sp/>n)<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_anchored(scode,<sp/>options,<sp/>new_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"></highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>)</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_anchored(scode,<sp/>options,<sp/>bracket_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>.*<sp/>is<sp/>not<sp/>anchored<sp/>unless<sp/>DOTALL<sp/>is<sp/>set<sp/>(which<sp/>generates<sp/>OP_ALLANY)<sp/>and</highlight></codeline>
<codeline lineno="5760"><highlight class="comment"><sp/><sp/><sp/>it<sp/>isn&apos;t<sp/>in<sp/>brackets<sp/>that<sp/>are<sp/>or<sp/>may<sp/>be<sp/>referenced.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"></highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref><sp/>||</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>))</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scode[1]<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cabbdd04375779b4904f5c5951a1ddbccf" kindref="member">OP_ALLANY</ref><sp/>||<sp/>(bracket_map<sp/>&amp;<sp/>backref_map)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"></highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>explicit<sp/>anchoring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5770"><highlight class="normal"></highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac8fe565884937735dbafcbba6c3578d1" kindref="member">OP_SOD</ref><sp/>&amp;&amp;<sp/>op<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cacb212b8059dbea634f17e931e7538f4b" kindref="member">OP_SOM</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*options<sp/>&amp;<sp/>PCRE_MULTILINE)<sp/>!=<sp/>0<sp/>||<sp/>op<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafdc903d143097092a157b6026f8a240c" kindref="member">OP_CIRC</ref>))</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>for<sp/>each<sp/>alternative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"></highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="5783"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>starting<sp/>with<sp/>^<sp/>or<sp/>.*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5784"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>called<sp/>to<sp/>find<sp/>out<sp/>if<sp/>every<sp/>branch<sp/>starts<sp/>with<sp/>^<sp/>or<sp/>.*<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="5787"><highlight class="comment">&quot;first<sp/>char&quot;<sp/>processing<sp/>can<sp/>be<sp/>done<sp/>to<sp/>speed<sp/>things<sp/>up<sp/>in<sp/>multiline</highlight></codeline>
<codeline lineno="5788"><highlight class="comment">matching<sp/>and<sp/>for<sp/>non-DOTALL<sp/>patterns<sp/>that<sp/>start<sp/>with<sp/>.*<sp/>(which<sp/>must<sp/>start<sp/>at</highlight></codeline>
<codeline lineno="5789"><highlight class="comment">the<sp/>beginning<sp/>or<sp/>after<sp/>\n).<sp/>As<sp/>in<sp/>the<sp/>case<sp/>of<sp/>is_anchored()<sp/>(see<sp/>above),<sp/>we</highlight></codeline>
<codeline lineno="5790"><highlight class="comment">have<sp/>to<sp/>take<sp/>account<sp/>of<sp/>back<sp/>references<sp/>to<sp/>capturing<sp/>brackets<sp/>that<sp/>contain<sp/>.*</highlight></codeline>
<codeline lineno="5791"><highlight class="comment">because<sp/>in<sp/>that<sp/>case<sp/>we<sp/>can&apos;t<sp/>make<sp/>the<sp/>assumption.</highlight></codeline>
<codeline lineno="5792"><highlight class="comment"></highlight></codeline>
<codeline lineno="5793"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="5794"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>expression<sp/>(the<sp/>bracket)</highlight></codeline>
<codeline lineno="5795"><highlight class="comment"><sp/><sp/>bracket_map<sp/><sp/><sp/><sp/>a<sp/>bitmap<sp/>of<sp/>which<sp/>brackets<sp/>we<sp/>are<sp/>inside<sp/>while<sp/>testing;<sp/>this</highlight></codeline>
<codeline lineno="5796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handles<sp/>up<sp/>to<sp/>substring<sp/>31;<sp/>after<sp/>that<sp/>we<sp/>just<sp/>have<sp/>to<sp/>take</highlight></codeline>
<codeline lineno="5797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>less<sp/>precise<sp/>approach</highlight></codeline>
<codeline lineno="5798"><highlight class="comment"><sp/><sp/>backref_map<sp/><sp/><sp/><sp/>the<sp/>back<sp/>reference<sp/>bitmap</highlight></codeline>
<codeline lineno="5799"><highlight class="comment"></highlight></codeline>
<codeline lineno="5800"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/>or<sp/>FALSE</highlight></codeline>
<codeline lineno="5801"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5802"><highlight class="normal"></highlight></codeline>
<codeline lineno="5803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref></highlight></codeline>
<codeline lineno="5804"><highlight class="normal">is_startline(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bracket_map,</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backref_map)</highlight></codeline>
<codeline lineno="5806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*scode<sp/>=<sp/>first_significant_code(code<sp/>+<sp/><ref refid="pcre__internal_8h_1a53c985947a57969bb6e74d5bd96efd5b" kindref="member">_pcre_OP_lengths</ref>[*code],</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>*scode;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"></highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-capturing<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>)</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_startline(scode,<sp/>bracket_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Capturing<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>)</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="pcre__internal_8h_1af1a0f1797db309553f1392c04a7fd8d7" kindref="member">GET2</ref>(scode,<sp/>1+LINK_SIZE);</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_map<sp/>=<sp/>bracket_map<sp/>|<sp/>((n<sp/>&lt;<sp/>32)?<sp/>(1<sp/>&lt;&lt;<sp/>n)<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_startline(scode,<sp/>new_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"></highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>brackets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5829"><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>)</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_startline(scode,<sp/>bracket_map,<sp/>backref_map))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/>}</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>.*<sp/>means<sp/>&quot;start<sp/>at<sp/>start<sp/>or<sp/>after<sp/>\n&quot;<sp/>if<sp/>it<sp/>isn&apos;t<sp/>in<sp/>brackets<sp/>that</highlight></codeline>
<codeline lineno="5834"><highlight class="comment"><sp/><sp/><sp/>may<sp/>be<sp/>referenced.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal"></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3ee72aa1c7fd2ea63f991115375d457b" kindref="member">OP_TYPESTAR</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac269a8eb882e03f517293d156c4ca7ee" kindref="member">OP_TYPEMINSTAR</ref><sp/>||<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca3a43f7619c2b5f68ab6fcb1e46aadfb4" kindref="member">OP_TYPEPOSSTAR</ref>)</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scode[1]<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06caccf027bd6c08cde017717172a120a9f2" kindref="member">OP_ANY</ref><sp/>||<sp/>(bracket_map<sp/>&amp;<sp/>backref_map)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>explicit<sp/>circumflex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>!=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cafdc903d143097092a157b6026f8a240c" kindref="member">OP_CIRC</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>on<sp/>to<sp/>the<sp/>next<sp/>alternative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5846"><highlight class="normal"></highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>for<sp/>each<sp/>alternative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="5851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal"></highlight></codeline>
<codeline lineno="5854"><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="5856"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>for<sp/>asserted<sp/>fixed<sp/>first<sp/>char<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5857"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5858"><highlight class="normal"></highlight></codeline>
<codeline lineno="5859"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>During<sp/>compilation,<sp/>the<sp/>&quot;first<sp/>char&quot;<sp/>settings<sp/>from<sp/>forward<sp/>assertions<sp/>are</highlight></codeline>
<codeline lineno="5860"><highlight class="comment">discarded,<sp/>because<sp/>they<sp/>can<sp/>cause<sp/>conflicts<sp/>with<sp/>actual<sp/>literals<sp/>that<sp/>follow.</highlight></codeline>
<codeline lineno="5861"><highlight class="comment">However,<sp/>if<sp/>we<sp/>end<sp/>up<sp/>without<sp/>a<sp/>first<sp/>char<sp/>setting<sp/>for<sp/>an<sp/>unanchored<sp/>pattern,</highlight></codeline>
<codeline lineno="5862"><highlight class="comment">it<sp/>is<sp/>worth<sp/>scanning<sp/>the<sp/>regex<sp/>to<sp/>see<sp/>if<sp/>there<sp/>is<sp/>an<sp/>initial<sp/>asserted<sp/>first</highlight></codeline>
<codeline lineno="5863"><highlight class="comment">char.<sp/>If<sp/>all<sp/>branches<sp/>start<sp/>with<sp/>the<sp/>same<sp/>asserted<sp/>char,<sp/>or<sp/>with<sp/>a<sp/>bracket<sp/>all</highlight></codeline>
<codeline lineno="5864"><highlight class="comment">of<sp/>whose<sp/>alternatives<sp/>start<sp/>with<sp/>the<sp/>same<sp/>asserted<sp/>char<sp/>(recurse<sp/>ad<sp/>lib),<sp/>then</highlight></codeline>
<codeline lineno="5865"><highlight class="comment">we<sp/>return<sp/>that<sp/>char,<sp/>otherwise<sp/>-1.</highlight></codeline>
<codeline lineno="5866"><highlight class="comment"></highlight></codeline>
<codeline lineno="5867"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="5868"><highlight class="comment"><sp/><sp/>code<sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>start<sp/>of<sp/>expression<sp/>(the<sp/>bracket)</highlight></codeline>
<codeline lineno="5869"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>options<sp/>(used<sp/>to<sp/>check<sp/>casing<sp/>changes)</highlight></codeline>
<codeline lineno="5870"><highlight class="comment"><sp/><sp/>inassert<sp/><sp/><sp/>TRUE<sp/>if<sp/>in<sp/>an<sp/>assertion</highlight></codeline>
<codeline lineno="5871"><highlight class="comment"></highlight></codeline>
<codeline lineno="5872"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/>-1<sp/>or<sp/>the<sp/>fixed<sp/>first<sp/>char</highlight></codeline>
<codeline lineno="5873"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5876"><highlight class="normal">find_firstassertedchar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*options,<sp/><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>inassert)</highlight></codeline>
<codeline lineno="5877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*scode<sp/>=</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>first_significant_code(code<sp/>+<sp/>1+LINK_SIZE,<sp/>options,<sp/>PCRE_CASELESS,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op<sp/>=<sp/>*scode;</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"></highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(op)</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"></highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>:</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cae4c4aa9b53947e30a7c06a618126a75b" kindref="member">OP_CBRA</ref>:</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>:</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca1206e3abec8edd26b68b164d12d809a1" kindref="member">OP_ONCE</ref>:</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca776ca9c3e230db124691c40eaca36590" kindref="member">OP_COND</ref>:</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>=<sp/>find_firstassertedchar(scode,<sp/>options,<sp/>op<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca37c8c3da44cdd9fdf35b71733e5ec8e1" kindref="member">OP_ASSERT</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)<sp/>c<sp/>=<sp/>d;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>d)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"></highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca55af8032fdb0011108d358184d065090" kindref="member">OP_EXACT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>scode<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"></highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca050d16bc0c6a222898d6a0b390d941cf" kindref="member">OP_CHAR</ref>:</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6e1f381f5e48b99ee3b568ab4eceeddc" kindref="member">OP_CHARNC</ref>:</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca5a7e60a084df9c5e6530038757b412e7" kindref="member">OP_PLUS</ref>:</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca79fa28dc4f1c9a45d3a0bb8372f5b70a" kindref="member">OP_MINPLUS</ref>:</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06cac5477f48e04e5742645a010f1f0a0bb6" kindref="member">OP_POSPLUS</ref>:</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inassert)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>scode[1];</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*options<sp/>&amp;<sp/>PCRE_CASELESS)<sp/>!=<sp/>0)<sp/>c<sp/>|=<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>scode[1])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"></highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/>code<sp/>+=<sp/>GET(code,<sp/>1);</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*code<sp/>==<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca8af1b533027d398ede1d4786b5d7e7d6" kindref="member">OP_ALT</ref>);</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="5922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"></highlight></codeline>
<codeline lineno="5925"><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"></highlight><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="5927"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compile<sp/>a<sp/>Regular<sp/>Expression<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5928"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"></highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>takes<sp/>a<sp/>string<sp/>and<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>block<sp/>of<sp/>store</highlight></codeline>
<codeline lineno="5931"><highlight class="comment">holding<sp/>a<sp/>compiled<sp/>version<sp/>of<sp/>the<sp/>expression.<sp/>The<sp/>original<sp/>API<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="5932"><highlight class="comment">function<sp/>had<sp/>no<sp/>error<sp/>code<sp/>return<sp/>variable;<sp/>it<sp/>is<sp/>retained<sp/>for<sp/>backwards</highlight></codeline>
<codeline lineno="5933"><highlight class="comment">compatibility.<sp/>The<sp/>new<sp/>function<sp/>is<sp/>given<sp/>a<sp/>new<sp/>name.</highlight></codeline>
<codeline lineno="5934"><highlight class="comment"></highlight></codeline>
<codeline lineno="5935"><highlight class="comment">Arguments:</highlight></codeline>
<codeline lineno="5936"><highlight class="comment"><sp/><sp/>pattern<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>regular<sp/>expression</highlight></codeline>
<codeline lineno="5937"><highlight class="comment"><sp/><sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/>various<sp/>option<sp/>bits</highlight></codeline>
<codeline lineno="5938"><highlight class="comment"><sp/><sp/>errorcodeptr<sp/><sp/>pointer<sp/>to<sp/>error<sp/>code<sp/>variable<sp/>(pcre_compile2()<sp/>only)</highlight></codeline>
<codeline lineno="5939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>you<sp/>don&apos;t<sp/>want<sp/>a<sp/>code<sp/>value</highlight></codeline>
<codeline lineno="5940"><highlight class="comment"><sp/><sp/>errorptr<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>pointer<sp/>to<sp/>error<sp/>text</highlight></codeline>
<codeline lineno="5941"><highlight class="comment"><sp/><sp/>erroroffset<sp/><sp/><sp/>ptr<sp/>offset<sp/>in<sp/>pattern<sp/>where<sp/>error<sp/>was<sp/>detected</highlight></codeline>
<codeline lineno="5942"><highlight class="comment"><sp/><sp/>tables<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>character<sp/>tables<sp/>or<sp/>NULL</highlight></codeline>
<codeline lineno="5943"><highlight class="comment"></highlight></codeline>
<codeline lineno="5944"><highlight class="comment">Returns:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>compiled<sp/>data<sp/>block,<sp/>or<sp/>NULL<sp/>on<sp/>error,</highlight></codeline>
<codeline lineno="5945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>errorptr<sp/>and<sp/>erroroffset<sp/>set</highlight></codeline>
<codeline lineno="5946"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><ref refid="pcre__internal_8h_1a43f7c191f7b3645a85b184183534a961" kindref="member">PCRE_EXP_DEFN</ref><sp/><ref refid="structreal__pcre" kindref="compound">pcre</ref><sp/>*<sp/><ref refid="pcre__internal_8h_1a8696d535a0f4ad7b9fef8b2acc558ca0" kindref="member">PCRE_CALL_CONVENTION</ref></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><ref refid="pcre_8h_1ae3ba54d4ed3eaa4a0b593cae6e425ef1" kindref="member">pcre_compile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**errorptr,</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*erroroffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tables)</highlight></codeline>
<codeline lineno="5951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1a9b78fae5230f238b49b6674dfc2cd4c1" kindref="member">pcre_compile2</ref>(pattern,<sp/>options,<sp/>NULL,<sp/>errorptr,<sp/>erroroffset,<sp/>tables);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"></highlight></codeline>
<codeline lineno="5955"><highlight class="normal"></highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><ref refid="pcre__internal_8h_1a43f7c191f7b3645a85b184183534a961" kindref="member">PCRE_EXP_DEFN</ref><sp/><ref refid="structreal__pcre" kindref="compound">pcre</ref><sp/>*<sp/><ref refid="pcre__internal_8h_1a8696d535a0f4ad7b9fef8b2acc558ca0" kindref="member">PCRE_CALL_CONVENTION</ref></highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><ref refid="pcre_8h_1a9b78fae5230f238b49b6674dfc2cd4c1" kindref="member">pcre_compile2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*errorcodeptr,</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**errorptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*erroroffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tables)</highlight></codeline>
<codeline lineno="5959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*re;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>final<sp/>END<sp/>opcode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstbyte,<sp/>reqbyte,<sp/>newline;</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errorcode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipatstart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="5966"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="pcre__internal_8h_1a050c65e107f0c828f856a231f4b4e788" kindref="member">BOOL</ref><sp/>utf8;</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="5968"><highlight class="preprocessor"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*code;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*codestart;</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>compile_block;</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><ref refid="structcompile__data" kindref="compound">compile_data</ref><sp/>*cd<sp/>=<sp/>&amp;compile_block;</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>space<sp/>is<sp/>used<sp/>for<sp/>&quot;compiling&quot;<sp/>into<sp/>during<sp/>the<sp/>first<sp/>phase,<sp/>when<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="5976"><highlight class="comment">computing<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>that<sp/>is<sp/>needed.<sp/>Compiled<sp/>items<sp/>are<sp/>thrown<sp/>away</highlight></codeline>
<codeline lineno="5977"><highlight class="comment">as<sp/>soon<sp/>as<sp/>possible,<sp/>so<sp/>that<sp/>a<sp/>fairly<sp/>large<sp/>buffer<sp/>should<sp/>be<sp/>sufficient<sp/>for</highlight></codeline>
<codeline lineno="5978"><highlight class="comment">this<sp/>purpose.<sp/>The<sp/>same<sp/>space<sp/>is<sp/>used<sp/>in<sp/>the<sp/>second<sp/>phase<sp/>for<sp/>remembering<sp/>where</highlight></codeline>
<codeline lineno="5979"><highlight class="comment">to<sp/>fill<sp/>in<sp/>forward<sp/>references<sp/>to<sp/>subpatterns.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>cworkspace[<ref refid="pcre__compile_8c_1ae6ca9bdec2edc32d0268bd41de2f9b18" kindref="member">COMPILE_WORK_SIZE</ref>];</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"></highlight></codeline>
<codeline lineno="5983"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>this<sp/>early<sp/>so<sp/>that<sp/>early<sp/>errors<sp/>get<sp/>offset<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5984"><highlight class="normal"></highlight></codeline>
<codeline lineno="5985"><highlight class="normal">ptr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern;</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"></highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>can&apos;t<sp/>pass<sp/>back<sp/>an<sp/>error<sp/>message<sp/>if<sp/>errorptr<sp/>is<sp/>NULL;<sp/>I<sp/>guess<sp/>the<sp/>best<sp/>we</highlight></codeline>
<codeline lineno="5988"><highlight class="comment">can<sp/>do<sp/>is<sp/>just<sp/>return<sp/>NULL,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>code<sp/>value<sp/>if<sp/>there<sp/>is<sp/>a<sp/>code</highlight></codeline>
<codeline lineno="5989"><highlight class="comment">pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5990"><highlight class="normal"></highlight></codeline>
<codeline lineno="5991"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcodeptr<sp/>!=<sp/>NULL)<sp/>*errorcodeptr<sp/>=<sp/>99;</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"></highlight></codeline>
<codeline lineno="5997"><highlight class="normal">*errorptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcodeptr<sp/>!=<sp/>NULL)<sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaee68ca14bd42b83c1d796f49bf4ad203" kindref="member">ERR0</ref>;</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"></highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>However,<sp/>we<sp/>can<sp/>give<sp/>a<sp/>message<sp/>for<sp/>this<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"></highlight></codeline>
<codeline lineno="6002"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erroroffset<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eac3bbebb332e0707064a55c4a0d628107" kindref="member">ERR16</ref>;</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN2;</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"></highlight></codeline>
<codeline lineno="6008"><highlight class="normal">*erroroffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"></highlight></codeline>
<codeline lineno="6010"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>support<sp/>UTF8<sp/>unless<sp/>PCRE<sp/>has<sp/>been<sp/>compiled<sp/>to<sp/>include<sp/>the<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6011"><highlight class="normal"></highlight></codeline>
<codeline lineno="6012"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SUPPORT_UTF8</highlight></codeline>
<codeline lineno="6013"><highlight class="preprocessor"></highlight><highlight class="normal">utf8<sp/>=<sp/>(options<sp/>&amp;<sp/><ref refid="pcre_8h_1a177ec66f9b06aab7b37965b77b2cf1b8" kindref="member">PCRE_UTF8</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8<sp/>&amp;&amp;<sp/>(options<sp/>&amp;<sp/><ref refid="pcre_8h_1a0dbe8d1e2f19e326ca08bf99aa54d46c" kindref="member">PCRE_NO_UTF8_CHECK</ref>)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(*erroroffset<sp/>=<sp/><ref refid="pcre__internal_8h_1aec676b858da35ad0fbccbbb93c21002e" kindref="member">_pcre_valid_utf8</ref>((<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern,<sp/>-1))<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eac7e6dbe4b8421fa8a6a97d517b2b777b" kindref="member">ERR44</ref>;</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN2;</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="6021"><highlight class="preprocessor"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>PCRE_UTF8)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaba78a716868b2db96e08d88cf7a26f60" kindref="member">ERR32</ref>;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6027"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((options<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1a5b7b03d337464e5fe3f7108c8a729830" kindref="member">PUBLIC_OPTIONS</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea07cdeb5345bd444858da59baf7045d0c" kindref="member">ERR17</ref>;</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>pointers<sp/>to<sp/>the<sp/>individual<sp/>character<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables<sp/>==<sp/>NULL)<sp/>tables<sp/>=<sp/><ref refid="pcre__chartables_8c_1a65111e9495c90b43f671dbae9beda27a" kindref="member">_pcre_default_tables</ref>;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1af6583066c30914cfc1f781f6c8875ffa" kindref="member">lcc</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ade4efb6fb5feb928550e72974967f1d0" kindref="member">lcc_offset</ref>;</highlight></codeline>
<codeline lineno="6038"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ac8621d471e516521d225bc2dc7705782" kindref="member">fcc_offset</ref>;</highlight></codeline>
<codeline lineno="6039"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a6d50bbac74a79357db9acf748439d174" kindref="member">cbits</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1a1af2fa016e5f6954ced7f2600b2c105e" kindref="member">cbits_offset</ref>;</highlight></codeline>
<codeline lineno="6040"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1acd36d50ab40bb6455c512e5086244eef" kindref="member">ctypes</ref><sp/>=<sp/>tables<sp/>+<sp/><ref refid="pcre__internal_8h_1ae658ea05e098e65933f3d7e062495de4" kindref="member">ctypes_offset</ref>;</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>global<sp/>one-time<sp/>settings<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pattern,<sp/>and<sp/>remember</highlight></codeline>
<codeline lineno="6043"><highlight class="comment">the<sp/>offset<sp/>for<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr[skipatstart]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ptr[skipatstart+1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newnl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newbsr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;CR)&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>5;<sp/>newnl<sp/>=<sp/><ref refid="pcre_8h_1ab55198e91574a143392a8dced9d5cf85" kindref="member">PCRE_NEWLINE_CR</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;LF)&quot;</highlight><highlight class="normal">,<sp/>3)<sp/><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>5;<sp/>newnl<sp/>=<sp/><ref refid="pcre_8h_1a9d3e03ae881322fe05e72e7ad111bf4f" kindref="member">PCRE_NEWLINE_LF</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;CRLF)&quot;</highlight><highlight class="normal">,<sp/>5)<sp/><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>7;<sp/>newnl<sp/>=<sp/><ref refid="pcre_8h_1ab55198e91574a143392a8dced9d5cf85" kindref="member">PCRE_NEWLINE_CR</ref><sp/>+<sp/><ref refid="pcre_8h_1a9d3e03ae881322fe05e72e7ad111bf4f" kindref="member">PCRE_NEWLINE_LF</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;ANY)&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>6;<sp/>newnl<sp/>=<sp/><ref refid="pcre_8h_1a1c379cd4b51ea037dce7e8c79f9ee57d" kindref="member">PCRE_NEWLINE_ANY</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;ANYCRLF)&quot;</highlight><highlight class="normal">,<sp/>8)<sp/><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>10;<sp/>newnl<sp/>=<sp/><ref refid="pcre_8h_1af25f19586bec4187ca77e617ddc9b98b" kindref="member">PCRE_NEWLINE_ANYCRLF</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"></highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;BSR_ANYCRLF)&quot;</highlight><highlight class="normal">,<sp/>12)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>14;<sp/>newbsr<sp/>=<sp/><ref refid="pcre_8h_1ac4743871720886cdb063a9102f18bf0a" kindref="member">PCRE_BSR_ANYCRLF</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(ptr+skipatstart+2),<sp/></highlight><highlight class="stringliteral">&quot;BSR_UNICODE)&quot;</highlight><highlight class="normal">,<sp/>12)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>skipatstart<sp/>+=<sp/>14;<sp/>newbsr<sp/>=<sp/><ref refid="pcre_8h_1ac26454ae13931ee0bb369dff27b7c1e2" kindref="member">PCRE_BSR_UNICODE</ref>;<sp/>}</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"></highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newnl<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/>options<sp/>=<sp/>(options<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1a3ee8247993b3ece18a68631e54007555" kindref="member">PCRE_NEWLINE_BITS</ref>)<sp/>|<sp/>newnl;</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbsr<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/>options<sp/>=<sp/>(options<sp/>&amp;<sp/>~(<ref refid="pcre_8h_1ac4743871720886cdb063a9102f18bf0a" kindref="member">PCRE_BSR_ANYCRLF</ref>|<ref refid="pcre_8h_1ac26454ae13931ee0bb369dff27b7c1e2" kindref="member">PCRE_BSR_UNICODE</ref>))<sp/>|<sp/>newbsr;</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"></highlight></codeline>
<codeline lineno="6073"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>validity<sp/>of<sp/>\R<sp/>options.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6074"><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(options<sp/>&amp;<sp/>(<ref refid="pcre_8h_1ac4743871720886cdb063a9102f18bf0a" kindref="member">PCRE_BSR_ANYCRLF</ref>|<ref refid="pcre_8h_1ac26454ae13931ee0bb369dff27b7c1e2" kindref="member">PCRE_BSR_UNICODE</ref>))</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1ac4743871720886cdb063a9102f18bf0a" kindref="member">PCRE_BSR_ANYCRLF</ref>:</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1ac26454ae13931ee0bb369dff27b7c1e2" kindref="member">PCRE_BSR_UNICODE</ref>:</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea76f0de90fbd33e67d06955a6c5b9c2e1" kindref="member">ERR56</ref>;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"></highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Handle<sp/>different<sp/>types<sp/>of<sp/>newline.<sp/>The<sp/>three<sp/>bits<sp/>give<sp/>seven<sp/>cases.<sp/>The</highlight></codeline>
<codeline lineno="6085"><highlight class="comment">current<sp/>code<sp/>allows<sp/>for<sp/>fixed<sp/>one-<sp/>or<sp/>two-byte<sp/>sequences,<sp/>plus<sp/>&quot;any&quot;<sp/>and</highlight></codeline>
<codeline lineno="6086"><highlight class="comment">&quot;anycrlf&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(options<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a3ee8247993b3ece18a68631e54007555" kindref="member">PCRE_NEWLINE_BITS</ref>)</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>newline<sp/>=<sp/><ref refid="pcre__config_8h_1a806511f4930171733227c99101dc0606" kindref="member">NEWLINE</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build-time<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1ab55198e91574a143392a8dced9d5cf85" kindref="member">PCRE_NEWLINE_CR</ref>:<sp/>newline<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1a9d3e03ae881322fe05e72e7ad111bf4f" kindref="member">PCRE_NEWLINE_LF</ref>:<sp/>newline<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1ab55198e91574a143392a8dced9d5cf85" kindref="member">PCRE_NEWLINE_CR</ref>+</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pcre_8h_1a9d3e03ae881322fe05e72e7ad111bf4f" kindref="member">PCRE_NEWLINE_LF</ref>:<sp/>newline<sp/>=<sp/>(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>8)<sp/>|<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1a1c379cd4b51ea037dce7e8c79f9ee57d" kindref="member">PCRE_NEWLINE_ANY</ref>:<sp/>newline<sp/>=<sp/>-1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="pcre_8h_1af25f19586bec4187ca77e617ddc9b98b" kindref="member">PCRE_NEWLINE_ANYCRLF</ref>:<sp/>newline<sp/>=<sp/>-2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea76f0de90fbd33e67d06955a6c5b9c2e1" kindref="member">ERR56</ref>;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline<sp/>==<sp/>-2)</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1aacd1282193574f239ea481833837a230" kindref="member">nltype</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1a27a269d5670306a753a98413273ea9be" kindref="member">NLTYPE_ANYCRLF</ref>;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1aacd1282193574f239ea481833837a230" kindref="member">nltype</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1acf7dfdf7c85c3d4a4db4d2d3547611d2" kindref="member">NLTYPE_ANY</ref>;</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1aacd1282193574f239ea481833837a230" kindref="member">nltype</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1a479214957206efe3295aba2dbfb35a9c" kindref="member">NLTYPE_FIXED</ref>;</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1afffec692f99b0882a2f360f07a8e9a60" kindref="member">nllen</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ab64227509636167df214c49c3e297373" kindref="member">nl</ref>[0]<sp/>=<sp/>(newline<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ab64227509636167df214c49c3e297373" kindref="member">nl</ref>[1]<sp/>=<sp/>newline<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1afffec692f99b0882a2f360f07a8e9a60" kindref="member">nllen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ab64227509636167df214c49c3e297373" kindref="member">nl</ref>[0]<sp/>=<sp/>newline;</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"></highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>back<sp/>reference<sp/>and<sp/>backref<sp/>bitmap.<sp/>The<sp/>bitmap<sp/>records<sp/>up<sp/>to<sp/>31<sp/>back</highlight></codeline>
<codeline lineno="6125"><highlight class="comment">references<sp/>to<sp/>help<sp/>in<sp/>deciding<sp/>whether<sp/>(.*)<sp/>can<sp/>be<sp/>treated<sp/>as<sp/>anchored<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="6126"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a13384c0fe520de7e485444824e410305" kindref="member">top_backref</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6129"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1add03843bc9b81fa0b63b9d8ee730cf5c" kindref="member">backref_map</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reflect<sp/>pattern<sp/>for<sp/>debugging<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"></highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;------------------------------------------------------------------\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>pattern));</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pretend<sp/>to<sp/>compile<sp/>the<sp/>pattern<sp/>while<sp/>actually<sp/>just<sp/>accumulating<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="6137"><highlight class="comment">of<sp/>memory<sp/>required.<sp/>This<sp/>behaviour<sp/>is<sp/>triggered<sp/>by<sp/>passing<sp/>a<sp/>non-NULL<sp/>final</highlight></codeline>
<codeline lineno="6138"><highlight class="comment">argument<sp/>to<sp/>compile_regex().<sp/>We<sp/>pass<sp/>a<sp/>block<sp/>of<sp/>workspace<sp/>(cworkspace)<sp/>for<sp/>it</highlight></codeline>
<codeline lineno="6139"><highlight class="comment">to<sp/>compile<sp/>parts<sp/>of<sp/>the<sp/>pattern<sp/>into;<sp/>the<sp/>compiled<sp/>code<sp/>is<sp/>discarded<sp/>when<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="6140"><highlight class="comment">no<sp/>longer<sp/>needed,<sp/>so<sp/>hopefully<sp/>this<sp/>workspace<sp/>will<sp/>never<sp/>overflow,<sp/>though<sp/>there</highlight></codeline>
<codeline lineno="6141"><highlight class="comment">is<sp/>a<sp/>test<sp/>for<sp/>its<sp/>doing<sp/>so.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6142"><highlight class="normal"></highlight></codeline>
<codeline lineno="6143"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a6d164ca6626dcd16f4e0550fa05acfc3" kindref="member">final_bracount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6144"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6145"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6146"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6147"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a005326cbb0e879863e49bb0c0c77729f" kindref="member">start_workspace</ref><sp/>=<sp/>cworkspace;</highlight></codeline>
<codeline lineno="6148"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>=<sp/>cworkspace;</highlight></codeline>
<codeline lineno="6149"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>=<sp/>cworkspace;</highlight></codeline>
<codeline lineno="6150"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1af9b4ca5374f72fe75329c9034be93eb9" kindref="member">start_pattern</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern;</highlight></codeline>
<codeline lineno="6151"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a8d17e66764ff4fd1b243e417518db584" kindref="member">end_pattern</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)(pattern<sp/>+<sp/>strlen(pattern));</highlight></codeline>
<codeline lineno="6152"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6153"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>=<sp/>options;</highlight></codeline>
<codeline lineno="6154"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Now<sp/>do<sp/>the<sp/>pre-compile.<sp/>On<sp/>error,<sp/>errorcode<sp/>will<sp/>be<sp/>set<sp/>non-zero,<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="6157"><highlight class="comment">don&apos;t<sp/>need<sp/>to<sp/>look<sp/>at<sp/>the<sp/>result<sp/>of<sp/>the<sp/>function<sp/>here.<sp/>The<sp/>initial<sp/>options<sp/>have</highlight></codeline>
<codeline lineno="6158"><highlight class="comment">been<sp/>put<sp/>into<sp/>the<sp/>cd<sp/>block<sp/>so<sp/>that<sp/>they<sp/>can<sp/>be<sp/>changed<sp/>if<sp/>an<sp/>option<sp/>setting<sp/>is</highlight></codeline>
<codeline lineno="6159"><highlight class="comment">found<sp/>within<sp/>the<sp/>regex<sp/>right<sp/>at<sp/>the<sp/>beginning.<sp/>Bringing<sp/>initial<sp/>option<sp/>settings</highlight></codeline>
<codeline lineno="6160"><highlight class="comment">outside<sp/>can<sp/>help<sp/>speed<sp/>up<sp/>starting<sp/>point<sp/>checks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6161"><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal">ptr<sp/>+=<sp/>skipatstart;</highlight></codeline>
<codeline lineno="6163"><highlight class="normal">code<sp/>=<sp/>cworkspace;</highlight></codeline>
<codeline lineno="6164"><highlight class="normal">*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="6165"><highlight class="normal">(void)compile_regex(cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref>,<sp/>cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref><sp/>&amp;<sp/>PCRE_IMS,</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/>&amp;code,<sp/>&amp;ptr,<sp/>&amp;errorcode,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>0,<sp/>&amp;firstbyte,<sp/>&amp;reqbyte,<sp/>NULL,<sp/>cd,</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/>&amp;length);</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcode<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><ref refid="pcre__internal_8h_1a927243fe3d588e31de3f3badd5c47d47" kindref="member">DPRINTF</ref>((</highlight><highlight class="stringliteral">&quot;end<sp/>pre-compile:<sp/>length=%d<sp/>workspace=%d\n&quot;</highlight><highlight class="normal">,<sp/>length,</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>-<sp/>cworkspace));</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>MAX_PATTERN_SIZE)</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eade25ec278d821419d07c9ca70edcf607" kindref="member">ERR20</ref>;</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>size<sp/>of<sp/>data<sp/>block<sp/>needed<sp/>and<sp/>get<sp/>it,<sp/>either<sp/>from<sp/>malloc<sp/>or</highlight></codeline>
<codeline lineno="6180"><highlight class="comment">externally<sp/>provided<sp/>function.<sp/>Integer<sp/>overflow<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>possible</highlight></codeline>
<codeline lineno="6181"><highlight class="comment">because<sp/>nowadays<sp/>we<sp/>limit<sp/>the<sp/>maximum<sp/>value<sp/>of<sp/>cd-&gt;names_found<sp/>and</highlight></codeline>
<codeline lineno="6182"><highlight class="comment">cd-&gt;name_entry_size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6183"><highlight class="normal"></highlight></codeline>
<codeline lineno="6184"><highlight class="normal">size<sp/>=<sp/>length<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pcre__internal_8h_1ace374162a80704025e2673a551858272" kindref="member">real_pcre</ref>)<sp/>+<sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref><sp/>*<sp/>(cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref><sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="6185"><highlight class="normal">re<sp/>=<sp/>(<ref refid="structreal__pcre" kindref="compound">real_pcre</ref><sp/>*)(<ref refid="pcre_8h_1a26f9b74ea2d3692cfaacee68461563f4" kindref="member">pcre_malloc</ref>)(size);</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(re<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eafa12a737c7c386136bc6bbd54c5af1d6" kindref="member">ERR21</ref>;</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>PCRE_EARLY_ERROR_RETURN;</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"></highlight></codeline>
<codeline lineno="6193"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>in<sp/>the<sp/>magic<sp/>number,<sp/>and<sp/>save<sp/>the<sp/>sizes,<sp/>initial<sp/>options,<sp/>internal</highlight></codeline>
<codeline lineno="6194"><highlight class="comment">flags,<sp/>and<sp/>character<sp/>table<sp/>pointer.<sp/>NULL<sp/>is<sp/>used<sp/>for<sp/>the<sp/>default<sp/>character</highlight></codeline>
<codeline lineno="6195"><highlight class="comment">tables.<sp/>The<sp/>nullpad<sp/>field<sp/>is<sp/>at<sp/>the<sp/>end;<sp/>it&apos;s<sp/>there<sp/>to<sp/>help<sp/>in<sp/>the<sp/>case<sp/>when<sp/>a</highlight></codeline>
<codeline lineno="6196"><highlight class="comment">regex<sp/>compiled<sp/>on<sp/>a<sp/>system<sp/>with<sp/>4-byte<sp/>pointers<sp/>is<sp/>run<sp/>on<sp/>another<sp/>with<sp/>8-byte</highlight></codeline>
<codeline lineno="6197"><highlight class="comment">pointers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a2dc2a0866758d2b354eba234f607dffc" kindref="member">magic_number</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1a54061e5993a5517320d425f44408cc86" kindref="member">MAGIC_NUMBER</ref>;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a4710213783fa759d3e11cd2a3a1fbe69" kindref="member">size</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="6201"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ae70cd831b5f794e602a102e37b5144c3" kindref="member">external_options</ref>;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref>;</highlight></codeline>
<codeline lineno="6203"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a6ee730ca9903470beb199c45f2fc8984" kindref="member">dummy1</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6204"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1aa3cb4c3ff96b250d41d26fe2466048a6" kindref="member">first_byte</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6205"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1ab18064f432ade8f70dc88285995b9424" kindref="member">req_byte</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6206"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a987b4112909600e23507d89730bbec8b" kindref="member">name_table_offset</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pcre__internal_8h_1ace374162a80704025e2673a551858272" kindref="member">real_pcre</ref>);</highlight></codeline>
<codeline lineno="6207"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a509813742bade6e709dba4f4ec0c6d46" kindref="member">name_entry_size</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1af5b14a0163ddb0ad1b120e9383c0dc6e" kindref="member">name_entry_size</ref>;</highlight></codeline>
<codeline lineno="6208"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a8fbc0c66278a9b7d08ecf32769c8bbbe" kindref="member">name_count</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref>;</highlight></codeline>
<codeline lineno="6209"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a2cc28daeb17b67c635689df469042d35" kindref="member">ref_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6210"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1adebe1ce572194d380fe9cf27a6edd98b" kindref="member">tables</ref><sp/>=<sp/>(tables<sp/>==<sp/><ref refid="pcre__chartables_8c_1a65111e9495c90b43f671dbae9beda27a" kindref="member">_pcre_default_tables</ref>)?<sp/>NULL<sp/>:<sp/>tables;</highlight></codeline>
<codeline lineno="6211"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a540caf25c8ab6320b25d1f3c18606c84" kindref="member">nullpad</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"></highlight></codeline>
<codeline lineno="6213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>starting<sp/>points<sp/>of<sp/>the<sp/>name/number<sp/>translation<sp/>table<sp/>and<sp/>of<sp/>the<sp/>code<sp/>are</highlight></codeline>
<codeline lineno="6214"><highlight class="comment">passed<sp/>around<sp/>in<sp/>the<sp/>compile<sp/>data<sp/>block.<sp/>The<sp/>start/end<sp/>pattern<sp/>and<sp/>initial</highlight></codeline>
<codeline lineno="6215"><highlight class="comment">options<sp/>are<sp/>already<sp/>set<sp/>from<sp/>the<sp/>pre-compile<sp/>phase,<sp/>as<sp/>is<sp/>the<sp/>name_entry_size</highlight></codeline>
<codeline lineno="6216"><highlight class="comment">field.<sp/>Reset<sp/>the<sp/>bracket<sp/>count<sp/>and<sp/>the<sp/>names_found<sp/>field.<sp/>Also<sp/>reset<sp/>the<sp/>hwm</highlight></codeline>
<codeline lineno="6217"><highlight class="comment">field;<sp/>this<sp/>time<sp/>it&apos;s<sp/>used<sp/>for<sp/>remembering<sp/>forward<sp/>references<sp/>to<sp/>subpatterns.</highlight></codeline>
<codeline lineno="6218"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"></highlight></codeline>
<codeline lineno="6220"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a6d164ca6626dcd16f4e0550fa05acfc3" kindref="member">final_bracount</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>for<sp/>checking<sp/>forward<sp/>references<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a1500a48dd2b716de73de4eec23646141" kindref="member">names_found</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref><sp/>=<sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)re<sp/>+<sp/>re-&gt;<ref refid="structreal__pcre_1a987b4112909600e23507d89730bbec8b" kindref="member">name_table_offset</ref>;</highlight></codeline>
<codeline lineno="6224"><highlight class="normal">codestart<sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a2e4ae0403e35b63434be69d0f2411f81" kindref="member">name_table</ref><sp/>+<sp/>re-&gt;<ref refid="structreal__pcre_1a509813742bade6e709dba4f4ec0c6d46" kindref="member">name_entry_size</ref><sp/>*<sp/>re-&gt;<ref refid="structreal__pcre_1a8fbc0c66278a9b7d08ecf32769c8bbbe" kindref="member">name_count</ref>;</highlight></codeline>
<codeline lineno="6225"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a71094019a7e8de307db2483016cc8309" kindref="member">start_code</ref><sp/>=<sp/>codestart;</highlight></codeline>
<codeline lineno="6226"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>=<sp/>cworkspace;</highlight></codeline>
<codeline lineno="6227"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a049a932bfddc5a06805071e9ca08a3cc" kindref="member">req_varyopt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6228"><highlight class="normal">cd-&gt;<ref refid="structcompile__data_1a7e66e09e50e8110573a3132af307f983" kindref="member">had_accept</ref><sp/>=<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"></highlight></codeline>
<codeline lineno="6230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>a<sp/>starting,<sp/>non-extracting<sp/>bracket,<sp/>then<sp/>compile<sp/>the<sp/>expression.<sp/>On</highlight></codeline>
<codeline lineno="6231"><highlight class="comment">error,<sp/>errorcode<sp/>will<sp/>be<sp/>set<sp/>non-zero,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>look<sp/>at<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="6232"><highlight class="comment">of<sp/>the<sp/>function<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6233"><highlight class="normal"></highlight></codeline>
<codeline lineno="6234"><highlight class="normal">ptr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern<sp/>+<sp/>skipatstart;</highlight></codeline>
<codeline lineno="6235"><highlight class="normal">code<sp/>=<sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)codestart;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal">*code<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca6d32e2ba0b0d6bacec1c74b83b69cf14" kindref="member">OP_BRA</ref>;</highlight></codeline>
<codeline lineno="6237"><highlight class="normal">(void)compile_regex(re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref>,<sp/>re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>&amp;<sp/>PCRE_IMS,<sp/>&amp;code,<sp/>&amp;ptr,</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/>&amp;errorcode,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>0,<sp/>&amp;firstbyte,<sp/>&amp;reqbyte,<sp/>NULL,<sp/>cd,<sp/>NULL);</highlight></codeline>
<codeline lineno="6239"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1ae68e49fb3631d079c55454282d338959" kindref="member">top_bracket</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1adae3fba9cbc6d77d69027f93bd0e235f" kindref="member">bracount</ref>;</highlight></codeline>
<codeline lineno="6240"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1acce2ec7ee31475cd86ab8252b7bd7151" kindref="member">top_backref</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1a13384c0fe520de7e485444824e410305" kindref="member">top_backref</ref>;</highlight></codeline>
<codeline lineno="6241"><highlight class="normal">re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>=<sp/>cd-&gt;<ref refid="structcompile__data_1ab7285f6fefd0389d7d1ae17a44eb7ebe" kindref="member">external_flags</ref>;</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="structcompile__data_1a7e66e09e50e8110573a3132af307f983" kindref="member">had_accept</ref>)<sp/>reqbyte<sp/>=<sp/>-1;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>disable<sp/>after<sp/>(*ACCEPT)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6244"><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>reached<sp/>end<sp/>of<sp/>pattern<sp/>on<sp/>success,<sp/>there&apos;s<sp/>an<sp/>excess<sp/>bracket.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcode<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*ptr<sp/>!=<sp/>0)<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaccd495b797442fe0cd3c23c6419e8ead" kindref="member">ERR22</ref>;</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>the<sp/>terminating<sp/>state<sp/>and<sp/>check<sp/>for<sp/>disastrous<sp/>overflow,<sp/>but</highlight></codeline>
<codeline lineno="6250"><highlight class="comment">if<sp/>debugging,<sp/>leave<sp/>the<sp/>test<sp/>till<sp/>after<sp/>things<sp/>are<sp/>printed<sp/>out.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6251"><highlight class="normal"></highlight></codeline>
<codeline lineno="6252"><highlight class="normal">*code++<sp/>=<sp/><ref refid="pcre__internal_8h_1adc29c2ff13d900c2f185ee95427fb06ca010acee11f1e0ca0026e20c2f36bfdb7" kindref="member">OP_END</ref>;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"></highlight></codeline>
<codeline lineno="6254"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG</highlight></codeline>
<codeline lineno="6255"><highlight class="preprocessor"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>-<sp/>codestart<sp/>&gt;<sp/>length)<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea003036dc05b30af7ccb51f33a6ce7f4e" kindref="member">ERR23</ref>;</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="6257"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6258"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>any<sp/>forward<sp/>references<sp/>that<sp/>are<sp/>required.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight></codeline>
<codeline lineno="6260"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(errorcode<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>&gt;<sp/>cworkspace)</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/>recno;</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*groupptr;</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref><sp/>-=<sp/><ref refid="pcre__config_8h_1a563fd7a205c425b3d546639ee71070ce" kindref="member">LINK_SIZE</ref>;</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>GET(cd-&gt;<ref refid="structcompile__data_1ac7cc26982c474035a512dcf443e92381" kindref="member">hwm</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/>recno<sp/>=<sp/>GET(codestart,<sp/>offset);</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/>groupptr<sp/>=<sp/>find_bracket(codestart,<sp/>(re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>&amp;<sp/>PCRE_UTF8)<sp/>!=<sp/>0,<sp/>recno);</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupptr<sp/>==<sp/>NULL)<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9eaa7f55a7df03b701a26723e94aec4c95e" kindref="member">ERR53</ref>;</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>PUT(((<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)codestart),<sp/>offset,<sp/>groupptr<sp/>-<sp/>codestart);</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"></highlight></codeline>
<codeline lineno="6272"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Give<sp/>an<sp/>error<sp/>if<sp/>there&apos;s<sp/>back<sp/>reference<sp/>to<sp/>a<sp/>non-existent<sp/>capturing</highlight></codeline>
<codeline lineno="6273"><highlight class="comment">subpattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6274"><highlight class="normal"></highlight></codeline>
<codeline lineno="6275"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcode<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>re-&gt;<ref refid="structreal__pcre_1acce2ec7ee31475cd86ab8252b7bd7151" kindref="member">top_backref</ref><sp/>&gt;<sp/>re-&gt;<ref refid="structreal__pcre_1ae68e49fb3631d079c55454282d338959" kindref="member">top_bracket</ref>)<sp/>errorcode<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea68876403c2ae6e262f98cee27a1be698" kindref="member">ERR15</ref>;</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"></highlight></codeline>
<codeline lineno="6277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Failed<sp/>to<sp/>compile,<sp/>or<sp/>error<sp/>while<sp/>post-processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"></highlight></codeline>
<codeline lineno="6279"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcode<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/>(<ref refid="pcre_8h_1aa316d54b76adc938ce2c4a3431ceace1" kindref="member">pcre_free</ref>)(re);</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/>PCRE_EARLY_ERROR_RETURN:</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/>*erroroffset<sp/>=<sp/>ptr<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern;</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/>PCRE_EARLY_ERROR_RETURN2:</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/>*errorptr<sp/>=<sp/>find_error_text(errorcode);</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcodeptr<sp/>!=<sp/>NULL)<sp/>*errorcodeptr<sp/>=<sp/>errorcode;</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>anchored<sp/>option<sp/>was<sp/>not<sp/>passed,<sp/>set<sp/>the<sp/>flag<sp/>if<sp/>we<sp/>can<sp/>determine<sp/>that</highlight></codeline>
<codeline lineno="6291"><highlight class="comment">the<sp/>pattern<sp/>is<sp/>anchored<sp/>by<sp/>virtue<sp/>of<sp/>^<sp/>characters<sp/>or<sp/>\A<sp/>or<sp/>anything<sp/>else<sp/>(such</highlight></codeline>
<codeline lineno="6292"><highlight class="comment">as<sp/>starting<sp/>with<sp/>.*<sp/>when<sp/>DOTALL<sp/>is<sp/>set).</highlight></codeline>
<codeline lineno="6293"><highlight class="comment"></highlight></codeline>
<codeline lineno="6294"><highlight class="comment">Otherwise,<sp/>if<sp/>we<sp/>know<sp/>what<sp/>the<sp/>first<sp/>byte<sp/>has<sp/>to<sp/>be,<sp/>save<sp/>it,<sp/>because<sp/>that</highlight></codeline>
<codeline lineno="6295"><highlight class="comment">speeds<sp/>up<sp/>unanchored<sp/>matches<sp/>no<sp/>end.<sp/>If<sp/>not,<sp/>see<sp/>if<sp/>we<sp/>can<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="6296"><highlight class="comment">PCRE_STARTLINE<sp/>flag.<sp/>This<sp/>is<sp/>helpful<sp/>for<sp/>multiline<sp/>matches<sp/>when<sp/>all<sp/>branches</highlight></codeline>
<codeline lineno="6297"><highlight class="comment">start<sp/>with<sp/>^.<sp/>and<sp/>also<sp/>when<sp/>all<sp/>branches<sp/>start<sp/>with<sp/>.*<sp/>for<sp/>non-DOTALL<sp/>matches.</highlight></codeline>
<codeline lineno="6298"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"></highlight></codeline>
<codeline lineno="6300"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1aa2eabe6a64847b8bc2f49f6a8430f1f4" kindref="member">PCRE_ANCHORED</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_options<sp/>=<sp/>re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>May<sp/>get<sp/>changed<sp/>during<sp/>these<sp/>scans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_anchored(codestart,<sp/>&amp;temp_options,<sp/>0,<sp/>cd-&gt;<ref refid="structcompile__data_1add03843bc9b81fa0b63b9d8ee730cf5c" kindref="member">backref_map</ref>))</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>|=<sp/><ref refid="pcre_8h_1aa2eabe6a64847b8bc2f49f6a8430f1f4" kindref="member">PCRE_ANCHORED</ref>;</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstbyte<sp/>=<sp/>find_firstassertedchar(codestart,<sp/>&amp;temp_options,<sp/><ref refid="pcre__internal_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstbyte<sp/>&gt;=<sp/>0)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>caseless<sp/>flag<sp/>for<sp/>non-caseable<sp/>chars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>firstbyte<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1aa3cb4c3ff96b250d41d26fe2466048a6" kindref="member">first_byte</ref><sp/>=<sp/>((firstbyte<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[ch]<sp/>==<sp/>ch)?<sp/>ch<sp/>:<sp/>firstbyte;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1aa3860b4c31ee4275eaa19df78bc73590" kindref="member">PCRE_FIRSTSET</ref>;</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_startline(codestart,<sp/>0,<sp/>cd-&gt;<ref refid="structcompile__data_1add03843bc9b81fa0b63b9d8ee730cf5c" kindref="member">backref_map</ref>))</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1af24422b85f1b3c788a4703b61f18fe11" kindref="member">PCRE_STARTLINE</ref>;</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>an<sp/>anchored<sp/>pattern,<sp/>we<sp/>use<sp/>the<sp/>&quot;required<sp/>byte&quot;<sp/>only<sp/>if<sp/>it<sp/>follows<sp/>a</highlight></codeline>
<codeline lineno="6322"><highlight class="comment">variable<sp/>length<sp/>item<sp/>in<sp/>the<sp/>regex.<sp/>Remove<sp/>the<sp/>caseless<sp/>flag<sp/>for<sp/>non-caseable</highlight></codeline>
<codeline lineno="6323"><highlight class="comment">bytes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6324"><highlight class="normal"></highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reqbyte<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref><sp/>&amp;<sp/><ref refid="pcre_8h_1aa2eabe6a64847b8bc2f49f6a8430f1f4" kindref="member">PCRE_ANCHORED</ref>)<sp/>==<sp/>0<sp/>||<sp/>(reqbyte<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a1a5a2f42aaea27efaa2abc899f29703c" kindref="member">REQ_VARY</ref>)<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>reqbyte<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1ab18064f432ade8f70dc88285995b9424" kindref="member">req_byte</ref><sp/>=<sp/>((reqbyte<sp/>&amp;<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>)<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="structcompile__data_1a7dda8dd8a8da72cd365af5835d213190" kindref="member">fcc</ref>[ch]<sp/>==<sp/>ch)?<sp/>(reqbyte<sp/>&amp;<sp/>~<ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>)<sp/>:<sp/>reqbyte;</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/>re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>|=<sp/><ref refid="pcre__internal_8h_1a6c85b22f5b731db51da6177b20aa0ebd" kindref="member">PCRE_REQCHSET</ref>;</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"></highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>the<sp/>compiled<sp/>data<sp/>if<sp/>debugging<sp/>is<sp/>enabled.<sp/>This<sp/>is<sp/>never<sp/>the</highlight></codeline>
<codeline lineno="6335"><highlight class="comment">case<sp/>when<sp/>building<sp/>a<sp/>production<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6336"><highlight class="normal"></highlight></codeline>
<codeline lineno="6337"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="6338"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6339"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;Length<sp/>=<sp/>%d<sp/>top_bracket<sp/>=<sp/>%d<sp/>top_backref<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/>length,<sp/>re-&gt;<ref refid="structreal__pcre_1ae68e49fb3631d079c55454282d338959" kindref="member">top_bracket</ref>,<sp/>re-&gt;<ref refid="structreal__pcre_1acce2ec7ee31475cd86ab8252b7bd7151" kindref="member">top_backref</ref>);</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"></highlight></codeline>
<codeline lineno="6342"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;Options=%08x\n&quot;</highlight><highlight class="normal">,<sp/>re-&gt;<ref refid="structreal__pcre_1a3a8ae1750d80723ae7beedcc626fe0e5" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="pcre__internal_8h_1aa3860b4c31ee4275eaa19df78bc73590" kindref="member">PCRE_FIRSTSET</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>re-&gt;<ref refid="structreal__pcre_1aa3cb4c3ff96b250d41d26fe2466048a6" kindref="member">first_byte</ref><sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*caseless<sp/>=<sp/>((re-&gt;<ref refid="structreal__pcre_1aa3cb4c3ff96b250d41d26fe2466048a6" kindref="member">first_byte</ref><sp/>&amp;<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>)<sp/>==<sp/>0)?</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(caseless)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isprint(ch))<sp/>printf(</highlight><highlight class="stringliteral">&quot;First<sp/>char<sp/>=<sp/>%c%s\n&quot;</highlight><highlight class="normal">,<sp/>ch,<sp/>caseless);</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;First<sp/>char<sp/>=<sp/>\\x%02x%s\n&quot;</highlight><highlight class="normal">,<sp/>ch,<sp/>caseless);</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight></codeline>
<codeline lineno="6353"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((re-&gt;<ref refid="structreal__pcre_1a297a919ce55e176044e6ed7b106a14e9" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="pcre__internal_8h_1a6c85b22f5b731db51da6177b20aa0ebd" kindref="member">PCRE_REQCHSET</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>re-&gt;<ref refid="structreal__pcre_1ab18064f432ade8f70dc88285995b9424" kindref="member">req_byte</ref><sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*caseless<sp/>=<sp/>((re-&gt;<ref refid="structreal__pcre_1ab18064f432ade8f70dc88285995b9424" kindref="member">req_byte</ref><sp/>&amp;<sp/><ref refid="pcre__internal_8h_1ae4f4c02878c10584696c22c5e4425215" kindref="member">REQ_CASELESS</ref>)<sp/>==<sp/>0)?</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(caseless)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isprint(ch))<sp/>printf(</highlight><highlight class="stringliteral">&quot;Req<sp/>char<sp/>=<sp/>%c%s\n&quot;</highlight><highlight class="normal">,<sp/>ch,<sp/>caseless);</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;Req<sp/>char<sp/>=<sp/>\\x%02x%s\n&quot;</highlight><highlight class="normal">,<sp/>ch,<sp/>caseless);</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal">pcre_printint(re,<sp/>stdout,<sp/><ref refid="pcre__internal_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"></highlight></codeline>
<codeline lineno="6364"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>check<sp/>is<sp/>done<sp/>here<sp/>in<sp/>the<sp/>debugging<sp/>case<sp/>so<sp/>that<sp/>the<sp/>code<sp/>that</highlight></codeline>
<codeline lineno="6365"><highlight class="comment">was<sp/>compiled<sp/>can<sp/>be<sp/>seen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>-<sp/>codestart<sp/>&gt;<sp/>length)</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/>(<ref refid="pcre_8h_1aa316d54b76adc938ce2c4a3431ceace1" kindref="member">pcre_free</ref>)(re);</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/>*errorptr<sp/>=<sp/>find_error_text(<ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea003036dc05b30af7ccb51f33a6ce7f4e" kindref="member">ERR23</ref>);</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/>*erroroffset<sp/>=<sp/>ptr<sp/>-<sp/>(<ref refid="pcre__internal_8h_1ac577b548c150a22e244584d01e177f9a" kindref="member">uschar</ref><sp/>*)pattern;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorcodeptr<sp/>!=<sp/>NULL)<sp/>*errorcodeptr<sp/>=<sp/><ref refid="pcre__internal_8h_1a61dadd085c1777f559549e05962b2c9ea003036dc05b30af7ccb51f33a6ce7f4e" kindref="member">ERR23</ref>;</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="6376"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structreal__pcre" kindref="compound">pcre</ref><sp/>*)re;</highlight></codeline>
<codeline lineno="6378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>pcre_compile.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/Cpp_Reverse/poco-1.4.6p1/Foundation/src/pcre_compile.c"/>
  </compounddef>
</doxygen>
