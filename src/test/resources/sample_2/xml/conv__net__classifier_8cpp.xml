<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="conv__net__classifier_8cpp" kind="file">
    <compoundname>conv_net_classifier.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">wctype.h</includes>
    <includes refid="char__set_8h" local="yes">char_set.h</includes>
    <includes refid="classifier__base_8h" local="yes">classifier_base.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="conv__net__classifier_8h" local="yes">conv_net_classifier.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="feature__base_8h" local="yes">feature_base.h</includes>
    <includes refid="feature__bmp_8h" local="yes">feature_bmp.h</includes>
    <includes refid="tess__lang__model_8h" local="yes">tess_lang_model.h</includes>
    <incdepgraph>
      <node id="29625">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="29626" relation="include">
        </childnode>
        <childnode refid="29579" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
      </node>
      <node id="29622">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="29633">
        <label>tess_lang_mod_edge.h</label>
        <link refid="tess__lang__mod__edge_8h"/>
        <childnode refid="29602" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29584" relation="include">
        </childnode>
        <childnode refid="29592" relation="include">
        </childnode>
        <childnode refid="29577" relation="include">
        </childnode>
      </node>
      <node id="29592">
        <label>cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29587" relation="include">
        </childnode>
        <childnode refid="29583" relation="include">
        </childnode>
        <childnode refid="29569" relation="include">
        </childnode>
        <childnode refid="29581" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29593" relation="include">
        </childnode>
        <childnode refid="29594" relation="include">
        </childnode>
        <childnode refid="29595" relation="include">
        </childnode>
      </node>
      <node id="29630">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
      </node>
      <node id="29604">
        <label>assert.h</label>
      </node>
      <node id="29546">
        <label>wctype.h</label>
      </node>
      <node id="29560">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="29579">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="29543">
        <label>stdlib.h</label>
      </node>
      <node id="29583">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="29584" relation="include">
        </childnode>
        <childnode refid="29574" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29582" relation="include">
        </childnode>
      </node>
      <node id="29552">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="29553" relation="include">
        </childnode>
      </node>
      <node id="29588">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="29576" relation="include">
        </childnode>
        <childnode refid="29545" relation="include">
        </childnode>
      </node>
      <node id="29610">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="29558" relation="include">
        </childnode>
      </node>
      <node id="29626">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="29597" relation="include">
        </childnode>
        <childnode refid="29558" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
        <childnode refid="29550" relation="include">
        </childnode>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
        <childnode refid="29627" relation="include">
        </childnode>
        <childnode refid="29628" relation="include">
        </childnode>
      </node>
      <node id="29578">
        <label>allheaders.h</label>
      </node>
      <node id="29590">
        <label>feature_bmp.h</label>
        <link refid="feature__bmp_8h"/>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29581" relation="include">
        </childnode>
      </node>
      <node id="29618">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
      </node>
      <node id="29587">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29545" relation="include">
        </childnode>
        <childnode refid="29588" relation="include">
        </childnode>
        <childnode refid="29589" relation="include">
        </childnode>
      </node>
      <node id="29599">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29562" relation="include">
        </childnode>
        <childnode refid="29558" relation="include">
        </childnode>
        <childnode refid="29600" relation="include">
        </childnode>
      </node>
      <node id="29544">
        <label>string</label>
      </node>
      <node id="29605">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29599" relation="include">
        </childnode>
        <childnode refid="29601" relation="include">
        </childnode>
      </node>
      <node id="29586">
        <label>conv_net_classifier.h</label>
        <link refid="conv__net__classifier_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29574" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29581" relation="include">
        </childnode>
        <childnode refid="29569" relation="include">
        </childnode>
        <childnode refid="29587" relation="include">
        </childnode>
        <childnode refid="29583" relation="include">
        </childnode>
        <childnode refid="29582" relation="include">
        </childnode>
      </node>
      <node id="29611">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="29612" relation="include">
        </childnode>
        <childnode refid="29617" relation="include">
        </childnode>
      </node>
      <node id="29631">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="29602" relation="include">
        </childnode>
        <childnode refid="29624" relation="include">
        </childnode>
        <childnode refid="29556" relation="include">
        </childnode>
      </node>
      <node id="29603">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="29604" relation="include">
        </childnode>
        <childnode refid="29605" relation="include">
        </childnode>
        <childnode refid="29556" relation="include">
        </childnode>
        <childnode refid="29606" relation="include">
        </childnode>
        <childnode refid="29565" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
        <childnode refid="29607" relation="include">
        </childnode>
      </node>
      <node id="29563">
        <label>stddef.h</label>
      </node>
      <node id="29566">
        <label>memory.h</label>
      </node>
      <node id="29582">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
      </node>
      <node id="29581">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29582" relation="include">
        </childnode>
      </node>
      <node id="29558">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="29551" relation="include">
        </childnode>
      </node>
      <node id="29594">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
      </node>
      <node id="29569">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29574" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29581" relation="include">
        </childnode>
        <childnode refid="29583" relation="include">
        </childnode>
        <childnode refid="29582" relation="include">
        </childnode>
      </node>
      <node id="29553">
        <label>limits.h</label>
      </node>
      <node id="29596">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="29597" relation="include">
        </childnode>
        <childnode refid="29602" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29622" relation="include">
        </childnode>
        <childnode refid="29623" relation="include">
        </childnode>
        <childnode refid="29603" relation="include">
        </childnode>
        <childnode refid="29629" relation="include">
        </childnode>
        <childnode refid="29631" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
        <childnode refid="29632" relation="include">
        </childnode>
      </node>
      <node id="29570">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29571" relation="include">
        </childnode>
        <childnode refid="29549" relation="include">
        </childnode>
      </node>
      <node id="29615">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="29576" relation="include">
        </childnode>
      </node>
      <node id="29616">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="29614" relation="include">
        </childnode>
      </node>
      <node id="29609">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29599" relation="include">
        </childnode>
        <childnode refid="29601" relation="include">
        </childnode>
      </node>
      <node id="29627">
        <label>pthread.h</label>
      </node>
      <node id="29547">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29541" relation="include">
        </childnode>
        <childnode refid="29549" relation="include">
        </childnode>
        <childnode refid="29550" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
        <childnode refid="29568" relation="include">
        </childnode>
      </node>
      <node id="29548">
        <label>string.h</label>
      </node>
      <node id="29567">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="29565" relation="include">
        </childnode>
      </node>
      <node id="29565">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="29566" relation="include">
        </childnode>
        <childnode refid="29548" relation="include">
        </childnode>
      </node>
      <node id="29624">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29554" relation="include">
        </childnode>
        <childnode refid="29625" relation="include">
        </childnode>
      </node>
      <node id="29577">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="29545" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29578" relation="include">
        </childnode>
        <childnode refid="29579" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29580" relation="include">
        </childnode>
      </node>
      <node id="29540">
        <label>cube/conv_net_classifier.cpp</label>
        <link refid="conv_net_classifier.cpp"/>
        <childnode refid="29541" relation="include">
        </childnode>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29545" relation="include">
        </childnode>
        <childnode refid="29546" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29569" relation="include">
        </childnode>
        <childnode refid="29579" relation="include">
        </childnode>
        <childnode refid="29586" relation="include">
        </childnode>
        <childnode refid="29577" relation="include">
        </childnode>
        <childnode refid="29581" relation="include">
        </childnode>
        <childnode refid="29590" relation="include">
        </childnode>
        <childnode refid="29591" relation="include">
        </childnode>
      </node>
      <node id="29617">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="29576" relation="include">
        </childnode>
        <childnode refid="29614" relation="include">
        </childnode>
        <childnode refid="29560" relation="include">
        </childnode>
        <childnode refid="29618" relation="include">
        </childnode>
        <childnode refid="29554" relation="include">
        </childnode>
      </node>
      <node id="29608">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="29551" relation="include">
        </childnode>
      </node>
      <node id="29545">
        <label>vector</label>
      </node>
      <node id="29557">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="29551" relation="include">
        </childnode>
      </node>
      <node id="29628">
        <label>semaphore.h</label>
      </node>
      <node id="29612">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="29613" relation="include">
        </childnode>
        <childnode refid="29616" relation="include">
        </childnode>
        <childnode refid="29608" relation="include">
        </childnode>
        <childnode refid="29617" relation="include">
        </childnode>
        <childnode refid="29610" relation="include">
        </childnode>
        <childnode refid="29618" relation="include">
        </childnode>
      </node>
      <node id="29607">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29608" relation="include">
        </childnode>
        <childnode refid="29609" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
        <childnode refid="29610" relation="include">
        </childnode>
        <childnode refid="29611" relation="include">
        </childnode>
        <childnode refid="29619" relation="include">
        </childnode>
      </node>
      <node id="29619">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29620" relation="include">
        </childnode>
        <childnode refid="29607" relation="include">
        </childnode>
      </node>
      <node id="29600">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="29558" relation="include">
        </childnode>
      </node>
      <node id="29597">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="29598" relation="include">
        </childnode>
        <childnode refid="29554" relation="include">
        </childnode>
        <childnode refid="29565" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
        <childnode refid="29556" relation="include">
        </childnode>
      </node>
      <node id="29613">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="29614" relation="include">
        </childnode>
        <childnode refid="29616" relation="include">
        </childnode>
      </node>
      <node id="29576">
        <label>math.h</label>
      </node>
      <node id="29601">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="29558" relation="include">
        </childnode>
      </node>
      <node id="29621">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="29614" relation="include">
        </childnode>
      </node>
      <node id="29584">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="29585" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
      </node>
      <node id="29623">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="29624" relation="include">
        </childnode>
        <childnode refid="29557" relation="include">
        </childnode>
      </node>
      <node id="29555">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29556" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
      </node>
      <node id="29556">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29557" relation="include">
        </childnode>
        <childnode refid="29558" relation="include">
        </childnode>
        <childnode refid="29559" relation="include">
        </childnode>
        <childnode refid="29560" relation="include">
        </childnode>
      </node>
      <node id="29629">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="29556" relation="include">
        </childnode>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29603" relation="include">
        </childnode>
        <childnode refid="29630" relation="include">
        </childnode>
        <childnode refid="29565" relation="include">
        </childnode>
      </node>
      <node id="29562">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="29563" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
      </node>
      <node id="29571">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29572" relation="include">
        </childnode>
        <childnode refid="29573" relation="include">
        </childnode>
      </node>
      <node id="29572">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="29595">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29583" relation="include">
        </childnode>
      </node>
      <node id="29585">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29582" relation="include">
        </childnode>
      </node>
      <node id="29598">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29599" relation="include">
        </childnode>
        <childnode refid="29601" relation="include">
        </childnode>
      </node>
      <node id="29564">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="29558" relation="include">
        </childnode>
        <childnode refid="29559" relation="include">
        </childnode>
        <childnode refid="29561" relation="include">
        </childnode>
        <childnode refid="29557" relation="include">
        </childnode>
        <childnode refid="29565" relation="include">
        </childnode>
        <childnode refid="29567" relation="include">
        </childnode>
      </node>
      <node id="29574">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="29575" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
      </node>
      <node id="29602">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="29598" relation="include">
        </childnode>
        <childnode refid="29603" relation="include">
        </childnode>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29557" relation="include">
        </childnode>
      </node>
      <node id="29614">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29576" relation="include">
        </childnode>
        <childnode refid="29598" relation="include">
        </childnode>
        <childnode refid="29615" relation="include">
        </childnode>
      </node>
      <node id="29606">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="29568">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="29580">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="29562" relation="include">
        </childnode>
      </node>
      <node id="29554">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="29555" relation="include">
        </childnode>
      </node>
      <node id="29541">
        <label>algorithm</label>
      </node>
      <node id="29551">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="29552" relation="include">
        </childnode>
      </node>
      <node id="29593">
        <label>word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29570" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
      </node>
      <node id="29573">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
      </node>
      <node id="29542">
        <label>stdio.h</label>
      </node>
      <node id="29591">
        <label>tess_lang_model.h</label>
        <link refid="tess__lang__model_8h"/>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29574" relation="include">
        </childnode>
        <childnode refid="29592" relation="include">
        </childnode>
        <childnode refid="29585" relation="include">
        </childnode>
        <childnode refid="29596" relation="include">
        </childnode>
        <childnode refid="29583" relation="include">
        </childnode>
        <childnode refid="29550" relation="include">
        </childnode>
        <childnode refid="29633" relation="include">
        </childnode>
      </node>
      <node id="29589">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
      </node>
      <node id="29549">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29541" relation="include">
        </childnode>
        <childnode refid="29545" relation="include">
        </childnode>
      </node>
      <node id="29550">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29554" relation="include">
        </childnode>
      </node>
      <node id="29561">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29552" relation="include">
        </childnode>
        <childnode refid="29562" relation="include">
        </childnode>
      </node>
      <node id="29575">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="29576" relation="include">
        </childnode>
        <childnode refid="29577" relation="include">
        </childnode>
      </node>
      <node id="29559">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="29542" relation="include">
        </childnode>
        <childnode refid="29548" relation="include">
        </childnode>
      </node>
      <node id="29632">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="29603" relation="include">
        </childnode>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29564" relation="include">
        </childnode>
      </node>
      <node id="29620">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="29621" relation="include">
        </childnode>
        <childnode refid="29599" relation="include">
        </childnode>
        <childnode refid="29562" relation="include">
        </childnode>
        <childnode refid="29617" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charclassifier.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>Convolutional-NeuralNet<sp/>Character<sp/>Classifier</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__set_8h" kindref="compound">char_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classifier__base_8h" kindref="compound">classifier_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conv__net__classifier_8h" kindref="compound">conv_net_classifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__base_8h" kindref="compound">feature_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__bmp_8h" kindref="compound">feature_bmp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tess__lang__model_8h" kindref="compound">tess_lang_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classtesseract_1_1_conv_net_char_classifier_1a1ee09e5790b8d690fe995f3235ca0f14" kindref="member">ConvNetCharClassifier::ConvNetCharClassifier</ref>(CharSet<sp/>*char_set,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TuningParams<sp/>*params,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FeatureBase<sp/>*feat_extract)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>CharClassifier(char_set,<sp/>params,<sp/>feat_extract)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>char_net_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>net_input_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>net_output_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classtesseract_1_1_conv_net_char_classifier_1a70d83d9eecbde1c1aca3e3682aa05c09" kindref="member">ConvNetCharClassifier::~ConvNetCharClassifier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_net_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>char_net_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_input_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]net_input_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>net_input_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_output_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]net_output_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>net_output_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>training<sp/>function.<sp/>Given<sp/>a<sp/>sample<sp/>and<sp/>a<sp/>class<sp/>ID<sp/>the<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>updates<sp/>its<sp/>parameters<sp/>according<sp/>to<sp/>its<sp/>learning<sp/>algorithm.<sp/>This<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>currently<sp/>not<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a451b0a0301ad22b5644e554dc65a6279" kindref="member">ConvNetCharClassifier::Train</ref>(CharSamp<sp/>*char_samp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ClassID)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>secondary<sp/>function<sp/>needed<sp/>for<sp/>training.<sp/>Allows<sp/>the<sp/>trainer<sp/>to<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>value<sp/>of<sp/>any<sp/>train-time<sp/>paramter.<sp/>This<sp/>function<sp/>is<sp/>currently<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1ab3552a6a9eae46ff0cdd99c3118a2343" kindref="member">ConvNetCharClassifier::SetLearnParam</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(ahmadab):<sp/>implementation<sp/>of<sp/>parameter<sp/>initializing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Folds<sp/>the<sp/>output<sp/>of<sp/>the<sp/>NeuralNet<sp/>using<sp/>the<sp/>loaded<sp/>folding<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvNetCharClassifier::Fold()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>insensitive<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_char_classifier_1aaabb1acf1d7ebcd2b66e1f9796cc49dc" kindref="member">case_sensitive_</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_cnt<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1abfcdf381a241c375ad4c0f77747afb6c" kindref="member">ClassCount</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fold<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>class_cnt;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>class<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*str32<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1a7fd13e0ab7d7f0e963d05023287c634a" kindref="member">ClassString</ref>(class_id);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>upper<sp/>case<sp/>form<sp/>of<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>upper_form32<sp/>=<sp/>str32;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>upper_form32.length();<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iswalpha(static_cast&lt;int&gt;(upper_form32[ch]))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_form32[ch]<sp/>=<sp/>towupper(upper_form32[ch]);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>out<sp/>the<sp/>upperform<sp/>class-id<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper_class_id<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1aea651f4514338d320e195c6780ffcda5" kindref="member">ClassID</ref>(reinterpret_cast&lt;const<sp/>char_32<sp/>*&gt;(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_form32.c_str()));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_class_id<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>class_id<sp/>!=<sp/>upper_class_id)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_out<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(net_output_[class_id],<sp/>net_output_[upper_class_id]);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_output_[class_id]<sp/>=<sp/>max_out;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_output_[upper_class_id]<sp/>=<sp/>max_out;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>folding<sp/>sets<sp/>specify<sp/>how<sp/>groups<sp/>of<sp/>classes<sp/>should<sp/>be<sp/>folded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Folding<sp/>involved<sp/>assigning<sp/>a<sp/>min-activation<sp/>to<sp/>all<sp/>the<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>folding<sp/>set.<sp/>The<sp/>min-activation<sp/>is<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>max-activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>members<sp/>of<sp/>the<sp/>folding<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold_set<sp/>=<sp/>0;<sp/>fold_set<sp/>&lt;<sp/><ref refid="classtesseract_1_1_char_classifier_1aa00adf41e98123f259e463b037908db7" kindref="member">fold_set_cnt_</ref>;<sp/>fold_set++)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_char_classifier_1a883ce8cb0ee930611abcd061153a3be2" kindref="member">fold_set_len_</ref>[fold_set]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_prob<sp/>=<sp/>net_output_[<ref refid="classtesseract_1_1_char_classifier_1ad7acb8330f63320bb636c66d31b815dc" kindref="member">fold_sets_</ref>[fold_set][0]];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>1;<sp/>ch<sp/>&lt;<sp/><ref refid="classtesseract_1_1_char_classifier_1a883ce8cb0ee930611abcd061153a3be2" kindref="member">fold_set_len_</ref>[fold_set];<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_output_[fold_sets_[fold_set][ch]]<sp/>&gt;<sp/>max_prob)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_prob<sp/>=<sp/>net_output_[fold_sets_[fold_set][ch]];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>fold_set_len_[fold_set];<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>net_output_[fold_sets_[fold_set][ch]]<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(max_prob<sp/>*<sp/>kFoldingRatio,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_output_[fold_sets_[fold_set][ch]]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>features<sp/>of<sp/>specified<sp/>charsamp<sp/>and<sp/>feedforward<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified<sp/>nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvNetCharClassifier::RunNets(CharSamp<sp/>*char_samp)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::RunNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeuralNet<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feat_cnt<sp/>=<sp/>char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1ae28208349e3d4ad72d1013fc319adc42" kindref="member">in_cnt</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_cnt<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1abfcdf381a241c375ad4c0f77747afb6c" kindref="member">ClassCount</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>i/p<sp/>and<sp/>o/p<sp/>buffers<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_input_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>net_input_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[feat_cnt];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_input_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::RunNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>input<sp/>nodes\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>net_output_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[class_cnt];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_output_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::RunNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>output<sp/>nodes\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>input<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_char_classifier_1ab8e30443f3f9a1d1e9ca5640608a47a8" kindref="member">feat_extract_</ref>-&gt;<ref refid="classtesseract_1_1_feature_base_1a48d4dc8529d3a878e4eef08c76101c0d" kindref="member">ComputeFeatures</ref>(char_samp,<sp/>net_input_)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::RunNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>compute<sp/>features\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1a4c89b7940883fa30fc0bdf84ea678a42" kindref="member">FeedForward</ref>(net_input_,<sp/>net_output_)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::RunNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>run<sp/>feed-forward\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>Fold();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>cost<sp/>of<sp/>being<sp/>a<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a6199a4f98c310f0b2593e95e860eacfc" kindref="member">ConvNetCharClassifier::CharCost</ref>(CharSamp<sp/>*char_samp)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RunNets(char_samp)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_cube_utils_1a0983096f5ebcb35879a1e0e6038c32f8" kindref="member">CubeUtils::Prob2Cost</ref>(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>-<sp/>net_output_[0]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>classifies<sp/>a<sp/>charsamp<sp/>and<sp/>returns<sp/>an<sp/>alternate<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>chars<sp/>sorted<sp/>by<sp/>char<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">CharAltList<sp/>*<ref refid="classtesseract_1_1_conv_net_char_classifier_1a9de324fdc6f2b71fd546ad9cd281223b" kindref="member">ConvNetCharClassifier::Classify</ref>(CharSamp<sp/>*char_samp)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>needed<sp/>nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RunNets(char_samp)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_cnt<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1abfcdf381a241c375ad4c0f77747afb6c" kindref="member">ClassCount</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>altlist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>CharAltList<sp/>*alt_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CharAltList(<ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>,<sp/>class_cnt);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt_list<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>WARNING<sp/>(ConvNetCharClassifier::Classify):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;returning<sp/>emtpy<sp/>CharAltList\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>1;<sp/>out<sp/>&lt;<sp/>class_cnt;<sp/>out++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a0983096f5ebcb35879a1e0e6038c32f8" kindref="member">CubeUtils::Prob2Cost</ref>(net_output_[out]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>alt_list-&gt;Insert(out,<sp/>cost);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt_list;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>an<sp/>external<sp/>net<sp/>(for<sp/>training<sp/>purposes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a15f44fc0bf7d6dd5cdd25608a84a239b" kindref="member">ConvNetCharClassifier::SetNet</ref>(<ref refid="classtesseract_1_1_neural_net" kindref="compound">tesseract::NeuralNet</ref><sp/>*char_net)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_net_;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>char_net_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>char_net_<sp/>=<sp/>char_net;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>return<sp/>true<sp/>if<sp/>the<sp/>file<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>But<sp/>will<sp/>fail<sp/>if<sp/>the<sp/>it<sp/>did<sp/>not<sp/>pass<sp/>the<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvNetCharClassifier::LoadFoldingSets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModel<sp/>*lang_mod)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>fold_set_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fold_file_name;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>fold_file_name<sp/>=<sp/>data_file_path<sp/>+<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>fold_file_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.cube.fold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>folding<sp/>sets<sp/>are<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(fold_file_name.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fold_sets_str;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_cube_utils_1ac5c5bf284cd96f78f62f19938bec750a" kindref="member">CubeUtils::ReadFileToString</ref>(fold_file_name.c_str(),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fold_sets_str))<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>into<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>str_vec;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(fold_sets_str,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">,<sp/>&amp;str_vec);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>fold_set_cnt_<sp/>=<sp/>str_vec.size();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>fold_sets_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*[<ref refid="classtesseract_1_1_char_classifier_1aa00adf41e98123f259e463b037908db7" kindref="member">fold_set_cnt_</ref>];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fold_sets_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>fold_set_len_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="classtesseract_1_1_char_classifier_1aa00adf41e98123f259e463b037908db7" kindref="member">fold_set_cnt_</ref>];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fold_set_len_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>fold_set_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fold_set<sp/>=<sp/>0;<sp/>fold_set<sp/>&lt;<sp/><ref refid="classtesseract_1_1_char_classifier_1aa00adf41e98123f259e463b037908db7" kindref="member">fold_set_cnt_</ref>;<sp/>fold_set++)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModel<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lang_mod)-&gt;RemoveInvalidCharacters(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;str_vec[fold_set]);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>or<sp/>all<sp/>but<sp/>one<sp/>character<sp/>are<sp/>invalid,<sp/>invalidate<sp/>this<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_vec[fold_set].length()<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>WARNING<sp/>(ConvNetCharClassifier::LoadFoldingSets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalidating<sp/>folding<sp/>set<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>fold_set);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fold_set_len_[fold_set]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fold_sets_[fold_set]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>str32;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a911ee12931d18c46e7db79c6758a91cc" kindref="member">CubeUtils::UTF8ToUTF32</ref>(str_vec[fold_set].c_str(),<sp/>&amp;str32);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>fold_set_len_[fold_set]<sp/>=<sp/>str32.length();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>fold_sets_[fold_set]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[fold_set_len_[fold_set]];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fold_sets_[fold_set]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::LoadFoldingSets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>allocate<sp/>folding<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fold_set_cnt_<sp/>=<sp/>fold_set;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>fold_set_len_[fold_set];<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fold_sets_[fold_set][ch]<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1aea651f4514338d320e195c6780ffcda5" kindref="member">ClassID</ref>(str32[ch]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Init<sp/>the<sp/>classifier<sp/>provided<sp/>a<sp/>data-path<sp/>and<sp/>a<sp/>language<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvNetCharClassifier::Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModel<sp/>*lang_mod)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_char_classifier_1ac5b9df929e2570650b263f0a1504125b" kindref="member">init_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>nets<sp/>if<sp/>any.<sp/>This<sp/>function<sp/>will<sp/>return<sp/>true<sp/>if<sp/>the<sp/>net<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>exist.<sp/>But<sp/>will<sp/>fail<sp/>if<sp/>the<sp/>net<sp/>did<sp/>not<sp/>pass<sp/>the<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LoadNets(data_file_path,<sp/>lang))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>folding<sp/>sets<sp/>if<sp/>any.<sp/>This<sp/>function<sp/>will<sp/>return<sp/>true<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>does<sp/>not<sp/>exist.<sp/>But<sp/>will<sp/>fail<sp/>if<sp/>the<sp/>it<sp/>did<sp/>not<sp/>pass<sp/>the<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LoadFoldingSets(data_file_path,<sp/>lang,<sp/>lang_mod))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_classifier_1ac5b9df929e2570650b263f0a1504125b" kindref="member">init_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>classifier&apos;s<sp/>Neural<sp/>Nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>return<sp/>true<sp/>if<sp/>the<sp/>net<sp/>file<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>But<sp/>will<sp/>fail<sp/>if<sp/>the<sp/>net<sp/>did<sp/>not<sp/>pass<sp/>the<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvNetCharClassifier::LoadNets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>char_net_file;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>lang<sp/>identifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>char_net_file<sp/>=<sp/>data_file_path<sp/>+<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>char_net_file<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.cube.nn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>neural<sp/>network<sp/>is<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>fopen(char_net_file.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>main<sp/>net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>char_net_<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1aacdfeca9c810f9d8beb9438b35a8b93a" kindref="member">tesseract::NeuralNet::FromFile</ref>(char_net_file.c_str());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::LoadNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>load<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>char_net_file.c_str());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1ae28208349e3d4ad72d1013fc319adc42" kindref="member">in_cnt</ref>()!=<sp/><ref refid="classtesseract_1_1_char_classifier_1ab8e30443f3f9a1d1e9ca5640608a47a8" kindref="member">feat_extract_</ref>-&gt;<ref refid="classtesseract_1_1_feature_base_1a2ae28b0e5bc8361cac1cea91e96501e7" kindref="member">FeatureCnt</ref>())<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::LoadNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>validate<sp/>net<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>char_net_file.c_str());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alloc<sp/>net<sp/>i/o<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feat_cnt<sp/>=<sp/>char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1ae28208349e3d4ad72d1013fc319adc42" kindref="member">in_cnt</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_cnt<sp/>=<sp/><ref refid="classtesseract_1_1_char_classifier_1afbe25062436573d4a3b8c9e9936f6013" kindref="member">char_set_</ref>-&gt;<ref refid="classtesseract_1_1_char_set_1abfcdf381a241c375ad4c0f77747afb6c" kindref="member">ClassCount</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1a5f1f4f6112ccabd23612ac70df4ddd23" kindref="member">out_cnt</ref>()<sp/>!=<sp/>class_cnt)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(ConvNetCharClassifier::LoadNets):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;output<sp/>count<sp/>(%d)<sp/>and<sp/>class<sp/>count<sp/>(%d)<sp/>are<sp/>not<sp/>equal\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_net_-&gt;<ref refid="classtesseract_1_1_neural_net_1a5f1f4f6112ccabd23612ac70df4ddd23" kindref="member">out_cnt</ref>(),<sp/>class_cnt);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>i/p<sp/>and<sp/>o/p<sp/>buffers<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_input_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>net_input_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[feat_cnt];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_input_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>net_output_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[class_cnt];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_output_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/conv_net_classifier.cpp"/>
  </compounddef>
</doxygen>
