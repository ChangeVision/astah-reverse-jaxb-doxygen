<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="normalis_8cpp" kind="file">
    <compoundname>normalis.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes refid="normalis_8h" local="yes">normalis.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ocrblock_8h" local="yes">ocrblock.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includes refid="werd_8h" local="yes">werd.h</includes>
    <incdepgraph>
      <node id="8570">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="8592">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="8576">
        <label>stdlib.h</label>
      </node>
      <node id="8574">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="8575" relation="include">
        </childnode>
      </node>
      <node id="8611">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="8584" relation="include">
        </childnode>
      </node>
      <node id="8577">
        <label>allheaders.h</label>
      </node>
      <node id="8593">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
      </node>
      <node id="8580">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="8576" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8582" relation="include">
        </childnode>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8585" relation="include">
        </childnode>
      </node>
      <node id="8579">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8612">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="8613" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
      </node>
      <node id="8583">
        <label>stddef.h</label>
      </node>
      <node id="8621">
        <label>memory.h</label>
      </node>
      <node id="8584">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8617">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="8604" relation="include">
        </childnode>
        <childnode refid="8590" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
        <childnode refid="8593" relation="include">
        </childnode>
        <childnode refid="8618" relation="include">
        </childnode>
      </node>
      <node id="8575">
        <label>limits.h</label>
      </node>
      <node id="8591">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="8588" relation="include">
        </childnode>
      </node>
      <node id="8615">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8610">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8581">
        <label>string.h</label>
      </node>
      <node id="8622">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="8620" relation="include">
        </childnode>
      </node>
      <node id="8620">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="8621" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8569">
        <label>ccstruct/normalis.cpp</label>
        <link refid="normalis.cpp"/>
        <childnode refid="8570" relation="include">
        </childnode>
        <childnode refid="8571" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
        <childnode refid="8577" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8608" relation="include">
        </childnode>
      </node>
      <node id="8587">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="8588" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
        <childnode refid="8592" relation="include">
        </childnode>
        <childnode refid="8593" relation="include">
        </childnode>
        <childnode refid="8594" relation="include">
        </childnode>
      </node>
      <node id="8609">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8597">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8613">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="8614" relation="include">
        </childnode>
        <childnode refid="8615" relation="include">
        </childnode>
        <childnode refid="8609" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
        <childnode refid="8611" relation="include">
        </childnode>
        <childnode refid="8593" relation="include">
        </childnode>
      </node>
      <node id="8608">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="8595" relation="include">
        </childnode>
        <childnode refid="8609" relation="include">
        </childnode>
        <childnode refid="8610" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8611" relation="include">
        </childnode>
        <childnode refid="8612" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
      </node>
      <node id="8605">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8608" relation="include">
        </childnode>
      </node>
      <node id="8585">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="8584" relation="include">
        </childnode>
      </node>
      <node id="8614">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="8589" relation="include">
        </childnode>
        <childnode refid="8615" relation="include">
        </childnode>
      </node>
      <node id="8588">
        <label>math.h</label>
      </node>
      <node id="8586">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="8584" relation="include">
        </childnode>
      </node>
      <node id="8607">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8600">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="8588" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
      </node>
      <node id="8604">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="8601">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="8602" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8616" relation="include">
        </childnode>
      </node>
      <node id="8595">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8596" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8596">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
        <childnode refid="8597" relation="include">
        </childnode>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8592" relation="include">
        </childnode>
      </node>
      <node id="8582">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="8583" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8603">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="8604" relation="include">
        </childnode>
        <childnode refid="8590" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8590">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
      </node>
      <node id="8619">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8597" relation="include">
        </childnode>
        <childnode refid="8620" relation="include">
        </childnode>
        <childnode refid="8622" relation="include">
        </childnode>
      </node>
      <node id="8589">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8588" relation="include">
        </childnode>
        <childnode refid="8590" relation="include">
        </childnode>
        <childnode refid="8591" relation="include">
        </childnode>
      </node>
      <node id="8602">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="8582" relation="include">
        </childnode>
      </node>
      <node id="8594">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="8595" relation="include">
        </childnode>
      </node>
      <node id="8618">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="8573">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="8574" relation="include">
        </childnode>
      </node>
      <node id="8616">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8602" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8617" relation="include">
        </childnode>
        <childnode refid="8618" relation="include">
        </childnode>
      </node>
      <node id="8572">
        <label>stdio.h</label>
      </node>
      <node id="8599">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
        <childnode refid="8574" relation="include">
        </childnode>
        <childnode refid="8582" relation="include">
        </childnode>
      </node>
      <node id="8571">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8578">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8598">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="8572" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8606">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="8607" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8582" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="normalis_8cpp_1ac91e82f3b98449d7c3ff7cf58a1e5afe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CompareSegByXStart</definition>
        <argsstring>(const DENORM_SEG *a, const DENORM_SEG *b)</argsstring>
        <name>CompareSegByXStart</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" line="376" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="376" bodyend="382"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalis.cpp<sp/><sp/>(Formerly<sp/>denorm.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Code<sp/>for<sp/>the<sp/>DENORM<sp/>class.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Apr<sp/>23<sp/>09:22:43<sp/>BST<sp/>1992</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1992,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Precompiled<sp/>header<sp/>include<sp/>must<sp/>be<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normalis_8h" kindref="compound">normalis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ocrblock_8h" kindref="compound">ocrblock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="werd_8h" kindref="compound">werd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" kindref="member">DENORM::DENORM</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Abolish<sp/>all<sp/>non-default<sp/>constructors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" kindref="member">DENORM::DENORM</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling,<sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref><sp/>*src)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>x_scale_<sp/>=<sp/>y_scale_<sp/>=<sp/>scaling;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>row_<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" kindref="member">DENORM::DENORM</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>same<sp/>pieces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_m,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>line:<sp/>y<sp/>=<sp/>mx<sp/>+<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_c,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>seg_count,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>of<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref><sp/>*seg_pts,<sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>using_row,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref><sp/>*src)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>line_c;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(line_m<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>x_scale_<sp/>=<sp/>y_scale_<sp/>=<sp/>scaling;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>SetSegments(seg_pts,<sp/>seg_count);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" kindref="member">DENORM::DENORM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref><sp/>&amp;src)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>num_segs_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>segs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>rotation_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref><sp/>&amp;<sp/><ref refid="class_d_e_n_o_r_m_1a61535387765c650f10a00fb6fff66900" kindref="member">DENORM::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref><sp/>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>inverse_<sp/>=<sp/>src.inverse_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>pix_<sp/>=<sp/>src.pix_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>block_<sp/>=<sp/>src.block_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>row_<sp/>=<sp/>src.row_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.rotation_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(*src.rotation_);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>predecessor_<sp/>=<sp/>src.predecessor_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>SetSegments(src.segs_,<sp/>src.num_segs_);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>src.x_origin_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>src.y_origin_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>x_scale_<sp/>=<sp/>src.x_scale_;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>y_scale_<sp/>=<sp/>src.y_scale_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>final_xshift_<sp/>=<sp/>src.final_xshift_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>final_yshift_<sp/>=<sp/>src.final_yshift_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="class_d_e_n_o_r_m_1a66b6de714209543885007fc716d70dcf" kindref="member">DENORM::~DENORM</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>for<sp/>a<sp/>baseline<sp/>normalization.<sp/>If<sp/>there<sp/>are<sp/>segs,<sp/>then<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>used,<sp/>otherwise,<sp/>if<sp/>there<sp/>is<sp/>a<sp/>row,<sp/>that<sp/>is<sp/>used,<sp/>otherwise<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bottom<sp/>of<sp/>the<sp/>word_box<sp/>is<sp/>used<sp/>for<sp/>the<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a27f4285da29912f3c42b44ebe46c7185" kindref="member">DENORM::SetupBLNormalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>word_box,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>segs)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>/<sp/>x_height;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_origin<sp/>=<sp/>(word_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>word_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_origin<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segs<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>row<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>y_origin<sp/>=<sp/>word_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(block,<sp/>row,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>segs,<sp/>num_segs,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_origin,<sp/>y_origin,<sp/>scale,<sp/>scale,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>static_cast&lt;float&gt;(<ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>denorm<sp/>for<sp/>a<sp/>transformation.<sp/>For<sp/>details<sp/>see<sp/>the<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>comment<sp/>in<sp/>normalis.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arguments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block:<sp/>if<sp/>not<sp/>NULL,<sp/>then<sp/>this<sp/>is<sp/>the<sp/>first<sp/>transformation,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;re_rotation()<sp/>needs<sp/>to<sp/>be<sp/>used<sp/>after<sp/>the<sp/>Denorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformation<sp/>to<sp/>get<sp/>back<sp/>to<sp/>the<sp/>image<sp/>coords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>row:<sp/>if<sp/>not<sp/>NULL,<sp/>then<sp/>row-&gt;baseline(x)<sp/>is<sp/>added<sp/>to<sp/>the<sp/>y_origin,<sp/>unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>segs<sp/>is<sp/>not<sp/>NULL<sp/>and<sp/>num_segs<sp/>&gt;<sp/>0,<sp/>in<sp/>which<sp/>case<sp/>they<sp/>are<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation:<sp/>if<sp/>not<sp/>NULL,<sp/>apply<sp/>this<sp/>rotation<sp/>after<sp/>translation<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>and<sp/>scaling.<sp/>(Usually<sp/>a<sp/>classify<sp/>rotation.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>predecessor:<sp/>if<sp/>not<sp/>NULL,<sp/>then<sp/>predecessor<sp/>has<sp/>been<sp/>applied<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>space<sp/>and<sp/>needs<sp/>to<sp/>be<sp/>undone<sp/>to<sp/>complete<sp/>the<sp/>inverse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>segs:<sp/>if<sp/>not<sp/>NULL<sp/>and<sp/>num_segs<sp/>&gt;<sp/>0,<sp/>then<sp/>the<sp/>segs<sp/>provide<sp/>the<sp/>y_origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>y_scale<sp/>at<sp/>a<sp/>given<sp/>source<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>num_segs:<sp/>the<sp/>number<sp/>of<sp/>segs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>pointers<sp/>are<sp/>not<sp/>owned<sp/>by<sp/>this<sp/>DENORM<sp/>and<sp/>are<sp/>assumed<sp/>to<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>longer<sp/>than<sp/>this<sp/>denorm,<sp/>except<sp/>rotation,<sp/>which<sp/>is<sp/>deep<sp/>copied<sp/>on<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x_origin:<sp/>The<sp/>x<sp/>origin<sp/>which<sp/>will<sp/>be<sp/>mapped<sp/>to<sp/>final_xshift<sp/>in<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>y_origin:<sp/>The<sp/>y<sp/>origin<sp/>which<sp/>will<sp/>be<sp/>mapped<sp/>to<sp/>final_yshift<sp/>in<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Added<sp/>to<sp/>result<sp/>of<sp/>row-&gt;baseline(x)<sp/>if<sp/>not<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x_scale:<sp/>scale<sp/>factor<sp/>for<sp/>the<sp/>x-coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>y_scale:<sp/>scale<sp/>factor<sp/>for<sp/>the<sp/>y-coordinate.<sp/>Ignored<sp/>if<sp/>segs<sp/>is<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>these<sp/>scale<sp/>factors<sp/>apply<sp/>to<sp/>the<sp/>same<sp/>x<sp/>and<sp/>y<sp/>system<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x-origin<sp/>and<sp/>y-origin<sp/>apply,<sp/>ie<sp/>after<sp/>any<sp/>block<sp/>rotation,<sp/>but<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>rotation<sp/>argument<sp/>is<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>final_xshift:<sp/>The<sp/>x<sp/>component<sp/>of<sp/>the<sp/>final<sp/>translation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>final_yshift:<sp/>The<sp/>y<sp/>component<sp/>of<sp/>the<sp/>final<sp/>translation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">DENORM::SetupNormalization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>rotation,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>predecessor,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>segs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segs,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_origin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_origin,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_scale,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_scale,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>final_xshift,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>final_yshift)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>block_<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1aa6fdb529be1b3d0ce4849989e7d8a72f" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>row_<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1a116df350550742ddb7a905825e94d411" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(*rotation);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>predecessor_<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1ae2cd0142f7cba40b8195fa872881ad02" kindref="member">predecessor</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>SetSegments(segs,<sp/>num_segs);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>x_origin;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>y_origin;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>x_scale_<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1ab56e941803c5d7ebf34a93cb453d3c8d" kindref="member">x_scale</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>y_scale_<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" kindref="member">y_scale</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>final_xshift_<sp/>=<sp/>final_xshift;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>final_yshift_<sp/>=<sp/>final_yshift;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>given<sp/>coords<sp/>one<sp/>step<sp/>forward<sp/>to<sp/>normalized<sp/>space,<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>any<sp/>block<sp/>rotation<sp/>or<sp/>predecessor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" kindref="member">DENORM::LocalNormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>pt,<sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>transformed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>src_pt(pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>float_result;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" kindref="member">LocalNormTransform</ref>(src_pt,<sp/>&amp;float_result);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" kindref="member">DENORM::LocalNormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>pt,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>transformed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>translated(pt.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>-<sp/>x_origin_,<sp/>pt.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>-<sp/>YOriginAtOrigX(pt.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>translated.set_x(translated.x()<sp/>*<sp/>x_scale_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>translated.set_y(translated.y()<sp/>*<sp/>YScaleAtOrigX(pt.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>translated.rotate(*rotation_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(translated.x()<sp/>+<sp/>final_xshift_);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(translated.y()<sp/>+<sp/>final_yshift_);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>given<sp/>coords<sp/>forward<sp/>to<sp/>normalized<sp/>space<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>full<sp/>transformation<sp/>sequence<sp/>defined<sp/>by<sp/>the<sp/>block<sp/>rotation,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>predecessors,<sp/>deepest<sp/>first,<sp/>and<sp/>finally<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" kindref="member">DENORM::NormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>pt,<sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>transformed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>src_pt(pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>float_result;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" kindref="member">NormTransform</ref>(src_pt,<sp/>&amp;float_result);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>transformed-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" kindref="member">DENORM::NormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>pt,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>transformed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>src_pt(pt);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predecessor_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>predecessor_-&gt;<ref refid="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" kindref="member">NormTransform</ref>(pt,<sp/>&amp;src_pt);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>fwd_rotation(block_-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>().<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>-block_-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>().<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>src_pt.<ref refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" kindref="member">rotate</ref>(fwd_rotation);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" kindref="member">LocalNormTransform</ref>(src_pt,<sp/>transformed);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>given<sp/>coords<sp/>one<sp/>step<sp/>back<sp/>to<sp/>source<sp/>space,<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>to<sp/>any<sp/>block<sp/>rotation<sp/>or<sp/>predecessor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" kindref="member">DENORM::LocalDenormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>pt,<sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>original)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>src_pt(pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>float_result;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" kindref="member">LocalDenormTransform</ref>(src_pt,<sp/>&amp;float_result);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" kindref="member">DENORM::LocalDenormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>pt,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>original)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>rotated(pt.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>-<sp/>final_xshift_,<sp/>pt.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>-<sp/>final_yshift_);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>inverse_rotation(rotation_-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>-rotation_-&gt;<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>rotated.<ref refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" kindref="member">rotate</ref>(inverse_rotation);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(rotated.x()<sp/>/<sp/>x_scale_<sp/>+<sp/>x_origin_);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_scale<sp/>=<sp/>y_scale_;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segs_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>y_scale<sp/>=<sp/>YScaleAtOrigX(original-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(rotated.y()<sp/>/<sp/>y_scale<sp/>+<sp/>YOriginAtOrigX(original-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>given<sp/>coords<sp/>all<sp/>the<sp/>way<sp/>back<sp/>to<sp/>source<sp/>image<sp/>space<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>full<sp/>transformation<sp/>sequence<sp/>defined<sp/>by<sp/>this<sp/>and<sp/>its<sp/>predecesors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recursively,<sp/>shallowest<sp/>first,<sp/>and<sp/>finally<sp/>any<sp/>block<sp/>re_rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DENORM::DenormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>pt,<sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>original)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>src_pt(pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>float_result;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(src_pt,<sp/>&amp;float_result);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>original-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(float_result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DENORM::DenormTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>pt,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>original)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" kindref="member">LocalDenormTransform</ref>(pt,<sp/>original);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predecessor_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>predecessor_-&gt;<ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(*original,<sp/>original);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>original-&gt;<ref refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" kindref="member">rotate</ref>(block_-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>a<sp/>blob<sp/>using<sp/>blob<sp/>transformations.<sp/>Less<sp/>accurate,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>more<sp/>accurately<sp/>copies<sp/>the<sp/>old<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a839db5a7d3cea12c736dcea5e42c16b0" kindref="member">DENORM::LocalNormBlob</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_center<sp/>=<sp/>(blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>blob_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>translation(-<ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(x_origin_),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(YOriginAtOrigX(x_center)));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a2791f69f39f81c9e350abca4bb3fa87d" kindref="member">Move</ref>(translation);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>old<sp/>way<sp/>of<sp/>scaling<sp/>only<sp/>allowed<sp/>for<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>YScaleAtOrigX(x_center);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1ab4ca2b4e8d967347a522e77d27a7cda7" kindref="member">Scale</ref>(scale);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a6265072e245d6cc1ba1d03f1f1780145" kindref="member">Rotate</ref>(*rotation_);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>translation.set_x(<ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(final_xshift_));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>translation.set_y(<ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(final_yshift_));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a2791f69f39f81c9e350abca4bb3fa87d" kindref="member">Move</ref>(translation);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fills<sp/>in<sp/>the<sp/>x-height<sp/>range<sp/>accepted<sp/>by<sp/>the<sp/>given<sp/>unichar_id,<sp/>given<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>in<sp/>the<sp/>usual<sp/>baseline-normalized<sp/>coordinates,<sp/>with<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>initial<sp/>crude<sp/>x-height<sp/>estimate<sp/>(such<sp/>as<sp/>word<sp/>size)<sp/>and<sp/>this<sp/>denoting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transformation<sp/>that<sp/>was<sp/>used.<sp/>Returns<sp/>false,<sp/>and<sp/>an<sp/>empty<sp/>range<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bottom<sp/>is<sp/>a<sp/>mis-fit.<sp/>Returns<sp/>true<sp/>and<sp/>empty<sp/>[0,<sp/>0]<sp/>range<sp/>if<sp/>the<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fits,<sp/>but<sp/>the<sp/>top<sp/>is<sp/>impossible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m_1a5b886acd9e1220ff409268e007adffe1" kindref="member">DENORM::XHeightRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>bbox,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>*<sp/>min_xht,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>*<sp/>max_xht)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>the<sp/>top<sp/>and<sp/>bottom<sp/>to<sp/>the<sp/>limit<sp/>of<sp/>normalized<sp/>feature<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>ClipToRange&lt;int&gt;(bbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>0,<sp/><ref refid="normalis_8h_1af0751b110da1f0bbd3068aa0d7eac955" kindref="member">kBlnCellHeight</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>ClipToRange&lt;int&gt;(bbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>0,<sp/><ref refid="normalis_8h_1af0751b110da1f0bbd3068aa0d7eac955" kindref="member">kBlnCellHeight</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>tolerance<sp/>of<sp/>yscale<sp/>corresponds<sp/>to<sp/>1<sp/>pixel<sp/>in<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance<sp/>=<sp/><ref refid="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" kindref="member">y_scale</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af2e0d12e80aa3aa985652d73eaf1e95f" kindref="member">get_top_bottom</ref>(unichar_id,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>returns<sp/>indicate<sp/>a<sp/>mis-fit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>*min_xht<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>*max_xht<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Chars<sp/>with<sp/>a<sp/>misfitting<sp/>bottom<sp/>might<sp/>be<sp/>sub/superscript/dropcap,<sp/>or<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>be<sp/>wrongly<sp/>classified.<sp/>Return<sp/>an<sp/>empty<sp/>range<sp/>so<sp/>they<sp/>have<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>good<sp/>to<sp/>be<sp/>considered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom<sp/>&lt;<sp/>min_bottom<sp/>-<sp/>tolerance<sp/>||<sp/>bottom<sp/>&gt;<sp/>max_bottom<sp/>+<sp/>tolerance)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>help<sp/>very<sp/>high<sp/>cap/xheight<sp/>ratio<sp/>fonts<sp/>accept<sp/>the<sp/>correct<sp/>x-height,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>to<sp/>allow<sp/>the<sp/>large<sp/>caps<sp/>in<sp/>small<sp/>caps<sp/>to<sp/>accept<sp/>the<sp/>xheight<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>caps,<sp/>add<sp/>kBlnBaselineOffset<sp/>to<sp/>chars<sp/>with<sp/>a<sp/>maximum<sp/>max.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_top<sp/>==<sp/><ref refid="normalis_8h_1af0751b110da1f0bbd3068aa0d7eac955" kindref="member">kBlnCellHeight</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>max_top<sp/>+=<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>top<sp/>-<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_height<sp/>=<sp/>min_top<sp/>-<sp/>kBlnBaselineOffset<sp/>-<sp/>tolerance;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_height<sp/>=<sp/>max_top<sp/>-<sp/>kBlnBaselineOffset<sp/>+<sp/>tolerance;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_height<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>&lt;=<sp/>0<sp/>||<sp/>max_height<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*max_xht<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Anything<sp/>will<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(height<sp/>*<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>/<sp/><ref refid="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" kindref="member">y_scale</ref>()<sp/>/<sp/>min_height);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>*max_xht<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(result,<sp/>0,<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_height<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>height<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(height<sp/>*<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>/<sp/><ref refid="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" kindref="member">y_scale</ref>()<sp/>/<sp/>max_height);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_xht<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(result,<sp/>0,<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==============<sp/>Private<sp/>Code<sp/>======================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Free<sp/>allocated<sp/>memory<sp/>and<sp/>clear<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DENORM::Clear()<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segs_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>segs_;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>segs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>num_segs_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rotation_;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DENORM::Init()<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>inverse_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>pix_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>block_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>row_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>rotation_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>predecessor_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>segs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>num_segs_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>x_scale_<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>y_scale_<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>final_xshift_<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>final_yshift_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>y-origin<sp/>at<sp/>the<sp/>original<sp/>(un-normalized)<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>DENORM::YOriginAtOrigX(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig_x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segs_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>seg<sp/>=<sp/>BinarySearchSegment(orig_x);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1adc44d075bcf313a8c5cdf2ec690fdf96" kindref="member">ycoord</ref><sp/>!=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1adc44d075bcf313a8c5cdf2ec690fdf96" kindref="member">ycoord</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row_-&gt;<ref refid="class_r_o_w_1a097b3543fa3ca5768eb50033d4c4db9c" kindref="member">base_line</ref>(orig_x)<sp/>+<sp/>y_origin_;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y_origin_;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>y-scale<sp/>at<sp/>the<sp/>original<sp/>(un-normalized)<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>DENORM::YScaleAtOrigX(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig_x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_segs_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>seg<sp/>=<sp/>BinarySearchSegment(orig_x);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a0c2c79c4f8220b6872b20eb58b0c5c18" kindref="member">scale_factor</ref><sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a0c2c79c4f8220b6872b20eb58b0c5c18" kindref="member">scale_factor</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y_scale_;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compare<sp/>two<sp/>segments<sp/>by<sp/>xstart<sp/>for<sp/>use<sp/>with<sp/>qsort(3)<sp/>and<sp/>bsearch(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CompareSegByXStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a7e1cdd1b16c058a1228700f013c2efda" kindref="member">xstart</ref><sp/>&lt;<sp/>b-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a7e1cdd1b16c058a1228700f013c2efda" kindref="member">xstart</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a7e1cdd1b16c058a1228700f013c2efda" kindref="member">xstart</ref><sp/>&gt;<sp/>b-&gt;<ref refid="class_d_e_n_o_r_m___s_e_g_1a7e1cdd1b16c058a1228700f013c2efda" kindref="member">xstart</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>the<sp/>array<sp/>of<sp/>segments<sp/>for<sp/>use<sp/>as<sp/>a<sp/>y_origin<sp/>and<sp/>y_scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DENORM::SetSegments(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>new_segs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_count)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segs_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>segs_;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>segs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>[seg_count];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(segs_,<sp/>new_segs,<sp/>seg_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(new_segs[0]));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>possible,<sp/>if<sp/>infrequent<sp/>that<sp/>the<sp/>segments<sp/>may<sp/>be<sp/>out<sp/>of<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>are<sp/>searching<sp/>with<sp/>a<sp/>binary<sp/>search,<sp/>keep<sp/>them<sp/>in<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(segs_,<sp/>num_segs_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(segs_[0]),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*)(</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CompareSegByXStart));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>num_segs_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>segs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>appropriate<sp/>segment<sp/>for<sp/>a<sp/>given<sp/>original<sp/>x-coord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>DENORM::BinarySearchSegment(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig_x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom,<sp/>top,<sp/>middle;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>top<sp/>=<sp/>num_segs_;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>middle<sp/>=<sp/>(bottom<sp/>+<sp/>top)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segs_[middle].xstart<sp/>&gt;<sp/>orig_x)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>middle;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>middle;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(top<sp/>-<sp/>bottom<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;segs_[bottom];</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp"/>
  </compounddef>
</doxygen>
