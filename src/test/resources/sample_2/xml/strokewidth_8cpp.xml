<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="strokewidth_8cpp" kind="file">
    <compoundname>strokewidth.cpp</compoundname>
    <includes refid="strokewidth_8h" local="yes">strokewidth.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="colpartition_8h" local="yes">colpartition.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="imagefind_8h" local="yes">imagefind.h</includes>
    <includes refid="linlsq_8h" local="yes">linlsq.h</includes>
    <includes refid="statistc_8h" local="yes">statistc.h</includes>
    <includes refid="tabfind_8h" local="yes">tabfind.h</includes>
    <includes refid="textlineprojection_8h" local="yes">textlineprojection.h</includes>
    <includes refid="tordmain_8h" local="yes">tordmain.h</includes>
    <incdepgraph>
      <node id="39193">
        <label>strokewidth.h</label>
        <link refid="strokewidth_8h"/>
        <childnode refid="39194" relation="include">
        </childnode>
        <childnode refid="39240" relation="include">
        </childnode>
        <childnode refid="39243" relation="include">
        </childnode>
        <childnode refid="39250" relation="include">
        </childnode>
      </node>
      <node id="39194">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="39195" relation="include">
        </childnode>
        <childnode refid="39208" relation="include">
        </childnode>
        <childnode refid="39209" relation="include">
        </childnode>
        <childnode refid="39232" relation="include">
        </childnode>
        <childnode refid="39239" relation="include">
        </childnode>
      </node>
      <node id="39247">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="39240" relation="include">
        </childnode>
        <childnode refid="39195" relation="include">
        </childnode>
        <childnode refid="39223" relation="include">
        </childnode>
        <childnode refid="39208" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39241" relation="include">
        </childnode>
      </node>
      <node id="39214">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="39241">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="39195" relation="include">
        </childnode>
        <childnode refid="39219" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
        <childnode refid="39242" relation="include">
        </childnode>
      </node>
      <node id="39239">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39197" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
      </node>
      <node id="39201">
        <label>stdlib.h</label>
      </node>
      <node id="39198">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="39199" relation="include">
        </childnode>
      </node>
      <node id="39217">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="39205" relation="include">
        </childnode>
      </node>
      <node id="39242">
        <label>allheaders.h</label>
      </node>
      <node id="39227">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
      </node>
      <node id="39200">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="39201" relation="include">
        </childnode>
        <childnode refid="39202" relation="include">
        </childnode>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39203" relation="include">
        </childnode>
        <childnode refid="39205" relation="include">
        </childnode>
        <childnode refid="39206" relation="include">
        </childnode>
      </node>
      <node id="39195">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39197" relation="include">
        </childnode>
        <childnode refid="39200" relation="include">
        </childnode>
        <childnode refid="39207" relation="include">
        </childnode>
      </node>
      <node id="39218">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="39219" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
      </node>
      <node id="39204">
        <label>stddef.h</label>
      </node>
      <node id="39205">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="39197" relation="include">
        </childnode>
      </node>
      <node id="39237">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="39235" relation="include">
        </childnode>
        <childnode refid="39223" relation="include">
        </childnode>
        <childnode refid="39221" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
        <childnode refid="39238" relation="include">
        </childnode>
      </node>
      <node id="39199">
        <label>limits.h</label>
      </node>
      <node id="39246">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="39241" relation="include">
        </childnode>
        <childnode refid="39194" relation="include">
        </childnode>
        <childnode refid="39215" relation="include">
        </childnode>
        <childnode refid="39247" relation="include">
        </childnode>
      </node>
      <node id="39224">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="39222" relation="include">
        </childnode>
      </node>
      <node id="39225">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="39221" relation="include">
        </childnode>
      </node>
      <node id="39208">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39197" relation="include">
        </childnode>
        <childnode refid="39200" relation="include">
        </childnode>
        <childnode refid="39207" relation="include">
        </childnode>
      </node>
      <node id="39202">
        <label>string.h</label>
      </node>
      <node id="39250">
        <label>textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="39240" relation="include">
        </childnode>
      </node>
      <node id="39192">
        <label>textord/strokewidth.cpp</label>
        <link refid="strokewidth.cpp"/>
        <childnode refid="39193" relation="include">
        </childnode>
        <childnode refid="39222" relation="include">
        </childnode>
        <childnode refid="39194" relation="include">
        </childnode>
        <childnode refid="39244" relation="include">
        </childnode>
        <childnode refid="39243" relation="include">
        </childnode>
        <childnode refid="39251" relation="include">
        </childnode>
        <childnode refid="39252" relation="include">
        </childnode>
        <childnode refid="39239" relation="include">
        </childnode>
        <childnode refid="39245" relation="include">
        </childnode>
        <childnode refid="39250" relation="include">
        </childnode>
        <childnode refid="39253" relation="include">
        </childnode>
      </node>
      <node id="39226">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="39222" relation="include">
        </childnode>
        <childnode refid="39221" relation="include">
        </childnode>
        <childnode refid="39214" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
        <childnode refid="39228" relation="include">
        </childnode>
      </node>
      <node id="39216">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="39197" relation="include">
        </childnode>
      </node>
      <node id="39248">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="39212">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="39197" relation="include">
        </childnode>
      </node>
      <node id="39243">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="39241" relation="include">
        </childnode>
        <childnode refid="39244" relation="include">
        </childnode>
        <childnode refid="39249" relation="include">
        </childnode>
      </node>
      <node id="39219">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="39220" relation="include">
        </childnode>
        <childnode refid="39225" relation="include">
        </childnode>
        <childnode refid="39216" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39217" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
      </node>
      <node id="39209">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="39210" relation="include">
        </childnode>
        <childnode refid="39216" relation="include">
        </childnode>
        <childnode refid="39208" relation="include">
        </childnode>
        <childnode refid="39215" relation="include">
        </childnode>
        <childnode refid="39217" relation="include">
        </childnode>
        <childnode refid="39218" relation="include">
        </childnode>
        <childnode refid="39229" relation="include">
        </childnode>
      </node>
      <node id="39229">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39230" relation="include">
        </childnode>
        <childnode refid="39209" relation="include">
        </childnode>
      </node>
      <node id="39206">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="39205" relation="include">
        </childnode>
      </node>
      <node id="39252">
        <label>linlsq.h</label>
        <link refid="linlsq_8h"/>
        <childnode refid="39221" relation="include">
        </childnode>
        <childnode refid="39210" relation="include">
        </childnode>
      </node>
      <node id="39245">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="39246" relation="include">
        </childnode>
        <childnode refid="39212" relation="include">
        </childnode>
        <childnode refid="39247" relation="include">
        </childnode>
        <childnode refid="39248" relation="include">
        </childnode>
      </node>
      <node id="39254">
        <label>time.h</label>
      </node>
      <node id="39222">
        <label>math.h</label>
      </node>
      <node id="39220">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="39221" relation="include">
        </childnode>
        <childnode refid="39225" relation="include">
        </childnode>
      </node>
      <node id="39207">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="39205" relation="include">
        </childnode>
      </node>
      <node id="39253">
        <label>tordmain.h</label>
        <link refid="tordmain_8h"/>
        <childnode refid="39254" relation="include">
        </childnode>
        <childnode refid="39210" relation="include">
        </childnode>
        <childnode refid="39232" relation="include">
        </childnode>
        <childnode refid="39255" relation="include">
        </childnode>
        <childnode refid="39194" relation="include">
        </childnode>
        <childnode refid="39257" relation="include">
        </childnode>
      </node>
      <node id="39231">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="39221" relation="include">
        </childnode>
      </node>
      <node id="39256">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="39222" relation="include">
        </childnode>
        <childnode refid="39255" relation="include">
        </childnode>
      </node>
      <node id="39235">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="39232">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="39233" relation="include">
        </childnode>
        <childnode refid="39234" relation="include">
        </childnode>
        <childnode refid="39229" relation="include">
        </childnode>
        <childnode refid="39236" relation="include">
        </childnode>
      </node>
      <node id="39210">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39211" relation="include">
        </childnode>
        <childnode refid="39215" relation="include">
        </childnode>
      </node>
      <node id="39211">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39201" relation="include">
        </childnode>
        <childnode refid="39212" relation="include">
        </childnode>
        <childnode refid="39205" relation="include">
        </childnode>
        <childnode refid="39213" relation="include">
        </childnode>
        <childnode refid="39214" relation="include">
        </childnode>
      </node>
      <node id="39203">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="39204" relation="include">
        </childnode>
        <childnode refid="39197" relation="include">
        </childnode>
      </node>
      <node id="39240">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="39241" relation="include">
        </childnode>
        <childnode refid="39194" relation="include">
        </childnode>
      </node>
      <node id="39234">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="39235" relation="include">
        </childnode>
        <childnode refid="39223" relation="include">
        </childnode>
        <childnode refid="39215" relation="include">
        </childnode>
      </node>
      <node id="39223">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39197" relation="include">
        </childnode>
        <childnode refid="39200" relation="include">
        </childnode>
        <childnode refid="39207" relation="include">
        </childnode>
      </node>
      <node id="39244">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="39241" relation="include">
        </childnode>
        <childnode refid="39194" relation="include">
        </childnode>
        <childnode refid="39214" relation="include">
        </childnode>
        <childnode refid="39232" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39227" relation="include">
        </childnode>
        <childnode refid="39245" relation="include">
        </childnode>
        <childnode refid="39247" relation="include">
        </childnode>
      </node>
      <node id="39251">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="39197" relation="include">
        </childnode>
      </node>
      <node id="39221">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39222" relation="include">
        </childnode>
        <childnode refid="39223" relation="include">
        </childnode>
        <childnode refid="39224" relation="include">
        </childnode>
      </node>
      <node id="39257">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="39233">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="39203" relation="include">
        </childnode>
      </node>
      <node id="39228">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="39210" relation="include">
        </childnode>
      </node>
      <node id="39238">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="39197">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="39198" relation="include">
        </childnode>
      </node>
      <node id="39236">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="39195" relation="include">
        </childnode>
        <childnode refid="39233" relation="include">
        </childnode>
        <childnode refid="39215" relation="include">
        </childnode>
        <childnode refid="39237" relation="include">
        </childnode>
        <childnode refid="39238" relation="include">
        </childnode>
      </node>
      <node id="39249">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="39244" relation="include">
        </childnode>
        <childnode refid="39211" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39247" relation="include">
        </childnode>
      </node>
      <node id="39196">
        <label>stdio.h</label>
      </node>
      <node id="39215">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39202" relation="include">
        </childnode>
        <childnode refid="39198" relation="include">
        </childnode>
        <childnode refid="39203" relation="include">
        </childnode>
      </node>
      <node id="39255">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="39195" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
        <childnode refid="39256" relation="include">
        </childnode>
      </node>
      <node id="39213">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="39196" relation="include">
        </childnode>
        <childnode refid="39202" relation="include">
        </childnode>
      </node>
      <node id="39230">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="39231" relation="include">
        </childnode>
        <childnode refid="39200" relation="include">
        </childnode>
        <childnode refid="39203" relation="include">
        </childnode>
        <childnode refid="39226" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strokewidth.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Subclass<sp/>of<sp/>BBGrid<sp/>to<sp/>find<sp/>uniformity<sp/>of<sp/>strokewidth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Mar<sp/>31<sp/>16:17:01<sp/>PST<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strokewidth_8h" kindref="compound">strokewidth.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartition_8h" kindref="compound">colpartition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagefind_8h" kindref="compound">imagefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linlsq_8h" kindref="compound">linlsq.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistc_8h" kindref="compound">statistc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabfind_8h" kindref="compound">tabfind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textlineprojection_8h" kindref="compound">textlineprojection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tordmain_8h" kindref="compound">tordmain.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>SetBlobStrokeWidth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="namespacetesseract_1a203119da6300ca7502a76b8eb15ea27e" kindref="member">INT_VAR</ref>(textord_tabfind_show_strokewidths,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>stroke<sp/>widths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_only_strokewidths,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>run<sp/>stroke<sp/>widths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_vertical_text,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>vertical<sp/>detection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_force_vertical_text,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>using<sp/>vertical<sp/>text<sp/>page<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_vertical_horizontal_mix,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;find<sp/>horizontal<sp/>lines<sp/>such<sp/>as<sp/>headers<sp/>in<sp/>vertical<sp/>page<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="namespacetesseract_1a9539ddbb56bbf8225df264cef0d86417" kindref="member">double_VAR</ref>(textord_tabfind_vertical_text_ratio,<sp/>0.5,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fraction<sp/>of<sp/>textlines<sp/>deemed<sp/>vertical<sp/>to<sp/>use<sp/>vertical<sp/>page<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abc28700fa5d19f82a78db318450d7786" kindref="member">kStrokeWidthFractionTolerance</ref><sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="61"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5d1f89502955a97f3986e480f45d11ac" kindref="member">kStrokeWidthTolerance</ref><sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Same<sp/>but<sp/>for<sp/>CJK<sp/>we<sp/>are<sp/>a<sp/>bit<sp/>more<sp/>generous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abd67e80f3588f9bbf627ae8b21494513" kindref="member">kStrokeWidthFractionCJK</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ad4cf0379178f03e5f1fc982c6e12a7a3" kindref="member">kStrokeWidthCJK</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Radius<sp/>in<sp/>grid<sp/>cells<sp/>of<sp/>search<sp/>for<sp/>broken<sp/>CJK.<sp/>Doesn&apos;t<sp/>need<sp/>to<sp/>be<sp/>very</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>large<sp/>as<sp/>the<sp/>grid<sp/>size<sp/>should<sp/>be<sp/>about<sp/>the<sp/>size<sp/>of<sp/>a<sp/>character<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a73ac9428eb90511e5627135347d561e2" kindref="member">kCJKRadius</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>distance<sp/>fraction<sp/>of<sp/>size<sp/>to<sp/>join<sp/>close<sp/>but<sp/>broken<sp/>CJK<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a39569c92bdfdb4178deaac42d588f830" kindref="member">kCJKBrokenDistanceFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>components<sp/>in<sp/>a<sp/>broken<sp/>CJK<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a308c19587dfea876b3291916f10443ec" kindref="member">kCJKMaxComponents</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>aspect<sp/>ratio<sp/>of<sp/>CJK<sp/>broken<sp/>characters<sp/>when<sp/>put<sp/>back<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" kindref="member">kCJKAspectRatio</ref><sp/>=<sp/>1.25;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>increase<sp/>in<sp/>aspect<sp/>ratio<sp/>of<sp/>CJK<sp/>broken<sp/>characters<sp/>when<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a62516d3e478bcfb239d046da287150b3" kindref="member">kCJKAspectRatioIncrease</ref><sp/>=<sp/>1.0625;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>multiple<sp/>of<sp/>the<sp/>grid<sp/>size<sp/>that<sp/>will<sp/>be<sp/>used<sp/>in<sp/>computing<sp/>median<sp/>CJKsize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa44aa93b17b5967315a229c1b1ed1f31" kindref="member">kMaxCJKSizeRatio</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>fraction<sp/>of<sp/>blobs<sp/>broken<sp/>CJK<sp/>to<sp/>iterate<sp/>and<sp/>run<sp/>it<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a93725c4be688b102564ecc9ef6642366" kindref="member">kBrokenCJKIterationFraction</ref><sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>gridsize<sp/>as<sp/>x-padding<sp/>for<sp/>a<sp/>search<sp/>box<sp/>for<sp/>diacritic<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aabf5756c7e5d355517dc1af5df71e750" kindref="member">kDiacriticXPadRatio</ref><sp/>=<sp/>7.0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>gridsize<sp/>as<sp/>y-padding<sp/>for<sp/>a<sp/>search<sp/>box<sp/>for<sp/>diacritic<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1adfd3b22e2049d8d544208834da403031" kindref="member">kDiacriticYPadRatio</ref><sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>multiple<sp/>of<sp/>diacritic<sp/>height<sp/>that<sp/>a<sp/>neighbour<sp/>must<sp/>be<sp/>to<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>convincing<sp/>base<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3883c045452c59e5a80bd9ed73cd9e6f" kindref="member">kMinDiacriticSizeRatio</ref><sp/>=<sp/>1.0625;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>multiple<sp/>of<sp/>a<sp/>textline&apos;s<sp/>median<sp/>height<sp/>as<sp/>a<sp/>threshold<sp/>for<sp/>the<sp/>sum<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>diacritic&apos;s<sp/>farthest<sp/>x<sp/>and<sp/>y<sp/>distances<sp/>(gap<sp/>+<sp/>size).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a140f97b7a02095877cba6ffaf66edc32" kindref="member">kMaxDiacriticDistanceRatio</ref><sp/>=<sp/>1.25;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>x-gap<sp/>between<sp/>a<sp/>diacritic<sp/>and<sp/>its<sp/>base<sp/>char<sp/>as<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>base<sp/>char<sp/>(allowing<sp/>other<sp/>blobs<sp/>to<sp/>fill<sp/>the<sp/>gap.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aaf71279184a5815428ada7f1b3fa5d5c" kindref="member">kMaxDiacriticGapToBaseCharHeight</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Radius<sp/>of<sp/>a<sp/>search<sp/>for<sp/>diacritics<sp/>in<sp/>grid<sp/>units.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa272bbcbb5d0b8dad555f86a29a1a133" kindref="member">kSearchRadius</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ratio<sp/>between<sp/>longest<sp/>side<sp/>of<sp/>a<sp/>line<sp/>and<sp/>longest<sp/>side<sp/>of<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(neighbor_min<sp/>&gt;<sp/>blob_min<sp/>*<sp/>kLineTrapShortest<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>neighbor_max<sp/>&lt;<sp/>blob_max<sp/>/<sp/>kLineTrapLongest)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>neighbor<sp/>is<sp/>a<sp/>grapheme<sp/>and<sp/>blob<sp/>is<sp/>a<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3d9a4df05c442729540b7459fbec462c" kindref="member">kLineTrapLongest</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ratio<sp/>between<sp/>shortest<sp/>side<sp/>of<sp/>a<sp/>line<sp/>and<sp/>shortest<sp/>side<sp/>of<sp/>a<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ab34b32a5ea90db86801786f0f8a83997" kindref="member">kLineTrapShortest</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>aspect<sp/>ratio<sp/>of<sp/>the<sp/>total<sp/>box<sp/>before<sp/>CountNeighbourGaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decides<sp/>immediately<sp/>based<sp/>on<sp/>the<sp/>aspect<sp/>ratio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afba5db6e43d5f018b1c6bb6dfa43e488" kindref="member">kMostlyOneDirRatio</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspect<sp/>ratio<sp/>for<sp/>a<sp/>blob<sp/>to<sp/>be<sp/>considered<sp/>as<sp/>line<sp/>residue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a84872b3032afddbed37888802b109b56" kindref="member">kLineResidueAspectRatio</ref><sp/>=<sp/>8.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Padding<sp/>ratio<sp/>for<sp/>line<sp/>residue<sp/>search<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1a706351c04a309beaf8be435136baac" kindref="member">kLineResiduePadRatio</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>multiple<sp/>of<sp/>neighbour<sp/>size<sp/>for<sp/>a<sp/>line<sp/>residue<sp/>to<sp/>be<sp/>genuine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aad875f37920782a2a2e7acedceefb20f" kindref="member">kLineResidueSizeRatio</ref><sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspect<sp/>ratio<sp/>filter<sp/>for<sp/>OSD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af750de0df296b9b48c485e2ec4bb283c" kindref="member">kSizeRatioToReject</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>normal<sp/>blobs<sp/>a<sp/>large<sp/>blob<sp/>may<sp/>overlap<sp/>before<sp/>it<sp/>is<sp/>rejected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>determined<sp/>to<sp/>be<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a349538464d5316e5854eee5dba4bf38e" kindref="member">kMaxLargeOverlaps</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expansion<sp/>factor<sp/>for<sp/>search<sp/>box<sp/>for<sp/>good<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a746b69b4c2ec2f296100ebfaf15b2e2b" kindref="member">kNeighbourSearchFactor</ref><sp/>=<sp/>2.5;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="classtesseract_1_1_stroke_width_1a4551a10f256b1df74832b53b8f0e33b2" kindref="member">StrokeWidth::StrokeWidth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>:<sp/>BlobGrid(gridsize,<sp/>bleft,<sp/>tright),<sp/>nontext_map_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>projection_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>grid_box_(bleft,<sp/>tright),<sp/>rerotation_(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>leaders_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>widths_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>initial_widths_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>chains_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>diacritics_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>textlines_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>smoothed_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">StrokeWidth::~StrokeWidth()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(widths_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>widths_win_-&gt;AwaitEvent(<ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0adbe9fb2ca110dbf1b838d845d32a89e7" kindref="member">SVET_DESTROY</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_only_strokewidths)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>widths_win_;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>leaders_win_;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>initial_widths_win_;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>chains_win_;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>textlines_win_;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>smoothed_win_;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>diacritics_win_;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbours<sp/>member<sp/>of<sp/>the<sp/>medium-sized<sp/>blobs<sp/>in<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Searches<sp/>on<sp/>4<sp/>sides<sp/>of<sp/>each<sp/>blob<sp/>for<sp/>similar-sized,<sp/>similar-strokewidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blobs<sp/>and<sp/>sets<sp/>pointers<sp/>to<sp/>the<sp/>good<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::SetNeighboursOnMediumBlobs(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>preliminary<sp/>strokewidth<sp/>neighbour<sp/>detection<sp/>on<sp/>the<sp/>medium<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNeighbours(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>blob_it.data());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbour/textline<sp/>writing<sp/>direction<sp/>members<sp/>of<sp/>the<sp/>medium</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>large<sp/>blobs<sp/>with<sp/>optional<sp/>repair<sp/>of<sp/>broken<sp/>CJK<sp/>characters<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Repair<sp/>of<sp/>broken<sp/>CJK<sp/>is<sp/>needed<sp/>here<sp/>because<sp/>broken<sp/>CJK<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>fool<sp/>the<sp/>textline<sp/>direction<sp/>detection<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindTextlineDirectionAndFixBrokenCJK(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cjk_merge,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>grid<sp/>with<sp/>the<sp/>remaining<sp/>(non-noise)<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>InsertBlobs(input_block);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repair<sp/>broken<sp/>CJK<sp/>characters<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cjk_merge<sp/>&amp;&amp;<sp/>FixBrokenCJK(input_block));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Grade<sp/>blobs<sp/>by<sp/>inspection<sp/>of<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>FindTextlineFlowDirection(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>grid<sp/>ready<sp/>for<sp/>rotation<sp/>or<sp/>leader<sp/>finding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>collect<sp/>and<sp/>count<sp/>horizontal<sp/>and<sp/>vertical<sp/>blobs<sp/>from<sp/>a<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CollectHorizVertBlobs(BLOBNBOX_LIST*<sp/>input_blobs,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>num_vertical_blobs,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>num_horizontal_blobs,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>vertical_blobs,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>horizontal_blobs,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>nondescript_blobs)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>v_it(vertical_blobs);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>h_it(horizontal_blobs);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>n_it(nondescript_blobs);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(input_blobs);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>/<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_y<sp/>=<sp/>1.0f<sp/>/<sp/>y_x;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>a<sp/>&gt;=<sp/>1.0<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratio<sp/>=<sp/>x_y<sp/>&gt;<sp/>y_x<sp/>?<sp/>x_y<sp/>:<sp/>y_x;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>aspect<sp/>ratio<sp/>is<sp/>small<sp/>and<sp/>we<sp/>want<sp/>them<sp/>for<sp/>osd,<sp/>save<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok_blob<sp/>=<sp/>ratio<sp/>&lt;=<sp/><ref refid="osdetect_8cpp_1ac23eec99b25d1c109fb6ee2590a331bf" kindref="member">kSizeRatioToReject</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*num_vertical_blobs;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_blob)<sp/>v_it.add_after_then_move(blob);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*num_horizontal_blobs;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_blob)<sp/>h_it.add_after_then_move(blob);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_blob)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_it.add_after_then_move(blob);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Types<sp/>all<sp/>the<sp/>blobs<sp/>as<sp/>vertical<sp/>or<sp/>horizontal<sp/>text<sp/>or<sp/>unknown<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>majority<sp/>are<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>blobs<sp/>are<sp/>rotated,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>call<sp/>CorrectForRotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>after<sp/>rotating<sp/>everything,<sp/>otherwise<sp/>the<sp/>work<sp/>done<sp/>here<sp/>will<sp/>be<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>osd_blobs<sp/>is<sp/>not<sp/>null,<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>from<sp/>the<sp/>dominant<sp/>textline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction<sp/>are<sp/>returned<sp/>for<sp/>use<sp/>in<sp/>orientation<sp/>and<sp/>script<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::TestVerticalTextDirection(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>osd_blobs)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_force_vertical_text)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!textord_tabfind_vertical_text)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_boxes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>horizontal_boxes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>vertical<sp/>normal<sp/>and<sp/>large<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>BLOBNBOX_CLIST<sp/>vertical_blobs;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>BLOBNBOX_CLIST<sp/>horizontal_blobs;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>BLOBNBOX_CLIST<sp/>nondescript_blobs;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>CollectHorizVertBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/>&amp;vertical_boxes,<sp/>&amp;horizontal_boxes,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;vertical_blobs,<sp/>&amp;horizontal_blobs,<sp/>&amp;nondescript_blobs);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>CollectHorizVertBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>,<sp/>&amp;vertical_boxes,<sp/>&amp;horizontal_boxes,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;vertical_blobs,<sp/>&amp;horizontal_blobs,<sp/>&amp;nondescript_blobs);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;TextDir<sp/>hbox=%d<sp/>vs<sp/>vbox=%d,<sp/>%dH,<sp/>%dV,<sp/>%dN<sp/>osd<sp/>blobs\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal_boxes,<sp/>vertical_boxes,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal_blobs.length(),<sp/>vertical_blobs.length(),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nondescript_blobs.length());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(osd_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>vertical_boxes<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>horizontal_boxes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>nondescript<sp/>blobs<sp/>available,<sp/>so<sp/>return<sp/>those.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>osd_it(osd_blobs);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>osd_it.add_list_after(&amp;nondescript_blobs);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_vert_boxes<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((vertical_boxes<sp/>+<sp/>horizontal_boxes)<sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textord_tabfind_vertical_text_ratio);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertical_boxes<sp/>&gt;=<sp/>min_vert_boxes)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(osd_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>osd_it(osd_blobs);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>osd_it.add_list_after(&amp;vertical_blobs);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(osd_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>osd_it(osd_blobs);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>osd_it.add_list_after(&amp;horizontal_blobs);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Corrects<sp/>the<sp/>data<sp/>structures<sp/>for<sp/>the<sp/>given<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::CorrectForRotation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>Init(part_grid-&gt;gridsize(),<sp/>part_grid-&gt;bleft(),<sp/>part_grid-&gt;tright());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>grid_box_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(bleft(),<sp/>tright());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>rerotation_.set_x(rotation.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>rerotation_.set_y(-rotation.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>leader<sp/>partitions<sp/>and<sp/>inserts<sp/>them<sp/>into<sp/>the<sp/>given<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindLeaderPartitions(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>and<sp/>isolate<sp/>leaders<sp/>in<sp/>the<sp/>noise<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>leader_parts;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>FindLeadersAndMarkNoise(block,<sp/>&amp;leader_parts);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>strokewidth<sp/>grid<sp/>with<sp/>the<sp/>block&apos;s<sp/>remaining<sp/>(non-noise)<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>blobs<sp/>that<sp/>have<sp/>leader<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ColPartition_IT<sp/>it(&amp;leader_parts);<sp/>!it.empty();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.extract();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ClaimBoxes();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>MarkLeaderNeighbours(part,<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>MarkLeaderNeighbours(part,<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071facb1914d58c6a7acb6ddb9563a46a1046" kindref="member">LR_RIGHT</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>marks<sp/>noise<sp/>those<sp/>blobs<sp/>that<sp/>look<sp/>like<sp/>bits<sp/>of<sp/>vertical<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>would<sp/>otherwise<sp/>screw<sp/>up<sp/>layout<sp/>analysis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::RemoveLineResidue(ColPartition_LIST*<sp/>big_part_list)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>vertical<sp/>line-like<sp/>bbox<sp/>in<sp/>the<sp/>grid,<sp/>search<sp/>its<sp/>neighbours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>find<sp/>the<sp/>tallest,<sp/>and<sp/>if<sp/>the<sp/>original<sp/>box<sp/>is<sp/>taller<sp/>by<sp/>sufficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>margin,<sp/>then<sp/>call<sp/>it<sp/>line<sp/>residue<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>*<sp/><ref refid="namespacetesseract_1a84872b3032afddbed37888802b109b56" kindref="member">kLineResidueAspectRatio</ref>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>around<sp/>the<sp/>blob<sp/>to<sp/>find<sp/>the<sp/>size<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>*<sp/><ref refid="namespacetesseract_1a1a706351c04a309beaf8be435136baac" kindref="member">kLineResiduePadRatio</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" kindref="member">pad</ref>(padding,<sp/>padding);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>largest<sp/>object<sp/>in<sp/>the<sp/>search<sp/>box<sp/>not<sp/>equal<sp/>to<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>n;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>bbox)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>n-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>max_size)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_size<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Max<sp/>neighbour<sp/>size=%d<sp/>for<sp/>candidate<sp/>line<sp/>box<sp/>at:&quot;</highlight><highlight class="normal">,<sp/>max_size);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_size<sp/>*<sp/><ref refid="namespacetesseract_1aad875f37920782a2a2e7acedceefb20f" kindref="member">kLineResidueSizeRatio</ref><sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaders_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>debugging,<sp/>so<sp/>display<sp/>deleted<sp/>in<sp/>pink<sp/>blobs<sp/>in<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>that<sp/>we<sp/>use<sp/>to<sp/>display<sp/>leader<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaders_win_-&gt;Pen(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8aee71d1b0400315f55f86c9723631a10e" kindref="member">ScrollView::PINK</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaders_win_-&gt;Rectangle(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition::MakeBigPartition(bbox,<sp/>big_part_list);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Types<sp/>all<sp/>the<sp/>blobs<sp/>as<sp/>vertical<sp/>text<sp/>or<sp/>horizontal<sp/>text<sp/>or<sp/>unknown<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>puts<sp/>them<sp/>into<sp/>initial<sp/>ColPartitions<sp/>in<sp/>the<sp/>supplied<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rerotation<sp/>determines<sp/>how<sp/>to<sp/>get<sp/>back<sp/>to<sp/>the<sp/>image<sp/>coordinates<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blob<sp/>coordinates<sp/>(since<sp/>they<sp/>may<sp/>have<sp/>been<sp/>rotated<sp/>for<sp/>vertical<sp/>text).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>the<sp/>single<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>page<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_pix<sp/>(full-size),<sp/>is<sp/>a<sp/>binary<sp/>mask<sp/>used<sp/>to<sp/>prevent<sp/>merges<sp/>across</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>photo/text<sp/>boundaries.<sp/>It<sp/>is<sp/>not<sp/>kept<sp/>beyond<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>denorm<sp/>provides<sp/>a<sp/>mapping<sp/>back<sp/>to<sp/>the<sp/>image<sp/>from<sp/>the<sp/>current<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinate<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>projection<sp/>provides<sp/>a<sp/>measure<sp/>of<sp/>textline<sp/>density<sp/>over<sp/>the<sp/>image<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provides<sp/>functions<sp/>to<sp/>assist<sp/>with<sp/>diacritic<sp/>detection.<sp/>It<sp/>should<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>a<sp/>new<sp/>TextlineProjection,<sp/>and<sp/>will<sp/>be<sp/>setup<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part_grid<sp/>is<sp/>the<sp/>output<sp/>grid<sp/>of<sp/>textline<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Large<sp/>blobs<sp/>that<sp/>cause<sp/>overlap<sp/>are<sp/>put<sp/>in<sp/>separate<sp/>partitions<sp/>and<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>big_parts<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::GradeBlobsIntoPartitions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_pix,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextlineProjection*<sp/>projection,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>nontext_map_<sp/>=<sp/>nontext_pix;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>projection_<sp/>=<sp/>projection;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>denorm_<sp/>=<sp/>denorm;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>and<sp/>re<sp/>Insert<sp/>to<sp/>take<sp/>advantage<sp/>of<sp/>the<sp/>tab<sp/>stops<sp/>in<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>strokewidth<sp/>grid<sp/>with<sp/>the<sp/>remaining<sp/>non-noise,<sp/>non-leader<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>InsertBlobs(block);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>FixBrokenCJK()<sp/>again<sp/>if<sp/>the<sp/>page<sp/>is<sp/>rotated<sp/>and<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lists<sp/>are<sp/>reset<sp/>and<sp/>re-flitered,<sp/>because<sp/>we<sp/>may<sp/>have<sp/>some<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs<sp/>in<sp/>the<sp/>medium<sp/>blob<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rerotation_.x()<sp/>!=<sp/>1.0f<sp/>||<sp/>rerotation_.y()<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>FixBrokenCJK(block);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>FindTextlineFlowDirection(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>projection_-&gt;ConstructProjection(block,<sp/>rerotation,<sp/>nontext_map_);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>line_blobs_win<sp/>=<sp/>MakeWindow(0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Initial<sp/>textline<sp/>Blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>projection_-&gt;PlotGradedBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/>line_blobs_win);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>projection_-&gt;PlotGradedBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>,<sp/>line_blobs_win);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>projection_-&gt;MoveNonTextlineBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>projection_-&gt;MoveNonTextlineBlobs(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>and<sp/>re<sp/>Insert<sp/>to<sp/>take<sp/>advantage<sp/>of<sp/>the<sp/>removed<sp/>diacritics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>InsertBlobs(block);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>FindInitialPartitions(rerotation,<sp/>block,<sp/>part_grid,<sp/>big_parts);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>nontext_map_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>projection_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>denorm_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintBoxWidths(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>(%d,%d)-&gt;(%d,%d):<sp/>h-width=%.1f,<sp/>v-width=%.1f<sp/>p-width=%1.f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8e76ce198ed496c365844807cbbf9338" kindref="member">horz_stroke_width</ref>(),<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a0e0f6b25af6e86fd229bfdc53825dcb9" kindref="member">vert_stroke_width</ref>(),</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0<sp/>*<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1af8d6cc72e454c97c5e14d7ccd12925e3" kindref="member">area</ref>()/neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1a7bb48c42dd0ab06ebc1d1bd4936e6252" kindref="member">perimeter</ref>());</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::HandleClick(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>BBGrid&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;::HandleClick(x,<sp/>y);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>radial<sp/>search<sp/>for<sp/>blobs<sp/>that<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>radsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>radsearch.StartRadSearch(x,<sp/>y,<sp/>1);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>click(static_cast&lt;float&gt;(x),<sp/>static_cast&lt;float&gt;(y));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>radsearch.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(click)<sp/>&amp;&amp;<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(neighbour);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gaps[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ab4222cadac89dc2c9675d35cf2170042" kindref="member">NeighbourGaps</ref>(gaps);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Left<sp/>gap=%d,<sp/>right=%d,<sp/>above=%d,<sp/>below=%d,<sp/>horz=%d,<sp/>vert=%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Good=<sp/><sp/><sp/><sp/>%d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>],<sp/>gaps[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>],</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>],<sp/>gaps[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>],</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9009e27a6c6f2025035170850dcf62c2" kindref="member">horz_possible</ref>(),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4ab21b274ede7a7080d5b2bca8f2c268" kindref="member">vert_possible</ref>(),</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" kindref="member">good_stroke_neighbour</ref>(BND_LEFT),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" kindref="member">good_stroke_neighbour</ref>(BND_RIGHT),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" kindref="member">good_stroke_neighbour</ref>(BND_ABOVE),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" kindref="member">good_stroke_neighbour</ref>(BND_BELOW));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detects<sp/>and<sp/>marks<sp/>leader<sp/>dots/dashes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Leaders<sp/>are<sp/>horizontal<sp/>chains<sp/>of<sp/>small<sp/>or<sp/>noise<sp/>blobs<sp/>that<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>monospace<sp/>according<sp/>to<sp/>ColPartition::MarkAsLeaderIfMonospaced().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detected<sp/>leaders<sp/>become<sp/>the<sp/>only<sp/>occupants<sp/>of<sp/>the<sp/>block-&gt;small_blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-leader<sp/>small<sp/>blobs<sp/>get<sp/>moved<sp/>to<sp/>the<sp/>blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-leader<sp/>noise<sp/>blobs<sp/>remain<sp/>singletons<sp/>in<sp/>the<sp/>noise<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>small<sp/>and<sp/>noise<sp/>blobs<sp/>in<sp/>high<sp/>density<sp/>regions<sp/>are<sp/>marked<sp/>BTFT_NONTEXT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>the<sp/>single<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>page<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leader_parts<sp/>is<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindLeadersAndMarkNoise(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>leader_parts)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>bbox<sp/>in<sp/>the<sp/>grid,<sp/>set<sp/>its<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNeighbours(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bbox);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(leader_parts);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(BND_RIGHT)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(BND_LEFT)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>all<sp/>the<sp/>linked<sp/>blobs<sp/>into<sp/>a<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob<sp/>=<sp/>bbox;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(BND_RIGHT))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(BND_LEFT);<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(BND_LEFT))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;MarkAsLeaderIfMonospaced())</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>leaders_win_<sp/>=<sp/>DisplayGoodBlobs(</highlight><highlight class="stringliteral">&quot;LeaderNeighbours&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>any<sp/>non-leaders<sp/>from<sp/>the<sp/>small<sp/>to<sp/>the<sp/>blobs<sp/>list,<sp/>as<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>most<sp/>likely<sp/>dashes<sp/>or<sp/>broken<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>small_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(small_it.mark_cycle_pt();<sp/>!small_it.cycled_list();<sp/>small_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>small_it.data();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" kindref="member">ClearNeighbours</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_it.add_to_end(small_it.extract());</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>leaders<sp/>from<sp/>the<sp/>noise<sp/>list<sp/>to<sp/>the<sp/>small<sp/>list,<sp/>leaving<sp/>the<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>exclusively<sp/>leaders,<sp/>so<sp/>they<sp/>don&apos;t<sp/>get<sp/>processed<sp/>further,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>remaining<sp/>small<sp/>blobs<sp/>all<sp/>in<sp/>the<sp/>noise<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>noise_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(noise_it.mark_cycle_pt();<sp/>!noise_it.cycled_list();<sp/>noise_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>noise_it.data();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref><sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af37f373c72851534101f4caf296a3cf7" kindref="member">joined_to_prev</ref>())<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_it.add_to_end(noise_it.extract());</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" kindref="member">ClearNeighbours</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>grid<sp/>as<sp/>we<sp/>don&apos;t<sp/>want<sp/>the<sp/>small<sp/>stuff<sp/>hanging<sp/>around<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::InsertBlobs(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>the<sp/>left<sp/>or<sp/>right<sp/>side<sp/>of<sp/>the<sp/>given<sp/>leader<sp/>partition<sp/>and<sp/>sets<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(opposite)<sp/>leader_on_right<sp/>or<sp/>leader_on_left<sp/>flags<sp/>for<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>next<sp/>to<sp/>the<sp/>given<sp/>side<sp/>of<sp/>the<sp/>given<sp/>leader<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::MarkLeaderNeighbours(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071f" kindref="member">LeftOrRight</ref><sp/>side)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>blobsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>to<sp/>the<sp/>side<sp/>of<sp/>the<sp/>leader<sp/>for<sp/>the<sp/>nearest<sp/>neighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>best_blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>blobsearch.StartSideSearch(side<sp/>==<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref><sp/>?<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((blob<sp/>=<sp/>blobsearch.NextSideSearch(side<sp/>==<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref>))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blob_box.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(part_box))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_gap<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(part_box);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_gap<sp/>&gt;<sp/>2<sp/>*<sp/>gridsize())<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>x_gap<sp/>&lt;<sp/>best_gap)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_blob<sp/>=<sp/>blob;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_gap<sp/>=<sp/>x_gap;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(side<sp/>==<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a0bc3500cc908c86d40c828358063797a" kindref="member">set_leader_on_right</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6e6bb579df4620ecf4a1bdc46bc21d60" kindref="member">set_leader_on_left</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaders_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leaders_win_-&gt;Pen(side<sp/>==<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref><sp/>?<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0959f7470b08ae1a38aa7e38fba29402" kindref="member">ScrollView::RED</ref><sp/>:<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9d8c87be486dead41d198d6b97a22174" kindref="member">ScrollView::GREEN</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>blob_box<sp/>=<sp/>best_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leaders_win_-&gt;Rectangle(blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>compute<sp/>the<sp/>UQ<sp/>of<sp/>the<sp/>square-ish<sp/>CJK<sp/>charcters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UpperQuartileCJKSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,<sp/>BLOBNBOX_LIST*<sp/>blobs)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>sizes(0,<sp/>gridsize<sp/>*<sp/><ref refid="namespacetesseract_1aa44aa93b17b5967315a229c1b1ed1f31" kindref="member">kMaxCJKSizeRatio</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(blobs);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;=<sp/>height<sp/>*<sp/><ref refid="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" kindref="member">kCJKAspectRatio</ref><sp/>&amp;&amp;<sp/>height<sp/>&lt;<sp/>width<sp/>*<sp/><ref refid="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" kindref="member">kCJKAspectRatio</ref>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes.add(height,<sp/>1);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sizes.ile(0.75<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fix<sp/>broken<sp/>CJK<sp/>characters,<sp/>using<sp/>the<sp/>fake<sp/>joined<sp/>blobs<sp/>mechanism.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Blobs<sp/>are<sp/>really<sp/>merged,<sp/>ie<sp/>the<sp/>master<sp/>takes<sp/>all<sp/>the<sp/>outlines<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>others<sp/>are<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>sufficient<sp/>blobs<sp/>are<sp/>merged<sp/>that<sp/>it<sp/>may<sp/>be<sp/>worth<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>again,<sp/>due<sp/>to<sp/>a<sp/>better<sp/>estimate<sp/>of<sp/>character<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::FixBrokenCJK(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>BLOBNBOX_LIST*<sp/>blobs<sp/>=<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_height<sp/>=<sp/>UpperQuartileCJKSize(gridsize(),<sp/>blobs);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_dist<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(median_height<sp/>*<sp/><ref refid="namespacetesseract_1a39569c92bdfdb4178deaac42d588f830" kindref="member">kCJKBrokenDistanceFraction</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(median_height<sp/>*<sp/><ref refid="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" kindref="member">kCJKAspectRatio</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_fixed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(blobs);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>()-&gt;empty())</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(3,<sp/>bbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>for<sp/>Broken<sp/>CJK<sp/>(max<sp/>size=%d):&quot;</highlight><highlight class="normal">,<sp/>max_size);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>that<sp/>overlap<sp/>or<sp/>are<sp/>near<sp/>enough<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST<sp/>overlapped_blobs;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>AccumulateOverlaps(blob,<sp/>debug,<sp/>max_size,<sp/>max_dist,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bbox,<sp/>&amp;overlapped_blobs);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!overlapped_blobs.empty())<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>overlapping<sp/>blobs,<sp/>so<sp/>qualify<sp/>them<sp/>as<sp/>being<sp/>satisfactory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>removing<sp/>them<sp/>from<sp/>the<sp/>grid<sp/>and<sp/>replacing<sp/>them<sp/>with<sp/>the<sp/>union.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>final<sp/>box<sp/>must<sp/>be<sp/>roughly<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>bbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>*<sp/>kCJKAspectRatio<sp/>||</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>bbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>*<sp/><ref refid="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" kindref="member">kCJKAspectRatio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>final<sp/>aspectratio:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>can&apos;t<sp/>be<sp/>too<sp/>many<sp/>blobs<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlapped_blobs.length()<sp/>&gt;=<sp/><ref refid="namespacetesseract_1a308c19587dfea876b3291916f10443ec" kindref="member">kCJKMaxComponents</ref>)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>neighbours:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>overlapped_blobs.length());</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>strokewidths<sp/>must<sp/>match<sp/>amongst<sp/>the<sp/>join<sp/>candidates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>n_it(&amp;overlapped_blobs);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n_it.mark_cycle_pt();<sp/>!n_it.cycled_list();<sp/>n_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour<sp/>=<sp/>n_it.data();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2f6e04e9e729b577e2b9577983a03016" kindref="member">MatchingStrokeWidth</ref>(*neighbour,<sp/><ref refid="namespacetesseract_1abd67e80f3588f9bbf627ae8b21494513" kindref="member">kStrokeWidthFractionCJK</ref>,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ad4cf0379178f03e5f1fc982c6e12a7a3" kindref="member">kStrokeWidthCJK</ref>))</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n_it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>stroke<sp/>widths:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintBoxWidths(blob);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>good<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>all<sp/>the<sp/>candidates<sp/>into<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>remove<sp/>blob<sp/>from<sp/>the<sp/>grid<sp/>and<sp/>reinsert<sp/>it<sp/>after<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>maintain<sp/>the<sp/>integrity<sp/>of<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(blob);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>else<sp/>will<sp/>be<sp/>calculated<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n_it.mark_cycle_pt();<sp/>!n_it.cycled_list();<sp/>n_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/>n_it.data();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(neighbour);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>empty<sp/>blob<sp/>for<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a35e6f3923186941c2cd0c12b76be914d" kindref="member">really_merge</ref>(neighbour);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rerotation_.x()<sp/>!=<sp/>1.0f<sp/>||<sp/>rerotation_.y()<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3f37300a9cdd252ca74df4a725787587" kindref="member">rotate_box</ref>(rerotation_);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>blob);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++num_fixed;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Done!<sp/>Final<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>remaining<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_remaining<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>()-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++num_remaining;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Permanently<sp/>delete<sp/>all<sp/>the<sp/>marked<sp/>blobs<sp/>after<sp/>first<sp/>removing<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>references<sp/>in<sp/>the<sp/>neighbour<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9ce3c22594b44b4faad5c331ad0265ea" kindref="member">DeleteUnownedNoise</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_fixed<sp/>&gt;<sp/>num_remaining<sp/>*<sp/><ref refid="namespacetesseract_1a93725c4be688b102564ecc9ef6642366" kindref="member">kBrokenCJKIterationFraction</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>determine<sp/>whether<sp/>it<sp/>is<sp/>reasonable<sp/>to<sp/>merge<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bbox<sp/>and<sp/>the<sp/>nbox<sp/>for<sp/>repairing<sp/>broken<sp/>CJK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>distance<sp/>apart<sp/>must<sp/>not<sp/>exceed<sp/>max_dist,<sp/>the<sp/>combined<sp/>size<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>exceed<sp/>max_size,<sp/>and<sp/>the<sp/>aspect<sp/>ratio<sp/>must<sp/>either<sp/>improve<sp/>or<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//<sp/>least<sp/>not<sp/>get<sp/>worse<sp/>by<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AcceptableCJKMerge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>bbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nbox,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_dist,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_gap,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_gap)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>*x_gap<sp/>=<sp/>bbox.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(nbox);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>*y_gap<sp/>=<sp/>bbox.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(nbox);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>merged(nbox);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>merged<sp/>+=<sp/>bbox;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;gaps<sp/>=<sp/>%d,<sp/>%d,<sp/>merged_box:&quot;</highlight><highlight class="normal">,<sp/>*x_gap,<sp/>*y_gap);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>merged.print();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*x_gap<sp/>&lt;=<sp/>max_dist<sp/>&amp;&amp;<sp/>*y_gap<sp/>&lt;=<sp/>max_dist<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged.width()<sp/>&lt;=<sp/>max_size<sp/>&amp;&amp;<sp/>merged.height()<sp/>&lt;=<sp/>max_size)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>enough<sp/>to<sp/>call<sp/>overlapping.<sp/>Check<sp/>aspect<sp/>ratios.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>old_ratio<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())<sp/>/<sp/>bbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_ratio<sp/>&lt;<sp/>1.0)<sp/>old_ratio<sp/>=<sp/>1.0<sp/>/<sp/>old_ratio;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_ratio<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(merged.width())<sp/>/<sp/>merged.height();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_ratio<sp/>&lt;<sp/>1.0)<sp/>new_ratio<sp/>=<sp/>1.0<sp/>/<sp/>new_ratio;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_ratio<sp/>&lt;=<sp/>old_ratio<sp/>*<sp/><ref refid="namespacetesseract_1a62516d3e478bcfb239d046da287150b3" kindref="member">kCJKAspectRatioIncrease</ref>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Collect<sp/>blobs<sp/>that<sp/>overlap<sp/>or<sp/>are<sp/>within<sp/>max_dist<sp/>of<sp/>the<sp/>input<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>them<sp/>in<sp/>the<sp/>list<sp/>of<sp/>blobs<sp/>and<sp/>expand<sp/>the<sp/>bbox<sp/>to<sp/>be<sp/>the<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>all<sp/>the<sp/>boxes.<sp/>not_this<sp/>is<sp/>excluded<sp/>from<sp/>the<sp/>search,<sp/>as<sp/>are<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>cause<sp/>the<sp/>merged<sp/>box<sp/>to<sp/>exceed<sp/>max_size<sp/>in<sp/>either<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::AccumulateOverlaps(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>not_this,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_dist,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bbox,<sp/>BLOBNBOX_CLIST*<sp/>blobs)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>searching,<sp/>nearests<sp/>holds<sp/>the<sp/>nearest<sp/>failed<sp/>blob<sp/>in<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction.<sp/>When<sp/>we<sp/>have<sp/>a<sp/>nearest<sp/>in<sp/>each<sp/>of<sp/>the<sp/>4<sp/>directions,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>search<sp/>is<sp/>over,<sp/>and<sp/>at<sp/>this<sp/>point<sp/>the<sp/>final<sp/>bbox<sp/>must<sp/>not<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>of<sp/>the<sp/>nearests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>nearests[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>nearests[i]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(bbox-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(bbox-&gt;<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>radial<sp/>search<sp/>for<sp/>blobs<sp/>that<sp/>overlap<sp/>or<sp/>are<sp/>sufficiently<sp/>close.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>radsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>radsearch.StartRadSearch(x,<sp/>y,<sp/><ref refid="namespacetesseract_1a73ac9428eb90511e5627135347d561e2" kindref="member">kCJKRadius</ref>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>radsearch.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>not_this)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_gap,<sp/>y_gap;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AcceptableCJKMerge(*bbox,<sp/>nbox,<sp/>debug,<sp/>max_size,<sp/>max_dist,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x_gap,<sp/>&amp;y_gap))<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>enough<sp/>to<sp/>call<sp/>overlapping.<sp/>Merge<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*bbox<sp/>+=<sp/>nbox;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blobs-&gt;add_sorted(SortByBoxLeft&lt;BLOBNBOX&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>neighbour);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>merged,<sp/>search<sp/>the<sp/>nearests,<sp/>as<sp/>some<sp/>might<sp/>now<sp/>me<sp/>mergeable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearests[dir]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox<sp/>=<sp/>nearests[dir]-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AcceptableCJKMerge(*bbox,<sp/>nbox,<sp/>debug,<sp/>max_size,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_dist,<sp/>&amp;x_gap,<sp/>&amp;y_gap))<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>enough<sp/>to<sp/>call<sp/>overlapping.<sp/>Merge<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bbox<sp/>+=<sp/>nbox;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobs-&gt;add_sorted(SortByBoxLeft&lt;BLOBNBOX&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>nearests[dir]);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearests[dir]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>the<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_gap<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>x_gap<sp/>&lt;=<sp/>y_gap)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>vertical<sp/>neighbour.<sp/>Record<sp/>the<sp/>nearest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>?<sp/>BND_ABOVE<sp/>:<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearests[dir]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_gap<sp/>&lt;<sp/>bbox-&gt;y_gap(nearests[dir]-&gt;bounding_box()))<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearests[dir]<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_gap<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>y_gap<sp/>&lt;=<sp/>x_gap)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>horizontal<sp/>neighbour.<sp/>Record<sp/>the<sp/>nearest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>?<sp/>BND_RIGHT<sp/>:<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearests[dir]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_gap<sp/>&lt;<sp/>bbox-&gt;x_gap(nearests[dir]-&gt;bounding_box()))<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearests[dir]<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>all<sp/>nearests<sp/>are<sp/>non-null,<sp/>then<sp/>we<sp/>have<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearests[BND_LEFT]<sp/>&amp;&amp;<sp/>nearests[BND_RIGHT]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearests[BND_ABOVE]<sp/>&amp;&amp;<sp/>nearests[BND_BELOW])</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>overlap<sp/>with<sp/>a<sp/>nearest<sp/>is<sp/>not<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearests[dir]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nbox<sp/>=<sp/>nearests[dir]-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>for<sp/>overlap<sp/>with:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(nbox))<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blobs-&gt;shallow_clear();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Final<sp/>box<sp/>overlaps<sp/>nearest\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>blob<sp/>in<sp/>this<sp/>grid,<sp/>Finds<sp/>the<sp/>textline<sp/>direction<sp/>to<sp/>be<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>vertical<sp/>according<sp/>to<sp/>distance<sp/>to<sp/>neighbours<sp/>and<sp/>1st<sp/>and<sp/>2nd<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neighbours.<sp/>Non-text<sp/>tends<sp/>to<sp/>end<sp/>up<sp/>without<sp/>a<sp/>definite<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Result<sp/>is<sp/>setting<sp/>of<sp/>the<sp/>neighbours<sp/>and<sp/>vert_possible/horz_possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flags<sp/>in<sp/>the<sp/>BLOBNBOXes<sp/>currently<sp/>in<sp/>this<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>more<sp/>than<sp/>once<sp/>if<sp/>page<sp/>orientation<sp/>is<sp/>uncertain,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>display_if_debugging<sp/>is<sp/>true<sp/>on<sp/>the<sp/>final<sp/>call<sp/>to<sp/>display<sp/>the<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindTextlineFlowDirection(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display_if_debugging)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>bbox<sp/>in<sp/>the<sp/>grid,<sp/>set<sp/>its<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNeighbours(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>display_if_debugging,<sp/>bbox);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Where<sp/>vertical<sp/>or<sp/>horizontal<sp/>wins<sp/>by<sp/>a<sp/>big<sp/>margin,<sp/>clarify<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>SimplifyObviousNeighbours(bbox);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>try<sp/>to<sp/>make<sp/>the<sp/>blobs<sp/>only<sp/>vertical<sp/>or<sp/>horizontal<sp/>using<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNeighbourFlows(bbox);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((textord_tabfind_show_strokewidths<sp/><sp/>&amp;&amp;<sp/>display_if_debugging)<sp/>||</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>textord_tabfind_show_strokewidths<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_widths_win_<sp/>=<sp/>DisplayGoodBlobs(</highlight><highlight class="stringliteral">&quot;InitialStrokewidths&quot;</highlight><highlight class="normal">,<sp/>400,<sp/>0);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Improve<sp/>flow<sp/>direction<sp/>with<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>SmoothNeighbourTypes(bbox,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>allow<sp/>reset<sp/>of<sp/>firm<sp/>values<sp/>to<sp/>fix<sp/>renegades.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>SmoothNeighbourTypes(bbox,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeat.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>SmoothNeighbourTypes(bbox,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((textord_tabfind_show_strokewidths<sp/><sp/>&amp;&amp;<sp/>display_if_debugging)<sp/>||</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>textord_tabfind_show_strokewidths<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>widths_win_<sp/>=<sp/>DisplayGoodBlobs(</highlight><highlight class="stringliteral">&quot;ImprovedStrokewidths&quot;</highlight><highlight class="normal">,<sp/>800,<sp/>0);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbours<sp/>and<sp/>good_stroke_neighbours<sp/>members<sp/>of<sp/>the<sp/>blob<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>searching<sp/>close<sp/>on<sp/>all<sp/>4<sp/>sides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>finding<sp/>leader<sp/>dots/dashes,<sp/>there<sp/>is<sp/>a<sp/>slightly<sp/>different<sp/>rule<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>what<sp/>makes<sp/>a<sp/>good<sp/>neighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::SetNeighbours(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leaders,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activate_line_trap,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_trap_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>bnd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dir);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>line_trap_count<sp/>+=<sp/>FindGoodNeighbour(bnd,<sp/>leaders,<sp/>blob);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_trap_count<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>activate_line_trap)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>looks<sp/>like<sp/>a<sp/>line<sp/>so<sp/>isolate<sp/>it<sp/>by<sp/>clearing<sp/>its<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" kindref="member">ClearNeighbours</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>?<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref><sp/>:<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>good_stroke_neighbours<sp/>member<sp/>of<sp/>the<sp/>blob<sp/>if<sp/>it<sp/>has<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GoodNeighbour<sp/>on<sp/>the<sp/>given<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>sets<sp/>the<sp/>neighbour<sp/>in<sp/>the<sp/>blob,<sp/>whether<sp/>or<sp/>not<sp/>a<sp/>good<sp/>one<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>blobs<sp/>in<sp/>the<sp/>nearby<sp/>search<sp/>area<sp/>that<sp/>would<sp/>lead<sp/>us<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">//<sp/>believe<sp/>that<sp/>this<sp/>blob<sp/>is<sp/>a<sp/>line<sp/>separator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leaders<sp/>get<sp/>extra<sp/>special<sp/>lenient<sp/>treatment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StrokeWidth::FindGoodNeighbour(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leaders,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>neighbours<sp/>that<sp/>overlap<sp/>vertically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;FGN<sp/>in<sp/>dir<sp/>%d<sp/>for<sp/>blob:&quot;</highlight><highlight class="normal">,<sp/>dir);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>top<sp/>-<sp/>bottom;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>trap<sp/>to<sp/>detect<sp/>lines<sp/>tests<sp/>for<sp/>the<sp/>min<sp/>dimension<sp/>of<sp/>neighbours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>larger<sp/>than<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>min<sp/>dimension<sp/>of<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>larger<sp/>dimension<sp/>being<sp/>smaller<sp/>than<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dimension<sp/>of<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_trap_max<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(width,<sp/>height)<sp/>/<sp/><ref refid="namespacetesseract_1a3d9a4df05c442729540b7459fbec462c" kindref="member">kLineTrapLongest</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_trap_min<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(width,<sp/>height)<sp/>*<sp/><ref refid="namespacetesseract_1ab34b32a5ea90db86801786f0f8a83997" kindref="member">kLineTrapShortest</ref>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_trap_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_good_overlap<sp/>=<sp/>(dir<sp/>==<sp/>BND_LEFT<sp/>||<sp/>dir<sp/>==<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>height<sp/>/<sp/>2<sp/>:<sp/>width<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_decent_overlap<sp/>=<sp/>(dir<sp/>==<sp/>BND_LEFT<sp/>||<sp/>dir<sp/>==<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>height<sp/>/<sp/>3<sp/>:<sp/>width<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaders)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>min_good_overlap<sp/>=<sp/>min_decent_overlap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_pad<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(static_cast&lt;double&gt;(width<sp/>*<sp/>height))<sp/>*<sp/><ref refid="namespacetesseract_1a746b69b4c2ec2f296100ebfaf15b2e2b" kindref="member">kNeighbourSearchFactor</ref>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gridsize()<sp/>&gt;<sp/>search_pad)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>search_pad<sp/>=<sp/>gridsize();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box<sp/>=<sp/>blob_box;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>search<sp/>in<sp/>the<sp/>appropriate<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dir)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BND_LEFT:</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(search_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>search_pad);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BND_RIGHT:</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(search_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>search_pad);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BND_BELOW:</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(search_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>search_pad);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BND_ABOVE:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(search_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>search_pad);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BND_COUNT:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>rectsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>rectsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>best_neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_goodness<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>best_is_good<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rectsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>blob)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_x<sp/>=<sp/>(nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_x<sp/>&lt;<sp/>blob-&gt;left_rule()<sp/>||<sp/>mid_x<sp/>&gt;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" kindref="member">right_rule</ref>())</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>a<sp/>different<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last-minute<sp/>line<sp/>detector.<sp/>There<sp/>is<sp/>a<sp/>small<sp/>upper<sp/>limit<sp/>to<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>accepted<sp/>by<sp/>the<sp/>morphological<sp/>line<sp/>detector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_width<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_height<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(n_width,<sp/>n_height)<sp/>&gt;<sp/>line_trap_min<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(n_width,<sp/>n_height)<sp/>&lt;<sp/>line_trap_max)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++line_trap_count;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Heavily<sp/>joined<sp/>text,<sp/>such<sp/>as<sp/>Arabic<sp/>may<sp/>have<sp/>very<sp/>different<sp/>sizes<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looking<sp/>at<sp/>the<sp/>maxes,<sp/>but<sp/>the<sp/>heights<sp/>may<sp/>be<sp/>almost<sp/>identical,<sp/>so<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>difference<sp/>in<sp/>height<sp/>if<sp/>looking<sp/>sideways<sp/>or<sp/>width<sp/>vertically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TabFind::VeryDifferentSizes(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(n_width,<sp/>n_height),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(width,<sp/>height))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((dir<sp/>==<sp/>BND_LEFT<sp/>||<sp/>dir<sp/>==BND_RIGHT)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind::DifferentSizes(n_height,<sp/>height))<sp/>||</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((dir<sp/>==<sp/>BND_BELOW<sp/>||<sp/>dir<sp/>==BND_ABOVE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind::DifferentSizes(n_width,<sp/>width))))<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Could<sp/>be<sp/>a<sp/>different<sp/>font<sp/>size<sp/>or<sp/>non-text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Amount<sp/>of<sp/>vertical<sp/>overlap<sp/>between<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>overlap<sp/>is<sp/>along<sp/>the<sp/>short<sp/>side<sp/>of<sp/>the<sp/>neighbour,<sp/>and<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>fully<sp/>overlapped,<sp/>then<sp/>perp_overlap<sp/>holds<sp/>the<sp/>length<sp/>of<sp/>the<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>side<sp/>of<sp/>the<sp/>neighbour.<sp/>A<sp/>measure<sp/>to<sp/>include<sp/>hyphens<sp/>and<sp/>dashes<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>legitimate<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perp_overlap;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>BND_LEFT<sp/>||<sp/>dir<sp/>==<sp/>BND_RIGHT)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>top)<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>bottom);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap<sp/>==<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&amp;&amp;<sp/>nbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perp_overlap<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perp_overlap<sp/>=<sp/>overlap;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>=<sp/>dir<sp/>==<sp/>BND_LEFT<sp/>?<sp/>left<sp/>-<sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>:<sp/>nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>right;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;On<sp/>wrong<sp/>side\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>wrong<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>-=<sp/>n_width;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>right)<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>left);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap<sp/>==<sp/>nbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&amp;&amp;<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>nbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perp_overlap<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perp_overlap<sp/>=<sp/>overlap;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>=<sp/>dir<sp/>==<sp/>BND_BELOW<sp/>?<sp/>bottom<sp/>-<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>:<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>top;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;On<sp/>wrong<sp/>side\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>wrong<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>-=<sp/>n_height;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-gap<sp/>&gt;<sp/>overlap)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Overlaps<sp/>wrong<sp/>way\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Overlaps<sp/>the<sp/>wrong<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(perp_overlap<sp/>&lt;<sp/>min_decent_overlap)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Doesn&apos;t<sp/>overlap<sp/>enough\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>overlap<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_sizes<sp/>=<sp/>TabFind::DifferentSizes(height,<sp/>n_height)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind::DifferentSizes(width,<sp/>n_width);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_good<sp/>=<sp/>overlap<sp/>&gt;=<sp/>min_good_overlap<sp/>&amp;&amp;<sp/>!bad_sizes<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2f6e04e9e729b577e2b9577983a03016" kindref="member">MatchingStrokeWidth</ref>(*neighbour,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1abc28700fa5d19f82a78db318450d7786" kindref="member">kStrokeWidthFractionTolerance</ref>,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5d1f89502955a97f3986e480f45d11ac" kindref="member">kStrokeWidthTolerance</ref>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Best<sp/>is<sp/>a<sp/>fuzzy<sp/>combination<sp/>of<sp/>gap,<sp/>overlap<sp/>and<sp/>is<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basically<sp/>if<sp/>you<sp/>make<sp/>one<sp/>thing<sp/>twice<sp/>as<sp/>good<sp/>without<sp/>making</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anything<sp/>else<sp/>twice<sp/>as<sp/>bad,<sp/>then<sp/>it<sp/>is<sp/>better.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;<sp/>1)<sp/>gap<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>goodness<sp/>=<sp/>(1.0<sp/>+<sp/>is_good)<sp/>*<sp/>overlap<sp/>/<sp/>gap;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;goodness<sp/>=<sp/>%g<sp/>vs<sp/>best<sp/>of<sp/>%g,<sp/>good=%d,<sp/>overlap=%d,<sp/>gap=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goodness,<sp/>best_goodness,<sp/>is_good,<sp/>overlap,<sp/>gap);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goodness<sp/>&gt;<sp/>best_goodness)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_neighbour<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_goodness<sp/>=<sp/>goodness;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_is_good<sp/>=<sp/>is_good;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(dir,<sp/>best_neighbour,<sp/>best_is_good);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>line_trap_count;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>get<sp/>a<sp/>list<sp/>of<sp/>1st-order<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ListNeighbours(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>neighbours)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>bnd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dir);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(bnd);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbours-&gt;add_sorted(SortByBoxLeft&lt;BLOBNBOX&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>neighbour);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>get<sp/>a<sp/>list<sp/>of<sp/>1st<sp/>and<sp/>2nd<sp/>order<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>List2ndNeighbours(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>neighbours)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>ListNeighbours(blob,<sp/>neighbours);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>bnd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dir);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(bnd);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ListNeighbours(neighbour,<sp/>neighbours);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>get<sp/>a<sp/>list<sp/>of<sp/>1st,<sp/>2nd<sp/>and<sp/>3rd<sp/>order<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>List3rdNeighbours(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>neighbours)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>List2ndNeighbours(blob,<sp/>neighbours);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>bnd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dir);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(bnd);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List2ndNeighbours(neighbour,<sp/>neighbours);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>count<sp/>the<sp/>evidence<sp/>for<sp/>verticalness<sp/>or<sp/>horizontalness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>list<sp/>of<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountNeighbourGaps(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/>BLOBNBOX_CLIST*<sp/>neighbours,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pure_h_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pure_v_count)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbours-&gt;length()<sp/>&lt;=<sp/><ref refid="namespacetesseract_1afba5db6e43d5f018b1c6bb6dfa43e488" kindref="member">kMostlyOneDirRatio</ref>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(neighbours);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_min,<sp/>h_max,<sp/>v_min,<sp/>v_max;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a5f17b374b3a0e8b547d1a41e43054ee2" kindref="member">MinMaxGapsClipped</ref>(&amp;h_min,<sp/>&amp;h_max,<sp/>&amp;v_min,<sp/>&amp;v_max);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Hgaps<sp/>[%d,%d],<sp/>vgaps<sp/>[%d,%d]:&quot;</highlight><highlight class="normal">,<sp/>h_min,<sp/>h_max,<sp/>v_min,<sp/>v_max);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_max<sp/>&lt;<sp/>v_min<sp/>||</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2ac782044b1e472f8ee6bfc9c0072bc9" kindref="member">leader_on_left</ref>()<sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2d3bd49977c92a46d2cedfe410484732" kindref="member">leader_on_right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Count<sp/>a<sp/>pure<sp/>horizontal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*pure_h_count;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Horz<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_max<sp/>&lt;<sp/>h_min)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>a<sp/>pure<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*pure_v_count;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Vert<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neither<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Makes<sp/>the<sp/>blob<sp/>to<sp/>be<sp/>only<sp/>horizontal<sp/>or<sp/>vertical<sp/>where<sp/>evidence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>clear<sp/>based<sp/>on<sp/>gaps<sp/>of<sp/>2nd<sp/>order<sp/>neighbours,<sp/>or<sp/>definite<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::SetNeighbourFlows(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a151439eae2683e30695bbf567df04982" kindref="member">DefiniteIndividualFlow</ref>())</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;SetNeighbourFlows<sp/>(current<sp/>flow=%d,<sp/>type=%d)<sp/>on:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>(),<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>());</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>BLOBNBOX_CLIST<sp/>neighbours;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>List3rdNeighbours(blob,<sp/>&amp;neighbours);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>pure<sp/>horizontal<sp/>and<sp/>vertical<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pure_h_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pure_v_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>CountNeighbourGaps(debug,<sp/>&amp;neighbours,<sp/>&amp;pure_h_count,<sp/>&amp;pure_v_count);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>HandleClick(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;SetFlows:<sp/>h_count=%d,<sp/>v_count=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pure_h_count,<sp/>pure_v_count);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!neighbours.empty())<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" kindref="member">set_vert_possible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" kindref="member">set_horz_possible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pure_h_count<sp/>&gt;<sp/>2<sp/>*<sp/>pure_v_count)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>vertical<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" kindref="member">set_vert_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pure_v_count<sp/>&gt;<sp/>2<sp/>*<sp/>pure_h_count)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>horizontal<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" kindref="member">set_horz_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lonely<sp/>blob.<sp/>Can&apos;t<sp/>tell<sp/>its<sp/>flow<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" kindref="member">set_vert_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" kindref="member">set_horz_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>count<sp/>the<sp/>number<sp/>of<sp/>horizontal<sp/>and<sp/>vertical<sp/>blobs<sp/>in<sp/>a<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountNeighbourTypes(BLOBNBOX_CLIST*<sp/>neighbours,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pure_h_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pure_v_count)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(neighbours);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>())</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*pure_h_count;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*pure_v_count;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nullify<sp/>the<sp/>neighbours<sp/>in<sp/>the<sp/>wrong<sp/>directions<sp/>where<sp/>the<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>clear-cut<sp/>based<sp/>on<sp/>a<sp/>distance<sp/>margin.<sp/>Good<sp/>for<sp/>isolating<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>text<sp/>from<sp/>neighbouring<sp/>horizontal<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::SimplifyObviousNeighbours(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>1:<sp/>We<sp/>have<sp/>text<sp/>that<sp/>is<sp/>likely<sp/>several<sp/>characters,<sp/>blurry<sp/>and<sp/>joined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>3<sp/>*<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a5b86dba65d0679a91c74aeae12630918" kindref="member">area_stroke_width</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>3<sp/>*<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a5b86dba65d0679a91c74aeae12630918" kindref="member">area_stroke_width</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>blob<sp/>is<sp/>complex<sp/>(not<sp/>stick-like).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>4<sp/>*<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>conjoined<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_ABOVE,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_BELOW,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>4<sp/>*<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>conjoined<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_LEFT,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_RIGHT,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>2:<sp/>This<sp/>blob<sp/>is<sp/>likely<sp/>a<sp/>single<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>gridsize()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_min,<sp/>h_max,<sp/>v_min,<sp/>v_max;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a5f17b374b3a0e8b547d1a41e43054ee2" kindref="member">MinMaxGapsClipped</ref>(&amp;h_min,<sp/>&amp;h_max,<sp/>&amp;v_min,<sp/>&amp;v_max);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((h_max<sp/>+<sp/>margin<sp/>&lt;<sp/>v_min<sp/>&amp;&amp;<sp/>h_max<sp/>&lt;<sp/>margin<sp/>/<sp/>2)<sp/>||</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2ac782044b1e472f8ee6bfc9c0072bc9" kindref="member">leader_on_left</ref>()<sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2d3bd49977c92a46d2cedfe410484732" kindref="member">leader_on_right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>vertical<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_ABOVE,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_BELOW,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_max<sp/>+<sp/>margin<sp/>&lt;<sp/>h_min<sp/>&amp;&amp;<sp/>v_max<sp/>&lt;<sp/>margin<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>horizontal<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_LEFT,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" kindref="member">set_neighbour</ref>(BND_RIGHT,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smoothes<sp/>the<sp/>vertical/horizontal<sp/>type<sp/>of<sp/>the<sp/>blob<sp/>based<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2nd-order<sp/>neighbours.<sp/>If<sp/>reset_all<sp/>is<sp/>true,<sp/>then<sp/>all<sp/>blobs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>changed.<sp/>Otherwise,<sp/>only<sp/>ambiguous<sp/>blobs<sp/>are<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::SmoothNeighbourTypes(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset_all)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4ab21b274ede7a7080d5b2bca8f2c268" kindref="member">vert_possible</ref>()<sp/>&amp;&amp;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9009e27a6c6f2025035170850dcf62c2" kindref="member">horz_possible</ref>())<sp/>||<sp/>reset_all)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>both<sp/>horizontal<sp/>and<sp/>vertical<sp/>so<sp/>try<sp/>to<sp/>fix<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST<sp/>neighbours;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>List2ndNeighbours(blob,<sp/>&amp;neighbours);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>pure<sp/>horizontal<sp/>and<sp/>vertical<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pure_h_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pure_v_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>CountNeighbourTypes(&amp;neighbours,<sp/>&amp;pure_h_count,<sp/>&amp;pure_v_count);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlignedBlob::WithinTestRegion(2,<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HandleClick(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;pure_h=%d,<sp/>pure_v=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pure_h_count,<sp/>pure_v_count);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pure_h_count<sp/>&gt;<sp/>pure_v_count)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>vertical<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" kindref="member">set_vert_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" kindref="member">set_horz_possible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pure_v_count<sp/>&gt;<sp/>pure_h_count)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>gaps<sp/>are<sp/>clear<sp/>winners.<sp/>Clear<sp/>horizontal<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" kindref="member">set_horz_possible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" kindref="member">set_vert_possible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlignedBlob::WithinTestRegion(2,<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>HandleClick(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Clean<sp/>on<sp/>pass<sp/>3!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partition<sp/>creation.<sp/>Accumulates<sp/>vertical<sp/>and<sp/>horizontal<sp/>text<sp/>chains,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>puts<sp/>the<sp/>remaining<sp/>blobs<sp/>in<sp/>as<sp/>unknowns,<sp/>and<sp/>then<sp/>merges/splits<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>minimize<sp/>overlap<sp/>and<sp/>smoothes<sp/>the<sp/>types<sp/>with<sp/>neighbours<sp/>and<sp/>the<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>if<sp/>provided.<sp/>rerotation<sp/>is<sp/>used<sp/>to<sp/>rotate<sp/>the<sp/>coordinate<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>the<sp/>nontext_map_<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindInitialPartitions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>FindVerticalTextChains(part_grid);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>FindHorizontalTextChains(part_grid);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>chains_win_<sp/>=<sp/>MakeWindow(0,<sp/>400,<sp/></highlight><highlight class="stringliteral">&quot;Initial<sp/>text<sp/>chains&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;DisplayBoxes(chains_win_);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>projection_-&gt;DisplayProjection();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>part_grid-&gt;SplitOverlappingPartitions(big_parts);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>EasyMerges(part_grid);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>RemoveLargeUnusedBlobs(block,<sp/>part_grid,<sp/>big_parts);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box(bleft(),<sp/>tright());</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part_grid-&gt;GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>,<sp/>nontext_map_,<sp/>grid_box,</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rerotation));</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part_grid-&gt;GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>,<sp/>nontext_map_,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_box,<sp/>rerotation));</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>TestDiacritics(part_grid,<sp/>block);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>MergeDiacritics(block,<sp/>part_grid);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>textlines_win_<sp/>=<sp/>MakeWindow(400,<sp/>400,<sp/></highlight><highlight class="stringliteral">&quot;GoodTextline<sp/>blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;DisplayBoxes(textlines_win_);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>diacritics_win_<sp/>=<sp/>DisplayDiacritics(</highlight><highlight class="stringliteral">&quot;Diacritics&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>block);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>PartitionRemainingBlobs(part_grid);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>part_grid-&gt;SplitOverlappingPartitions(big_parts);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>EasyMerges(part_grid);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part_grid-&gt;GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>,<sp/>nontext_map_,<sp/>grid_box,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rerotation));</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part_grid-&gt;GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>,<sp/>nontext_map_,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_box,<sp/>rerotation));</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>eliminate<sp/>strong<sp/>stuff<sp/>in<sp/>a<sp/>sea<sp/>of<sp/>the<sp/>opposite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part_grid-&gt;GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>,<sp/>nontext_map_,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_box,<sp/>rerotation));</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothed_win_<sp/>=<sp/>MakeWindow(800,<sp/>400,<sp/></highlight><highlight class="stringliteral">&quot;Smoothed<sp/>blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;DisplayBoxes(smoothed_win_);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>verifies<sp/>that<sp/>blob&apos;s<sp/>neighbour<sp/>in<sp/>direction<sp/>dir<sp/>is<sp/>good<sp/>to<sp/>add<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical<sp/>text<sp/>chain<sp/>by<sp/>returning<sp/>the<sp/>neighbour<sp/>if<sp/>it<sp/>is<sp/>not<sp/>null,<sp/>not<sp/>owned,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>not<sp/>uniquely<sp/>horizontal,<sp/>as<sp/>well<sp/>as<sp/>its<sp/>neighbour<sp/>in<sp/>the<sp/>opposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction<sp/>is<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>MutualUnusedVNeighbour(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>next_blob<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(dir);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>())</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a3358f8405c8bd675b0ee84f709373aed" kindref="member">DirOtherWay</ref>(dir))<sp/>==<sp/>blob)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_blob;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>vertical<sp/>chains<sp/>of<sp/>text-like<sp/>blobs<sp/>and<sp/>puts<sp/>them<sp/>in<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindVerticalTextChains(ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>process<sp/>boxes<sp/>that<sp/>have<sp/>no<sp/>horizontal<sp/>hope<sp/>and<sp/>have<sp/>not<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>included<sp/>in<sp/>a<sp/>chain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob<sp/>=<sp/>MutualUnusedVNeighbour(bbox,<sp/>BND_ABOVE))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>all<sp/>the<sp/>linked<sp/>blobs<sp/>into<sp/>a<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(bbox);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedVNeighbour(blob,<sp/>BND_ABOVE);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedVNeighbour(bbox,<sp/>BND_BELOW);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedVNeighbour(blob,<sp/>BND_BELOW);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CompletePartition(part,<sp/>part_grid);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>verifies<sp/>that<sp/>blob&apos;s<sp/>neighbour<sp/>in<sp/>direction<sp/>dir<sp/>is<sp/>good<sp/>to<sp/>add<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>text<sp/>chain<sp/>by<sp/>returning<sp/>the<sp/>neighbour<sp/>if<sp/>it<sp/>is<sp/>not<sp/>null,<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>owned,<sp/>and<sp/>not<sp/>uniquely<sp/>vertical,<sp/>as<sp/>well<sp/>as<sp/>its<sp/>neighbour<sp/>in<sp/>the<sp/>opposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction<sp/>is<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>MutualUnusedHNeighbour(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>next_blob<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(dir);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a3358f8405c8bd675b0ee84f709373aed" kindref="member">DirOtherWay</ref>(dir))<sp/>==<sp/>blob)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_blob;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>horizontal<sp/>chains<sp/>of<sp/>text-like<sp/>blobs<sp/>and<sp/>puts<sp/>them<sp/>in<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::FindHorizontalTextChains(ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob<sp/>=<sp/>MutualUnusedHNeighbour(bbox,<sp/>BND_RIGHT))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>all<sp/>the<sp/>linked<sp/>blobs<sp/>into<sp/>a<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(bbox);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedHNeighbour(blob,<sp/>BND_RIGHT);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedHNeighbour(bbox,<sp/>BND_LEFT);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>MutualUnusedVNeighbour(blob,<sp/>BND_LEFT);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CompletePartition(part,<sp/>part_grid);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>diacritics<sp/>and<sp/>saves<sp/>their<sp/>base<sp/>character<sp/>in<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>objective<sp/>is<sp/>to<sp/>move<sp/>all<sp/>diacritics<sp/>to<sp/>the<sp/>noise_blobs<sp/>list,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>don&apos;t<sp/>mess<sp/>up<sp/>early<sp/>textline<sp/>finding/merging,<sp/>or<sp/>force<sp/>splits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>textlines<sp/>that<sp/>overlap<sp/>a<sp/>bit.<sp/>Blobs<sp/>that<sp/>become<sp/>diacritics<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either<sp/>part<sp/>of<sp/>no<sp/>ColPartition<sp/>(NULL<sp/>owner)<sp/>or<sp/>in<sp/>a<sp/>small<sp/>partition<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>ALL<sp/>the<sp/>blobs<sp/>are<sp/>diacritics,<sp/>in<sp/>which<sp/>case<sp/>the<sp/>partition<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exploded<sp/>(deleted)<sp/>back<sp/>to<sp/>its<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::TestDiacritics(ColPartitionGrid*<sp/>part_grid,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>BlobGrid<sp/>small_grid(gridsize(),<sp/>bleft(),<sp/>tright());</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>small_grid.InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>small_grid.InsertBlobList(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>medium_diacritics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>small_diacritics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>small_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(small_it.mark_cycle_pt();<sp/>!small_it.cycled_list();<sp/>small_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>small_it.data();</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiacriticBlob(&amp;small_grid,<sp/>blob))<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++small_diacritics;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_it.add_to_end(blob_it.extract());</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>a<sp/>diacritic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>DiacriticBlob(&amp;small_grid,<sp/>blob))<sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++medium_diacritics;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(blob);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_it.add_to_end(blob_it.extract());</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!part-&gt;block_owned()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;boxes_count()<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allow<sp/>blobs<sp/>in<sp/>small<sp/>partitions<sp/>to<sp/>become<sp/>diacritics<sp/>if<sp/>ALL<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs<sp/>in<sp/>the<sp/>partition<sp/>qualify<sp/>as<sp/>we<sp/>can<sp/>then<sp/>cleanly<sp/>delete<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partition,<sp/>turn<sp/>all<sp/>the<sp/>blobs<sp/>in<sp/>it<sp/>to<sp/>diacritics<sp/>and<sp/>they<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merged<sp/>into<sp/>the<sp/>base<sp/>character<sp/>partition<sp/>more<sp/>easily<sp/>than<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box_it.mark_cycle_pt();<sp/>!box_it.cycled_list()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiacriticBlob(&amp;small_grid,<sp/>box_it.data());</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box_it.forward());</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box_it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>are<sp/>all<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!box_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Liberate<sp/>the<sp/>blob<sp/>from<sp/>its<sp/>partition<sp/>so<sp/>it<sp/>can<sp/>be<sp/>treated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>diacritic<sp/>and<sp/>merged<sp/>explicitly<sp/>with<sp/>the<sp/>base<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>blob<sp/>is<sp/>really<sp/>owned<sp/>by<sp/>the<sp/>block.<sp/>The<sp/>partition<sp/>&quot;owner&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>NULLed<sp/>to<sp/>allow<sp/>the<sp/>blob<sp/>to<sp/>get<sp/>merged<sp/>with<sp/>its<sp/>base<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>box<sp/>=<sp/>box_it.extract();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box_it.forward();</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++medium_diacritics;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>remove<sp/>the<sp/>blob<sp/>from<sp/>the<sp/>grid<sp/>so<sp/>it<sp/>isn&apos;t<sp/>found<sp/>by<sp/>subsequent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searches<sp/>where<sp/>we<sp/>might<sp/>not<sp/>want<sp/>to<sp/>include<sp/>diacritics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(box);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>move<sp/>the<sp/>one<sp/>blob<sp/>to<sp/>the<sp/>small<sp/>list<sp/>here,<sp/>but<sp/>the<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>get<sp/>moved<sp/>by<sp/>the<sp/>test<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small_it.add_to_end(blob_it.extract());</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid-&gt;RemoveBBox(part);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlignedBlob::WithinTestRegion(2,<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Blob<sp/>not<sp/>available<sp/>to<sp/>be<sp/>a<sp/>diacritic<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_strokewidths)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>small<sp/>diacritics,<sp/>%d<sp/>medium\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small_diacritics,<sp/>medium_diacritics);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Searches<sp/>this<sp/>grid<sp/>for<sp/>an<sp/>appropriately<sp/>close<sp/>and<sp/>sized<sp/>neighbour<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>[small]<sp/>blob.<sp/>If<sp/>such<sp/>a<sp/>blob<sp/>is<sp/>found,<sp/>the<sp/>diacritic<sp/>base<sp/>is<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>blob<sp/>and<sp/>true<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>small_grid<sp/>is<sp/>a<sp/>secondary<sp/>grid<sp/>that<sp/>contains<sp/>the<sp/>small/noise<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>not<sp/>in<sp/>this<sp/>grid,<sp/>but<sp/>may<sp/>be<sp/>useful<sp/>for<sp/>determining<sp/>a<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>blob<sp/>and<sp/>its<sp/>potential<sp/>base<sp/>character.<sp/>(See<sp/>DiacriticXGapFilled.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::DiacriticBlob(BlobGrid*<sp/>small_grid,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1aed57b07f933309970d23490dfc5a5e52" kindref="member">BLOBNBOX::UnMergeableType</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>small_box(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>small_box.left(),</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small_box.bottom());</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>blob<sp/>for<sp/>diacriticness<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>small_box.print();</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(small_box.left()<sp/>+<sp/>small_box.right())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(small_box.bottom()<sp/>+<sp/>small_box.top())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_x,<sp/>grid_y;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>GridCoords(x,<sp/>y,<sp/>&amp;grid_x,<sp/>&amp;grid_y);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>small_box.height();</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>rectangle<sp/>search<sp/>to<sp/>find<sp/>its<sp/>nearest<sp/>base-character<sp/>neighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>keep<sp/>2<sp/>different<sp/>best<sp/>candidates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best_x_overlap<sp/>is<sp/>a<sp/>category<sp/>of<sp/>base<sp/>characters<sp/>that<sp/>have<sp/>an<sp/>overlap<sp/>in<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(like<sp/>a<sp/>acute)<sp/>in<sp/>which<sp/>we<sp/>look<sp/>for<sp/>the<sp/>least<sp/>y-gap,<sp/>computed<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>to<sp/>favor<sp/>base<sp/>characters<sp/>in<sp/>the<sp/>same<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best_y_overlap<sp/>is<sp/>a<sp/>category<sp/>of<sp/>base<sp/>characters<sp/>that<sp/>have<sp/>no<sp/>x<sp/>overlap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(nominally<sp/>a<sp/>y-overlap<sp/>is<sp/>preferrecd<sp/>but<sp/>not<sp/>essential)<sp/>in<sp/>which<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>the<sp/>least<sp/>weighted<sp/>sum<sp/>of<sp/>x-gap<sp/>and<sp/>y-gap,<sp/>with<sp/>x-gap<sp/>getting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>lower<sp/>weight<sp/>to<sp/>catch<sp/>quotes<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>that<sp/>x-gap<sp/>and<sp/>y-gap<sp/>are<sp/>measured<sp/>from<sp/>the<sp/>nearest<sp/>side<sp/>of<sp/>the<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>to<sp/>the<sp/>FARTHEST<sp/>side<sp/>of<sp/>the<sp/>diacritic<sp/>to<sp/>allow<sp/>small<sp/>diacritics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>a<sp/>reasonable<sp/>distance<sp/>away,<sp/>but<sp/>not<sp/>big<sp/>diacritics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>best_x_overlap<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>best_y_overlap<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_total_dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_y_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>best_xbox;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>the<sp/>search<sp/>box<sp/>could<sp/>be<sp/>setup<sp/>using<sp/>the<sp/>projection<sp/>as<sp/>a<sp/>guide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(small_box);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_pad<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(gridsize()<sp/>*<sp/><ref refid="namespacetesseract_1aabf5756c7e5d355517dc1af5df71e750" kindref="member">kDiacriticXPadRatio</ref>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_pad<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(gridsize()<sp/>*<sp/><ref refid="namespacetesseract_1adfd3b22e2049d8d544208834da403031" kindref="member">kDiacriticYPadRatio</ref>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" kindref="member">pad</ref>(x_pad,<sp/>y_pad);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_height<sp/>=<sp/>height<sp/>*<sp/><ref refid="namespacetesseract_1a3883c045452c59e5a80bd9ed73cd9e6f" kindref="member">kMinDiacriticSizeRatio</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1aed57b07f933309970d23490dfc5a5e52" kindref="member">BLOBNBOX::UnMergeableType</ref>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour<sp/>==<sp/>blob<sp/>||<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>())</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()-&gt;<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>not<sp/>strong<sp/>enough:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Diacritics<sp/>must<sp/>be<sp/>attached<sp/>to<sp/>strong<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&lt;<sp/>min_height)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>not<sp/>big<sp/>enough:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>small<sp/>to<sp/>be<sp/>the<sp/>base<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_gap<sp/>=<sp/>small_box.x_gap(nbox);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_gap<sp/>=<sp/>small_box.y_gap(nbox);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_distance<sp/>=<sp/>projection_-&gt;DistanceOfBoxFromBox(small_box,<sp/>nbox,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>denorm_,</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;xgap=%d,<sp/>y=%d,<sp/>total<sp/>dist=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_gap,<sp/>y_gap,<sp/>total_distance);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_distance<sp/>&gt;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()-&gt;<ref refid="classtesseract_1_1_col_partition_1a2ede8f204ed66939a0c4352657da6c94" kindref="member">median_size</ref>()<sp/>*<sp/><ref refid="namespacetesseract_1a140f97b7a02095877cba6ffaf66edc32" kindref="member">kMaxDiacriticDistanceRatio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>with<sp/>median<sp/>size<sp/>%d<sp/>too<sp/>far<sp/>away:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()-&gt;<ref refid="classtesseract_1_1_col_partition_1a2ede8f204ed66939a0c4352657da6c94" kindref="member">median_size</ref>());</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Diacritics<sp/>must<sp/>not<sp/>be<sp/>too<sp/>distant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_gap<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Computing<sp/>reduced<sp/>box<sp/>for<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>small_box.left()<sp/>-<sp/>small_box.width();</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>small_box.right()<sp/>+<sp/>small_box.width();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a5922e4cbb809ee92c2fbffe2f64be1a7" kindref="member">BoundsWithinLimits</ref>(left,<sp/>right);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y_gap<sp/>=<sp/>small_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(nbox);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_x_overlap<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>y_gap<sp/>&lt;<sp/>best_y_gap)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x_overlap<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_xbox<sp/>=<sp/>nbox;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y_gap<sp/>=<sp/>y_gap;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>best:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Shrunken<sp/>box<sp/>doesn&apos;t<sp/>win:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a05bf035f2a4e78b71d80c719110be401" kindref="member">ConfirmNoTabViolation</ref>(*neighbour))<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_y_overlap<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>total_distance<sp/>&lt;<sp/>best_total_dist)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>best<sp/>y<sp/>overlap:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y_overlap<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_total_dist<sp/>=<sp/>total_distance;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>y<sp/>overlap<sp/>box<sp/>doesn&apos;t<sp/>win:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>wrong<sp/>side<sp/>of<sp/>a<sp/>tab:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_x_overlap<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(best_y_overlap<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_xbox.<ref refid="class_t_b_o_x_1a6b8b3bf99ea363303e11c26866335f23" kindref="member">major_y_overlap</ref>(best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af354be28840859b8a4b593aa6db467f2" kindref="member">set_diacritic_box</ref>(best_xbox);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6f9b52a46f0c77c395c0a03a99270ac8" kindref="member">set_base_char_blob</ref>(best_x_overlap);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;DiacriticBlob<sp/>OK!<sp/>(x-overlap:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_box.print();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_xbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_y_overlap<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DiacriticXGapFilled(small_grid,<sp/>small_box,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NoNoiseInBetween(small_box,<sp/>best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af354be28840859b8a4b593aa6db467f2" kindref="member">set_diacritic_box</ref>(best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6f9b52a46f0c77c395c0a03a99270ac8" kindref="member">set_base_char_blob</ref>(best_y_overlap);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;DiacriticBlob<sp/>OK!<sp/>(y-overlap:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_box.print();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;DiacriticBlob<sp/>fails:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>small_box.print();</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Best<sp/>x+y<sp/>gap<sp/>=<sp/>%d,<sp/>y<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>best_total_dist,<sp/>best_y_gap);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_y_overlap<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;XGapFilled=%d,<sp/>NoiseBetween=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiacriticXGapFilled(small_grid,<sp/>small_box,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>()),</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NoNoiseInBetween(small_box,<sp/>best_y_overlap-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>()));</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>no<sp/>gap<sp/>between<sp/>the<sp/>base<sp/>char<sp/>and<sp/>the<sp/>diacritic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bigger<sp/>than<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>height<sp/>of<sp/>the<sp/>base<sp/>char:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eg:<sp/>line<sp/>end.....&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>quote<sp/>is<sp/>a<sp/>long<sp/>way<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line,<sp/>yet<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>diacritic.<sp/>To<sp/>determine<sp/>that<sp/>the<sp/>quote<sp/>is<sp/>not<sp/>part<sp/>of<sp/>an<sp/>image,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>different<sp/>text<sp/>block,<sp/>we<sp/>check<sp/>for<sp/>other<sp/>marks<sp/>in<sp/>the<sp/>gap<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>base<sp/>char<sp/>and<sp/>the<sp/>diacritic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&lt;--Diacritic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|---------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&lt;-toobig-gap-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/>Base<sp/><sp/><sp/><sp/>|&lt;ok<sp/>gap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|---------|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&lt;-----Dot<sp/>occupying<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>grid<sp/>is<sp/>const<sp/>really.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::DiacriticXGapFilled(BlobGrid*<sp/>grid,</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>diacritic_box,</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>base_box)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>most<sp/>gaps<sp/>are<sp/>small,<sp/>use<sp/>an<sp/>iterative<sp/>algorithm<sp/>to<sp/>search<sp/>the<sp/>gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gap<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(base_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>*</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aaf71279184a5815428ada7f1b3fa5d5c" kindref="member">kMaxDiacriticGapToBaseCharHeight</ref>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>occupied_box(base_box);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diacritic_gap;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((diacritic_gap<sp/>=<sp/>diacritic_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(occupied_box))<sp/>&gt;<sp/>max_gap)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(occupied_box);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diacritic_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>search_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>looking<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(search_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(search_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>max_gap);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>looking<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(search_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(search_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>max_gap);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>rsearch(grid);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(diacritic_box)<sp/>&lt;<sp/>diacritic_gap)<sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>occupied_box.left())</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>occupied_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>occupied_box.right())</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>occupied_box.set_right(nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>big<sp/>gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gap<sp/>was<sp/>filled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>diacritics<sp/>with<sp/>the<sp/>ColPartition<sp/>of<sp/>the<sp/>base<sp/>character<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::MergeDiacritics(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>small_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(small_it.mark_cycle_pt();<sp/>!small_it.cycled_list();<sp/>small_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>small_it.data();</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a924df3654c8d3436b30c5a5652e62a89" kindref="member">base_char_blob</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a924df3654c8d3436b30c5a5652e62a89" kindref="member">base_char_blob</ref>()-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>base<sp/>character<sp/>must<sp/>be<sp/>owned<sp/>by<sp/>a<sp/>partition<sp/>and<sp/>that<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>not<sp/>be<sp/>on<sp/>the<sp/>big_parts<sp/>list<sp/>(not<sp/>block<sp/>owned).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!part-&gt;block_owned()<sp/>&amp;&amp;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>partition<sp/>has<sp/>to<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>grid<sp/>and<sp/>reinserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>its<sp/>bounding<sp/>box<sp/>may<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid-&gt;RemoveBBox(part);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;<ref refid="classtesseract_1_1_col_partition_1a636e7965ba55518f4e54a75a4a6ee1fd" kindref="member">AddBox</ref>(blob);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(part-&gt;blob_type());</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(part-&gt;flow());</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(part);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid-&gt;InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>all<sp/>base<sp/>chars<sp/>to<sp/>NULL<sp/>before<sp/>any<sp/>blobs<sp/>get<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6f9b52a46f0c77c395c0a03a99270ac8" kindref="member">set_base_char_blob</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>blobs<sp/>on<sp/>the<sp/>large_blobs<sp/>list<sp/>of<sp/>block<sp/>that<sp/>are<sp/>still<sp/>unowned<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartition,<sp/>are<sp/>probably<sp/>drop-cap<sp/>or<sp/>vertically<sp/>touching<sp/>so<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>removed<sp/>to<sp/>the<sp/>big_parts<sp/>list<sp/>and<sp/>treated<sp/>separately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::RemoveLargeUnusedBlobs(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts)<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>large_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(large_it.mark_cycle_pt();<sp/>!large_it.cycled_list();<sp/>large_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>large_it.data();</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>big_part<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(big_part<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>blobs<sp/>should<sp/>have<sp/>gone<sp/>into<sp/>partitions<sp/>by<sp/>now<sp/>if<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>genuine<sp/>characters,<sp/>so<sp/>move<sp/>any<sp/>unowned<sp/>ones<sp/>out<sp/>to<sp/>the<sp/>big<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.<sp/>This<sp/>will<sp/>include<sp/>drop<sp/>caps<sp/>and<sp/>vertically<sp/>touching<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition::MakeBigPartition(blob,<sp/>big_parts);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>remaining<sp/>unused<sp/>blobs<sp/>are<sp/>put<sp/>in<sp/>individual<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::PartitionRemainingBlobs(ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_grid_x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_grid_y<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>BLOBNBOX_CLIST<sp/>cell_list;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>cell_it(&amp;cell_list);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell_all_noise<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_x<sp/>=<sp/>gsearch.GridX();</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_y<sp/>=<sp/>gsearch.GridY();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grid_x<sp/>!=<sp/>prev_grid_x<sp/>||<sp/>grid_y<sp/>!=<sp/>prev_grid_y)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>cell.<sp/>Process<sp/>old<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MakePartitionsFromCellList(cell_all_noise,<sp/>part_grid,<sp/>&amp;cell_list);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cell_it.set_to_list(&amp;cell_list);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_grid_x<sp/>=<sp/>grid_x;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_grid_y<sp/>=<sp/>grid_y;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cell_all_noise<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cell_it.add_to_end(bbox);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_all_noise<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cell_all_noise<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>MakePartitionsFromCellList(cell_all_noise,<sp/>part_grid,<sp/>&amp;cell_list);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>combine,<sp/>put<sp/>all<sp/>blobs<sp/>in<sp/>the<sp/>cell_list<sp/>into<sp/>a<sp/>single<sp/>partition,<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="comment">//<sp/>put<sp/>each<sp/>one<sp/>into<sp/>its<sp/>own<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::MakePartitionsFromCellList(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>combine,</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>cell_list)<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_list-&gt;empty())</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>cell_it(cell_list);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(combine)<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>cell_it.extract();</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>(),<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;AddBox(bbox);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>());</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cell_it.forward();<sp/>!cell_it.empty();<sp/>cell_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(cell_it.extract());</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>CompletePartition(part,<sp/>part_grid);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!cell_it.empty();<sp/>cell_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>cell_it.extract();</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>(),<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>());</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;AddBox(bbox);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CompletePartition(part,<sp/>part_grid);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>finish<sp/>setting<sp/>up<sp/>a<sp/>ColPartition<sp/>and<sp/>insert<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::CompletePartition(ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>projection_-&gt;EvaluateColPartition(*part,<sp/>denorm_,<sp/>debug);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>part-&gt;SetRegionAndFlowTypesFromProjectionValue(value);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>part-&gt;ClaimBoxes();</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>part_grid-&gt;InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge<sp/>partitions<sp/>where<sp/>the<sp/>merge<sp/>appears<sp/>harmless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StrokeWidth::EasyMerges(ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>part_grid-&gt;Merges(</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;StrokeWidth::OrientationSearchBox),</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;StrokeWidth::ConfirmEasyMerge));</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>search<sp/>box<sp/>based<sp/>on<sp/>the<sp/>orientation<sp/>of<sp/>the<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>suitable<sp/>box<sp/>can<sp/>be<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>for<sp/>EasyMerges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::OrientationSearchBox(ColPartition*<sp/>part,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsVerticalType())<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(box-&gt;<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box-&gt;<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(box-&gt;<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>box-&gt;<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(box-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>box-&gt;<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>box-&gt;<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(box-&gt;<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>box-&gt;<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge<sp/>confirmation<sp/>callback<sp/>for<sp/>EasyMerges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::ConfirmEasyMerge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>p1,</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(p1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>p2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!p1-&gt;IsEmpty()<sp/>&amp;&amp;<sp/>!p2-&gt;IsEmpty());</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p1-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref><sp/>&amp;&amp;<sp/>p2-&gt;flow()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(p1-&gt;flow()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>&amp;&amp;<sp/>p2-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>))</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>merge<sp/>confirmed<sp/>image<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p1-&gt;IsVerticalType()<sp/>||<sp/>p2-&gt;IsVerticalType())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1-&gt;HCoreOverlap(*p2)<sp/>&lt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((!p1-&gt;IsSingleton()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!p2-&gt;IsSingleton())<sp/>||</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!p1-&gt;bounding_box().major_overlap(p2-&gt;bounding_box())))</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap<sp/>must<sp/>be<sp/>in<sp/>the<sp/>text<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p1-&gt;IsHorizontalType()<sp/>||<sp/>p2-&gt;IsHorizontalType())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1-&gt;VCoreOverlap(*p2)<sp/>&lt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((!p1-&gt;IsSingleton()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!p2-&gt;IsSingleton())<sp/>||</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!p1-&gt;bounding_box().major_overlap(p2-&gt;bounding_box())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!p1-&gt;OKDiacriticMerge(*p2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!p2-&gt;OKDiacriticMerge(*p1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))))</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap<sp/>must<sp/>be<sp/>in<sp/>the<sp/>text<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p1-&gt;ConfirmNoTabViolation(*p2))</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1-&gt;flow()<sp/>&lt;=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref><sp/>&amp;&amp;<sp/>p2-&gt;flow()<sp/>&lt;=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>)</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NoNoiseInBetween(p1-&gt;bounding_box(),<sp/>p2-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>no<sp/>significant<sp/>noise<sp/>in<sp/>between<sp/>the<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StrokeWidth::NoNoiseInBetween(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ImageFind::BlankImageInBetween(box1,<sp/>box2,<sp/>grid_box_,<sp/>rerotation_,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nontext_map_);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>StrokeWidth::DisplayGoodBlobs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>window_name,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1836"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>window<sp/>=<sp/>MakeWindow(x,<sp/>y,<sp/>window_name);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>blob<sp/>in<sp/>the<sp/>grid,<sp/>display<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ad5f03af259325c42eaaffa843cd1fdde" kindref="member">Brush</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a77673d8f27617bcfe50a6ebdd81e8c79" kindref="member">ScrollView::NONE</ref>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>bbox<sp/>in<sp/>the<sp/>grid,<sp/>display<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>goodness<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a17600c15bdfd57f24bb7ec5b2765a48f" kindref="member">GoodTextBlob</ref>();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>();</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>())</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>();</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goodness<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goodness<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_b_l_o_b_n_b_o_x_1a7351d74f423975d676f47e4dc05e267f" kindref="member">BLOBNBOX::TextlineColor</ref>(blob_type,<sp/>flow));</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(left_x,<sp/>bottom_y,<sp/>right_x,<sp/>top_y);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1870"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawDiacriticJoiner(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,<sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>blob_box(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(blob_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af83ee964739e33a2611a1ba4b21f7a4c" kindref="member">base_char_top</ref>());</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6fd24eab699bad3b00917fea0a82792b" kindref="member">base_char_bottom</ref>());</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>blob_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1879"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(x,<sp/>top,<sp/>x,<sp/>bottom);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1881"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Displays<sp/>blobs<sp/>colored<sp/>according<sp/>to<sp/>whether<sp/>or<sp/>not<sp/>they<sp/>are<sp/>diacritics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>StrokeWidth::DisplayDiacritics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>window_name,</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1888"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>window<sp/>=<sp/>MakeWindow(x,<sp/>y,<sp/>window_name);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>blob<sp/>in<sp/>the<sp/>grid,<sp/>display<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ad5f03af259325c42eaaffa843cd1fdde" kindref="member">Brush</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a77673d8f27617bcfe50a6ebdd81e8c79" kindref="member">ScrollView::NONE</ref>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(ScrollView::GREEN);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawDiacriticJoiner(blob,<sp/>window);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a88b94d1e2384a734dba0b553e86307b1" kindref="member">BoxColor</ref>());</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<sp/>bottom(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>it.set_to_list(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(ScrollView::GREEN);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawDiacriticJoiner(blob,<sp/>window);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0eab2b208fc9a5e2774f92cf3e768982" kindref="member">ScrollView::WHITE</ref>);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<sp/>bottom(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1918"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp"/>
  </compounddef>
</doxygen>
