<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="trie_8cpp" kind="file">
    <compoundname>trie.cpp</compoundname>
    <includes refid="trie_8h" local="yes">trie.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="dawg_8h" local="yes">dawg.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <incdepgraph>
      <node id="35646">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="35647" relation="include">
        </childnode>
        <childnode refid="35652" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
      </node>
      <node id="35655">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="35658">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
      </node>
      <node id="35615">
        <label>assert.h</label>
      </node>
      <node id="35620">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="35598">
        <label>dict/trie.cpp</label>
        <link refid="trie.cpp"/>
        <childnode refid="35599" relation="include">
        </childnode>
        <childnode refid="35653" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
        <childnode refid="35654" relation="include">
        </childnode>
        <childnode refid="35660" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
      </node>
      <node id="35652">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="35607">
        <label>stdlib.h</label>
      </node>
      <node id="35604">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="35605" relation="include">
        </childnode>
      </node>
      <node id="35631">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="35611" relation="include">
        </childnode>
      </node>
      <node id="35647">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="35648" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35649" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35650" relation="include">
        </childnode>
        <childnode refid="35651" relation="include">
        </childnode>
      </node>
      <node id="35640">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
      </node>
      <node id="35606">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35612" relation="include">
        </childnode>
      </node>
      <node id="35616">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
      </node>
      <node id="35632">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="35633" relation="include">
        </childnode>
        <childnode refid="35639" relation="include">
        </childnode>
      </node>
      <node id="35599">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="35600" relation="include">
        </childnode>
        <childnode refid="35645" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
      </node>
      <node id="35614">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35627" relation="include">
        </childnode>
      </node>
      <node id="35610">
        <label>stddef.h</label>
      </node>
      <node id="35623">
        <label>memory.h</label>
      </node>
      <node id="35653">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
      </node>
      <node id="35611">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
      </node>
      <node id="35605">
        <label>limits.h</label>
      </node>
      <node id="35654">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="35648" relation="include">
        </childnode>
        <childnode refid="35600" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35655" relation="include">
        </childnode>
        <childnode refid="35656" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
        <childnode refid="35657" relation="include">
        </childnode>
        <childnode refid="35599" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35659" relation="include">
        </childnode>
      </node>
      <node id="35637">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="35636" relation="include">
        </childnode>
      </node>
      <node id="35638">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="35635" relation="include">
        </childnode>
      </node>
      <node id="35630">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
      </node>
      <node id="35650">
        <label>pthread.h</label>
      </node>
      <node id="35608">
        <label>string.h</label>
      </node>
      <node id="35626">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="35622" relation="include">
        </childnode>
      </node>
      <node id="35622">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="35623" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
      </node>
      <node id="35645">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35646" relation="include">
        </childnode>
      </node>
      <node id="35639">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="35636" relation="include">
        </childnode>
        <childnode refid="35635" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
        <childnode refid="35640" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
      </node>
      <node id="35629">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
      </node>
      <node id="35618">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
      </node>
      <node id="35651">
        <label>semaphore.h</label>
      </node>
      <node id="35633">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="35634" relation="include">
        </childnode>
        <childnode refid="35638" relation="include">
        </childnode>
        <childnode refid="35629" relation="include">
        </childnode>
        <childnode refid="35639" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35640" relation="include">
        </childnode>
      </node>
      <node id="35627">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35629" relation="include">
        </childnode>
        <childnode refid="35630" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35632" relation="include">
        </childnode>
        <childnode refid="35642" relation="include">
        </childnode>
      </node>
      <node id="35642">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35643" relation="include">
        </childnode>
        <childnode refid="35627" relation="include">
        </childnode>
      </node>
      <node id="35612">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="35611" relation="include">
        </childnode>
      </node>
      <node id="35648">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="35601" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
      </node>
      <node id="35636">
        <label>math.h</label>
      </node>
      <node id="35634">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="35635" relation="include">
        </childnode>
        <childnode refid="35638" relation="include">
        </childnode>
      </node>
      <node id="35613">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="35611" relation="include">
        </childnode>
      </node>
      <node id="35644">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="35635" relation="include">
        </childnode>
      </node>
      <node id="35656">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="35645" relation="include">
        </childnode>
        <childnode refid="35618" relation="include">
        </childnode>
      </node>
      <node id="35628">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
      </node>
      <node id="35617">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
      </node>
      <node id="35657">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
        <childnode refid="35658" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
      </node>
      <node id="35609">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="35610" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
      </node>
      <node id="35660">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
      </node>
      <node id="35601">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
      </node>
      <node id="35624">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35626" relation="include">
        </childnode>
      </node>
      <node id="35600">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="35601" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35618" relation="include">
        </childnode>
      </node>
      <node id="35635">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35636" relation="include">
        </childnode>
        <childnode refid="35601" relation="include">
        </childnode>
        <childnode refid="35637" relation="include">
        </childnode>
      </node>
      <node id="35621">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="35641">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="35628" relation="include">
        </childnode>
      </node>
      <node id="35603">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="35604" relation="include">
        </childnode>
      </node>
      <node id="35602">
        <label>stdio.h</label>
      </node>
      <node id="35649">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
      </node>
      <node id="35625">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
      </node>
      <node id="35619">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
      </node>
      <node id="35659">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="35614" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
      </node>
      <node id="35643">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="35644" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35639" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trie.c<sp/><sp/>(Formerly<sp/>trie.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Functions<sp/>to<sp/>build<sp/>a<sp/>trie<sp/>data<sp/>structure.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Jul<sp/>26<sp/>12:18:10<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4800)<sp/><sp/>//<sp/>int/bool<sp/>warnings</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trie_8h" kindref="compound">trie.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dawg_8h" kindref="compound">dawg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a0db2198747060995d61a01dcfac97eb7" kindref="member">kDoNotReverse</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RRP_DO_NO_REVERSE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a402a13eb2d1593daed0190a118f23d88" kindref="member">kReverseIfHasRTL</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RRP_REVERSE_IF_HAS_RTL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a597d22620e40ecc0ec38dfa4f65a9d85" kindref="member">kForceReverse</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RRP_FORCE_REVERSE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af5c5a40d574f6ab56726b8b2f963f65c" kindref="member">RTLReversePolicyNames</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a0db2198747060995d61a01dcfac97eb7" kindref="member">kDoNotReverse</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a402a13eb2d1593daed0190a118f23d88" kindref="member">kReverseIfHasRTL</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a597d22620e40ecc0ec38dfa4f65a9d85" kindref="member">kForceReverse</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1accb2db10883874ef33e8fc10485d233d" kindref="member">Trie::kAlphaPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2000&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5bfe332d0b72fdf02e06fa22aa997f4e" kindref="member">Trie::kDigitPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2001&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a1e9b435df559db4d5b609ea597af5db9" kindref="member">Trie::kAlphanumPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2002&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a8e0965655cc0eb3df2325ba15af9b6e6" kindref="member">Trie::kPuncPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2003&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a17ea14c41c90b5c16daf49a0d4ae05fa" kindref="member">Trie::kLowerPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2004&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a37a2d83dfea61a9ed42c71fce82d2650" kindref="member">Trie::kUpperPatternUnicode</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\u2005&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classtesseract_1_1_trie_1abd47ba165316b0d3218a61af590ddc25" kindref="member">Trie::get_reverse_policy_name</ref>(RTLReversePolicy<sp/>reverse_policy)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af5c5a40d574f6ab56726b8b2f963f65c" kindref="member">RTLReversePolicyNames</ref>[reverse_policy];</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>Trie<sp/>to<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a344c89fd53c0773ff274848e0cd26e17" kindref="member">Trie::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1adb83b76780ee631a66db075a043205fc" kindref="member">new_dawg_node</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>allocate<sp/>node<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">Trie::edge_char_of</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_ref,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next_node,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>**edge_ptr,<sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>*edge_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;edge_char_of()<sp/>given<sp/>node_ref<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>next_node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>direction<sp/>%d<sp/>word_end<sp/>%d<sp/>unichar_id<sp/>%d,<sp/>exploring<sp/>node:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_ref,<sp/>next_node,<sp/>direction,<sp/>word_end,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_ref<sp/>!=<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(node_ref,<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node_ref]-&gt;forward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_ref<sp/>==<sp/>NO_EDGE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>assert(node_ref<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>&amp;vec<sp/>=<sp/>(direction<sp/>==<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>)<sp/>?</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node_ref]-&gt;forward_edges<sp/>:<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node_ref]-&gt;backward_edges;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vec_size<sp/>=<sp/>vec.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_ref<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>end<sp/>=<sp/>vec_size<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>k;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(start<sp/>+<sp/>end)<sp/>&gt;&gt;<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>(start<sp/>+<sp/>end)<sp/>/<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compare<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a51413c471a98611d2d46a8685ff1eb40" kindref="member">given_greater_than_edge_rec</ref>(next_node,<sp/>word_end,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>vec[k]);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>==<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*edge_ptr<sp/>=<sp/>&amp;(vec[k]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*edge_index<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>&gt;<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>k<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>&lt;<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>k<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>linear<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge_rec<sp/>=<sp/>vec[i];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a7dff8b32c3f0f735944fce4b270e3e3e" kindref="member">edge_rec_match</ref>(next_node,<sp/>word_end,<sp/>unichar_id,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge_rec),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(edge_rec),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(edge_rec)))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*edge_ptr<sp/>=<sp/>&amp;(edge_rec);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*edge_index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a43827367f1b019273a399f03ecaf9c6d" kindref="member">Trie::add_edge_linkage</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>marker_flag,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>==<sp/><ref refid="classtesseract_1_1_trie_1abcc7db0ede4b8657e021f90c2966677f" kindref="member">max_num_edges_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>*vec<sp/>=<sp/>(direction<sp/>==<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>)<sp/>?</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;(<ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node1]-&gt;forward_edges)<sp/>:<sp/>&amp;(<ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node1]-&gt;backward_edges);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_index;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>search_index<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>index<sp/>to<sp/>make<sp/>the<sp/>add<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(search_index<sp/>&lt;<sp/>vec-&gt;size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a51413c471a98611d2d46a8685ff1eb40" kindref="member">given_greater_than_edge_rec</ref>(node2,<sp/>word_end,<sp/>unichar_id,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*vec)[search_index])<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_index++;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>search_index<sp/>=<sp/>vec-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>is<sp/>unsorted,<sp/>so<sp/>index<sp/>does<sp/>not<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>edge_rec;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a0efb447c693077c00d4c793acb760e52" kindref="member">link_edge</ref>(&amp;edge_rec,<sp/>node2,<sp/>marker_flag,<sp/>direction,<sp/>word_end,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_index<sp/>&lt;<sp/>vec-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a57ca5259541548a97bcfd4d0925a27ff" kindref="member">insert</ref>(edge_rec,<sp/>search_index);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(edge_rec);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;new<sp/>edge<sp/>in<sp/>nodes_[&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>node1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>(edge_rec);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref>++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1affb7341ac1fa928396b525565ef6d625" kindref="member">Trie::add_word_ending</ref>(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_ptr,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>the_next_node,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>marker_flag,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*back_edge_ptr;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>back_edge_index;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(the_next_node,<sp/>NO_EDGE,<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>&amp;back_edge_ptr,<sp/>&amp;back_edge_index));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(marker_flag)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>*back_edge_ptr<sp/>|=<sp/>(<ref refid="dawg_8h_1a7e0df79bf5779569d0c9f325216e7613" kindref="member">MARKER_FLAG</ref><sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>*edge_ptr<sp/>|=<sp/>(<ref refid="dawg_8h_1a7e0df79bf5779569d0c9f325216e7613" kindref="member">MARKER_FLAG</ref><sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>both<sp/>directions<sp/>as<sp/>end<sp/>of<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>*back_edge_ptr<sp/>|=<sp/>(<ref refid="dawg_8h_1a0fe1bde7916f6e5869319634b341449d" kindref="member">WERD_END_FLAG</ref><sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>*edge_ptr<sp/>|=<sp/>(<ref refid="dawg_8h_1a0fe1bde7916f6e5869319634b341449d" kindref="member">WERD_END_FLAG</ref><sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">Trie::add_word_to_dawg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;bool&gt;</ref><sp/>*repetitions)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>add<sp/>empty<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repetitions<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(repetitions-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>word<sp/>does<sp/>not<sp/>contain<sp/>invalid<sp/>unchar<sp/>ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i)<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i)<sp/>&gt;=<sp/><ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_ptr;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>last_node<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>the_next_node;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>marker_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>still_finding_chars<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>word_end<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>add_failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa27589343655d5843a6482dbb3731d5a" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;\nAdding<sp/>word:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>unichar_id<sp/>=<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>marker_flag<sp/>=<sp/>(repetitions<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>(*repetitions)[i]<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>letter<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(still_finding_chars)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(last_node,<sp/>NO_EDGE,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,<sp/>word_end,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>&amp;edge_ptr,<sp/>&amp;edge_index);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>&amp;&amp;<sp/><ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;exploring<sp/>edge<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_index,<sp/>last_node);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>still_finding_chars<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(*edge_ptr)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>still_finding_chars<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a257f7036f5799ec557d56570686a4cb8" kindref="member">remove_edge</ref>(last_node,<sp/>0,<sp/>word_end,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(marker_flag)<sp/><ref refid="classtesseract_1_1_dawg_1ab55a9591be8d4332a62c25c527db3479" kindref="member" tooltip="Sets this edge record to be the last one in a sequence of edges. ">set_marker_flag_in_edge_rec</ref>(edge_ptr);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_node<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(*edge_ptr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!still_finding_chars)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>the_next_node<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1adb83b76780ee631a66db075a043205fc" kindref="member">new_dawg_node</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;adding<sp/>node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>the_next_node);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(the_next_node<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_trie_1a2bdf4197cdfb791df18dd373804d3372" kindref="member">add_new_edge</ref>(last_node,<sp/>the_next_node,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker_flag,<sp/>word_end,<sp/>unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_end<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_node<sp/>=<sp/>the_next_node;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>the_next_node<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>unichar_id<sp/>=<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>marker_flag<sp/>=<sp/>(repetitions<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>(*repetitions)[i]<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>letter<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(still_finding_chars<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(last_node,<sp/>NO_EDGE,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>&amp;edge_ptr,<sp/>&amp;edge_index))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>extension<sp/>of<sp/>this<sp/>word<sp/>already<sp/>exists<sp/>in<sp/>the<sp/>trie,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>have<sp/>to<sp/>add<sp/>the<sp/>ending<sp/>flags<sp/>in<sp/>both<sp/>directions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1affb7341ac1fa928396b525565ef6d625" kindref="member">add_word_ending</ref>(edge_ptr,<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(*edge_ptr),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker_flag,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!add_failed<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_trie_1a2bdf4197cdfb791df18dd373804d3372" kindref="member">add_new_edge</ref>(last_node,<sp/>the_next_node,<sp/>marker_flag,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>unichar_id))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add_failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(add_failed)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Re-initializing<sp/>document<sp/>dictionary...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a344c89fd53c0773ff274848e0cd26e17" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1adb83b76780ee631a66db075a043205fc" kindref="member">Trie::new_dawg_node</ref>()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>*node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>failed<sp/>to<sp/>create<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(node);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a6c611d36dee495e8954a783abe567727" kindref="member">Trie::read_word_list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80" kindref="member">Trie::RTLReversePolicy</ref><sp/>reverse_policy)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>FILE<sp/>*word_file;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>word_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>word_file<sp/>=<sp/><ref refid="cutil_8cpp_1ae3226f9d05617de0b7174bc7b7fce5b6" kindref="member">open_file</ref><sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>word_file)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a31bec0ef73dd383e256fa462e9fa7e1f" kindref="member">chomp_string</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>word(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>unicharset);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((reverse_policy<sp/>==<sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80aebb1e29c59c60c902106a61853e183e3" kindref="member">RRP_REVERSE_IF_HAS_RTL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa874552f52090378886744ed595f0ab2" kindref="member">has_rtl_unichar_id</ref>())<sp/>||</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse_policy<sp/>==<sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80af7ddb14bc4c549b47f4b1b32f3c284f2" kindref="member">RRP_FORCE_REVERSE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aca0ce8c3551445893cc75af824fa67bc" kindref="member">reverse_and_mirror_unichar_ids</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>++word_count;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&amp;&amp;<sp/>word_count<sp/>%<sp/>10000<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>words<sp/>so<sp/>far\n&quot;</highlight><highlight class="normal">,<sp/>word_count);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a2df106c6d2af21ca16bce3d943ee3303" kindref="member">contains_unichar_id</ref>(INVALID_UNICHAR_ID))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(word))<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(word);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(word))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>word<sp/>&apos;%s&apos;<sp/>not<sp/>in<sp/>DAWG<sp/>after<sp/>adding<sp/>it\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>invalid<sp/>word<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;=<sp/>3)<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa27589343655d5843a6482dbb3731d5a" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>words<sp/>total.\n&quot;</highlight><highlight class="normal">,<sp/>word_count);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>fclose(word_file);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a32fd568d04d81e5d5a7e30aac9b82daa" kindref="member">Trie::initialize_patterns</ref>(<ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*unicharset)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1accb2db10883874ef33e8fc10485d233d" kindref="member">kAlphaPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a01dba4e633d98d8bdddebeeb4b6240fd" kindref="member">alpha_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1accb2db10883874ef33e8fc10485d233d" kindref="member">kAlphaPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1a5bfe332d0b72fdf02e06fa22aa997f4e" kindref="member">kDigitPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a38439594c671a06605349f781e2d1c2c" kindref="member">digit_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1a5bfe332d0b72fdf02e06fa22aa997f4e" kindref="member">kDigitPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1a1e9b435df559db4d5b609ea597af5db9" kindref="member">kAlphanumPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" kindref="member">alphanum_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1a1e9b435df559db4d5b609ea597af5db9" kindref="member">kAlphanumPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1a8e0965655cc0eb3df2325ba15af9b6e6" kindref="member">kPuncPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a7533c8651890d62e6b0d678ed7155cb4" kindref="member">punc_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1a8e0965655cc0eb3df2325ba15af9b6e6" kindref="member">kPuncPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1a17ea14c41c90b5c16daf49a0d4ae05fa" kindref="member">kLowerPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a5a4f976d9be06ec5a7e7dcbe6cc12a88" kindref="member">lower_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1a17ea14c41c90b5c16daf49a0d4ae05fa" kindref="member">kLowerPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(<ref refid="classtesseract_1_1_trie_1a37a2d83dfea61a9ed42c71fce82d2650" kindref="member">kUpperPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a6a9287a8e75f94462c17b13966ed2669" kindref="member">upper_pattern_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(<ref refid="classtesseract_1_1_trie_1a37a2d83dfea61a9ed42c71fce82d2650" kindref="member">kUpperPatternUnicode</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705accff61ce96e5491d99eb177f55c" kindref="member">initialized_patterns_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref><sp/>=<sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a6f0727490d09b82d4b60a7a96191e832" kindref="member">Trie::unichar_id_to_patterns</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref><sp/>*vec)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_alpha<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(unichar_id);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a01dba4e633d98d8bdddebeeb4b6240fd" kindref="member">alpha_pattern_</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" kindref="member">alphanum_pattern_</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a5a4f976d9be06ec5a7e7dcbe6cc12a88" kindref="member">lower_pattern_</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a6a9287a8e75f94462c17b13966ed2669" kindref="member">upper_pattern_</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a38439594c671a06605349f781e2d1c2c" kindref="member">digit_pattern_</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_alpha)<sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" kindref="member">alphanum_pattern_</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_trie_1a7533c8651890d62e6b0d678ed7155cb4" kindref="member">punc_pattern_</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1ab3bd9782abfe9da25e01ced2bcc5000e" kindref="member">Trie::character_class_to_pattern</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a01dba4e633d98d8bdddebeeb4b6240fd" kindref="member">alpha_pattern_</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a38439594c671a06605349f781e2d1c2c" kindref="member">digit_pattern_</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" kindref="member">alphanum_pattern_</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a7533c8651890d62e6b0d678ed7155cb4" kindref="member">punc_pattern_</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5a4f976d9be06ec5a7e7dcbe6cc12a88" kindref="member">lower_pattern_</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a6a9287a8e75f94462c17b13966ed2669" kindref="member">upper_pattern_</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5e75fe75d1803bd3f5e18d423b7b8f1f" kindref="member">Trie::read_pattern_list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_trie_1a1705accff61ce96e5491d99eb177f55c" kindref="member">initialized_patterns_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;please<sp/>call<sp/>initialize_patterns()<sp/>before<sp/>read_pattern_list()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>FILE<sp/>*pattern_file<sp/>=<sp/><ref refid="cutil_8cpp_1ae3226f9d05617de0b7174bc7b7fce5b6" kindref="member">open_file</ref><sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_file<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>pattern<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pattern_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>pattern_file)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a31bec0ef73dd383e256fa462e9fa7e1f" kindref="member">chomp_string</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>pattern<sp/>and<sp/>construct<sp/>a<sp/>unichar<sp/>id<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>number<sp/>of<sp/>repetitions<sp/>of<sp/>each<sp/>unichar<sp/>in<sp/>the<sp/>parallel<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>word(&amp;unicharset);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;bool&gt;</ref><sp/>repetitions_vec;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_ptr<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(str_ptr);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(step<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>curr_unichar_id<sp/>=<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*str_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++str_ptr;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>regular<sp/>&apos;\&apos;<sp/>unichar<sp/>that<sp/>was<sp/>escaped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_unichar_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(str_ptr,<sp/>step);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1af3cc86948eeedc1f4a32835bb0723eb7" kindref="member">kSaneNumConcreteChars</ref>)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Please<sp/>provide<sp/>at<sp/>least<sp/>%d<sp/>concrete<sp/>characters<sp/>at<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>beginning<sp/>of<sp/>the<sp/>pattern\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_trie_1af3cc86948eeedc1f4a32835bb0723eb7" kindref="member">kSaneNumConcreteChars</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>character<sp/>class<sp/>from<sp/>expression.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1ab3bd9782abfe9da25e01ced2bcc5000e" kindref="member">character_class_to_pattern</ref>(*str_ptr);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_unichar_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(str_ptr,<sp/>step);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_unichar_id<sp/>==<sp/><sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>failed<sp/>to<sp/>parse<sp/>this<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a76b0ea9f9f0d9c08b2e84b7372964001" kindref="member">append_unichar_id</ref>(curr_unichar_id,<sp/>1,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>repetitions_vec.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_ptr<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(str_ptr);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>there<sp/>is<sp/>a<sp/>repetition<sp/>pattern<sp/>specified<sp/>after<sp/>this<sp/>unichar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*str_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*(str_ptr+1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repetitions_vec[repetitions_vec.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()-1]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(str_ptr);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>user<sp/>pattern<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>pattern<sp/>into<sp/>the<sp/>trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Inserting<sp/>expanded<sp/>user<sp/>pattern<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(word))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(word,<sp/>&amp;repetitions_vec);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(word))<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>failed<sp/>to<sp/>insert<sp/>pattern<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>++pattern_count;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Read<sp/>%d<sp/>valid<sp/>patterns<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pattern_count,<sp/>filename);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>fclose(pattern_file);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a7c6ee32ebb143eea68aeaf16dfc1edfd" kindref="member">Trie::remove_edge_linkage</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_ptr<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(node1,<sp/>node2,<sp/>direction,<sp/>word_end,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>&amp;edge_ptr,<sp/>&amp;edge_index));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;removed<sp/>edge<sp/>in<sp/>nodes_[&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>node1);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>(*edge_ptr);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node1]-&gt;forward_edges.<ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">remove</ref>(edge_index);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node1]-&gt;backward_edges.<ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">remove</ref>(edge_index);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>--<ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">SquishedDawg<sp/>*<ref refid="classtesseract_1_1_trie_1a434d71a349e7c6e7d1a239b0b71064de" kindref="member">Trie::trie_to_dawg</ref>()<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a34ed0e1ea9fce2a12bb02a61e166a784" kindref="member">print_all</ref>(</highlight><highlight class="stringliteral">&quot;Before<sp/>reduction:&quot;</highlight><highlight class="normal">,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref><sp/>reduced_nodes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[<ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>reduced_nodes[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_trie_1a65c0034f258b73575a13e0f53759ca80" kindref="member">reduce_node_input</ref>(0,<sp/>reduced_nodes);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>reduced_nodes;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a34ed0e1ea9fce2a12bb02a61e166a784" kindref="member">print_all</ref>(</highlight><highlight class="stringliteral">&quot;After<sp/>reduction:&quot;</highlight><highlight class="normal">,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>translation<sp/>map<sp/>from<sp/>node<sp/>indices<sp/>in<sp/>nodes_<sp/>vector<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>their<sp/>target<sp/>indices<sp/>in<sp/>EDGE_ARRAY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>*node_ref_map<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref>[<ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>node_ref_map[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>node_ref_map[i+1]<sp/>=<sp/>node_ref_map[i]<sp/>+<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[i]-&gt;forward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_forward_edges<sp/>=<sp/>node_ref_map[i];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>nodes_<sp/>vector<sp/>into<sp/>EDGE_ARRAY<sp/>translating<sp/>the<sp/>next<sp/>node<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>edges<sp/>using<sp/>node_ref_map.<sp/>Empty<sp/>nodes<sp/>and<sp/>backward<sp/>edges<sp/>are<sp/>dropped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a51438783ac73f19b33094c73c9d55ce7" kindref="member">EDGE_ARRAY</ref><sp/>edge_array<sp/>=</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="dawg_8h_1a51438783ac73f19b33094c73c9d55ce7" kindref="member">EDGE_ARRAY</ref>)<ref refid="freelist_8cpp_1a5898fbe61f6ffe4c1be71a107193cdfd" kindref="member">memalloc</ref>(num_forward_edges<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref>));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a51438783ac73f19b33094c73c9d55ce7" kindref="member">EDGE_ARRAY</ref><sp/>edge_array_ptr<sp/>=<sp/>edge_array;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>*node_ptr<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[i];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>end;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge_rec<sp/>=<sp/>node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>[j];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_ref<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge_rec);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(node_ref<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(edge_rec);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a0efb447c693077c00d4c793acb760e52" kindref="member">link_edge</ref>(edge_array_ptr,<sp/>node_ref_map[node_ref],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(edge_rec),<sp/>unichar_id);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>end<sp/>-<sp/>1)<sp/><ref refid="classtesseract_1_1_dawg_1ab55a9591be8d4332a62c25c527db3479" kindref="member" tooltip="Sets this edge record to be the last one in a sequence of edges. ">set_marker_flag_in_edge_rec</ref>(edge_array_ptr);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++edge_array_ptr;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>node_ref_map;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(edge_array,<sp/>num_forward_edges,<sp/><ref refid="classtesseract_1_1_dawg_1a8f628fef1da0ff7323958362f8286695" kindref="member">type_</ref>,<sp/><ref refid="classtesseract_1_1_dawg_1ac03a89c4ecb3dc5b99ca0500f7f5db41" kindref="member">lang_</ref>,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1ad33dc7881a2f933e801f0d5fd4ccbe41" kindref="member" tooltip="Permuter code that should be used if the word is found in this Dawg. ">perm_</ref>,<sp/><ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref>,<sp/><ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a33de60074d1ede69f4a17be28b1c03c8" kindref="member">Trie::eliminate_redundant_edges</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge1,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge2)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nCollapsing<sp/>node<sp/>%d:\n&quot;</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(node,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Candidate<sp/>edges:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>(edge1);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>(edge2);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next_node1<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge1);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next_node2<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge2);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>*next_node2_ptr<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[next_node2];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>all<sp/>edges<sp/>going<sp/>to/from<sp/>next_node2<sp/>to<sp/>go<sp/>to/from<sp/>next_node1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_ptr<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>backward<sp/>link<sp/>in<sp/>node<sp/>to<sp/>next_node2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;fwd_edge<sp/>=<sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>[0];</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1a7c6ee32ebb143eea68aeaf16dfc1edfd" kindref="member">remove_edge_linkage</ref>(node,<sp/>next_node2,<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(fwd_edge),</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(fwd_edge));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>all<sp/>the<sp/>backward<sp/>links<sp/>in<sp/>next_node2<sp/>to<sp/>node<sp/>next_node1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;bkw_edge<sp/>=<sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>[i];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>curr_next_node<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(bkw_edge);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>curr_unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(bkw_edge);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_word_end<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(bkw_edge);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>marker_flag<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a1729e82cc3d78d51d97c8be89a5409ca" kindref="member" tooltip="Returns the marker flag of this edge. ">marker_flag_from_edge_rec</ref>(bkw_edge);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a43827367f1b019273a399f03ecaf9c6d" kindref="member">add_edge_linkage</ref>(next_node1,<sp/>curr_next_node,<sp/>marker_flag,<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_word_end,<sp/>curr_unichar_id);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relocate<sp/>the<sp/>corresponding<sp/>forward<sp/>edge<sp/>in<sp/>curr_next_node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(curr_next_node,<sp/>next_node2,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_word_end,<sp/>curr_unichar_id,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;edge_ptr,<sp/>&amp;edge_index));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a4a4b153bf6de3083aaac1af0600fa4ee" kindref="member" tooltip="Sets the next node link for this edge in the Dawg. ">set_next_node_in_edge_rec</ref>(edge_ptr,<sp/>next_node1);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_node2_num_edges<sp/>=<sp/>(next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>+</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;removed<sp/>%d<sp/>edges<sp/>from<sp/>node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_node2_num_edges,<sp/>next_node2);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>next_node2_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>-=<sp/>next_node2_num_edges;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a32561d4a203cd179f7d8310be7eadb68" kindref="member">Trie::reduce_lettered_edges</ref>(<ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>&amp;backward_edges,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref><sp/>reduced_nodes)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;reduce_lettered_edges(edge=&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">,<sp/>edge_index);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>each<sp/>of<sp/>the<sp/>edge<sp/>pairs<sp/>with<sp/>the<sp/>given<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>did_something<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>edge_index;<sp/>i<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>edge<sp/>that<sp/>can<sp/>be<sp/>eliminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>curr_unichar_id<sp/>=<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((curr_unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(backward_edges[i]))<sp/>==</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_trie_1ae0fcbf55e0568a52bc5eeb7c42aff18e" kindref="member">can_be_eliminated</ref>(backward_edges[i]))<sp/>++i;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>||<sp/>curr_unichar_id<sp/>!=<sp/>unichar_id)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge_rec<sp/>=<sp/>backward_edges[i];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>it<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>edges<sp/>with<sp/>the<sp/>given<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;next_edge_rec<sp/>=<sp/>backward_edges[j];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(next_edge_rec)<sp/>!=<sp/>unichar_id)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(next_edge_rec)<sp/>==</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(edge_rec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1ae0fcbf55e0568a52bc5eeb7c42aff18e" kindref="member">can_be_eliminated</ref>(next_edge_rec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33de60074d1ede69f4a17be28b1c03c8" kindref="member">eliminate_redundant_edges</ref>(node,<sp/>edge_rec,<sp/>next_edge_rec))<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduced_nodes[<ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge_rec)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>did_something<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--j;<sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>increment<sp/>j<sp/>if<sp/>next_edge_rec<sp/>was<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>did_something;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a83dff0c6f9e38ecc02eae8c4ae0ba041" kindref="member">Trie::sort_edges</ref>(<ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>*edges)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_edges<sp/>=<sp/>edges-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_edges<sp/>&lt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_edges<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(i<sp/>+<sp/>1);<sp/>j<sp/>&lt;<sp/>num_edges;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>((*edges)[j])<sp/>&lt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>((*edges)[min]))<sp/>min<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>temp<sp/>=<sp/>(*edges)[i];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*edges)[i]<sp/>=<sp/>(*edges)[min];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*edges)[min]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a65c0034f258b73575a13e0f53759ca80" kindref="member">Trie::reduce_node_input</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref><sp/>reduced_nodes)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;reduce_node_input(node=&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(node,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>&amp;backward_edges<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node]-&gt;backward_edges;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>0)<sp/><ref refid="classtesseract_1_1_trie_1a83dff0c6f9e38ecc02eae8c4ae0ba041" kindref="member">sort_edges</ref>(&amp;backward_edges);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(edge_index<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(backward_edges[edge_index]);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_trie_1a32561d4a203cd179f7d8310be7eadb68" kindref="member">reduce_lettered_edges</ref>(edge_index,<sp/>unichar_id,<sp/>node,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_edges,<sp/>reduced_nodes));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++edge_index<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(backward_edges[edge_index])<sp/>==<sp/>unichar_id);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>reduced_nodes[node]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>as<sp/>reduced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>after<sp/>reduction:\n&quot;</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(node,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>backward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next_node<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(backward_edges[i]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_node<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!reduced_nodes[next_node])<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a65c0034f258b73575a13e0f53759ca80" kindref="member">reduce_node_input</ref>(next_node,<sp/>reduced_nodes);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">Trie::print_node</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_edges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NO_EDGE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>*node_ptr<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_fwd<sp/>=<sp/>node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_bkw<sp/>=<sp/>node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>*vec;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/>2;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>&amp;(node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(<ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(%d<sp/>%d):<sp/>&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>num_fwd,<sp/>num_bkw);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>&amp;(node_ptr-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>(dir<sp/>==<sp/>0<sp/>?<sp/>i<sp/>&lt;<sp/>num_fwd<sp/>:<sp/>i<sp/>&lt;<sp/>num_bkw)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>max_num_edges;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>((*vec)[i]);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>0<sp/>?<sp/>i<sp/>&lt;<sp/>num_fwd<sp/>:<sp/>i<sp/>&lt;<sp/>num_bkw)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/dict/trie.cpp"/>
  </compounddef>
</doxygen>
