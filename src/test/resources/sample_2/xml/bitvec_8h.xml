<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="bitvec_8h" kind="file">
    <compoundname>bitvec.h</compoundname>
    <includes refid="host_8h" local="yes">host.h</includes>
    <includedby refid="protos_8h" local="yes">classify/protos.h</includedby>
    <includedby refid="bitvec_8cpp" local="yes">cutil/bitvec.cpp</includedby>
    <includedby refid="bestfirst_8cpp" local="yes">wordrec/bestfirst.cpp</includedby>
    <incdepgraph>
      <node id="32477">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="32478" relation="include">
        </childnode>
      </node>
      <node id="32475">
        <label>cutil/bitvec.h</label>
        <link refid="bitvec.h"/>
        <childnode refid="32476" relation="include">
        </childnode>
      </node>
      <node id="32478">
        <label>limits.h</label>
      </node>
      <node id="32476">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="32477" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32571">
        <label>classify/intfeaturedist.cpp</label>
        <link refid="intfeaturedist_8cpp"/>
      </node>
      <node id="32518">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="32502">
        <label>classify/protos.cpp</label>
        <link refid="protos_8cpp"/>
      </node>
      <node id="32511">
        <label>ccmain/fixspace.cpp</label>
        <link refid="fixspace_8cpp"/>
      </node>
      <node id="32557">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="32517">
        <label>ccmain/tessedit.h</label>
        <link refid="tessedit_8h"/>
        <childnode refid="32516" relation="include">
        </childnode>
      </node>
      <node id="32563">
        <label>classify/mfx.cpp</label>
        <link refid="mfx_8cpp"/>
      </node>
      <node id="32505">
        <label>wordrec/wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="32506" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
        <childnode refid="32542" relation="include">
        </childnode>
        <childnode refid="32543" relation="include">
        </childnode>
        <childnode refid="32544" relation="include">
        </childnode>
        <childnode refid="32545" relation="include">
        </childnode>
        <childnode refid="32546" relation="include">
        </childnode>
        <childnode refid="32547" relation="include">
        </childnode>
        <childnode refid="32548" relation="include">
        </childnode>
        <childnode refid="32549" relation="include">
        </childnode>
        <childnode refid="32550" relation="include">
        </childnode>
        <childnode refid="32551" relation="include">
        </childnode>
        <childnode refid="32552" relation="include">
        </childnode>
      </node>
      <node id="32525">
        <label>ccmain/output.cpp</label>
        <link refid="output_8cpp"/>
      </node>
      <node id="32546">
        <label>wordrec/heuristic.cpp</label>
        <link refid="heuristic_8cpp"/>
      </node>
      <node id="32506">
        <label>ccmain/tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32508" relation="include">
        </childnode>
        <childnode refid="32509" relation="include">
        </childnode>
        <childnode refid="32513" relation="include">
        </childnode>
        <childnode refid="32514" relation="include">
        </childnode>
        <childnode refid="32510" relation="include">
        </childnode>
        <childnode refid="32518" relation="include">
        </childnode>
        <childnode refid="32519" relation="include">
        </childnode>
        <childnode refid="32520" relation="include">
        </childnode>
        <childnode refid="32521" relation="include">
        </childnode>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32511" relation="include">
        </childnode>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32523" relation="include">
        </childnode>
        <childnode refid="32524" relation="include">
        </childnode>
        <childnode refid="32525" relation="include">
        </childnode>
        <childnode refid="32526" relation="include">
        </childnode>
        <childnode refid="32527" relation="include">
        </childnode>
        <childnode refid="32528" relation="include">
        </childnode>
        <childnode refid="32529" relation="include">
        </childnode>
        <childnode refid="32515" relation="include">
        </childnode>
        <childnode refid="32531" relation="include">
        </childnode>
        <childnode refid="32532" relation="include">
        </childnode>
        <childnode refid="32533" relation="include">
        </childnode>
        <childnode refid="32534" relation="include">
        </childnode>
        <childnode refid="32512" relation="include">
        </childnode>
        <childnode refid="32516" relation="include">
        </childnode>
        <childnode refid="32536" relation="include">
        </childnode>
        <childnode refid="32537" relation="include">
        </childnode>
        <childnode refid="32535" relation="include">
        </childnode>
        <childnode refid="32538" relation="include">
        </childnode>
        <childnode refid="32539" relation="include">
        </childnode>
        <childnode refid="32540" relation="include">
        </childnode>
      </node>
      <node id="32521">
        <label>ccmain/docqual.cpp</label>
        <link refid="docqual_8cpp"/>
      </node>
      <node id="32484">
        <label>classify/classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="32485" relation="include">
        </childnode>
        <childnode refid="32483" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32487" relation="include">
        </childnode>
        <childnode refid="32488" relation="include">
        </childnode>
        <childnode refid="32489" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
        <childnode refid="32491" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32493" relation="include">
        </childnode>
        <childnode refid="32498" relation="include">
        </childnode>
        <childnode refid="32499" relation="include">
        </childnode>
        <childnode refid="32500" relation="include">
        </childnode>
        <childnode refid="32501" relation="include">
        </childnode>
        <childnode refid="32502" relation="include">
        </childnode>
        <childnode refid="32503" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
        <childnode refid="32504" relation="include">
        </childnode>
        <childnode refid="32505" relation="include">
        </childnode>
      </node>
      <node id="32524">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="32561">
        <label>classify/intfeaturemap.cpp</label>
        <link refid="intfeaturemap_8cpp"/>
      </node>
      <node id="32504">
        <label>training/wordlist2dawg.cpp</label>
        <link refid="wordlist2dawg_8cpp"/>
      </node>
      <node id="32493">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="32564">
        <label>classify/normfeat.cpp</label>
        <link refid="normfeat_8cpp"/>
      </node>
      <node id="32509">
        <label>ccmain/adaptions.cpp</label>
        <link refid="adaptions_8cpp"/>
      </node>
      <node id="32519">
        <label>ccmain/cube_reco_context.cpp</label>
        <link refid="cube__reco__context_8cpp"/>
      </node>
      <node id="32479">
        <label>cutil/bitvec.h</label>
        <link refid="bitvec.h"/>
        <childnode refid="32480" relation="include">
        </childnode>
        <childnode refid="32578" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
      </node>
      <node id="32547">
        <label>wordrec/outlines.cpp</label>
        <link refid="outlines_8cpp"/>
      </node>
      <node id="32523">
        <label>ccmain/ltrresultiterator.cpp</label>
        <link refid="ltrresultiterator_8cpp"/>
      </node>
      <node id="32562">
        <label>classify/intfeaturespace.cpp</label>
        <link refid="intfeaturespace_8cpp"/>
      </node>
      <node id="32578">
        <label>cutil/bitvec.cpp</label>
        <link refid="bitvec_8cpp"/>
      </node>
      <node id="32495">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="32498">
        <label>classify/mfoutline.cpp</label>
        <link refid="mfoutline_8cpp"/>
      </node>
      <node id="32577">
        <label>training/mergenf.h</label>
        <link refid="mergenf_8h"/>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
      </node>
      <node id="32560">
        <label>classify/trainingsample.cpp</label>
        <link refid="trainingsample_8cpp"/>
      </node>
      <node id="32522">
        <label>ccmain/fixxht.cpp</label>
        <link refid="fixxht_8cpp"/>
      </node>
      <node id="32543">
        <label>wordrec/chopper.cpp</label>
        <link refid="chopper_8cpp"/>
      </node>
      <node id="32487">
        <label>classify/classify.cpp</label>
        <link refid="classify_8cpp"/>
      </node>
      <node id="32538">
        <label>cube/beam_search.cpp</label>
        <link refid="beam__search_8cpp"/>
      </node>
      <node id="32489">
        <label>classify/float2int.cpp</label>
        <link refid="float2int_8cpp"/>
      </node>
      <node id="32568">
        <label>classify/shapetable.cpp</label>
        <link refid="shapetable_8cpp"/>
      </node>
      <node id="32555">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
      <node id="32569">
        <label>classify/intfeaturespace.h</label>
        <link refid="intfeaturespace_8h"/>
        <childnode refid="32570" relation="include">
        </childnode>
        <childnode refid="32561" relation="include">
        </childnode>
        <childnode refid="32562" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
      </node>
      <node id="32500">
        <label>classify/outfeat.cpp</label>
        <link refid="outfeat_8cpp"/>
      </node>
      <node id="32532">
        <label>ccmain/reject.cpp</label>
        <link refid="reject_8cpp"/>
      </node>
      <node id="32551">
        <label>wordrec/wordclass.cpp</label>
        <link refid="wordclass_8cpp"/>
      </node>
      <node id="32507">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="32528">
        <label>ccmain/pagewalk.cpp</label>
        <link refid="pagewalk_8cpp"/>
      </node>
      <node id="32510">
        <label>ccmain/control.cpp</label>
        <link refid="control_8cpp"/>
      </node>
      <node id="32552">
        <label>wordrec/wordrec.cpp</label>
        <link refid="wordrec_8cpp"/>
      </node>
      <node id="32567">
        <label>classify/shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32487" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32556" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
        <childnode refid="32491" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32493" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32568" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
      </node>
      <node id="32553">
        <label>classify/intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32561" relation="include">
        </childnode>
        <childnode refid="32562" relation="include">
        </childnode>
        <childnode refid="32559" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32563" relation="include">
        </childnode>
        <childnode refid="32564" relation="include">
        </childnode>
      </node>
      <node id="32544">
        <label>wordrec/findseam.cpp</label>
        <link refid="findseam_8cpp"/>
      </node>
      <node id="32526">
        <label>ccmain/pageiterator.cpp</label>
        <link refid="pageiterator_8cpp"/>
      </node>
      <node id="32527">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
      <node id="32499">
        <label>classify/normmatch.cpp</label>
        <link refid="normmatch_8cpp"/>
      </node>
      <node id="32576">
        <label>wordrec/language_model.cpp</label>
        <link refid="language__model_8cpp"/>
      </node>
      <node id="32535">
        <label>ccmain/tfacepp.cpp</label>
        <link refid="tfacepp_8cpp"/>
      </node>
      <node id="32488">
        <label>classify/cutoffs.cpp</label>
        <link refid="cutoffs_8cpp"/>
      </node>
      <node id="32530">
        <label>ccmain/paramsd.cpp</label>
        <link refid="paramsd_8cpp"/>
      </node>
      <node id="32574">
        <label>training/mergenf.cpp</label>
        <link refid="mergenf_8cpp"/>
      </node>
      <node id="32503">
        <label>classify/tessclassifier.cpp</label>
        <link refid="tessclassifier_8cpp"/>
      </node>
      <node id="32513">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox_8cpp"/>
      </node>
      <node id="32570">
        <label>classify/intfeaturemap.h</label>
        <link refid="intfeaturemap_8h"/>
        <childnode refid="32571" relation="include">
        </childnode>
        <childnode refid="32561" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
      </node>
      <node id="32549">
        <label>wordrec/segsearch.cpp</label>
        <link refid="segsearch_8cpp"/>
      </node>
      <node id="32491">
        <label>classify/intproto.cpp</label>
        <link refid="intproto_8cpp"/>
      </node>
      <node id="32516">
        <label>ccmain/tessedit.cpp</label>
        <link refid="tessedit_8cpp"/>
      </node>
      <node id="32514">
        <label>ccmain/pgedit.h</label>
        <link refid="pgedit_8h"/>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32510" relation="include">
        </childnode>
        <childnode refid="32515" relation="include">
        </childnode>
        <childnode refid="32516" relation="include">
        </childnode>
        <childnode refid="32517" relation="include">
        </childnode>
      </node>
      <node id="32496">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="32573">
        <label>training/cntraining.cpp</label>
        <link refid="cntraining_8cpp"/>
      </node>
      <node id="32536">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="32541">
        <label>wordrec/bestfirst.cpp</label>
        <link refid="bestfirst_8cpp"/>
      </node>
      <node id="32483">
        <label>classify/adaptive.cpp</label>
        <link refid="adaptive_8cpp"/>
      </node>
      <node id="32545">
        <label>wordrec/gradechop.cpp</label>
        <link refid="gradechop_8cpp"/>
      </node>
      <node id="32559">
        <label>classify/intfx.cpp</label>
        <link refid="intfx_8cpp"/>
      </node>
      <node id="32566">
        <label>classify/float2int.h</label>
        <link refid="float2int_8h"/>
        <childnode refid="32522" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32489" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
      </node>
      <node id="32558">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="32540">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="32539">
        <label>cube/tess_lang_model.cpp</label>
        <link refid="tess__lang__model_8cpp"/>
      </node>
      <node id="32486">
        <label>classify/adaptmatch.cpp</label>
        <link refid="adaptmatch_8cpp"/>
      </node>
      <node id="32520">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="32529">
        <label>ccmain/paramsd.h</label>
        <link refid="paramsd_8h"/>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32530" relation="include">
        </childnode>
        <childnode refid="32515" relation="include">
        </childnode>
      </node>
      <node id="32501">
        <label>classify/picofeat.cpp</label>
        <link refid="picofeat_8cpp"/>
      </node>
      <node id="32556">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
      </node>
      <node id="32485">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect_8cpp"/>
      </node>
      <node id="32548">
        <label>wordrec/pieces.cpp</label>
        <link refid="pieces_8cpp"/>
      </node>
      <node id="32490">
        <label>classify/intmatcher.cpp</label>
        <link refid="intmatcher_8cpp"/>
      </node>
      <node id="32480">
        <label>classify/protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="32481" relation="include">
        </childnode>
        <childnode refid="32502" relation="include">
        </childnode>
        <childnode refid="32577" relation="include">
        </childnode>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
      </node>
      <node id="32575">
        <label>wordrec/language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="32505" relation="include">
        </childnode>
        <childnode refid="32576" relation="include">
        </childnode>
        <childnode refid="32549" relation="include">
        </childnode>
        <childnode refid="32552" relation="include">
        </childnode>
      </node>
      <node id="32554">
        <label>classify/trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="32520" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32555" relation="include">
        </childnode>
        <childnode refid="32556" relation="include">
        </childnode>
        <childnode refid="32559" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
        <childnode refid="32501" relation="include">
        </childnode>
        <childnode refid="32557" relation="include">
        </childnode>
        <childnode refid="32503" relation="include">
        </childnode>
        <childnode refid="32560" relation="include">
        </childnode>
        <childnode refid="32558" relation="include">
        </childnode>
      </node>
      <node id="32542">
        <label>wordrec/chop.cpp</label>
        <link refid="chop_8cpp"/>
      </node>
      <node id="32537">
        <label>ccmain/tesseractclass.cpp</label>
        <link refid="tesseractclass_8cpp"/>
      </node>
      <node id="32497">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="32494">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="32512">
        <label>ccmain/tessbox.cpp</label>
        <link refid="tessbox_8cpp"/>
      </node>
      <node id="32533">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
      <node id="32572">
        <label>training/commontraining.h</label>
        <link refid="commontraining_8h"/>
        <childnode refid="32494" relation="include">
        </childnode>
        <childnode refid="32573" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
        <childnode refid="32497" relation="include">
        </childnode>
      </node>
      <node id="32482">
        <label>classify/adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="32483" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
      </node>
      <node id="32565">
        <label>classify/intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="32516" relation="include">
        </childnode>
        <childnode refid="32484" relation="include">
        </childnode>
        <childnode refid="32566" relation="include">
        </childnode>
        <childnode refid="32567" relation="include">
        </childnode>
        <childnode refid="32554" relation="include">
        </childnode>
        <childnode refid="32559" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
        <childnode refid="32492" relation="include">
        </childnode>
      </node>
      <node id="32550">
        <label>wordrec/tface.cpp</label>
        <link refid="tface_8cpp"/>
      </node>
      <node id="32508">
        <label>ccmain/tessbox.h</label>
        <link refid="tessbox_8h"/>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32509" relation="include">
        </childnode>
        <childnode refid="32510" relation="include">
        </childnode>
        <childnode refid="32511" relation="include">
        </childnode>
        <childnode refid="32512" relation="include">
        </childnode>
      </node>
      <node id="32534">
        <label>ccmain/tfacepp.h</label>
        <link refid="tfacepp_8h"/>
        <childnode refid="32512" relation="include">
        </childnode>
        <childnode refid="32535" relation="include">
        </childnode>
      </node>
      <node id="32515">
        <label>ccmain/pgedit.cpp</label>
        <link refid="pgedit_8cpp"/>
      </node>
      <node id="32481">
        <label>classify/intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="32482" relation="include">
        </childnode>
        <childnode refid="32553" relation="include">
        </childnode>
        <childnode refid="32565" relation="include">
        </childnode>
        <childnode refid="32486" relation="include">
        </childnode>
        <childnode refid="32487" relation="include">
        </childnode>
        <childnode refid="32569" relation="include">
        </childnode>
        <childnode refid="32570" relation="include">
        </childnode>
        <childnode refid="32490" relation="include">
        </childnode>
        <childnode refid="32491" relation="include">
        </childnode>
        <childnode refid="32572" relation="include">
        </childnode>
        <childnode refid="32574" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
        <childnode refid="32575" relation="include">
        </childnode>
        <childnode refid="32576" relation="include">
        </childnode>
      </node>
      <node id="32492">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="32493" relation="include">
        </childnode>
        <childnode refid="32494" relation="include">
        </childnode>
        <childnode refid="32495" relation="include">
        </childnode>
        <childnode refid="32496" relation="include">
        </childnode>
        <childnode refid="32497" relation="include">
        </childnode>
      </node>
      <node id="32531">
        <label>ccmain/recogtraining.cpp</label>
        <link refid="recogtraining_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" prot="public" static="no">
        <name>BITSINLONG</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>no of bits in a long </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="27" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" prot="public" static="no">
        <name>zero_all_bits</name>
        <param><defname>array</defname></param>
        <param><defname>length</defname></param>
        <initializer>{\
    register int            index;                        /*temporary index*/\
\
for (index=0;index&lt;length;index++)\
    array[index]=0;                                        /*zero all bits*/\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="33" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1a137dcf6c3453d2a2b5cbfa7d369c754f" prot="public" static="no">
        <name>set_all_bits</name>
        <param><defname>array</defname></param>
        <param><defname>length</defname></param>
        <initializer>{\
    register int            index;                        /*temporary index*/\
\
for (index=0;index&lt;length;index++)\
    array[index]= ~0;                                    /*set all bits*/\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="41" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1ae535f23da300bdf6ea284fc5e85ca14a" prot="public" static="no">
        <name>copy_all_bits</name>
        <param><defname>source</defname></param>
        <param><defname>dest</defname></param>
        <param><defname>length</defname></param>
        <initializer>{\
    register int            index;                        /*temporary index*/\
\
for (index=0;index&lt;length;index++)\
    dest[index]=source[index];                            /*copy all bits*/\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="49" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" prot="public" static="no">
        <name>SET_BIT</name>
        <param><defname>array</defname></param>
        <param><defname>bit</defname></param>
        <initializer>(array[bit/<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>]|=1&lt;&lt;(bit&amp;(<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>-1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="57" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1a1209b8bb0fa7e6e7323cdb48b4165f0d" prot="public" static="no">
        <name>reset_bit</name>
        <param><defname>array</defname></param>
        <param><defname>bit</defname></param>
        <initializer>(array[bit/<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>]&amp;=~(1&lt;&lt;(bit&amp;(<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>-1))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="59" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" prot="public" static="no">
        <name>test_bit</name>
        <param><defname>array</defname></param>
        <param><defname>bit</defname></param>
        <initializer>(array[bit/<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>] &amp; (1&lt;&lt;(bit&amp;(<ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>-1))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="61" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" prot="public" static="no">
        <name>WordsInVectorOfSize</name>
        <param><defname>NumBits</defname></param>
        <initializer>(((NumBits) + <ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref> - 1) / <ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="63" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" prot="public" static="no">
        <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref> *</type>
        <definition>typedef uinT32* BIT_VECTOR</definition>
        <argsstring></argsstring>
        <name>BIT_VECTOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="28" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitvec_8h_1a74773bfbcc12095f8d32c11b28e2577d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
        <definition>BIT_VECTOR ExpandBitVector</definition>
        <argsstring>(BIT_VECTOR Vector, int NewNumBits)</argsstring>
        <name>ExpandBitVector</name>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>Vector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NewNumBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine uses realloc to increase the size of the specified bit vector.</para><para>Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>bit vector to be expanded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NewNumBits</parametername>
</parameternamelist>
<parameterdescription>
<para>new size of bit vector</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New expanded bit vector. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Fri Nov 16 10:11:16 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; no of bits in a long</para><para>&lt; no of bits in a long </para>        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="bitvec_8h_1adc1a7f52bb1fce0746e1e5725ad679f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeBitVector</definition>
        <argsstring>(BIT_VECTOR BitVector)</argsstring>
        <name>FreeBitVector</name>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>BitVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This routine frees a bit vector. It also decrements the global counter that keeps track of the number of bit vectors allocated. If BitVector is NULL, then the count is printed to stderr.</para><para>Globals:<itemizedlist>
<listitem><para>BitVectorCount count of number of bit vectors allocated</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BitVector</parametername>
</parameternamelist>
<parameterdescription>
<para>bit vector to be freed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Tue Oct 23 16:46:09 1990, DSJ, Created.</para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="71" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.cpp" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="bitvec_8h_1a5e8aad36a4fa1ed6100fc1504a2100b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hamming_distance</definition>
        <argsstring>(uinT32 *array1, uinT32 *array2, int length)</argsstring>
        <name>hamming_distance</name>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref> *</type>
          <declname>array1</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref> *</type>
          <declname>array2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hamming_distance(array1,array2,length) computes the hamming distance between two bit strings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.cpp" bodystart="81" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="bitvec_8h_1a502314dc3ee4b178df067713b324b868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
        <definition>BIT_VECTOR NewBitVector</definition>
        <argsstring>(int NumBits)</argsstring>
        <name>NewBitVector</name>
        <param>
          <type>int</type>
          <declname>NumBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate and return a new bit vector large enough to hold the specified number of bits.</para><para>Globals:<itemizedlist>
<listitem><para>BitVectorCount number of bit vectors allocated</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NumBits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits in new bit vector</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New bit vector. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Tue Oct 23 16:51:27 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; no of bits in a long</para><para>&lt; no of bits in a long </para>        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/bitvec.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>Filename:<sp/><sp/><sp/><sp/>bitvec.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Routines<sp/>for<sp/>manipulating<sp/>bit<sp/>vectors</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>History:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Mar<sp/><sp/>7<sp/>17:52:45<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/>BITVEC_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>BITVEC_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="host_8h" kindref="compound">host.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="25"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Rename<sp/>BITSINLONG<sp/>to<sp/>BITSINuinT32,<sp/>and<sp/>use<sp/>sizeof.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITSINLONG<sp/><sp/><sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" refkind="member"><highlight class="preprocessor">typedef<sp/>uinT32<sp/>*BIT_VECTOR;</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="32"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>zero_all_bits(array,length)<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*temporary<sp/>index*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor">for<sp/>(index=0;index&lt;length;index++)\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>array[index]=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*zero<sp/>all<sp/>bits*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="bitvec_8h_1a137dcf6c3453d2a2b5cbfa7d369c754f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>set_all_bits(array,length)<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*temporary<sp/>index*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">for<sp/>(index=0;index&lt;length;index++)\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>array[index]=<sp/>~0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*set<sp/>all<sp/>bits*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="bitvec_8h_1ae535f23da300bdf6ea284fc5e85ca14a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>copy_all_bits(source,dest,length)<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*temporary<sp/>index*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">for<sp/>(index=0;index&lt;length;index++)\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>dest[index]=source[index];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*copy<sp/>all<sp/>bits*/</highlight><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_BIT(array,bit)<sp/>(array[bit/BITSINLONG]|=1&lt;&lt;(bit&amp;(BITSINLONG-1)))</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="bitvec_8h_1a1209b8bb0fa7e6e7323cdb48b4165f0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>reset_bit(array,bit)<sp/>(array[bit/BITSINLONG]&amp;=~(1&lt;&lt;(bit&amp;(BITSINLONG-1))))</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>test_bit(array,bit)<sp/>(array[bit/BITSINLONG]<sp/>&amp;<sp/>(1&lt;&lt;(bit&amp;(BITSINLONG-1))))</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WordsInVectorOfSize(NumBits)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor">(((NumBits)<sp/>+<sp/>BITSINLONG<sp/>-<sp/>1)<sp/>/<sp/>BITSINLONG)</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="68"><highlight class="comment">--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="bitvec_8cpp_1a74773bfbcc12095f8d32c11b28e2577d" kindref="member">ExpandBitVector</ref>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>Vector,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewNumBits);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>BitVector);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitvec_8cpp_1a5e8aad36a4fa1ed6100fc1504a2100b5" kindref="member">hamming_distance</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>array1,<sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>array2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBits);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cutil/bitvec.h"/>
  </compounddef>
</doxygen>
