<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="clusttool_8cpp" kind="file">
    <compoundname>clusttool.cpp</compoundname>
    <includes refid="clusttool_8h" local="yes">clusttool.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="danerror_8h" local="yes">danerror.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="scanutils_8h" local="yes">scanutils.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="23740">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="23741" relation="include">
        </childnode>
        <childnode refid="23754" relation="include">
        </childnode>
        <childnode refid="23737" relation="include">
        </childnode>
      </node>
      <node id="23768">
        <label>assert.h</label>
      </node>
      <node id="23736">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="23754">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="23729">
        <label>stdlib.h</label>
      </node>
      <node id="23722">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="23723" relation="include">
        </childnode>
      </node>
      <node id="23724">
        <label>cluster.h</label>
        <link refid="cluster_8h"/>
        <childnode refid="23725" relation="include">
        </childnode>
        <childnode refid="23764" relation="include">
        </childnode>
      </node>
      <node id="23769">
        <label>scanutils.h</label>
        <link refid="scanutils_8h"/>
      </node>
      <node id="23741">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="23742" relation="include">
        </childnode>
        <childnode refid="23734" relation="include">
        </childnode>
        <childnode refid="23737" relation="include">
        </childnode>
        <childnode refid="23751" relation="include">
        </childnode>
        <childnode refid="23731" relation="include">
        </childnode>
        <childnode refid="23749" relation="include">
        </childnode>
        <childnode refid="23752" relation="include">
        </childnode>
        <childnode refid="23753" relation="include">
        </childnode>
      </node>
      <node id="23762">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
      </node>
      <node id="23744">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="23729" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23738" relation="include">
        </childnode>
        <childnode refid="23734" relation="include">
        </childnode>
        <childnode refid="23745" relation="include">
        </childnode>
      </node>
      <node id="23757">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23744" relation="include">
        </childnode>
        <childnode refid="23746" relation="include">
        </childnode>
      </node>
      <node id="23739">
        <label>stddef.h</label>
      </node>
      <node id="23748">
        <label>memory.h</label>
      </node>
      <node id="23767">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="23768" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23731" relation="include">
        </childnode>
        <childnode refid="23747" relation="include">
        </childnode>
      </node>
      <node id="23734">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="23721" relation="include">
        </childnode>
      </node>
      <node id="23720">
        <label>clusttool.h</label>
        <link refid="clusttool_8h"/>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23724" relation="include">
        </childnode>
        <childnode refid="23727" relation="include">
        </childnode>
      </node>
      <node id="23723">
        <label>limits.h</label>
      </node>
      <node id="23725">
        <label>kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23726" relation="include">
        </childnode>
        <childnode refid="23755" relation="include">
        </childnode>
      </node>
      <node id="23761">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="23759" relation="include">
        </childnode>
      </node>
      <node id="23752">
        <label>pthread.h</label>
      </node>
      <node id="23728">
        <label>string.h</label>
      </node>
      <node id="23750">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="23747" relation="include">
        </childnode>
      </node>
      <node id="23747">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="23748" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
      </node>
      <node id="23726">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
        <childnode refid="23729" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23730" relation="include">
        </childnode>
        <childnode refid="23740" relation="include">
        </childnode>
      </node>
      <node id="23758">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="23759" relation="include">
        </childnode>
        <childnode refid="23760" relation="include">
        </childnode>
        <childnode refid="23736" relation="include">
        </childnode>
        <childnode refid="23762" relation="include">
        </childnode>
        <childnode refid="23730" relation="include">
        </childnode>
      </node>
      <node id="23719">
        <label>classify/clusttool.cpp</label>
        <link refid="clusttool.cpp"/>
        <childnode refid="23720" relation="include">
        </childnode>
        <childnode refid="23754" relation="include">
        </childnode>
        <childnode refid="23765" relation="include">
        </childnode>
        <childnode refid="23766" relation="include">
        </childnode>
        <childnode refid="23769" relation="include">
        </childnode>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23759" relation="include">
        </childnode>
      </node>
      <node id="23733">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="23721" relation="include">
        </childnode>
      </node>
      <node id="23753">
        <label>semaphore.h</label>
      </node>
      <node id="23765">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="23745">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="23734" relation="include">
        </childnode>
      </node>
      <node id="23742">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="23743" relation="include">
        </childnode>
        <childnode refid="23730" relation="include">
        </childnode>
        <childnode refid="23747" relation="include">
        </childnode>
        <childnode refid="23749" relation="include">
        </childnode>
        <childnode refid="23732" relation="include">
        </childnode>
      </node>
      <node id="23759">
        <label>math.h</label>
      </node>
      <node id="23746">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="23734" relation="include">
        </childnode>
      </node>
      <node id="23766">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23767" relation="include">
        </childnode>
      </node>
      <node id="23763">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="23759" relation="include">
        </childnode>
        <childnode refid="23756" relation="include">
        </childnode>
      </node>
      <node id="23764">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="23726" relation="include">
        </childnode>
        <childnode refid="23733" relation="include">
        </childnode>
      </node>
      <node id="23755">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="23756" relation="include">
        </childnode>
        <childnode refid="23727" relation="include">
        </childnode>
      </node>
      <node id="23731">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23732" relation="include">
        </childnode>
        <childnode refid="23737" relation="include">
        </childnode>
      </node>
      <node id="23732">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23729" relation="include">
        </childnode>
        <childnode refid="23733" relation="include">
        </childnode>
        <childnode refid="23734" relation="include">
        </childnode>
        <childnode refid="23735" relation="include">
        </childnode>
        <childnode refid="23736" relation="include">
        </childnode>
      </node>
      <node id="23738">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="23739" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
      </node>
      <node id="23743">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23744" relation="include">
        </childnode>
        <childnode refid="23746" relation="include">
        </childnode>
      </node>
      <node id="23749">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="23734" relation="include">
        </childnode>
        <childnode refid="23735" relation="include">
        </childnode>
        <childnode refid="23737" relation="include">
        </childnode>
        <childnode refid="23733" relation="include">
        </childnode>
        <childnode refid="23747" relation="include">
        </childnode>
        <childnode refid="23750" relation="include">
        </childnode>
      </node>
      <node id="23760">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23759" relation="include">
        </childnode>
        <childnode refid="23743" relation="include">
        </childnode>
        <childnode refid="23761" relation="include">
        </childnode>
      </node>
      <node id="23730">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="23731" relation="include">
        </childnode>
      </node>
      <node id="23721">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="23722" relation="include">
        </childnode>
      </node>
      <node id="23727">
        <label>stdio.h</label>
      </node>
      <node id="23751">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23730" relation="include">
        </childnode>
      </node>
      <node id="23737">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
        <childnode refid="23722" relation="include">
        </childnode>
        <childnode refid="23738" relation="include">
        </childnode>
      </node>
      <node id="23756">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="23757" relation="include">
        </childnode>
        <childnode refid="23758" relation="include">
        </childnode>
        <childnode refid="23763" relation="include">
        </childnode>
      </node>
      <node id="23735">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="clusttool_8cpp_1ae17edeefd22ae590b356bd24f8f61d11" prot="public" static="no">
        <name>TOKENSIZE</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="29" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="clusttool_8cpp_1a6265459411ad3caa42ad4d1d54616034" prot="public" static="no">
        <name>MAXSAMPLESIZE</name>
        <initializer>65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="30" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="clusttool_8cpp_1aa72cb3d213dfc2a7e49bc0e4df860388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
        <definition>uinT16 ReadSampleSize</definition>
        <argsstring>(FILE *File)</argsstring>
        <name>ReadSampleSize</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ReadSampleSize ***********************************************************
</verbatim> Parameters: File open text file to read sample size from Globals: None Operation: This routine reads a single integer from the specified file and checks to ensure that it is between 0 and MAXSAMPLESIZE. Return: Sample size Exceptions: ILLEGALSAMPLESIZE illegal format or range History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1ae37f86e537cc934a27b5cb8c3dfd3173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref> *</type>
        <definition>PARAM_DESC* ReadParamDesc</definition>
        <argsstring>(FILE *File, uinT16 N)</argsstring>
        <name>ReadParamDesc</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ReadParamDesc *************************************************************
</verbatim> Parameters: File open text file to read N parameter descriptions from N number of parameter descriptions to read Globals: None Operation: This routine reads textual descriptions of sets of parameters which describe the characteristics of feature dimensions. Return: Pointer to an array of parameter descriptors. Exceptions: ILLEGALCIRCULARSPEC ILLEGALESSENTIALSPEC ILLEGALMINMAXSPEC History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="68" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1ae695f7912de20580483721573348f10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref> *</type>
        <definition>PROTOTYPE* ReadPrototype</definition>
        <argsstring>(FILE *File, uinT16 N)</argsstring>
        <name>ReadPrototype</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ReadPrototype *************************************************************
</verbatim> Parameters: File open text file to read prototype from N number of dimensions used in prototype Globals: None Operation: This routine reads a textual description of a prototype from the specified file. Return: List of prototypes Exceptions: ILLEGALSIGNIFICANCESPEC ILLEGALSAMPLECOUNT ILLEGALMEANSPEC ILLEGALVARIANCESPEC ILLEGALDISTRIBUTION History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="115" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="115" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1a8e0a4d7e3f0a938673a40b82a5199b2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref></type>
        <definition>PROTOSTYLE ReadProtoStyle</definition>
        <argsstring>(FILE *File)</argsstring>
        <name>ReadProtoStyle</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="244" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="244" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
        <definition>FLOAT32* ReadNFloats</definition>
        <argsstring>(FILE *File, uinT16 N, FLOAT32 Buffer[])</argsstring>
        <name>ReadNFloats</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Buffer</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ReadNFloats *************************************************************
</verbatim> Parameters: File open text file to read floats from N number of floats to read Buffer pointer to buffer to place floats into Globals: None Operation: This routine reads N floats from the specified text file and places them into Buffer. If Buffer is NULL, a buffer is created and passed back to the caller. If EOF is encountered before any floats can be read, NULL is returned. Return: Pointer to buffer holding floats or NULL if EOF Exceptions: ILLEGALFLOAT History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="286" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="286" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1a889ad8a8f7e5c6652ba059206b5a0aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteParamDesc</definition>
        <argsstring>(FILE *File, uinT16 N, PARAM_DESC ParamDesc[])</argsstring>
        <name>WriteParamDesc</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
          <declname>ParamDesc</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>WriteParamDesc ************************************************************
</verbatim> Parameters: File open text file to write param descriptors to N number of param descriptors to write ParamDesc array of param descriptors to write Globals: None Operation: This routine writes an array of dimension descriptors to the specified text file. Return: None Exceptions: None History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="318" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="318" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1a6f0ccfd7c117c2006796af1d3b19f110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePrototype</definition>
        <argsstring>(FILE *File, uinT16 N, PROTOTYPE *Proto)</argsstring>
        <name>WritePrototype</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref> *</type>
          <declname>Proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>WritePrototype ************************************************************
</verbatim> Parameters: File open text file to write prototype to N number of dimensions in feature space Proto prototype to write out Globals: None Operation: This routine writes a textual description of a prototype to the specified text file. Return: None Exceptions: None History: 6/12/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="348" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="348" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteNFloats</definition>
        <argsstring>(FILE *File, uinT16 N, FLOAT32 Array[])</argsstring>
        <name>WriteNFloats</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Array</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>WriteNFloats ***********************************************************
</verbatim> Parameters: File open text file to write N floats to N number of floats to write Array array of floats to write Globals: None Operation: This routine writes a text representation of N floats from an array to a file. All of the floats are placed on one line. Return: None Exceptions: None History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="399" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="399" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1aad4580f7f59adb203f83ca78259b90e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteProtoStyle</definition>
        <argsstring>(FILE *File, PROTOSTYLE ProtoStyle)</argsstring>
        <name>WriteProtoStyle</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref></type>
          <declname>ProtoStyle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>WriteProtoSyle **********************************************************
</verbatim> Parameters: File open text file to write prototype style to ProtoStyle prototype style to write Globals: None Operation: This routine writes to the specified text file a word which represents the ProtoStyle. It does not append a carriage return to the end. Return: None Exceptions: None History: 6/8/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="417" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="417" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="clusttool_8cpp_1ab5a847b7c77a8c9f3fb3c70caa82c5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteProtoList</definition>
        <argsstring>(FILE *File, uinT16 N, PARAM_DESC ParamDesc[], LIST ProtoList, BOOL8 WriteSigProtos, BOOL8 WriteInsigProtos)</argsstring>
        <name>WriteProtoList</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
          <declname>ParamDesc</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>WriteSigProtos</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>WriteInsigProtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" line="435" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/clusttool.cpp" bodystart="435" bodyend="481"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/>clustertool.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/>Misc.<sp/>tools<sp/>for<sp/>use<sp/>with<sp/>the<sp/>clustering<sp/>routines</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/>6/6/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//--------------------------Include<sp/>Files----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clusttool_8h" kindref="compound">clusttool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="danerror_8h" kindref="compound">danerror.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanutils_8h" kindref="compound">scanutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//---------------Global<sp/>Data<sp/>Definitions<sp/>and<sp/>Declarations--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOKENSIZE<sp/>80<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//max<sp/>size<sp/>of<sp/>tokens<sp/>read<sp/>from<sp/>an<sp/>input<sp/>file</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAXSAMPLESIZE<sp/>65535<sp/><sp/><sp/><sp/><sp/><sp/>//max<sp/>num<sp/>of<sp/>dimensions<sp/>in<sp/>feature<sp/>space</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="comment">//#define<sp/>MAXBLOCKSIZE<sp/><sp/>65535<sp/><sp/><sp/>//max<sp/>num<sp/>of<sp/>samples<sp/>in<sp/>a<sp/>character<sp/>(block<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="35"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/><ref refid="clusttool_8cpp_1aa72cb3d213dfc2a7e49bc0e4df860388" kindref="member">ReadSampleSize</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleSize;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;SampleSize)<sp/>!=<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>(SampleSize<sp/>&lt;<sp/>0)<sp/>||<sp/>(SampleSize<sp/>&gt;<sp/><ref refid="clusttool_8cpp_1a6265459411ad3caa42ad4d1d54616034" kindref="member">MAXSAMPLESIZE</ref>))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1af974dbd1cdd902e8d6885578ee9fe515" kindref="member">ILLEGALSAMPLESIZE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>sample<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(SampleSize);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadSampleSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>*<ref refid="clusttool_8cpp_1ae37f86e537cc934a27b5cb8c3dfd3173" kindref="member">ReadParamDesc</ref>(FILE<sp/>*File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>*ParamDesc;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Token[<ref refid="clusttool_8cpp_1ae17edeefd22ae590b356bd24f8f61d11" kindref="member">TOKENSIZE</ref>];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ParamDesc<sp/>=<sp/>(<ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Token)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a3c4a4b251aa42c2c882ae83c65dfb980" kindref="member">ILLEGALCIRCULARSPEC</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>circular/linear<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Token[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a55807f1e0be0daba2a33380ea29b2f1d" kindref="member">Circular</ref><sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a55807f1e0be0daba2a33380ea29b2f1d" kindref="member">Circular</ref><sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Token)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a9807f33462886db66ed9570245a27fee" kindref="member">ILLEGALESSENTIALSPEC</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>essential/non-essential<sp/>spec&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Token[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a6b9843466a3ddf33bfab18f85ca06501" kindref="member">NonEssential</ref><sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a6b9843466a3ddf33bfab18f85ca06501" kindref="member">NonEssential</ref><sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%f%f&quot;</highlight><highlight class="normal">,<sp/>&amp;(ParamDesc[i].Min),<sp/>&amp;(ParamDesc[i].Max))<sp/>!=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a4bde310182c9d51b6b017c981958db65" kindref="member">ILLEGALMINMAXSPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>min<sp/>or<sp/>max<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a031dddcdc1744e777435f8ceea197448" kindref="member">Range</ref><sp/>=<sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a73e76f946bbd324e60914a991d3343d1" kindref="member">Max</ref><sp/>-<sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a6445e8e433a99239e56c3218437f2695" kindref="member">Min</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a1df92d879d7ec8ea6662e956d27154b5" kindref="member">HalfRange</ref><sp/>=<sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a031dddcdc1744e777435f8ceea197448" kindref="member">Range</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a7c7bec15766be3633c649a0a9409b512" kindref="member">MidRange</ref><sp/>=<sp/>(ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a73e76f946bbd324e60914a991d3343d1" kindref="member">Max</ref><sp/>+<sp/>ParamDesc[i].<ref refid="struct_p_a_r_a_m___d_e_s_c_1a6445e8e433a99239e56c3218437f2695" kindref="member">Min</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ParamDesc);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadParamDesc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*<ref refid="clusttool_8cpp_1ae695f7912de20580483721573348f10d" kindref="member">ReadPrototype</ref>(FILE<sp/>*File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Token[<ref refid="clusttool_8cpp_1ae17edeefd22ae590b356bd24f8f61d11" kindref="member">TOKENSIZE</ref>];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Status;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleCount;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Status<sp/>=<sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Token))<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aff59384612de343b799b92a5d80282b7" kindref="member">Cluster</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Token[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref><sp/>=<sp/><ref refid="clusttool_8cpp_1a8e0a4d7e3f0a938673a40b82a5199b2b" kindref="member">ReadProtoStyle</ref><sp/>(File);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;SampleCount)<sp/>!=<sp/>1)<sp/>||<sp/>(SampleCount<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1ac956d1ac7852ec521cc3faa1aef5be0c" kindref="member">ILLEGALSAMPLECOUNT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>sample<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref><sp/>=<sp/>SampleCount;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref><sp/>=<sp/><ref refid="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" kindref="member">ReadNFloats</ref><sp/>(File,<sp/>N,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a47a6e5abffe00553f5984cc4079f32d7" kindref="member">ILLEGALMEANSPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>mean&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" kindref="member">spherical</ref>:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" kindref="member">ReadNFloats</ref><sp/>(File,<sp/>1,<sp/>&amp;(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>))<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1af4a945e424295913c8a3539f1a2b166d" kindref="member">ILLEGALVARIANCESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>variance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref><sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>sqrt<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>(2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>*<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>=</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow<sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>N);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref><sp/>=<sp/>log<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref><sp/>=<sp/>1.0<sp/>/<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" kindref="member">ReadNFloats</ref><sp/>(File,<sp/>N,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1af4a945e424295913c8a3539f1a2b166d" kindref="member">ILLEGALVARIANCESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>variance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>(2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>*<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>*=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref><sp/>=<sp/>log<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" kindref="member">mixed</ref>:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref><sp/>=</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" kindref="member">DISTRIBUTION</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" kindref="member">DISTRIBUTION</ref>));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Token)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a391d78630134eb691596568d73fe04ad" kindref="member">ILLEGALDISTRIBUTION</ref>,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>distribution&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Token[0])<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>[i]<sp/>=<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0aebc81705969b8c5ae986b0b2ec08d1d5" kindref="member">normal</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>[i]<sp/>=<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" kindref="member">uniform</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>[i]<sp/>=<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a21504929e31ddde091641bb817e32320" kindref="member">D_random</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a391d78630134eb691596568d73fe04ad" kindref="member">ILLEGALDISTRIBUTION</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>distribution&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" kindref="member">ReadNFloats</ref><sp/>(File,<sp/>N,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1af4a945e424295913c8a3539f1a2b166d" kindref="member">ILLEGALVARIANCESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>variance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0aebc81705969b8c5ae986b0b2ec08d1d5" kindref="member">normal</ref>:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=<sp/>1.0<sp/>/</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>*<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>/<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" kindref="member">uniform</ref>:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a21504929e31ddde091641bb817e32320" kindref="member">D_random</ref>:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=<sp/>1.0<sp/>/</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.0<sp/>*<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a1223ae56d204b110bd185b7dbdda258e" kindref="member">DISTRIBUTION_COUNT</ref>:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!</highlight><highlight class="stringliteral">&quot;Distribution<sp/>count<sp/>not<sp/>allowed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>*=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref><sp/>=<sp/>log<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Proto);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Status<sp/>==<sp/>EOF)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a4b3703ca46e25a96d58a2196b80aa7bc" kindref="member">ILLEGALSIGNIFICANCESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>significance<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadPrototype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ReadProtoStyle<sp/>*************************************************************</highlight></codeline>
<codeline lineno="236"><highlight class="comment">Parameters:<sp/>File<sp/><sp/><sp/><sp/>open<sp/>text<sp/>file<sp/>to<sp/>read<sp/>prototype<sp/>style<sp/>from</highlight></codeline>
<codeline lineno="237"><highlight class="comment">Globals:<sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="238"><highlight class="comment">Operation:<sp/><sp/>This<sp/>routine<sp/>reads<sp/>an<sp/>single<sp/>token<sp/>from<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>file<sp/>and<sp/>interprets<sp/>it<sp/>as<sp/>a<sp/>prototype<sp/>specification.</highlight></codeline>
<codeline lineno="240"><highlight class="comment">Return:<sp/><sp/><sp/><sp/><sp/>Prototype<sp/>style<sp/>read<sp/>from<sp/>text<sp/>file</highlight></codeline>
<codeline lineno="241"><highlight class="comment">Exceptions:<sp/>ILLEGALSTYLESPEC<sp/><sp/><sp/><sp/>illegal<sp/>prototype<sp/>style<sp/>specification</highlight></codeline>
<codeline lineno="242"><highlight class="comment">History:<sp/><sp/><sp/><sp/>6/8/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="243"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref><sp/><ref refid="clusttool_8cpp_1a8e0a4d7e3f0a938673a40b82a5199b2b" kindref="member">ReadProtoStyle</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Token[<ref refid="clusttool_8cpp_1ae17edeefd22ae590b356bd24f8f61d11" kindref="member">TOKENSIZE</ref>];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref><sp/>Style;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Token)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1ad5af9ed421659ab0896a2abca0883d1a" kindref="member">ILLEGALSTYLESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>style<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Token[0])<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Style<sp/>=<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" kindref="member">spherical</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Style<sp/>=<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Style<sp/>=<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" kindref="member">mixed</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Style<sp/>=<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa9761086e420b925e438327ad385b304d" kindref="member">automatic</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Style<sp/>=<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1ad5af9ed421659ab0896a2abca0883d1a" kindref="member">ILLEGALSTYLESPEC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>prototype<sp/>style<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Style);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadProtoStyle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><ref refid="clusttool_8cpp_1ac8403bb0db7b53dcd96435b6ff2ececb" kindref="member">ReadNFloats</ref><sp/>(FILE<sp/>*<sp/>File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Buffer[])<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFloatsRead;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer<sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>NumFloatsRead<sp/>=<sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;(Buffer[i]));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFloatsRead<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((NumFloatsRead<sp/>==<sp/>EOF)<sp/>&amp;&amp;<sp/>(i<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="clusttool_8h_1a0a3d9acba9eecd1e86cf3ec41183c05b" kindref="member">ILLEGALFLOAT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>float<sp/>specification&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Buffer);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadNFloats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="clusttool_8cpp_1a889ad8a8f7e5c6652ba059206b5a0aa8" kindref="member">WriteParamDesc</ref><sp/>(FILE<sp/>*<sp/>File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N,<sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>ParamDesc[])<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParamDesc[i].Circular)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;circular<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParamDesc[i].NonEssential)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;non-essential<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;essential<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%10.6f<sp/>%10.6f\n&quot;</highlight><highlight class="normal">,<sp/>ParamDesc[i].Min,<sp/>ParamDesc[i].Max);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WriteParamDesc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="clusttool_8cpp_1a6f0ccfd7c117c2006796af1d3b19f110" kindref="member">WritePrototype</ref>(FILE<sp/>*File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N,<sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;significant<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;insignificant<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="clusttool_8cpp_1aad4580f7f59adb203f83ca78259b90e9" kindref="member">WriteProtoStyle</ref><sp/>(File,<sp/>(<ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref>)<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%6d\n\t&quot;</highlight><highlight class="normal">,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" kindref="member">WriteNFloats</ref><sp/>(File,<sp/>N,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" kindref="member">spherical</ref>:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" kindref="member">WriteNFloats</ref><sp/>(File,<sp/>1,<sp/>&amp;(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" kindref="member">WriteNFloats</ref><sp/>(File,<sp/>N,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" kindref="member">mixed</ref>:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0aebc81705969b8c5ae986b0b2ec08d1d5" kindref="member">normal</ref>:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%9s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" kindref="member">uniform</ref>:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%9s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;uniform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a21504929e31ddde091641bb817e32320" kindref="member">D_random</ref>:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%9s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;random&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a1223ae56d204b110bd185b7dbdda258e" kindref="member">DISTRIBUTION_COUNT</ref>:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!</highlight><highlight class="stringliteral">&quot;Distribution<sp/>count<sp/>not<sp/>allowed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\n\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" kindref="member">WriteNFloats</ref><sp/>(File,<sp/>N,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WritePrototype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="clusttool_8cpp_1a6278f5ccf09694335d536197004cac67" kindref="member">WriteNFloats</ref>(FILE<sp/>*<sp/>File,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Array[])<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%9.6f&quot;</highlight><highlight class="normal">,<sp/>Array[i]);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WriteNFloats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="clusttool_8cpp_1aad4580f7f59adb203f83ca78259b90e9" kindref="member">WriteProtoStyle</ref>(FILE<sp/>*File,<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref><sp/>ProtoStyle)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ProtoStyle)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" kindref="member">spherical</ref>:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;spherical&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;elliptical&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" kindref="member">mixed</ref>:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;mixed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa9761086e420b925e438327ad385b304d" kindref="member">automatic</ref>:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;automatic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WriteProtoStyle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="clusttool_8cpp_1ab5a847b7c77a8c9f3fb3c70caa82c5df" kindref="member">WriteProtoList</ref>(</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>FILE<sp/><sp/><sp/>*File,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>ParamDesc[],</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/>ProtoList,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/>WriteSigProtos,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/>WriteInsigProtos)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="444"><highlight class="comment">**<sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="445"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>File<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open<sp/>text<sp/>file<sp/>to<sp/>write<sp/>prototypes<sp/>to</highlight></codeline>
<codeline lineno="446"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>N<sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>dimensions<sp/>in<sp/>feature<sp/>space</highlight></codeline>
<codeline lineno="447"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>ParamDesc<sp/><sp/><sp/>descriptions<sp/>for<sp/>each<sp/>dimension</highlight></codeline>
<codeline lineno="448"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>ProtoList<sp/><sp/><sp/>list<sp/>of<sp/>prototypes<sp/>to<sp/>be<sp/>written</highlight></codeline>
<codeline lineno="449"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>WriteSigProtos<sp/><sp/>TRUE<sp/>to<sp/>write<sp/>out<sp/>significant<sp/>prototypes</highlight></codeline>
<codeline lineno="450"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>WriteInsigProtos<sp/><sp/><sp/><sp/>TRUE<sp/>to<sp/>write<sp/>out<sp/>insignificants</highlight></codeline>
<codeline lineno="451"><highlight class="comment">**<sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="452"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="453"><highlight class="comment">**<sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="454"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>writes<sp/>a<sp/>textual<sp/>description<sp/>of<sp/>each<sp/>prototype</highlight></codeline>
<codeline lineno="455"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>prototype<sp/>list<sp/>to<sp/>the<sp/>specified<sp/>file.<sp/><sp/>It<sp/>also</highlight></codeline>
<codeline lineno="456"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>writes<sp/>a<sp/>file<sp/>header<sp/>which<sp/>includes<sp/>the<sp/>number<sp/>of<sp/>dimensions</highlight></codeline>
<codeline lineno="457"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>feature<sp/>space<sp/>and<sp/>the<sp/>descriptions<sp/>for<sp/>each<sp/>dimension.</highlight></codeline>
<codeline lineno="458"><highlight class="comment">**<sp/><sp/>Return:</highlight></codeline>
<codeline lineno="459"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="460"><highlight class="comment">**<sp/><sp/>Exceptions:</highlight></codeline>
<codeline lineno="461"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="462"><highlight class="comment">**<sp/><sp/>History:</highlight></codeline>
<codeline lineno="463"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>6/12/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="464"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>file<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>fprintf(File,</highlight><highlight class="stringliteral">&quot;%0d\n&quot;</highlight><highlight class="normal">,N);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="clusttool_8cpp_1a889ad8a8f7e5c6652ba059206b5a0aa8" kindref="member">WriteParamDesc</ref>(File,N,ParamDesc);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(ProtoList)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(<sp/>ProtoList<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>WriteSigProtos<sp/>)<sp/><sp/>||</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>WriteInsigProtos<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clusttool_8cpp_1a6f0ccfd7c117c2006796af1d3b19f110" kindref="member">WritePrototype</ref>(<sp/>File,<sp/>N,<sp/>Proto<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteProtoList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/clusttool.cpp"/>
  </compounddef>
</doxygen>
