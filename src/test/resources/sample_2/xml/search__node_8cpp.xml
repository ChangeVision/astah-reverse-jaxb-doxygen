<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="search__node_8cpp" kind="file">
    <compoundname>search_node.cpp</compoundname>
    <includes refid="search__node_8h" local="yes">search_node.h</includes>
    <incdepgraph>
      <node id="31284">
        <label>cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31285" relation="include">
        </childnode>
        <childnode refid="31289" relation="include">
        </childnode>
        <childnode refid="31300" relation="include">
        </childnode>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31304" relation="include">
        </childnode>
      </node>
      <node id="31275">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="31294">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="31271">
        <label>stdlib.h</label>
      </node>
      <node id="31289">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="31254" relation="include">
        </childnode>
        <childnode refid="31290" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
        <childnode refid="31257" relation="include">
        </childnode>
      </node>
      <node id="31266">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="31267" relation="include">
        </childnode>
      </node>
      <node id="31286">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="31287" relation="include">
        </childnode>
        <childnode refid="31262" relation="include">
        </childnode>
      </node>
      <node id="31293">
        <label>allheaders.h</label>
      </node>
      <node id="31285">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31262" relation="include">
        </childnode>
        <childnode refid="31286" relation="include">
        </childnode>
        <childnode refid="31288" relation="include">
        </childnode>
      </node>
      <node id="31256">
        <label>string</label>
      </node>
      <node id="31253">
        <label>search_node.h</label>
        <link refid="search__node_8h"/>
        <childnode refid="31254" relation="include">
        </childnode>
        <childnode refid="31284" relation="include">
        </childnode>
      </node>
      <node id="31278">
        <label>stddef.h</label>
      </node>
      <node id="31281">
        <label>memory.h</label>
      </node>
      <node id="31301">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="31295" relation="include">
        </childnode>
        <childnode refid="31257" relation="include">
        </childnode>
      </node>
      <node id="31257">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
      </node>
      <node id="31273">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="31265" relation="include">
        </childnode>
      </node>
      <node id="31303">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
      </node>
      <node id="31300">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31295" relation="include">
        </childnode>
        <childnode refid="31290" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31289" relation="include">
        </childnode>
        <childnode refid="31257" relation="include">
        </childnode>
      </node>
      <node id="31267">
        <label>limits.h</label>
      </node>
      <node id="31295">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="31271" relation="include">
        </childnode>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31296" relation="include">
        </childnode>
        <childnode refid="31261" relation="include">
        </childnode>
      </node>
      <node id="31258">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="31259" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31260" relation="include">
        </childnode>
        <childnode refid="31261" relation="include">
        </childnode>
        <childnode refid="31263" relation="include">
        </childnode>
        <childnode refid="31279" relation="include">
        </childnode>
        <childnode refid="31283" relation="include">
        </childnode>
      </node>
      <node id="31259">
        <label>string.h</label>
      </node>
      <node id="31282">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="31280" relation="include">
        </childnode>
      </node>
      <node id="31280">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="31281" relation="include">
        </childnode>
        <childnode refid="31259" relation="include">
        </childnode>
      </node>
      <node id="31292">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="31262" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31293" relation="include">
        </childnode>
        <childnode refid="31294" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
        <childnode refid="31295" relation="include">
        </childnode>
        <childnode refid="31299" relation="include">
        </childnode>
      </node>
      <node id="31262">
        <label>vector</label>
      </node>
      <node id="31272">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="31265" relation="include">
        </childnode>
      </node>
      <node id="31252">
        <label>cube/search_node.cpp</label>
        <link refid="search_node.cpp"/>
        <childnode refid="31253" relation="include">
        </childnode>
      </node>
      <node id="31287">
        <label>math.h</label>
      </node>
      <node id="31254">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="31255" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
      </node>
      <node id="31269">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31270" relation="include">
        </childnode>
        <childnode refid="31276" relation="include">
        </childnode>
      </node>
      <node id="31270">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31271" relation="include">
        </childnode>
        <childnode refid="31272" relation="include">
        </childnode>
        <childnode refid="31273" relation="include">
        </childnode>
        <childnode refid="31274" relation="include">
        </childnode>
        <childnode refid="31275" relation="include">
        </childnode>
      </node>
      <node id="31277">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="31278" relation="include">
        </childnode>
        <childnode refid="31265" relation="include">
        </childnode>
      </node>
      <node id="31296">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="31271" relation="include">
        </childnode>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31298" relation="include">
        </childnode>
      </node>
      <node id="31297">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="31304">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
        <childnode refid="31289" relation="include">
        </childnode>
      </node>
      <node id="31255">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31257" relation="include">
        </childnode>
      </node>
      <node id="31279">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="31273" relation="include">
        </childnode>
        <childnode refid="31274" relation="include">
        </childnode>
        <childnode refid="31276" relation="include">
        </childnode>
        <childnode refid="31272" relation="include">
        </childnode>
        <childnode refid="31280" relation="include">
        </childnode>
        <childnode refid="31282" relation="include">
        </childnode>
      </node>
      <node id="31290">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="31291" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
      </node>
      <node id="31283">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="31299">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="31277" relation="include">
        </childnode>
      </node>
      <node id="31268">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="31269" relation="include">
        </childnode>
      </node>
      <node id="31260">
        <label>algorithm</label>
      </node>
      <node id="31265">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="31266" relation="include">
        </childnode>
      </node>
      <node id="31302">
        <label>word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31295" relation="include">
        </childnode>
        <childnode refid="31258" relation="include">
        </childnode>
      </node>
      <node id="31298">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
      </node>
      <node id="31264">
        <label>stdio.h</label>
      </node>
      <node id="31288">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
      </node>
      <node id="31261">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="31259" relation="include">
        </childnode>
        <childnode refid="31256" relation="include">
        </childnode>
        <childnode refid="31260" relation="include">
        </childnode>
        <childnode refid="31262" relation="include">
        </childnode>
      </node>
      <node id="31263">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31265" relation="include">
        </childnode>
        <childnode refid="31268" relation="include">
        </childnode>
      </node>
      <node id="31276">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31259" relation="include">
        </childnode>
        <childnode refid="31266" relation="include">
        </childnode>
        <childnode refid="31277" relation="include">
        </childnode>
      </node>
      <node id="31291">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="31287" relation="include">
        </childnode>
        <childnode refid="31292" relation="include">
        </childnode>
      </node>
      <node id="31274">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="31264" relation="include">
        </childnode>
        <childnode refid="31259" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_node.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>the<sp/>Beam<sp/>Search<sp/>Node<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="search__node_8h" kindref="compound">search_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>constructor<sp/>updates<sp/>the<sp/>best<sp/>paths<sp/>and<sp/>costs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>mean_char_reco_cost_<sp/>(returned<sp/>by<sp/>BestRecoCost())<sp/>is<sp/>the<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>char_reco<sp/>cost<sp/>of<sp/>the<sp/>best_path,<sp/>including<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>best_path_reco_cost<sp/>is<sp/>the<sp/>total<sp/>char_reco_cost<sp/>of<sp/>the<sp/>best_path,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>but<sp/>excludes<sp/>the<sp/>char_reco_cost<sp/>of<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>best_cost<sp/>is<sp/>the<sp/>mean<sp/>mixed<sp/>cost,<sp/>i.e.,<sp/>mean_char_reco_cost_<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>current<sp/>language<sp/>model<sp/>cost,<sp/>all<sp/>weighted<sp/>by<sp/>the<sp/>cube<sp/>context&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>RecoWgt<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classtesseract_1_1_search_node_1a3dbc7c88c622bd366a2a1c368bc301c0" kindref="member">SearchNode::SearchNode</ref>(CubeRecoContext<sp/>*cntxt,<sp/>SearchNode<sp/>*parent_node,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_reco_cost,<sp/>LangModEdge<sp/>*edge,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_idx)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>cntxt_<sp/>=<sp/>cntxt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>lang_mod_edge_<sp/>=<sp/>edge;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>col_idx_<sp/>=<sp/>col_idx;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>parent_node_<sp/>=<sp/>parent_node;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>char_reco_cost_<sp/>=<sp/>char_reco_cost;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>string<sp/>of<sp/>this<sp/>node<sp/>is<sp/>the<sp/>same<sp/>as<sp/>that<sp/>of<sp/>the<sp/>language<sp/>model<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>str_<sp/>=<sp/>(edge<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>edge-&gt;EdgeString());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>best<sp/>path<sp/>total<sp/>reco<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>best_path_reco_cost_<sp/>=<sp/>(parent_node_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/><sp/>0<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent_node_-&gt;<ref refid="classtesseract_1_1_search_node_1adc891df858323d830e5d4cf175996269" kindref="member">CharRecoCost</ref>()<sp/>+<sp/>parent_node_-&gt;<ref refid="classtesseract_1_1_search_node_1aa6763e0155a2628d99a669af22a083f9" kindref="member">BestPathRecoCost</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>best<sp/>path<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>best_path_len_<sp/>=<sp/>(parent_node_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>:<sp/>parent_node_-&gt;<ref refid="classtesseract_1_1_search_node_1a6bba9a32f1b4a51f3cc4a8d7f5702d5b" kindref="member">BestPathLength</ref>()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>edge-&gt;IsRoot()<sp/>&amp;&amp;<sp/>parent_node_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>best_path_len_++;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>best<sp/>reco<sp/>cost<sp/>mean<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>mean_char_reco_cost_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(best_path_reco_cost_<sp/>+<sp/>char_reco_cost_)<sp/>/</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(best_path_len_));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>language<sp/>model<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lm_cost<sp/>=<sp/><ref refid="classtesseract_1_1_search_node_1a8044f7b427cc689160467ff7becc043c" kindref="member">LangModCost</ref>(lang_mod_edge_,<sp/>parent_node_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>aggregate<sp/>best<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>best_cost_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a20f4885d6efe282305e9f356536771db" kindref="member">RecoWgt</ref>()<sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(best_path_reco_cost_<sp/>+<sp/>char_reco_cost_)<sp/>/</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(best_path_len_)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>+<sp/>lm_cost;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="classtesseract_1_1_search_node_1ab8de4b8a0617054655cc79ba6058ce90" kindref="member">SearchNode::~SearchNode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang_mod_edge_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lang_mod_edge_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>parent_node<sp/>node<sp/>if<sp/>provides<sp/>a<sp/>better<sp/>(less)<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_search_node_1a16c7099506c96fa54c4f9f1a0f68784d" kindref="member">SearchNode::UpdateParent</ref>(SearchNode<sp/>*new_parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_reco_cost,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>*new_edge)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang_mod_edge_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>update<sp/>the<sp/>parent_node,<sp/>we<sp/>have<sp/>to<sp/>have<sp/>the<sp/>same<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>and<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_edge<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>!lang_mod_edge_-&gt;<ref refid="classtesseract_1_1_lang_mod_edge_1ac1676b68bb4e4433fbe183d3f3322998" kindref="member">IsIdentical</ref>(new_edge)<sp/>||</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_search_node_1a42d7aa92df8f0862d2401d5c165e57fe" kindref="member">SearchNode::IdenticalPath</ref>(parent_node_,<sp/>new_parent))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>path<sp/>cost<sp/>and<sp/>combined<sp/>cost<sp/>of<sp/>the<sp/>new<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_best_path_reco_cost;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_cost;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_best_path_len;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>new_best_path_reco_cost<sp/>=<sp/>(new_parent<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>:<sp/>new_parent-&gt;BestPathRecoCost()<sp/>+<sp/>new_parent-&gt;CharRecoCost();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>new_best_path_len<sp/>=</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(new_parent<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>1<sp/>:<sp/>new_parent-&gt;BestPathLength()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>new<sp/>language<sp/>model<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_lm_cost<sp/>=<sp/><ref refid="classtesseract_1_1_search_node_1a8044f7b427cc689160467ff7becc043c" kindref="member">LangModCost</ref>(new_edge,<sp/>new_parent);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>new_cost<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a20f4885d6efe282305e9f356536771db" kindref="member">RecoWgt</ref>()<sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(new_best_path_reco_cost<sp/>+<sp/>new_reco_cost)<sp/>/</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(new_best_path_len)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>+<sp/>new_lm_cost;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>if<sp/>it<sp/>is<sp/>better<sp/>(less)<sp/>than<sp/>the<sp/>current<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_cost_<sp/>&gt;<sp/>new_cost)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_node_<sp/>=<sp/>new_parent;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>char_reco_cost_<sp/>=<sp/>new_reco_cost;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>best_path_reco_cost_<sp/>=<sp/>new_best_path_reco_cost;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>best_path_len_<sp/>=<sp/>new_best_path_len;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_char_reco_cost_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(best_path_reco_cost_<sp/>+<sp/>char_reco_cost_)<sp/>/</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(best_path_len_));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>best_cost_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a20f4885d6efe282305e9f356536771db" kindref="member">RecoWgt</ref>()<sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(best_path_reco_cost_<sp/>+<sp/>char_reco_cost_)<sp/>/</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;double&gt;(best_path_len_)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>+<sp/>new_lm_cost;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*<ref refid="classtesseract_1_1_search_node_1a01d31de43b791a244d94be06e5c45789" kindref="member">SearchNode::PathString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_search_node_1a3dbc7c88c622bd366a2a1c368bc301c0" kindref="member">SearchNode</ref><sp/>*node<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>string<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;str_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(node-&gt;str_);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>edge<sp/>is<sp/>a<sp/>root<sp/>and<sp/>does<sp/>not<sp/>have<sp/>a<sp/>NULL<sp/>parent,<sp/>account<sp/>for<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>LangModEdge<sp/>*lm_edge<sp/>=<sp/>node-&gt;LangModelEdge();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>lm_edge-&gt;IsRoot()<sp/>&amp;&amp;<sp/>node-&gt;ParentNode()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;parent_node_;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*char_ptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[len<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_ptr<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch_idx<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>node<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>char_ptr[ch_idx--]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>str_len<sp/>=<sp/>((node-&gt;str_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(node-&gt;str_));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str_len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_ptr[ch_idx--]<sp/>=<sp/>node-&gt;str_[--str_len];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>edge<sp/>is<sp/>a<sp/>root<sp/>and<sp/>does<sp/>not<sp/>have<sp/>a<sp/>NULL<sp/>parent,<sp/>insert<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>LangModEdge<sp/>*lm_edge<sp/>=<sp/>node-&gt;LangModelEdge();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>lm_edge-&gt;IsRoot()<sp/>&amp;&amp;<sp/>node-&gt;ParentNode()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_ptr[ch_idx--]<sp/>=<sp/>(<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>)</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;parent_node_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_ptr;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compares<sp/>the<sp/>path<sp/>of<sp/>two<sp/>nodes<sp/>and<sp/>checks<sp/>if<sp/>its<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_search_node_1a42d7aa92df8f0862d2401d5c165e57fe" kindref="member">SearchNode::IdenticalPath</ref>(SearchNode<sp/>*node1,<sp/>SearchNode<sp/>*node2)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node1-&gt;best_path_len_<sp/>!=<sp/>node2-&gt;best_path_len_)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>backtrack<sp/>until<sp/>either<sp/>a<sp/>root<sp/>or<sp/>a<sp/>NULL<sp/>edge<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node1-&gt;str_<sp/>!=<sp/>node2-&gt;str_)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>if<sp/>either<sp/>nodes<sp/>is<sp/>a<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node1-&gt;LangModelEdge()-&gt;IsRoot()<sp/>||<sp/>node2-&gt;LangModelEdge()-&gt;IsRoot())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>node1<sp/>=<sp/>node1-&gt;parent_node_;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>node2<sp/>=<sp/>node2-&gt;parent_node_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((node1<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node2<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(node1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node1-&gt;LangModelEdge()-&gt;IsRoot()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node2-&gt;LangModelEdge()-&gt;IsRoot()));</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>language<sp/>model<sp/>cost<sp/>of<sp/>a<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_search_node_1a8044f7b427cc689160467ff7becc043c" kindref="member">SearchNode::LangModCost</ref>(LangModEdge<sp/>*current_lm_edge,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchNode<sp/>*parent_node)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lm_cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_root<sp/>=<sp/>((current_lm_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>current_lm_edge-&gt;IsRoot())<sp/>||</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_node<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_root)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_cnt++;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lm_cost<sp/>+=<sp/>(current_lm_edge<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>0<sp/>:<sp/>current_lm_edge-&gt;PathCost());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>until<sp/>we<sp/>hit<sp/>a<sp/>null<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_node<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>previous<sp/>language<sp/>model<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>current_lm_edge<sp/>=<sp/>parent_node-&gt;LangModelEdge();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_node<sp/>=<sp/>parent_node-&gt;ParentNode();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lm_cost<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(node_cnt));</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/search_node.cpp"/>
  </compounddef>
</doxygen>
