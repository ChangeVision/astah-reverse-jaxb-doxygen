<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="tabfind_8cpp" kind="file">
    <compoundname>tabfind.cpp</compoundname>
    <includes refid="tabfind_8h" local="yes">tabfind.h</includes>
    <includes refid="alignedblob_8h" local="yes">alignedblob.h</includes>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="detlinefit_8h" local="yes">detlinefit.h</includes>
    <includes refid="linefind_8h" local="yes">linefind.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <incdepgraph>
      <node id="39357">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="39325" relation="include">
        </childnode>
        <childnode refid="39358" relation="include">
        </childnode>
        <childnode refid="39359" relation="include">
        </childnode>
        <childnode refid="39364" relation="include">
        </childnode>
        <childnode refid="39371" relation="include">
        </childnode>
      </node>
      <node id="39372">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="39373" relation="include">
        </childnode>
        <childnode refid="39325" relation="include">
        </childnode>
        <childnode refid="39342" relation="include">
        </childnode>
        <childnode refid="39358" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39324" relation="include">
        </childnode>
      </node>
      <node id="39347">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="39324">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="39325" relation="include">
        </childnode>
        <childnode refid="39338" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
        <childnode refid="39356" relation="include">
        </childnode>
      </node>
      <node id="39371">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
      </node>
      <node id="39331">
        <label>stdlib.h</label>
      </node>
      <node id="39328">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="39329" relation="include">
        </childnode>
      </node>
      <node id="39378">
        <label>detlinefit.h</label>
        <link refid="detlinefit_8h"/>
        <childnode refid="39340" relation="include">
        </childnode>
      </node>
      <node id="39355">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="39335" relation="include">
        </childnode>
      </node>
      <node id="39356">
        <label>allheaders.h</label>
      </node>
      <node id="39348">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
      </node>
      <node id="39330">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="39331" relation="include">
        </childnode>
        <childnode refid="39332" relation="include">
        </childnode>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39333" relation="include">
        </childnode>
        <childnode refid="39335" relation="include">
        </childnode>
        <childnode refid="39336" relation="include">
        </childnode>
      </node>
      <node id="39325">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
        <childnode refid="39330" relation="include">
        </childnode>
        <childnode refid="39337" relation="include">
        </childnode>
      </node>
      <node id="39360">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="39338" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
      </node>
      <node id="39334">
        <label>stddef.h</label>
      </node>
      <node id="39335">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="39327" relation="include">
        </childnode>
      </node>
      <node id="39369">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="39367" relation="include">
        </childnode>
        <childnode refid="39342" relation="include">
        </childnode>
        <childnode refid="39340" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
        <childnode refid="39370" relation="include">
        </childnode>
      </node>
      <node id="39329">
        <label>limits.h</label>
      </node>
      <node id="39323">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="39324" relation="include">
        </childnode>
        <childnode refid="39357" relation="include">
        </childnode>
        <childnode refid="39354" relation="include">
        </childnode>
        <childnode refid="39372" relation="include">
        </childnode>
      </node>
      <node id="39343">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="39341" relation="include">
        </childnode>
      </node>
      <node id="39344">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="39340" relation="include">
        </childnode>
      </node>
      <node id="39358">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
        <childnode refid="39330" relation="include">
        </childnode>
        <childnode refid="39337" relation="include">
        </childnode>
      </node>
      <node id="39321">
        <label>textord/tabfind.cpp</label>
        <link refid="tabfind.cpp"/>
        <childnode refid="39322" relation="include">
        </childnode>
        <childnode refid="39323" relation="include">
        </childnode>
        <childnode refid="39357" relation="include">
        </childnode>
        <childnode refid="39375" relation="include">
        </childnode>
        <childnode refid="39378" relation="include">
        </childnode>
        <childnode refid="39374" relation="include">
        </childnode>
        <childnode refid="39347" relation="include">
        </childnode>
      </node>
      <node id="39332">
        <label>string.h</label>
      </node>
      <node id="39346">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="39341" relation="include">
        </childnode>
        <childnode refid="39340" relation="include">
        </childnode>
        <childnode refid="39347" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
        <childnode refid="39349" relation="include">
        </childnode>
      </node>
      <node id="39345">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="39327" relation="include">
        </childnode>
      </node>
      <node id="39374">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="39352">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="39327" relation="include">
        </childnode>
      </node>
      <node id="39375">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="39324" relation="include">
        </childnode>
        <childnode refid="39376" relation="include">
        </childnode>
        <childnode refid="39377" relation="include">
        </childnode>
      </node>
      <node id="39338">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="39339" relation="include">
        </childnode>
        <childnode refid="39344" relation="include">
        </childnode>
        <childnode refid="39345" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39355" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
      </node>
      <node id="39359">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="39350" relation="include">
        </childnode>
        <childnode refid="39345" relation="include">
        </childnode>
        <childnode refid="39358" relation="include">
        </childnode>
        <childnode refid="39354" relation="include">
        </childnode>
        <childnode refid="39355" relation="include">
        </childnode>
        <childnode refid="39360" relation="include">
        </childnode>
        <childnode refid="39361" relation="include">
        </childnode>
      </node>
      <node id="39361">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39362" relation="include">
        </childnode>
        <childnode refid="39359" relation="include">
        </childnode>
      </node>
      <node id="39336">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="39335" relation="include">
        </childnode>
      </node>
      <node id="39322">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="39323" relation="include">
        </childnode>
        <childnode refid="39352" relation="include">
        </childnode>
        <childnode refid="39372" relation="include">
        </childnode>
        <childnode refid="39374" relation="include">
        </childnode>
      </node>
      <node id="39341">
        <label>math.h</label>
      </node>
      <node id="39339">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="39340" relation="include">
        </childnode>
        <childnode refid="39344" relation="include">
        </childnode>
      </node>
      <node id="39337">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="39335" relation="include">
        </childnode>
      </node>
      <node id="39363">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="39340" relation="include">
        </childnode>
      </node>
      <node id="39367">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="39364">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="39365" relation="include">
        </childnode>
        <childnode refid="39366" relation="include">
        </childnode>
        <childnode refid="39361" relation="include">
        </childnode>
        <childnode refid="39368" relation="include">
        </childnode>
      </node>
      <node id="39350">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39351" relation="include">
        </childnode>
        <childnode refid="39354" relation="include">
        </childnode>
      </node>
      <node id="39351">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39331" relation="include">
        </childnode>
        <childnode refid="39352" relation="include">
        </childnode>
        <childnode refid="39335" relation="include">
        </childnode>
        <childnode refid="39353" relation="include">
        </childnode>
        <childnode refid="39347" relation="include">
        </childnode>
      </node>
      <node id="39333">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="39334" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
      </node>
      <node id="39373">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="39324" relation="include">
        </childnode>
        <childnode refid="39357" relation="include">
        </childnode>
      </node>
      <node id="39366">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="39367" relation="include">
        </childnode>
        <childnode refid="39342" relation="include">
        </childnode>
        <childnode refid="39354" relation="include">
        </childnode>
      </node>
      <node id="39342">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39327" relation="include">
        </childnode>
        <childnode refid="39330" relation="include">
        </childnode>
        <childnode refid="39337" relation="include">
        </childnode>
      </node>
      <node id="39376">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="39324" relation="include">
        </childnode>
        <childnode refid="39357" relation="include">
        </childnode>
        <childnode refid="39347" relation="include">
        </childnode>
        <childnode refid="39364" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39348" relation="include">
        </childnode>
        <childnode refid="39322" relation="include">
        </childnode>
        <childnode refid="39372" relation="include">
        </childnode>
      </node>
      <node id="39340">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39341" relation="include">
        </childnode>
        <childnode refid="39342" relation="include">
        </childnode>
        <childnode refid="39343" relation="include">
        </childnode>
      </node>
      <node id="39365">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="39333" relation="include">
        </childnode>
      </node>
      <node id="39349">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="39350" relation="include">
        </childnode>
      </node>
      <node id="39370">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="39327">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="39328" relation="include">
        </childnode>
      </node>
      <node id="39368">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="39325" relation="include">
        </childnode>
        <childnode refid="39365" relation="include">
        </childnode>
        <childnode refid="39354" relation="include">
        </childnode>
        <childnode refid="39369" relation="include">
        </childnode>
        <childnode refid="39370" relation="include">
        </childnode>
      </node>
      <node id="39377">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="39376" relation="include">
        </childnode>
        <childnode refid="39351" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
        <childnode refid="39372" relation="include">
        </childnode>
      </node>
      <node id="39326">
        <label>stdio.h</label>
      </node>
      <node id="39354">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39332" relation="include">
        </childnode>
        <childnode refid="39328" relation="include">
        </childnode>
        <childnode refid="39333" relation="include">
        </childnode>
      </node>
      <node id="39353">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="39326" relation="include">
        </childnode>
        <childnode refid="39332" relation="include">
        </childnode>
      </node>
      <node id="39362">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="39363" relation="include">
        </childnode>
        <childnode refid="39330" relation="include">
        </childnode>
        <childnode refid="39333" relation="include">
        </childnode>
        <childnode refid="39346" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Subclass<sp/>of<sp/>BBGrid<sp/>to<sp/>find<sp/>vertically<sp/>aligned<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Mar<sp/>21<sp/>15:03:01<sp/>PST<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabfind_8h" kindref="compound">tabfind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="alignedblob_8h" kindref="compound">alignedblob.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="detlinefit_8h" kindref="compound">detlinefit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linefind_8h" kindref="compound">linefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>box<sp/>size<sp/>to<sp/>search<sp/>for<sp/>initial<sp/>gaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1955d1b3b99cebc67e90fa20f8407a04" kindref="member">kTabRadiusFactor</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>and<sp/>Max<sp/>multiple<sp/>of<sp/>height<sp/>to<sp/>search<sp/>vertically<sp/>when<sp/>extrapolating.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2fa6d78b73f614c75e0fe25a9dbdaaae" kindref="member">kMinVerticalSearch</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a664cd7aab5779ec9a70ddd95e53c29c1" kindref="member">kMaxVerticalSearch</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a80f8cfaf51d03db29c6e94d70af97cf8" kindref="member">kMaxRaggedSearch</ref><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>a<sp/>column<sp/>width<sp/>to<sp/>make<sp/>it<sp/>interesting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a9f107f3f0670a037dd195b875a3f5a20" kindref="member">kMinLinesInColumn</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>width<sp/>of<sp/>a<sp/>column<sp/>to<sp/>be<sp/>interesting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" kindref="member">kMinColumnWidth</ref><sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>fraction<sp/>of<sp/>total<sp/>column<sp/>lines<sp/>for<sp/>a<sp/>column<sp/>to<sp/>be<sp/>interesting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a940cd6c9651095d7b562b4d66f776107" kindref="member">kMinFractionalLinesInColumn</ref><sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>height<sp/>used<sp/>as<sp/>alignment<sp/>tolerance<sp/>for<sp/>aligned<sp/>tabs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a9ef44019867a8035dc34a7795097b157" kindref="member">kAlignedFraction</ref><sp/>=<sp/>0.03125;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>gutter<sp/>width<sp/>in<sp/>absolute<sp/>inch<sp/>(multiplied<sp/>by<sp/>resolution)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae21e2c36358c259cded9c442cab812e7" kindref="member">kMinGutterWidthAbsolute</ref><sp/>=<sp/>0.02;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>gutter<sp/>width<sp/>(in<sp/>absolute<sp/>inch)<sp/>that<sp/>we<sp/>care<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a4d8d6ad8a3ebea8a7b3b45de690c7e40" kindref="member">kMaxGutterWidthAbsolute</ref><sp/>=<sp/>2.00;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiplier<sp/>of<sp/>gridsize<sp/>for<sp/>min<sp/>gutter<sp/>width<sp/>of<sp/>TT_MAYBE_RAGGED<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3f4e3895634b56c7096734cc15982208" kindref="member">kRaggedGutterMultiple</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>aspect<sp/>ratio<sp/>of<sp/>tall<sp/>objects<sp/>to<sp/>be<sp/>considered<sp/>a<sp/>separator<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(These<sp/>will<sp/>be<sp/>ignored<sp/>in<sp/>searching<sp/>the<sp/>gutter<sp/>for<sp/>obstructions.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a859848f39707e3651c43974d50abe408" kindref="member">kLineFragmentAspectRatio</ref><sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiplier<sp/>of<sp/>new<sp/>y<sp/>positions<sp/>in<sp/>running<sp/>average<sp/>for<sp/>skew<sp/>estimation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afadff62f2d6f2d5f6c143d958e548c7c" kindref="member">kSmoothFactor</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>coverage<sp/>for<sp/>a<sp/>good<sp/>baseline<sp/>between<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a65472193d051a39743ef565bd34bcc64" kindref="member">kMinBaselineCoverage</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>overlap<sp/>fraction<sp/>when<sp/>scanning<sp/>text<sp/>lines<sp/>for<sp/>column<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a59d7d7820f7a4cd49d0dc316b15a5916" kindref="member">kCharVerticalOverlapFraction</ref><sp/>=<sp/>0.375;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>horizontal<sp/>gap<sp/>allowed<sp/>when<sp/>scanning<sp/>for<sp/>column<sp/>widths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a19f1decdbc5e8704aad99febd8755812" kindref="member">kMaxHorizontalGap</ref><sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>upper<sp/>quartile<sp/>error<sp/>allowed<sp/>on<sp/>a<sp/>baseline<sp/>fit<sp/>as<sp/>a<sp/>fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8043339cb79428cd76d41f5432de9712" kindref="member">kMaxBaselineError</ref><sp/>=<sp/>0.4375;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>number<sp/>of<sp/>points<sp/>to<sp/>accept<sp/>after<sp/>evaluation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1adc693e483b6c8c17a5c85a0836fed4cd" kindref="member">kMinEvaluatedTabs</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>aspect<sp/>ratio<sp/>of<sp/>a<sp/>textline<sp/>to<sp/>make<sp/>a<sp/>good<sp/>textline<sp/>blob<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>single<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a99c9fb2718706bafc74bc3ad2904b950" kindref="member">kMaxTextLineBlobRatio</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>aspect<sp/>ratio<sp/>of<sp/>a<sp/>textline<sp/>to<sp/>make<sp/>a<sp/>good<sp/>textline<sp/>blob<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>blobs.<sp/>Target<sp/>ratio<sp/>varies<sp/>according<sp/>to<sp/>number<sp/>of<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a25e68d9020c882dce505ac387807952e" kindref="member">kMinTextLineBlobRatio</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>box<sp/>area<sp/>covered<sp/>by<sp/>image<sp/>to<sp/>make<sp/>a<sp/>blob<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ab4ff5ad2b93e3611d310d5338a2cfd06" kindref="member">kMinImageArea</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Upto<sp/>30<sp/>degrees<sp/>is<sp/>allowed<sp/>for<sp/>rotations<sp/>of<sp/>diacritic<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>this<sp/>value<sp/>slightly<sp/>larger<sp/>than<sp/>kCosSmallAngle<sp/>in<sp/>blobbox.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>assert<sp/>there<sp/>never<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a54e5bd928697f4ac6707ebd6d6313ac8" kindref="member">kCosMaxSkewAngle</ref><sp/>=<sp/>0.866025;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_initialtabs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>tab<sp/>candidates&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_finaltabs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>tab<sp/>vectors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="namespacetesseract_1a9539ddbb56bbf8225df264cef0d86417" kindref="member">double_VAR</ref>(textord_tabfind_aligned_gap_fraction,<sp/>0.75,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fraction<sp/>of<sp/>height<sp/>used<sp/>as<sp/>a<sp/>minimum<sp/>gap<sp/>for<sp/>aligned<sp/>blobs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="classtesseract_1_1_tab_find_1aa276c6c246bbde8c13131c2b3f41a454" kindref="member">TabFind::TabFind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>vlines,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_y,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>:<sp/>AlignedBlob(gridsize,<sp/>bleft,<sp/>tright),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>resolution_(resolution),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>image_origin_(0,<sp/>tright.y()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>width_cb_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>v_it_.set_to_list(&amp;vectors_);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>v_it_.add_list_after(vlines);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>SetVerticalSkewAndParellelize(vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>width_cb_<sp/>=<sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtesseract_1_1_tab_find_1a5446d04d773f5bd16c35f24bf06f15bb" kindref="member">TabFind::CommonWidth</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classtesseract_1_1_tab_find_1a3144fdb911531f09dd8e63c7e8fa5bf7" kindref="member">TabFind::~TabFind</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_cb_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>width_cb_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>into<sp/>the<sp/>given<sp/>grid<sp/>(not<sp/>necessarily<sp/>this).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>take_ownership<sp/>is<sp/>true,<sp/>then<sp/>the<sp/>blobs<sp/>are<sp/>removed<sp/>from<sp/>the<sp/>source<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>InsertBlob<sp/>for<sp/>the<sp/>other<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>seem<sp/>to<sp/>make<sp/>more<sp/>sense<sp/>to<sp/>swap<sp/>this<sp/>and<sp/>grid,<sp/>but<sp/>this<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>around<sp/>allows<sp/>grid<sp/>to<sp/>not<sp/>be<sp/>derived<sp/>from<sp/>TabFind,<sp/>eg<sp/>a<sp/>ColPartitionGrid,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>grid<sp/>that<sp/>provides<sp/>the<sp/>tab<sp/>stops(this)<sp/>has<sp/>to<sp/>be<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TabFind.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">TabFind::InsertBlobsToGrid</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>h_spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v_spread,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>blobs,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBGrid&lt;<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>,<sp/>BLOBNBOX_CLIST,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT&gt;*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(blobs);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reject_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(InsertBlob(true,<sp/>true,<sp/>blob,<sp/>grid))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_find_1aa77b0f7e1c861df33171a855249abd15" kindref="member">InsertBlob</ref>(h_spread,<sp/>v_spread,<sp/>blob,<sp/>grid))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++b_count;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++reject_count;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Inserted<sp/>%d<sp/>blobs<sp/>into<sp/>grid,<sp/>%d<sp/>rejected.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_count,<sp/>reject_count);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>single<sp/>blob<sp/>into<sp/>the<sp/>given<sp/>grid<sp/>(not<sp/>necessarily<sp/>this).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>h_spread,<sp/>then<sp/>all<sp/>cells<sp/>covered<sp/>horizontally<sp/>by<sp/>the<sp/>box<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used,<sp/>otherwise,<sp/>just<sp/>the<sp/>bottom-left.<sp/>Similarly<sp/>for<sp/>v_spread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>side<sp/>effect<sp/>is<sp/>that<sp/>the<sp/>left<sp/>and<sp/>right<sp/>rule<sp/>edges<sp/>of<sp/>the<sp/>blob<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>according<sp/>to<sp/>the<sp/>tab<sp/>vectors<sp/>in<sp/>this<sp/>(not<sp/>grid).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1aa77b0f7e1c861df33171a855249abd15" kindref="member">TabFind::InsertBlob</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>h_spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v_spread,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBGrid&lt;<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>,<sp/>BLOBNBOX_CLIST,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT&gt;*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a37c2f715b4cb67ae8ec6a507dd029787" kindref="member">set_left_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ae90db382b3842419f291ae29dd7cd778" kindref="member">set_right_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af1c12b91267640dc5634f8992f96cb1a" kindref="member">set_left_crossing_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a234b1b56e0790a98a0c549a36580ca60" kindref="member">set_right_crossing_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af37f373c72851534101f4caf296a3cf7" kindref="member">joined_to_prev</ref>())</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>grid-&gt;InsertBBox(h_spread,<sp/>v_spread,<sp/>blob);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calls<sp/>SetBlobRuleEdges<sp/>for<sp/>all<sp/>the<sp/>blobs<sp/>in<sp/>the<sp/>given<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">TabFind::SetBlockRuleEdges</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aca8c033dbef8b7065be5a5957e83dcf8" kindref="member">SetBlobRuleEdges</ref>(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aca8c033dbef8b7065be5a5957e83dcf8" kindref="member">SetBlobRuleEdges</ref>(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aca8c033dbef8b7065be5a5957e83dcf8" kindref="member">SetBlobRuleEdges</ref>(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aca8c033dbef8b7065be5a5957e83dcf8" kindref="member">SetBlobRuleEdges</ref>(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>left<sp/>and<sp/>right<sp/>rule<sp/>and<sp/>crossing_rules<sp/>for<sp/>the<sp/>blobs<sp/>in<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>list<sp/>by<sp/>fiding<sp/>the<sp/>next<sp/>outermost<sp/>tabvectors<sp/>for<sp/>each<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1aca8c033dbef8b7065be5a5957e83dcf8" kindref="member">TabFind::SetBlobRuleEdges</ref>(BLOBNBOX_LIST*<sp/>blobs)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(blobs);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a37c2f715b4cb67ae8ec6a507dd029787" kindref="member">set_left_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ae90db382b3842419f291ae29dd7cd778" kindref="member">set_right_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af1c12b91267640dc5634f8992f96cb1a" kindref="member">set_left_crossing_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a234b1b56e0790a98a0c549a36580ca60" kindref="member">set_right_crossing_rule</ref>(<ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>gutter<sp/>width<sp/>of<sp/>the<sp/>given<sp/>TabVector<sp/>between<sp/>the<sp/>given<sp/>y<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>returns<sp/>x-shift<sp/>to<sp/>be<sp/>added<sp/>to<sp/>the<sp/>vector<sp/>to<sp/>clear<sp/>any<sp/>intersecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blobs.<sp/>The<sp/>shift<sp/>is<sp/>deducted<sp/>from<sp/>the<sp/>returned<sp/>gutter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>ignore_unmergeables<sp/>is<sp/>true,<sp/>then<sp/>blobs<sp/>of<sp/>UnMergeableType<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ignored<sp/>as<sp/>if<sp/>they<sp/>don&apos;t<sp/>exist.<sp/>(Used<sp/>for<sp/>text<sp/>on<sp/>image.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max_gutter_width<sp/>is<sp/>used<sp/>as<sp/>the<sp/>maximum<sp/>width<sp/>worth<sp/>searching<sp/>for<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>nothing<sp/>near<sp/>the<sp/>TabVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1add7dc17782aaf4446009abdb7329c79f" kindref="member">TabFind::GutterWidth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector&amp;<sp/>v,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_unmergeables,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gutter_width,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>required_shift)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_to_left<sp/>=<sp/>v.IsLeftTab();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_x<sp/>=<sp/>v.XAtY(bottom_y);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_x<sp/>=<sp/>v.XAtY(top_y);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_x<sp/>=<sp/>right_to_left<sp/>?<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(top_x,<sp/>bottom_x)<sp/>:<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(top_x,<sp/>bottom_x);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>sidesearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>sidesearch.StartSideSearch(start_x,<sp/>bottom_y,<sp/>top_y);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gap<sp/>=<sp/>max_gutter_width;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>*required_shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((blob<sp/>=<sp/>sidesearch.NextSideSearch(right_to_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;=<sp/>top_y<sp/>||<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;=<sp/>bottom_y)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>overlap<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;=<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>()<sp/>*<sp/>2<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>*<sp/><ref refid="namespacetesseract_1a859848f39707e3651c43974d50abe408" kindref="member">kLineFragmentAspectRatio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>likely<sp/>separator<sp/>line<sp/>residue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ignore_unmergeables<sp/>&amp;&amp;<sp/><ref refid="class_b_l_o_b_n_b_o_x_1aed57b07f933309970d23490dfc5a5e52" kindref="member">BLOBNBOX::UnMergeableType</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>non-text<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>x<sp/>at<sp/>the<sp/>mid-y<sp/>so<sp/>that<sp/>the<sp/>required_shift<sp/>guarantees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>clear<sp/>all<sp/>the<sp/>blobs<sp/>on<sp/>the<sp/>tab-stop.<sp/>If<sp/>we<sp/>use<sp/>the<sp/>min/max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>x<sp/>at<sp/>top/bottom<sp/>of<sp/>the<sp/>blob,<sp/>then<sp/>exactness<sp/>would<sp/>be<sp/>required,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>not<sp/>a<sp/>good<sp/>thing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_x<sp/>=<sp/>v.XAtY(mid_y);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_to_left)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>=<sp/>tab_x<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>tab_x<sp/>&lt;<sp/>*required_shift)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*required_shift<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>tab_x;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>tab_x;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>tab_x<sp/>&gt;<sp/>*required_shift)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*required_shift<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>tab_x;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>gap<sp/>&lt;<sp/>min_gap)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_gap<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>may<sp/>be<sp/>negative,<sp/>in<sp/>which<sp/>case,<sp/><sp/>this<sp/>is<sp/>a<sp/>really<sp/>bad<sp/>tabstop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_gap<sp/>-<sp/>abs(*required_shift);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>gutter<sp/>width<sp/>and<sp/>distance<sp/>to<sp/>inner<sp/>neighbour<sp/>for<sp/>the<sp/>given<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a7c81fe52db828b81284f1e143a2d7e51" kindref="member">TabFind::GutterWidthAndNeighbourGap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mean_height,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gutter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>gutter_width,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>neighbour_gap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gutter<sp/>and<sp/>internal<sp/>sides<sp/>of<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gutter_x<sp/>=<sp/>left<sp/>?<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>internal_x<sp/>=<sp/>left<sp/>?<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>ragged<sp/>edges,<sp/>the<sp/>gutter<sp/>side<sp/>of<sp/>the<sp/>box<sp/>is<sp/>away<sp/>from<sp/>the<sp/>tabstop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_gap<sp/>=<sp/>left<sp/>?<sp/>gutter_x<sp/>-<sp/>tab_x<sp/>:<sp/>tab_x<sp/>-<sp/>gutter_x;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>*gutter_width<sp/>=<sp/>max_gutter;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>box<sp/>is<sp/>away<sp/>from<sp/>the<sp/>tabstop,<sp/>we<sp/>need<sp/>to<sp/>increase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>allowed<sp/>gutter<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_gap<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>*gutter_width<sp/>+=<sp/>tab_gap;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Looking<sp/>in<sp/>gutter\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>nearest<sp/>blob<sp/>on<sp/>the<sp/>outside<sp/>of<sp/>the<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>gutter_bbox<sp/>=<sp/>AdjacentBlob(bbox,<sp/>left,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gutter_width,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gutter_bbox<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>gutter_box<sp/>=<sp/>gutter_bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>*gutter_width<sp/>=<sp/>left<sp/>?<sp/>tab_x<sp/>-<sp/>gutter_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>gutter_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>tab_x;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*gutter_width<sp/>&gt;=<sp/>max_gutter)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>box<sp/>because<sp/>a<sp/>tab<sp/>was<sp/>in<sp/>the<sp/>way,<sp/>get<sp/>the<sp/>tab<sp/>coord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>gutter_box(box);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gutter_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(tab_x<sp/>-<sp/>max_gutter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gutter_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(tab_x<sp/>-<sp/>max_gutter);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_gutter<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(gutter_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_gutter<sp/>&lt;<sp/>tab_x<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gutter_width<sp/>=<sp/>tab_x<sp/>-<sp/>tab_gutter;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gutter_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(tab_x<sp/>+<sp/>max_gutter);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gutter_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(tab_x<sp/>+<sp/>max_gutter<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_gutter<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(gutter_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_gutter<sp/>&gt;<sp/>tab_x<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gutter_width<sp/>=<sp/>tab_gutter<sp/>-<sp/>tab_x;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*gutter_width<sp/>&gt;<sp/>max_gutter)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>*gutter_width<sp/>=<sp/>max_gutter;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>look<sp/>for<sp/>a<sp/>neighbour<sp/>on<sp/>the<sp/>inside.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Looking<sp/>for<sp/>neighbour\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/>AdjacentBlob(bbox,<sp/>!left,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gutter_width,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_edge<sp/>=<sp/>left<sp/>?<sp/><ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">RightEdgeForBox</ref>(box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">LeftEdgeForBox</ref>(box,<sp/>true,<sp/>false);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>n_box<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>neighbour:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&amp;&amp;<sp/>n_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>neighbour_edge)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour_edge<sp/>=<sp/>n_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left<sp/>&amp;&amp;<sp/>n_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>neighbour_edge)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour_edge<sp/>=<sp/>n_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>*neighbour_gap<sp/>=<sp/>left<sp/>?<sp/>neighbour_edge<sp/>-<sp/>internal_x</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>internal_x<sp/>-<sp/>neighbour_edge;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>x-coord<sp/>that<sp/>corresponds<sp/>to<sp/>the<sp/>right<sp/>edge<sp/>for<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box.<sp/>If<sp/>there<sp/>is<sp/>a<sp/>rule<sp/>line<sp/>to<sp/>the<sp/>right<sp/>that<sp/>vertically<sp/>overlaps<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>return<sp/>the<sp/>x-coord<sp/>of<sp/>the<sp/>rule<sp/>line,<sp/>otherwise<sp/>return<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edge<sp/>of<sp/>the<sp/>page.<sp/>For<sp/>details<sp/>see<sp/>RightTabForBox<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a62697b39018c4952755c7a299d977554" kindref="member">TabFind::RightEdgeForBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crossing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extended)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1adac7971311bbdade2aa87ebb0691a408" kindref="member">RightTabForBox</ref>(box,<sp/>crossing,<sp/>extended);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>:<sp/>v-&gt;XAtY((box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>RightEdgeForBox,<sp/>but<sp/>finds<sp/>the<sp/>left<sp/>Edge<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a50f94d2d706772a878806ba9647e7727" kindref="member">TabFind::LeftEdgeForBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crossing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extended)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1aedfe0f86dd7916bf5c6dfc2e2b4dbe22" kindref="member">LeftTabForBox</ref>(box,<sp/>crossing,<sp/>extended);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/><ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>:<sp/>v-&gt;XAtY((box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>comment<sp/>documents<sp/>how<sp/>this<sp/>function<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>its<sp/>purpose<sp/>and<sp/>arguments,<sp/>see<sp/>the<sp/>comment<sp/>in<sp/>tabfind.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TabVectors<sp/>are<sp/>stored<sp/>sorted<sp/>by<sp/>perpendicular<sp/>distance<sp/>of<sp/>middle<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>global<sp/>mean<sp/>vertical<sp/>vector.<sp/>Since<sp/>the<sp/>individual<sp/>vectors<sp/>can<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>differing<sp/>directions,<sp/>their<sp/>XAtY<sp/>for<sp/>a<sp/>given<sp/>y<sp/>is<sp/>not<sp/>necessarily<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>right<sp/>order.<sp/>Therefore<sp/>the<sp/>search<sp/>has<sp/>to<sp/>be<sp/>run<sp/>with<sp/>a<sp/>margin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>middle<sp/>of<sp/>a<sp/>vector<sp/>that<sp/>passes<sp/>through<sp/>(x,y)<sp/>cannot<sp/>be<sp/>higher<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>halfway<sp/>from<sp/>y<sp/>to<sp/>the<sp/>top,<sp/>or<sp/>lower<sp/>than<sp/>halfway<sp/>from<sp/>y<sp/>to<sp/>the<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>coordinate<sp/>range;<sp/>therefore,<sp/>the<sp/>search<sp/>margin<sp/>is<sp/>the<sp/>range<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sort<sp/>keys<sp/>between<sp/>these<sp/>halfway<sp/>points.<sp/>Any<sp/>vector<sp/>with<sp/>a<sp/>sort<sp/>key<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>upper<sp/>margin<sp/>must<sp/>be<sp/>to<sp/>the<sp/>right<sp/>of<sp/>x<sp/>at<sp/>y,<sp/>and<sp/>likewise<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vector<sp/>with<sp/>a<sp/>sort<sp/>key<sp/>less<sp/>than<sp/>the<sp/>lower<sp/>margin<sp/>must<sp/>pass<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>x<sp/>at<sp/>y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_find_1adac7971311bbdade2aa87ebb0691a408" kindref="member">TabFind::RightTabForBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crossing,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extended)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_it_.empty())</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(top_y<sp/>+<sp/>bottom_y)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>crossing<sp/>?<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_key,<sp/>max_key;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a93467dba57d848ab70ece1046582aa94" kindref="member">SetupTabSearch</ref>(right,<sp/>mid_y,<sp/>&amp;min_key,<sp/>&amp;max_key);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>iterator<sp/>at<sp/>the<sp/>first<sp/>TabVector<sp/>with<sp/>sort_key<sp/>&gt;=<sp/>min_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_first()<sp/>&amp;&amp;<sp/>v_it_.data()-&gt;sort_key()<sp/>&gt;=<sp/>min_key)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.backward();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_last()<sp/>&amp;&amp;<sp/>v_it_.data()-&gt;sort_key()<sp/>&lt;<sp/>min_key)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.forward();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>leftmost<sp/>tab<sp/>vector<sp/>that<sp/>overlaps<sp/>and<sp/>has<sp/>XAtY(mid_y)<sp/>&gt;=<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>TabVector*<sp/>best_v<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_limit<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>v_it_.data();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>v-&gt;XAtY(mid_y);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>right<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v-&gt;VOverlap(top_y,<sp/>bottom_y)<sp/>&gt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extended<sp/>&amp;&amp;<sp/>v-&gt;ExtendedOverlap(top_y,<sp/>bottom_y)<sp/>&gt;<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_v<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>x<sp/>&lt;<sp/>best_x)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_v<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>guarantee<sp/>that<sp/>no<sp/>better<sp/>vector<sp/>can<sp/>be<sp/>found<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>key<sp/>exceeds<sp/>that<sp/>of<sp/>the<sp/>best<sp/>by<sp/>max_key<sp/>-<sp/>min_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_limit<sp/>=<sp/>v-&gt;sort_key()<sp/>+<sp/>max_key<sp/>-<sp/>min_key;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>when<sp/>the<sp/>search<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>wrapping<sp/>the<sp/>iterator<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thereby<sp/>potentially<sp/>slowing<sp/>the<sp/>next<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_it_.at_last()<sp/>||</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(best_v<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>v-&gt;sort_key()<sp/>&gt;<sp/>key_limit))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>restarting<sp/>list<sp/>for<sp/>next<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.forward();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_first());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_v;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>RightTabForBox,<sp/>but<sp/>finds<sp/>the<sp/>left<sp/>TabVector<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_find_1aedfe0f86dd7916bf5c6dfc2e2b4dbe22" kindref="member">TabFind::LeftTabForBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crossing,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extended)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_it_.empty())</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(top_y<sp/>+<sp/>bottom_y)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>crossing<sp/>?<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_key,<sp/>max_key;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a93467dba57d848ab70ece1046582aa94" kindref="member">SetupTabSearch</ref>(left,<sp/>mid_y,<sp/>&amp;min_key,<sp/>&amp;max_key);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>iterator<sp/>at<sp/>the<sp/>last<sp/>TabVector<sp/>with<sp/>sort_key<sp/>&lt;=<sp/>max_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_last()<sp/>&amp;&amp;<sp/>v_it_.data()-&gt;sort_key()<sp/>&lt;=<sp/>max_key)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.forward();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_first()<sp/>&amp;&amp;<sp/>v_it_.data()-&gt;sort_key()<sp/>&gt;<sp/>max_key)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.backward();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>rightmost<sp/>tab<sp/>vector<sp/>that<sp/>overlaps<sp/>and<sp/>has<sp/>XAtY(mid_y)<sp/>&lt;=<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>TabVector*<sp/>best_v<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_limit<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>v_it_.data();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>v-&gt;XAtY(mid_y);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>left<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v-&gt;VOverlap(top_y,<sp/>bottom_y)<sp/>&gt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extended<sp/>&amp;&amp;<sp/>v-&gt;ExtendedOverlap(top_y,<sp/>bottom_y)<sp/>&gt;<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_v<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>x<sp/>&gt;<sp/>best_x)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_v<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>guarantee<sp/>that<sp/>no<sp/>better<sp/>vector<sp/>can<sp/>be<sp/>found<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>key<sp/>is<sp/>less<sp/>than<sp/>that<sp/>of<sp/>the<sp/>best<sp/>by<sp/>max_key<sp/>-<sp/>min_key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_limit<sp/>=<sp/>v-&gt;sort_key()<sp/>-<sp/>(max_key<sp/>-<sp/>min_key);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>when<sp/>the<sp/>search<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>wrapping<sp/>the<sp/>iterator<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thereby<sp/>potentially<sp/>slowing<sp/>the<sp/>next<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_it_.at_first()<sp/>||</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(best_v<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>v-&gt;sort_key()<sp/>&lt;<sp/>key_limit))</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>restarting<sp/>list<sp/>for<sp/>next<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.backward();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.at_last());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_v;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>given<sp/>width<sp/>is<sp/>close<sp/>to<sp/>one<sp/>of<sp/>the<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>widths<sp/>in<sp/>column_widths_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a5446d04d773f5bd16c35f24bf06f15bb" kindref="member">TabFind::CommonWidth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>width<sp/>/=<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>ICOORDELT_IT<sp/>it(&amp;column_widths_);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>*<sp/>w<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NearlyEqual&lt;int&gt;(width,<sp/>w-&gt;<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>1))</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>sizes<sp/>are<sp/>more<sp/>than<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>factor<sp/>of<sp/>2<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a386ab5331aecfd3bf73b9dfdc5d23b57" kindref="member">TabFind::DifferentSizes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size2)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size1<sp/>&gt;<sp/>size2<sp/>*<sp/>2<sp/>||<sp/>size2<sp/>&gt;<sp/>size1<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>sizes<sp/>are<sp/>more<sp/>than<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>factor<sp/>of<sp/>5<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a924f574abbd5ef84e96bb3cffc6fe4b4" kindref="member">TabFind::VeryDifferentSizes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size2)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size1<sp/>&gt;<sp/>size2<sp/>*<sp/>5<sp/>||<sp/>size2<sp/>&gt;<sp/>size1<sp/>*<sp/>5;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Top-level<sp/>function<sp/>to<sp/>find<sp/>TabVectors<sp/>in<sp/>an<sp/>input<sp/>page<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>detected<sp/>skew<sp/>angle<sp/>is<sp/>impossible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applies<sp/>the<sp/>detected<sp/>skew<sp/>angle<sp/>to<sp/>deskew<sp/>the<sp/>tabs,<sp/>blobs<sp/>and<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">TabFind::FindTabVectors</ref>(TabVector_LIST*<sp/>hlines,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>image_blobs,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>deskew,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>reskew)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>tab_win<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1a0e13b8acb7aefd346628fd4c88f82d47" kindref="member">FindInitialTabVectors</ref>(image_blobs,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>ComputeColumnWidths(tab_win,<sp/>part_grid);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a19795eab9036e3f6eb8a274d2c2b0179" kindref="member">TabVector::MergeSimilarTabVectors</ref>(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/>&amp;vectors_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>SortVectors();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>CleanupTabs();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Deskew(hlines,<sp/>image_blobs,<sp/>block,<sp/>deskew,<sp/>reskew))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Skew<sp/>angle<sp/>is<sp/>too<sp/>large.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>part_grid-&gt;Deskew(*deskew);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>ApplyTabConstraints();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_finaltabs)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(640,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;FinalTabs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_images)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a45881e629322d82c9fc0c5f926a76f16" kindref="member">Image</ref>(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_origin_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>image_origin_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" kindref="member">DisplayBoxes</ref>(tab_win);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_aligned_blob_1ae8e6c33de7a8a40bbb66c312ab9cc899" kindref="member">DisplayTabs</ref>(</highlight><highlight class="stringliteral">&quot;FinalTabs&quot;</highlight><highlight class="normal">,<sp/>tab_win);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">DisplayTabVectors</ref>(tab_win);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Top-level<sp/>function<sp/>to<sp/>not<sp/>find<sp/>TabVectors<sp/>in<sp/>an<sp/>input<sp/>page<sp/>block,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>setup<sp/>for<sp/>single<sp/>column<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a55483b344fcfd80beece6b81772fdbd2" kindref="member">TabFind::DontFindTabVectors</ref>(BLOBNBOX_LIST*<sp/>image_blobs,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>deskew,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>reskew)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>image_blobs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>reskew-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>reskew-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>lists<sp/>of<sp/>blobs<sp/>in<sp/>the<sp/>block<sp/>ready<sp/>for<sp/>use<sp/>by<sp/>TabFind.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Large<sp/>blobs<sp/>that<sp/>look<sp/>like<sp/>text<sp/>are<sp/>moved<sp/>to<sp/>the<sp/>main<sp/>blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>blobs<sp/>that<sp/>are<sp/>superseded<sp/>by<sp/>the<sp/>image<sp/>blobs<sp/>are<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a7e49edde7f5fdadc93ee731676e9f860" kindref="member">TabFind::TidyBlobs</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>large_it<sp/>=<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it<sp/>=<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(large_it.mark_cycle_pt();<sp/>!large_it.cycled_list();<sp/>large_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>large_blob<sp/>=<sp/>large_it.data();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(large_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_it.add_to_end(large_it.extract());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++b_count;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Moved<sp/>%d<sp/>large<sp/>blobs<sp/>to<sp/>normal<sp/>list\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_count);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>rej_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(500,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1afd0504ca5c8fa605fbea3dbca2d8ee2e" kindref="member">plot_graded_blobs</ref>(rej_win);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ae1af42d3d5b1cc342627c6e3be93a1d4" kindref="member">plot_noise_blobs</ref>(rej_win);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>rej_win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9ce3c22594b44b4faad5c331ad0265ea" kindref="member">DeleteUnownedNoise</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>setup<sp/>search<sp/>limits<sp/>for<sp/>*TabForBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a93467dba57d848ab70ece1046582aa94" kindref="member">TabFind::SetupTabSearch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>min_key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>max_key)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key1<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a0a7ad486360b4844a7816fec6ad5d870" kindref="member">TabVector::SortKey</ref>(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/>x,<sp/>(y<sp/>+<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key2<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a0a7ad486360b4844a7816fec6ad5d870" kindref="member">TabVector::SortKey</ref>(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/>x,<sp/>(y<sp/>+<sp/><ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>*min_key<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(key1,<sp/>key2);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>*max_key<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(key1,<sp/>key2);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">TabFind::DisplayTabVectors</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>tab_win)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>vector,<sp/>display<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>it(&amp;vectors_);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>vector<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;Display(tab_win);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_win;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>CODE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>First<sp/>part<sp/>of<sp/>FindTabVectors,<sp/>which<sp/>may<sp/>be<sp/>used<sp/>twice<sp/>if<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>mostly<sp/>of<sp/>vertical<sp/>alignment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/><ref refid="classtesseract_1_1_tab_find_1a0e13b8acb7aefd346628fd4c88f82d47" kindref="member">TabFind::FindInitialTabVectors</ref>(BLOBNBOX_LIST*<sp/>image_blobs,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_initialtabs)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>line_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;VerticalLines&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>line_win<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">DisplayTabVectors</ref>(line_win);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>image_blobs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>initial_win<sp/>=<sp/>FindTabBoxes(min_gutter_width);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>FindAllTabVectors(min_gutter_width);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a19795eab9036e3f6eb8a274d2c2b0179" kindref="member">TabVector::MergeSimilarTabVectors</ref>(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/>&amp;vectors_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>SortVectors();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>EvaluateTabs();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_initialtabs<sp/>&amp;&amp;<sp/>initial_win<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_win<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">DisplayTabVectors</ref>(initial_win);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>MarkVerticalText();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initial_win;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>displays<sp/>all<sp/>the<sp/>boxes<sp/>in<sp/>the<sp/>given<sp/>vector<sp/>on<sp/>the<sp/>given<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisplayBoxVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOBNBOX*&gt;</ref><sp/>boxes,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>win)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>boxes.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>boxes[i]-&gt;bounding_box();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>box_color<sp/>=<sp/>boxes[i]-&gt;BoxColor();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(box_color);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(left_x,<sp/>bottom_y,<sp/>right_x,<sp/>top_y);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>box<sp/>in<sp/>the<sp/>grid,<sp/>decide<sp/>whether<sp/>it<sp/>is<sp/>a<sp/>candidate<sp/>tab-stop,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>so<sp/>add<sp/>it<sp/>to<sp/>the<sp/>left/right<sp/>tab<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>TabFind::FindTabBoxes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>left_tab_boxes_.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>right_tab_boxes_.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>bbox<sp/>in<sp/>the<sp/>grid,<sp/>determine<sp/>whether<sp/>it<sp/>uses<sp/>a<sp/>tab<sp/>on<sp/>an<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>GridSearch&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;<sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TestBoxForTabs(bbox,<sp/>min_gutter_width))<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>is<sp/>any<sp/>kind<sp/>of<sp/>tab,<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref>)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_tab_boxes_.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(bbox);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_tab_boxes_.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(bbox);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>left<sp/>tabs<sp/>by<sp/>left<sp/>and<sp/>right<sp/>by<sp/>right<sp/>to<sp/>see<sp/>the<sp/>outermost<sp/>one<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>a<sp/>ragged<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>left_tab_boxes_.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>(SortByBoxLeft&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>right_tab_boxes_.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>(SortRightToLeft&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>tab_win<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_initialtabs)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(0,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;InitialTabs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1ad5f03af259325c42eaaffa843cd1fdde" kindref="member">Brush</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a77673d8f27617bcfe50a6ebdd81e8c79" kindref="member">ScrollView::NONE</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>left<sp/>and<sp/>right<sp/>tab<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>DisplayBoxVector(left_tab_boxes_,<sp/>tab_win);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>DisplayBoxVector(right_tab_boxes_,<sp/>tab_win);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1ae8e6c33de7a8a40bbb66c312ab9cc899" kindref="member">DisplayTabs</ref>(</highlight><highlight class="stringliteral">&quot;Tabs&quot;</highlight><highlight class="normal">,<sp/>tab_win);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_win;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabFind::TestBoxForTabs(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>GridSearch&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;<sp/>radsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>separator<sp/>lines,<sp/>get<sp/>the<sp/>column<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_column_edge<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac149d9356065f3836019b2da3e311740" kindref="member">left_rule</ref>();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_column_edge<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" kindref="member">right_rule</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>edges<sp/>of<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>blob<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_x<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>left_x,<sp/>top_y);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Column<sp/>edges<sp/>for<sp/>blob<sp/>at<sp/>(%d,%d)-&gt;(%d,%d)<sp/>are<sp/>[%d,<sp/>%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_x,<sp/>top_y,<sp/>right_x,<sp/>bottom_y,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_column_edge,<sp/>right_column_edge);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>search<sp/>radius<sp/>based<sp/>on<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>(height<sp/>*<sp/><ref refid="namespacetesseract_1a1955d1b3b99cebc67e90fa20f8407a04" kindref="member">kTabRadiusFactor</ref><sp/>+<sp/><ref refid="classtesseract_1_1_grid_base_1a0758dd90d5ce47e504a4148f4cda33f3" kindref="member">gridsize_</ref><sp/>-<sp/>1)<sp/>/<sp/><ref refid="classtesseract_1_1_grid_base_1a0758dd90d5ce47e504a4148f4cda33f3" kindref="member">gridsize_</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>radsearch.StartRadSearch((left_x<sp/>+<sp/>right_x)/2,<sp/>(top_y<sp/>+<sp/>bottom_y)/2,<sp/>radius);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>Vertical<sp/>Page<sp/>mode,<sp/>once<sp/>we<sp/>have<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>vertical<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>spacing,<sp/>the<sp/>minimum<sp/>amount<sp/>of<sp/>gutter<sp/>space<sp/>before<sp/>a<sp/>possible<sp/>tab<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>increased<sp/>under<sp/>the<sp/>assumption<sp/>that<sp/>column<sp/>partition<sp/>is<sp/>always<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>line<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_spacing<sp/>=</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(height<sp/>*<sp/>textord_tabfind_aligned_gap_fraction);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_gutter_width<sp/>&gt;<sp/>min_spacing)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>min_spacing<sp/>=<sp/>min_gutter_width;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_ragged_gutter<sp/>=<sp/><ref refid="namespacetesseract_1a3f4e3895634b56c7096734cc15982208" kindref="member">kRaggedGutterMultiple</ref><sp/>*<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_gutter_width<sp/>&gt;<sp/>min_ragged_gutter)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>min_ragged_gutter<sp/>=<sp/>min_gutter_width;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_right<sp/>=<sp/>left_x<sp/>-<sp/>min_spacing;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_left<sp/>=<sp/>right_x<sp/>+<sp/>min_spacing;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>be<sp/>evaluating<sp/>whether<sp/>the<sp/>left<sp/>edge<sp/>could<sp/>be<sp/>a<sp/>left<sp/>tab,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>right<sp/>edge<sp/>could<sp/>be<sp/>a<sp/>right<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>box<sp/>can<sp/>be<sp/>a<sp/>tab<sp/>if<sp/>its<sp/>bool<sp/>is_(left/right)_tab<sp/>remains<sp/>true,<sp/>meaning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>no<sp/>blobs<sp/>have<sp/>been<sp/>found<sp/>in<sp/>the<sp/>gutter<sp/>during<sp/>the<sp/>radial<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>box<sp/>can<sp/>also<sp/>be<sp/>a<sp/>tab<sp/>if<sp/>there<sp/>are<sp/>objects<sp/>in<sp/>the<sp/>gutter<sp/>only<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>only<sp/>below,<sp/>and<sp/>there<sp/>are<sp/>aligned<sp/>objects<sp/>on<sp/>the<sp/>opposite<sp/>side,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>too<sp/>many<sp/>unaligned<sp/>objects.<sp/>The<sp/>maybe_(left/right)_tab_up<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aligned<sp/>objects<sp/>above<sp/>and<sp/>negatively<sp/>counts<sp/>unaligned<sp/>objects<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>is<sp/>set<sp/>to<sp/>-MAX_INT32<sp/>if<sp/>a<sp/>gutter<sp/>object<sp/>is<sp/>found<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>3<sp/>maybe<sp/>ints<sp/>work<sp/>similarly<sp/>for<sp/>the<sp/>other<sp/>sides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>conditions<sp/>are<sp/>very<sp/>strict,<sp/>to<sp/>minimize<sp/>false<sp/>positives,<sp/>and<sp/>really</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>aligned<sp/>tabs<sp/>and<sp/>outermost<sp/>ragged<sp/>tab<sp/>blobs<sp/>will<sp/>qualify,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>have<sp/>maybe_ragged_left/right<sp/>with<sp/>less<sp/>stringent<sp/>rules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>blob<sp/>that<sp/>is<sp/>maybe_ragged_left/right<sp/>will<sp/>be<sp/>further<sp/>qualified<sp/>later,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>min_ragged_gutter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left_tab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_right_tab<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maybe_ragged_left<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maybe_ragged_right<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maybe_left_tab_up<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maybe_right_tab_up<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maybe_left_tab_down<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maybe_right_tab_down<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2ac782044b1e472f8ee6bfc9c0072bc9" kindref="member">leader_on_left</ref>())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>is_left_tab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_ragged_left<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_left_tab_up<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_left_tab_down<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2d3bd49977c92a46d2cedfe410484732" kindref="member">leader_on_right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>is_right_tab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_ragged_right<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_right_tab_up<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_right_tab_down<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignment_tolerance<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref><sp/>*<sp/><ref refid="namespacetesseract_1a9ef44019867a8035dc34a7795097b157" kindref="member">kAlignedFraction</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>radsearch.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>bbox)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_left<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_right<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>at<sp/>(%d,%d)-&gt;(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_left,<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>n_right,<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>neighbouring<sp/>blob<sp/>is<sp/>the<sp/>wrong<sp/>side<sp/>of<sp/>a<sp/>separator<sp/>line,<sp/>then<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;doesn&apos;t<sp/>exist&quot;<sp/>as<sp/>far<sp/>as<sp/>we<sp/>are<sp/>concerned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_right<sp/>&gt;<sp/>right_column_edge<sp/>||<sp/>n_left<sp/>&lt;<sp/>left_column_edge<sp/>||</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_x<sp/>&lt;<sp/>neighbour-&gt;left_rule()<sp/>||<sp/>right_x<sp/>&gt;<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" kindref="member">right_rule</ref>())</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Separator<sp/>line<sp/>in<sp/>the<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mid_x<sp/>=<sp/>(n_left<sp/>+<sp/>n_right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mid_y<sp/>=<sp/>(nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_x<sp/>&lt;=<sp/>left_x<sp/>&amp;&amp;<sp/>n_right<sp/>&gt;=<sp/>target_right)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>left<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_left_tab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>top_y)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe_left_tab_down<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>bottom_y)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe_left_tab_up<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(left_x,<sp/>n_left,<sp/>alignment_tolerance))<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Maybe<sp/>a<sp/>left<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>top_y<sp/>&amp;&amp;<sp/>maybe_left_tab_up<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maybe_left_tab_up;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>bottom_y<sp/>&amp;&amp;<sp/>maybe_left_tab_down<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maybe_left_tab_down;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_left<sp/>&lt;<sp/>left_x<sp/>&amp;&amp;<sp/>n_right<sp/>&gt;=<sp/>left_x)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlaps<sp/>but<sp/>not<sp/>aligned<sp/>so<sp/>negative<sp/>points<sp/>on<sp/>a<sp/>maybe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Maybe<sp/>Not<sp/>a<sp/>left<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>top_y<sp/>&amp;&amp;<sp/>maybe_left_tab_up<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--maybe_left_tab_up;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>bottom_y<sp/>&amp;&amp;<sp/>maybe_left_tab_down<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--maybe_left_tab_down;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_left<sp/>&lt;<sp/>left_x<sp/>&amp;&amp;<sp/>nbox.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(box)<sp/>&amp;&amp;<sp/>n_right<sp/>&gt;=<sp/>target_right)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maybe_ragged_left<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>ragged<sp/>left\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_x<sp/>&gt;=<sp/>right_x<sp/>&amp;&amp;<sp/>n_left<sp/>&lt;=<sp/>target_left)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>right<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_right_tab<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>top_y)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe_right_tab_down<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>bottom_y)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe_right_tab_up<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(right_x,<sp/>n_right,<sp/>alignment_tolerance))<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Maybe<sp/>a<sp/>right<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>top_y<sp/>&amp;&amp;<sp/>maybe_right_tab_up<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maybe_right_tab_up;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>bottom_y<sp/>&amp;&amp;<sp/>maybe_right_tab_down<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maybe_right_tab_down;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_right<sp/>&gt;<sp/>right_x<sp/>&amp;&amp;<sp/>n_left<sp/>&lt;=<sp/>right_x)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlaps<sp/>but<sp/>not<sp/>aligned<sp/>so<sp/>negative<sp/>points<sp/>on<sp/>a<sp/>maybe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Maybe<sp/>Not<sp/>a<sp/>right<sp/>tab\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&gt;<sp/>top_y<sp/>&amp;&amp;<sp/>maybe_right_tab_up<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--maybe_right_tab_up;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_mid_y<sp/>&lt;<sp/>bottom_y<sp/>&amp;&amp;<sp/>maybe_right_tab_down<sp/>&gt;<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--maybe_right_tab_down;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_right<sp/>&gt;<sp/>right_x<sp/>&amp;&amp;<sp/>nbox.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(box)<sp/>&amp;&amp;<sp/>n_left<sp/>&lt;=<sp/>target_left)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maybe_ragged_right<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>ragged<sp/>right\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maybe_left_tab_down<sp/>==<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref><sp/>&amp;&amp;<sp/>maybe_left_tab_up<sp/>==<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maybe_right_tab_down<sp/>==<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref><sp/>&amp;&amp;<sp/>maybe_right_tab_up<sp/>==<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_left_tab<sp/>||<sp/>maybe_left_tab_up<sp/>&gt;<sp/>1<sp/>||<sp/>maybe_left_tab_down<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" kindref="member">set_left_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maybe_ragged_left<sp/>&amp;&amp;<sp/>ConfirmRaggedLeft(bbox,<sp/>min_ragged_gutter))<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" kindref="member">set_left_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca0d571d70d55bfdb99070e2ee2d6e1c7f" kindref="member">TT_MAYBE_RAGGED</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" kindref="member">set_left_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_right_tab<sp/>||<sp/>maybe_right_tab_up<sp/>&gt;<sp/>1<sp/>||<sp/>maybe_right_tab_down<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" kindref="member">set_right_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maybe_ragged_right<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfirmRaggedRight(bbox,<sp/>min_ragged_gutter))<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" kindref="member">set_right_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca0d571d70d55bfdb99070e2ee2d6e1c7f" kindref="member">TT_MAYBE_RAGGED</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" kindref="member">set_right_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Left<sp/>result<sp/>=<sp/>%s,<sp/>Right<sp/>result=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Aligned&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca0d571d70d55bfdb99070e2ee2d6e1c7f" kindref="member">TT_MAYBE_RAGGED</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Ragged&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Aligned&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca0d571d70d55bfdb99070e2ee2d6e1c7f" kindref="member">TT_MAYBE_RAGGED</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Ragged&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref><sp/>||<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccaddba1c39549497adfc655e5e9a817dec" kindref="member">TT_NONE</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>rectangle<sp/>of<sp/>width<sp/>min_gutter<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>left<sp/>of<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabFind::ConfirmRaggedLeft(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(search_box.left());</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>search_box.set_left(search_box.left()<sp/>-<sp/>min_gutter);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NothingYOverlapsInBox(search_box,<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>rectangle<sp/>of<sp/>width<sp/>min_gutter<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>right<sp/>of<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabFind::ConfirmRaggedRight(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(search_box.right());</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>search_box.set_right(search_box.right()<sp/>+<sp/>min_gutter);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NothingYOverlapsInBox(search_box,<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>given<sp/>search_box<sp/>that<sp/>vertically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlaps<sp/>target_box<sp/>other<sp/>than<sp/>target_box<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabFind::NothingYOverlapsInBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>search_box,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>target_box)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((blob<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(target_box)<sp/>&amp;&amp;<sp/>!(box<sp/>==<sp/>target_box))</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::FindAllTabVectors(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>list<sp/>of<sp/>vectors<sp/>that<sp/>will<sp/>be<sp/>created<sp/>in<sp/>estimating<sp/>the<sp/>skew.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>TabVector_LIST<sp/>dummy_vectors;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>estimate<sp/>of<sp/>the<sp/>vertical<sp/>direction,<sp/>revised<sp/>as<sp/>more<sp/>lines<sp/>are<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_y<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>vertical<sp/>direction<sp/>by<sp/>finding<sp/>some<sp/>tab<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Slowly<sp/>up<sp/>the<sp/>search<sp/>size<sp/>until<sp/>we<sp/>get<sp/>some<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_size<sp/>=<sp/><ref refid="namespacetesseract_1a2fa6d78b73f614c75e0fe25a9dbdaaae" kindref="member">kMinVerticalSearch</ref>;<sp/>search_size<sp/>&lt;<sp/><ref refid="namespacetesseract_1a664cd7aab5779ec9a70ddd95e53c29c1" kindref="member">kMaxVerticalSearch</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_size<sp/>+=<sp/><ref refid="namespacetesseract_1a2fa6d78b73f614c75e0fe25a9dbdaaae" kindref="member">kMinVerticalSearch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_count<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(search_size,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a4bb9e250c5358790a63ef5b71cb5a9d3" kindref="member">TA_LEFT_ALIGNED</ref>,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_count<sp/>+=<sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(search_size,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a0dfc605a485921b4a7c1616e32019513" kindref="member">TA_RIGHT_ALIGNED</ref>,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>the<sp/>test<sp/>vectors<sp/>and<sp/>reset<sp/>the<sp/>types<sp/>of<sp/>the<sp/>tabs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>dummy_vectors.clear();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>left_tab_boxes_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>left_tab_boxes_[i];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca9f2414540c7d6e051206f486a70f5d2e" kindref="member">TT_CONFIRMED</ref>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" kindref="member">set_left_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>right_tab_boxes_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>right_tab_boxes_[i];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca9f2414540c7d6e051206f486a70f5d2e" kindref="member">TT_CONFIRMED</ref>)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" kindref="member">set_right_tab_type</ref>(<ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Beginning<sp/>real<sp/>tab<sp/>search<sp/>with<sp/>vertical<sp/>=<sp/>%d,%d...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>do<sp/>the<sp/>real<sp/>thing<sp/>,but<sp/>keep<sp/>the<sp/>vectors<sp/>in<sp/>the<sp/>dummy_vectors<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>they<sp/>are<sp/>all<sp/>done,<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>the<sp/>tab<sp/>vectors<sp/>confused<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rule<sp/>line<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(kMaxVerticalSearch,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a4bb9e250c5358790a63ef5b71cb5a9d3" kindref="member">TA_LEFT_ALIGNED</ref>,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,<sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(kMaxVerticalSearch,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a0dfc605a485921b4a7c1616e32019513" kindref="member">TA_RIGHT_ALIGNED</ref>,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,<sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(<ref refid="namespacetesseract_1a80f8cfaf51d03db29c6e94d70af97cf8" kindref="member">kMaxRaggedSearch</ref>,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a63f1e8bdcb518d39f915c4a6f51126c9" kindref="member">TA_LEFT_RAGGED</ref>,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,<sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(<ref refid="namespacetesseract_1a80f8cfaf51d03db29c6e94d70af97cf8" kindref="member">kMaxRaggedSearch</ref>,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a3eb640025f235401fd86bf1bf01e4a49" kindref="member">TA_RIGHT_RAGGED</ref>,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dummy_vectors,<sp/>&amp;vertical_x,<sp/>&amp;vertical_y);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>add<sp/>the<sp/>vectors<sp/>to<sp/>the<sp/>vectors_<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>v_it(&amp;vectors_);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>v_it.add_list_after(&amp;dummy_vectors);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>use<sp/>the<sp/>summed<sp/>(mean)<sp/>vertical<sp/>vector<sp/>as<sp/>the<sp/>direction<sp/>for<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>SetVerticalSkewAndParellelize(vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>FindAllTabVectors<sp/>finds<sp/>the<sp/>vectors<sp/>of<sp/>a<sp/>particular<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">TabFind::FindTabVectors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_size_multiple,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" kindref="member">TabAlignment</ref><sp/>alignment,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width,<sp/>TabVector_LIST*<sp/>vectors,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>vector_it(vectors);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>right<sp/>or<sp/>left<sp/>tab<sp/>boxes,<sp/>looking<sp/>for<sp/>tab<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>alignment<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a0dfc605a485921b4a7c1616e32019513" kindref="member">TA_RIGHT_ALIGNED</ref><sp/>||<sp/>alignment<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a3eb640025f235401fd86bf1bf01e4a49" kindref="member">TA_RIGHT_RAGGED</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOBNBOX*&gt;</ref>&amp;<sp/>boxes<sp/>=<sp/>right<sp/>?<sp/>right_tab_boxes_</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>left_tab_boxes_;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>boxes.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>boxes[i];</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!right<sp/>&amp;&amp;<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>)<sp/>||</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(right<sp/>&amp;&amp;<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12ccad0945333210420da84a7617b5788f246" kindref="member">TT_MAYBE_ALIGNED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TabVector*<sp/>vector<sp/>=<sp/>FindTabVector(search_size_multiple,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alignment,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox,<sp/>vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++vector_count;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_it.add_to_end(vector);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector_count;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>a<sp/>vector<sp/>corresponding<sp/>to<sp/>a<sp/>tabstop<sp/>running<sp/>through<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>box<sp/>of<sp/>the<sp/>given<sp/>alignment<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>search_size_multiple<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>height<sp/>used<sp/>to<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>size<sp/>of<sp/>the<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical_x<sp/>and<sp/>y<sp/>are<sp/>updated<sp/>with<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical<sp/>direction.<sp/>(skew<sp/>finding.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>if<sp/>no<sp/>decent<sp/>tabstop<sp/>can<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal">TabVector*<sp/>TabFind::FindTabVector(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_size_multiple,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" kindref="member">TabAlignment</ref><sp/>alignment,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>());</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>AlignedBlobParams<sp/>align_params(*vertical_x,<sp/>*vertical_y,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_size_multiple,<sp/>min_gutter_width,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,<sp/>alignment);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FindVerticalAlignment<sp/>is<sp/>in<sp/>the<sp/>parent<sp/>(AlignedBlob)<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_aligned_blob_1ae8acdd97fe77a8af9b71a9078e324e3c" kindref="member">FindVerticalAlignment</ref>(align_params,<sp/>bbox,<sp/>vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>vertical_skew_<sp/>member<sp/>from<sp/>the<sp/>given<sp/>vector<sp/>and<sp/>refit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>vectors<sp/>parallel<sp/>to<sp/>the<sp/>skew<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::SetVerticalSkewAndParellelize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_y)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>the<sp/>vertical<sp/>vector<sp/>into<sp/>an<sp/>ICOORD,<sp/>which<sp/>is<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>.<ref refid="class_i_c_o_o_r_d_1a202dcd2920b28d85c2338d28dac8c5fe" kindref="member" tooltip="Set from the given x,y, shrinking the vector to fit if needed. ">set_with_shrink</ref>(vertical_x,<sp/>vertical_y);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Vertical<sp/>skew<sp/>vector=(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>v_it_.set_to_list(&amp;vectors_);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v_it_.mark_cycle_pt();<sp/>!v_it_.cycled_list();<sp/>v_it_.forward())<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>v_it_.data();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;Fit(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>sort<sp/>the<sp/>vectors<sp/>as<sp/>their<sp/>direction<sp/>has<sp/>potentially<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>SortVectors();</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sort<sp/>all<sp/>the<sp/>current<sp/>vectors<sp/>using<sp/>the<sp/>given<sp/>vertical<sp/>direction<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::SortVectors()<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>vectors_.sort(<ref refid="classtesseract_1_1_tab_vector_1ae02238fae87c0c68748f02a8043a3c97" kindref="member">TabVector::SortVectorsByKey</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>v_it_.set_to_list(&amp;vectors_);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Evaluate<sp/>all<sp/>the<sp/>current<sp/>tab<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::EvaluateTabs()<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>rule_it(&amp;vectors_);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rule_it.mark_cycle_pt();<sp/>!rule_it.cycled_list();<sp/>rule_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>tab<sp/>=<sp/>rule_it.data();</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tab-&gt;IsSeparator())<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Evaluate(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab-&gt;BoxCount()<sp/>&lt;<sp/><ref refid="namespacetesseract_1adc693e483b6c8c17a5c85a0836fed4cd" kindref="member">kMinEvaluatedTabs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Print(</highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>boxes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rule_it.extract();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_it_.set_to_list(&amp;vectors_);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>tab-&gt;startpt().x(),<sp/>tab-&gt;startpt().y()))<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab-&gt;Print(</highlight><highlight class="stringliteral">&quot;Evaluated<sp/>tab&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trace<sp/>textlines<sp/>from<sp/>one<sp/>side<sp/>to<sp/>the<sp/>other<sp/>of<sp/>each<sp/>tab<sp/>vector,<sp/>saving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>most<sp/>frequent<sp/>column<sp/>widths<sp/>found<sp/>in<sp/>a<sp/>list<sp/>so<sp/>that<sp/>a<sp/>given<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>tested<sp/>for<sp/>being<sp/>a<sp/>common<sp/>width<sp/>with<sp/>a<sp/>simple<sp/>callback<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::ComputeColumnWidths(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>tab_win,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_win<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0eab2b208fc9a5e2774f92cf3e768982" kindref="member">ScrollView::WHITE</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>column<sp/>sections<sp/>into<sp/>a<sp/>STATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_widths_size<sp/>=<sp/>(<ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>-<sp/><ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>())<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>col_widths(0,<sp/>col_widths_size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>ApplyPartitionsToColumnWidths(part_grid,<sp/>&amp;col_widths);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_win<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>col_widths.print();</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>make<sp/>a<sp/>list<sp/>of<sp/>column<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>MakeColumnWidths(col_widths_size,<sp/>&amp;col_widths);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>column<sp/>width<sp/>and<sp/>pair-up<sp/>tab<sp/>vectors<sp/>with<sp/>existing<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::ApplyPartitionsToColumnWidths(ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref>*<sp/>col_widths)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>ColPartition<sp/>in<sp/>the<sp/>part_grid,<sp/>add<sp/>partners<sp/>to<sp/>the<sp/>tabvectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>accumulate<sp/>the<sp/>column<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(part_grid);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_it.empty())</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>left_blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_it.move_to_last();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>right_blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>left_vector<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1aedfe0f86dd7916bf5c6dfc2e2b4dbe22" kindref="member">LeftTabForBox</ref>(left_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>(),</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_vector<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>left_vector-&gt;IsRightTab())</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>right_vector<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1adac7971311bbdade2aa87ebb0691a408" kindref="member">RightTabForBox</ref>(right_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>(),</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_vector<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>right_vector-&gt;IsLeftTab())</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>AddPartnerVector(left_blob,<sp/>right_blob,<sp/>left_vector,<sp/>right_vector);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_left<sp/>=<sp/>left_vector-&gt;XAtY(left_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_right<sp/>=<sp/>right_vector-&gt;XAtY(right_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>STATS<sp/>of<sp/>measurements<sp/>if<sp/>the<sp/>width<sp/>is<sp/>significant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>line_right<sp/>-<sp/>line_left;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;=<sp/><ref refid="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" kindref="member">kMinColumnWidth</ref>)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(width<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>makes<sp/>the<sp/>list<sp/>of<sp/>common<sp/>column<sp/>widths<sp/>in<sp/>column_widths_<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>col_widths.<sp/>Destroys<sp/>the<sp/>content<sp/>of<sp/>col_widths<sp/>by<sp/>repeatedly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>finding<sp/>the<sp/>mode<sp/>and<sp/>erasing<sp/>the<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::MakeColumnWidths(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_widths_size,<sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref>*<sp/>col_widths)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>ICOORDELT_IT<sp/>w_it(&amp;column_widths_);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_col_count<sp/>=<sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a83ad18e6ba02e9f63f4f7d84fcf76aa4" kindref="member">get_total</ref>();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(col_widths-&gt;<ref refid="class_s_t_a_t_s_1a83ad18e6ba02e9f63f4f7d84fcf76aa4" kindref="member">get_total</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a5d353e951f61daf06c6582dfc106ff11" kindref="member">mode</ref>();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_count<sp/>=<sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a4a3a320660e2092eeaa605df70bea8ea" kindref="member">pile_count</ref>(width);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(width,<sp/>-col_count);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>entire<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>width<sp/>-<sp/>1;<sp/>left<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a4a3a320660e2092eeaa605df70bea8ea" kindref="member">pile_count</ref>(left)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--left)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_count<sp/>=<sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a4a3a320660e2092eeaa605df70bea8ea" kindref="member">pile_count</ref>(left);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_count<sp/>+=<sp/>new_count;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(left,<sp/>-new_count);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>width<sp/>+<sp/>1;<sp/>right<sp/>&lt;<sp/>col_widths_size<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a4a3a320660e2092eeaa605df70bea8ea" kindref="member">pile_count</ref>(right)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++right)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_count<sp/>=<sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1a4a3a320660e2092eeaa605df70bea8ea" kindref="member">pile_count</ref>(right);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_count<sp/>+=<sp/>new_count;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_widths-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(right,<sp/>-new_count);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_count<sp/>&gt;<sp/><ref refid="namespacetesseract_1a9f107f3f0670a037dd195b875a3f5a20" kindref="member">kMinLinesInColumn</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_count<sp/>&gt;<sp/><ref refid="namespacetesseract_1a940cd6c9651095d7b562b4d66f776107" kindref="member">kMinFractionalLinesInColumn</ref><sp/>*<sp/>total_col_count)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>*<sp/>w<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>(width,<sp/>col_count);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w_it.add_after_then_move(w);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Column<sp/>of<sp/>width<sp/>%d<sp/>has<sp/>%d<sp/>=<sp/>%.2f%%<sp/>lines\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>*<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,<sp/>col_count,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>col_count<sp/>/<sp/>total_col_count);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mark<sp/>blobs<sp/>as<sp/>being<sp/>in<sp/>a<sp/>vertical<sp/>text<sp/>line<sp/>where<sp/>that<sp/>is<sp/>the<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>majority<sp/>of<sp/>the<sp/>image<sp/>is<sp/>vertical<sp/>text<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::MarkVerticalText()<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>for<sp/>vertical<sp/>lines\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" kindref="member">BlobGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((blob<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TabFind::FindMedianGutterWidth(TabVector_LIST<sp/>*lines)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>it(lines);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_right<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gap<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesseract_1a4d8d6ad8a3ebea8a7b3b45de690c7e40" kindref="member">kMaxGutterWidthAbsolute</ref><sp/>*<sp/><ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>gaps(0,<sp/>max_gap);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>heights(0,<sp/>max_gap);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>partner<sp/>=<sp/>v-&gt;GetSinglePartner();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v-&gt;IsLeftTab()<sp/>||<sp/>v-&gt;IsSeparator()<sp/>||<sp/>!partner)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>heights.add(partner-&gt;startpt().x()<sp/>-<sp/>v-&gt;startpt().x(),<sp/>1);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_right<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>v-&gt;startpt().x()<sp/>&gt;<sp/>prev_right)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaps.add(v-&gt;startpt().x()<sp/>-<sp/>prev_right,<sp/>1);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_right<sp/>=<sp/>partner-&gt;startpt().x();</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;TabGutter<sp/>total<sp/>%d<sp/><sp/>median_gap<sp/>%.2f<sp/><sp/>median_hgt<sp/>%.2f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps.get_total(),<sp/>gaps.median(),<sp/>heights.median());</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gaps.get_total()<sp/>&lt;<sp/><ref refid="namespacetesseract_1a9f107f3f0670a037dd195b875a3f5a20" kindref="member">kMinLinesInColumn</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(gaps.median());</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>adjacent<sp/>(looking<sp/>to<sp/>the<sp/>left<sp/>or<sp/>right)<sp/>blob<sp/>on<sp/>this<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>line,<sp/>with<sp/>the<sp/>constraint<sp/>that<sp/>it<sp/>must<sp/>vertically<sp/>significantly<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>[top_y,<sp/>bottom_y]<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>ignore_images<sp/>is<sp/>true,<sp/>then<sp/>blobs<sp/>with<sp/>aligned_text()<sp/>&lt;<sp/>0<sp/>are<sp/>treated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>if<sp/>they<sp/>do<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>TabFind::AdjacentBlob(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>look_left,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_images,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_overlap_fraction,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap_limit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>GridSearch&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;<sp/>sidesearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_x<sp/>=<sp/>(left<sp/>+<sp/>right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>sidesearch.StartSideSearch(mid_x,<sp/>bottom_y,<sp/>top_y);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>left,<sp/>bottom_y);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>result<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>sidesearch.NextSideSearch(look_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adjacent<sp/>blob:<sp/>considering<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>bbox<sp/>||</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ignore_images<sp/>&amp;&amp;<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>))</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nbox<sp/>=<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_top_y<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_bottom_y<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(n_top_y,<sp/>top_y)<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(n_bottom_y,<sp/>bottom_y);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>top_y<sp/>-<sp/>bottom_y;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_height<sp/>=<sp/>n_top_y<sp/>-<sp/>n_bottom_y;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_overlap<sp/>&gt;<sp/>min_overlap_fraction<sp/>*<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(height,<sp/>n_height)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(min_overlap_fraction<sp/>==<sp/>0.0<sp/>||<sp/>!<ref refid="classtesseract_1_1_tab_find_1a386ab5331aecfd3bf73b9dfdc5d23b57" kindref="member">DifferentSizes</ref>(height,<sp/>n_height)))<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_left<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_right<sp/>=<sp/>nbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_gap<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(n_left,<sp/>left)<sp/>-<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(n_right,<sp/>right);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mid_x<sp/>=<sp/>(n_left<sp/>+<sp/>n_right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(look_left<sp/>==<sp/>(n_mid_x<sp/>&lt;<sp/>mid_x)<sp/>&amp;&amp;<sp/>n_mid_x<sp/>!=<sp/>mid_x)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_gap<sp/>&gt;<sp/>gap_limit)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hit<sp/>a<sp/>big<sp/>gap<sp/>before<sp/>next<sp/>tab<sp/>so<sp/>don&apos;t<sp/>return<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Giving<sp/>up<sp/>due<sp/>to<sp/>big<sp/>gap<sp/>=<sp/>%d<sp/>vs<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_gap,<sp/>gap_limit);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_gap<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(look_left<sp/>?<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>())<sp/>&gt;=<sp/><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cca9f2414540c7d6e051206f486a70f5d2e" kindref="member">TT_CONFIRMED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hit<sp/>a<sp/>tab<sp/>facing<sp/>the<sp/>wrong<sp/>way.<sp/>Stop<sp/>in<sp/>case<sp/>we<sp/>are<sp/>crossing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>column<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Collision<sp/>with<sp/>like<sp/>tab<sp/>of<sp/>type<sp/>%d<sp/>at<sp/>%d,%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look_left<sp/>?<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" kindref="member">right_tab_type</ref>()</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>neighbour-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" kindref="member">left_tab_type</ref>(),</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_left,<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>good<sp/>fit<sp/>to<sp/>the<sp/>line.<sp/>Continue<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neighbour<sp/>as<sp/>the<sp/>bbox<sp/>if<sp/>the<sp/>best<sp/>gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>h_gap<sp/>&lt;<sp/>best_gap)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Good<sp/>result\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_gap<sp/>=<sp/>h_gap;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>new<sp/>one<sp/>is<sp/>worse,<sp/>so<sp/>we<sp/>probably<sp/>already<sp/>have<sp/>the<sp/>best<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>way\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>overlap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>left,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()))</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Giving<sp/>up<sp/>due<sp/>to<sp/>end<sp/>of<sp/>search\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/><sp/></highlight><highlight class="comment">//<sp/>Hit<sp/>the<sp/>edge<sp/>and<sp/>found<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>bi-directional<sp/>partner<sp/>relationship<sp/>between<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>right.<sp/>If<sp/>one<sp/>(or<sp/>both)<sp/>of<sp/>the<sp/>vectors<sp/>is<sp/>a<sp/>separator,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extend<sp/>a<sp/>nearby<sp/>extendable<sp/>vector<sp/>or<sp/>create<sp/>a<sp/>new<sp/>one<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>correct<sp/>type,<sp/>using<sp/>the<sp/>given<sp/>left<sp/>or<sp/>right<sp/>blob<sp/>as<sp/>a<sp/>guide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::AddPartnerVector(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>left_blob,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>right_blob,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector*<sp/>left,<sp/>TabVector*<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>left_box<sp/>=<sp/>left_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>right_box<sp/>=<sp/>right_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left-&gt;IsSeparator())<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>a<sp/>nearby<sp/>left<sp/>edge<sp/>to<sp/>extend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1aedfe0f86dd7916bf5c6dfc2e2b4dbe22" kindref="member">LeftTabForBox</ref>(left_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>v<sp/>!=<sp/>left<sp/>&amp;&amp;<sp/>v-&gt;IsLeftTab()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;XAtY(left_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>&gt;<sp/>left-&gt;XAtY(left_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>v;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>good<sp/>replacement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left-&gt;ExtendToBox(left_blob);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fake<sp/>a<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TabVector(*left,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a63f1e8bdcb518d39f915c4a6f51126c9" kindref="member">TA_LEFT_RAGGED</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/>left_blob);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vectors_.add_sorted(<ref refid="classtesseract_1_1_tab_vector_1ae02238fae87c0c68748f02a8043a3c97" kindref="member">TabVector::SortVectorsByKey</ref>,<sp/>left);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right-&gt;IsSeparator())<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>a<sp/>nearby<sp/>left<sp/>edge<sp/>to<sp/>extend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>right_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>right_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>edge<sp/>(%d,%d-%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>right_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>right_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;Print(</highlight><highlight class="stringliteral">&quot;<sp/>looking<sp/>for<sp/>improvement<sp/>for&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1adac7971311bbdade2aa87ebb0691a408" kindref="member">RightTabForBox</ref>(right_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>v<sp/>!=<sp/>right<sp/>&amp;&amp;<sp/>v-&gt;IsRightTab()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;XAtY(right_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>&lt;<sp/>right-&gt;XAtY(right_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>v;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>good<sp/>replacement.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;ExtendToBox(right_blob);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>right_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>right_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;Print(</highlight><highlight class="stringliteral">&quot;Extended<sp/>vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fake<sp/>a<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TabVector(*right,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a3eb640025f235401fd86bf1bf01e4a49" kindref="member">TA_RIGHT_RAGGED</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_blob);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vectors_.add_sorted(<ref refid="classtesseract_1_1_tab_vector_1ae02238fae87c0c68748f02a8043a3c97" kindref="member">TabVector::SortVectorsByKey</ref>,<sp/>right);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(3,<sp/>right_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>right_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;Print(</highlight><highlight class="stringliteral">&quot;Created<sp/>new<sp/>vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>left-&gt;AddPartner(right);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>right-&gt;AddPartner(left);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>separators<sp/>and<sp/>unused<sp/>tabs<sp/>from<sp/>the<sp/>main<sp/>vectors_<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>dead_vectors_<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::CleanupTabs()<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Before<sp/>getting<sp/>rid<sp/>of<sp/>separators<sp/>and<sp/>unused<sp/>vectors,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>useful<sp/>to<sp/>try<sp/>moving<sp/>ragged<sp/>vectors<sp/>outwards<sp/>to<sp/>see<sp/>if<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allows<sp/>useful<sp/>extension.<sp/>Could<sp/>be<sp/>combined<sp/>with<sp/>checking<sp/>ends<sp/>of<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>it(&amp;vectors_);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>dead_it(&amp;dead_vectors_);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsSeparator()<sp/>||<sp/>v-&gt;Partnerless())<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dead_it.add_after_then_move(it.extract());</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_it_.set_to_list(&amp;vectors_);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;FitAndEvaluateIfNeeded(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>given<sp/>rotation<sp/>to<sp/>the<sp/>given<sp/>list<sp/>of<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">TabFind::RotateBlobList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,<sp/>BLOBNBOX_LIST*<sp/>blobs)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(blobs);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;rotate_box(rotation);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recreate<sp/>the<sp/>grid<sp/>with<sp/>deskewed<sp/>BLOBNBOXes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>detected<sp/>skew<sp/>angle<sp/>is<sp/>impossible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TabFind::Deskew(TabVector_LIST*<sp/>hlines,<sp/>BLOBNBOX_LIST*<sp/>image_blobs,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>deskew,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>reskew)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>ComputeDeskewVectors(deskew,<sp/>reskew);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>&lt;<sp/><ref refid="namespacetesseract_1a54e5bd928697f4ac6707ebd6d6313ac8" kindref="member">kCosMaxSkewAngle</ref>)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(*deskew,<sp/>image_blobs);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(*deskew,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(*deskew,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(*deskew,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_images)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>debug<sp/>pix<sp/>and<sp/>arrange<sp/>for<sp/>it<sp/>to<sp/>be<sp/>drawn<sp/>at<sp/>the<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix_grey<sp/>=<sp/>pixRead(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(pix_grey);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(pix_grey);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>atan2(deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>(),<sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Positive<sp/>angle<sp/>is<sp/>clockwise<sp/>to<sp/>pixRotate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix_rot<sp/>=<sp/>pixRotate(pix_grey,<sp/>-angle,<sp/>L_ROTATE_AREA_MAP,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_BRING_IN_WHITE,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>image<sp/>must<sp/>be<sp/>translated<sp/>by<sp/>the<sp/>rotation<sp/>of<sp/>its<sp/>center,<sp/>since<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>just<sp/>been<sp/>rotated<sp/>about<sp/>its<sp/>center.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>center_offset(width<sp/>/<sp/>2,<sp/>height<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>new_center_offset(center_offset);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>new_center_offset.rotate(*deskew);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>image_origin_<sp/>+=<sp/>new_center_offset<sp/>-<sp/>center_offset;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>image<sp/>grew<sp/>as<sp/>it<sp/>was<sp/>rotated,<sp/>so<sp/>offset<sp/>the<sp/>(top/left)<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>half<sp/>the<sp/>change<sp/>in<sp/>size.<sp/>y<sp/>is<sp/>opposite<sp/>to<sp/>x<sp/>because<sp/>it<sp/>is<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>ist<sp/>top/left,<sp/>not<sp/>bottom/left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>corner_offset((width<sp/>-<sp/>pixGetWidth(pix_rot))<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixGetHeight(pix_rot)<sp/>-<sp/>height)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>image_origin_<sp/>+=<sp/>corner_offset;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),<sp/>pix_rot,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix_grey);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix_rot);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>horizontal<sp/>vectors.<sp/>The<sp/>vertical<sp/>vectors<sp/>don&apos;t<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rotating<sp/>as<sp/>they<sp/>can<sp/>just<sp/>be<sp/>refitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>h_it(hlines);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h_it.mark_cycle_pt();<sp/>!h_it.cycled_list();<sp/>h_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>h<sp/>=<sp/>h_it.data();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;Rotate(*deskew);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>d_it(&amp;dead_vectors_);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(d_it.mark_cycle_pt();<sp/>!d_it.cycled_list();<sp/>d_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>d<sp/>=<sp/>d_it.data();</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;Rotate(*deskew);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>SetVerticalSkewAndParellelize(0,<sp/>1);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebuild<sp/>the<sp/>grid<sp/>to<sp/>the<sp/>new<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box(<ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>,<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>grid_box.rotate_large(*deskew);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" kindref="member">Init</ref>(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/>grid_box.botleft(),<sp/>grid_box.topright());</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>image_blobs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flip<sp/>the<sp/>vertical<sp/>and<sp/>horizontal<sp/>lines<sp/>and<sp/>rotate<sp/>the<sp/>grid<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>working<sp/>on<sp/>the<sp/>rotated<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>also<sp/>makes<sp/>parameter<sp/>adjustments<sp/>for<sp/>FindInitialTabVectors().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a4dd9c8e6a4a4b669b143a8b209ab4e3d" kindref="member">TabFind::ResetForVerticalText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotate,</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>horizontal_lines,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>min_gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>horizontal<sp/>and<sp/>vertical<sp/>vectors<sp/>and<sp/>swap<sp/>them<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>the<sp/>separators<sp/>are<sp/>kept<sp/>and<sp/>rotated;<sp/>other<sp/>tabs<sp/>are<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>estimate<sp/>the<sp/>gutter<sp/>width<sp/>then<sp/>thrown<sp/>away.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>TabVector_LIST<sp/>ex_verticals;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>ex_v_it(&amp;ex_verticals);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>TabVector_LIST<sp/>vlines;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>v_it(&amp;vlines);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.empty())<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>v_it_.extract();</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;IsSeparator())<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;Rotate(rotate);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ex_v_it.add_after_then_move(v);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_it.add_after_then_move(v);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.forward();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>min<sp/>gutter<sp/>width<sp/>for<sp/>better<sp/>tabbox<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>2nd<sp/>call<sp/>to<sp/>FindInitialTabVectors().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_gutter<sp/>=<sp/>FindMedianGutterWidth(&amp;vlines);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(median_gutter<sp/>&gt;<sp/>*min_gutter_width)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>*min_gutter_width<sp/>=<sp/>median_gutter;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>h_it(horizontal_lines);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h_it.mark_cycle_pt();<sp/>!h_it.cycled_list();<sp/>h_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>h<sp/>=<sp/>h_it.data();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;Rotate(rotate);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>v_it_.add_list_after(horizontal_lines);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>h_it.set_to_list(horizontal_lines);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>h_it.add_list_after(&amp;ex_verticals);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebuild<sp/>the<sp/>grid<sp/>to<sp/>the<sp/>new<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box(<ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>grid_box.rotate_large(rotate);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" kindref="member">Init</ref>(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/>grid_box.botleft(),<sp/>grid_box.topright());</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>grid<sp/>and<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>tab<sp/>vectors,<sp/>but<sp/>not<sp/>separators,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ready<sp/>to<sp/>start<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1af6d774ed654a3708b6941707eaa357e7" kindref="member">TabFind::Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v_it_.mark_cycle_pt();<sp/>!v_it_.cycled_list();<sp/>v_it_.forward())<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v_it_.data()-&gt;IsSeparator())</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>v_it_.extract();</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a0b373075bdfda41719d6fb9a64bcfee0" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reflect<sp/>the<sp/>separator<sp/>tab<sp/>vectors<sp/>and<sp/>the<sp/>grids<sp/>in<sp/>the<sp/>y-axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can<sp/>only<sp/>be<sp/>called<sp/>after<sp/>Reset!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_find_1a7796b29f26b5411d648a546567251352" kindref="member">TabFind::ReflectInYAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>TabVector_LIST<sp/>temp_list;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>temp_it(&amp;temp_list);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TabVector<sp/>list<sp/>only<sp/>contains<sp/>vertical<sp/>lines,<sp/>but<sp/>they<sp/>need<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reflected<sp/>and<sp/>the<sp/>list<sp/>needs<sp/>to<sp/>be<sp/>reversed,<sp/>so<sp/>they<sp/>are<sp/>still<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sort_key<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!v_it_.empty())<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>v_it_.extract();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>v_it_.forward();</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;ReflectInYAxis();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_it.add_before_then_move(v);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>v_it_.add_list_after(&amp;temp_list);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>v_it_.move_to_first();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>this<sp/>grid<sp/>with<sp/>reflected<sp/>bounding<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box(<ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>grid_box.left();</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>grid_box.set_left(-grid_box.right());</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>grid_box.set_right(-tmp);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" kindref="member">Init</ref>(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/>grid_box.botleft(),<sp/>grid_box.topright());</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>rotation<sp/>required<sp/>to<sp/>deskew,<sp/>and<sp/>its<sp/>inverse<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::ComputeDeskewVectors(<ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>deskew,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>reskew)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref><sp/>%<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>length<sp/>=<sp/>sqrt(length);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(static_cast&lt;float&gt;(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>/<sp/>length));</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(static_cast&lt;float&gt;(<ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>/<sp/>length));</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>reskew-&gt;<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>());</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>reskew-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(-deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>and<sp/>apply<sp/>constraints<sp/>to<sp/>the<sp/>end<sp/>positions<sp/>of<sp/>TabVectors<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>where<sp/>possible<sp/>partners<sp/>end<sp/>at<sp/>the<sp/>same<sp/>y<sp/>coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabFind::ApplyTabConstraints()<sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>it(&amp;vectors_);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;SetupConstraints();</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>the<sp/>first<sp/>and<sp/>last<sp/>partner,<sp/>we<sp/>want<sp/>a<sp/>common<sp/>bottom<sp/>and<sp/>top,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>respectively,<sp/>and<sp/>for<sp/>each<sp/>change<sp/>of<sp/>partner,<sp/>we<sp/>want<sp/>a<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>first<sp/>with<sp/>bottom<sp/>of<sp/>next.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;SetupPartnerConstraints();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>The<sp/>back-to-back<sp/>pairs<sp/>should<sp/>really<sp/>be<sp/>done<sp/>like<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>front-to-front<sp/>pairs,<sp/>but<sp/>there<sp/>is<sp/>no<sp/>convenient<sp/>way<sp/>of<sp/>producing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>partners<sp/>like<sp/>there<sp/>is<sp/>with<sp/>the<sp/>front-to-front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v-&gt;IsRightTab())</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>back-to-back<sp/>pair<sp/>of<sp/>vectors,<sp/>try<sp/>for<sp/>common<sp/>top<sp/>and<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector_IT<sp/>partner_it(it);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(partner_it.forward();<sp/>!partner_it.at_first();<sp/>partner_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TabVector*<sp/>partner<sp/>=<sp/>partner_it.data();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partner-&gt;IsLeftTab()<sp/>||<sp/>!v-&gt;VOverlap(*partner))</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;SetupPartnerConstraints(partner);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>actually<sp/>apply<sp/>the<sp/>constraints<sp/>to<sp/>get<sp/>common<sp/>start/end<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v-&gt;IsSeparator())</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;ApplyConstraints();</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Where<sp/>constraint<sp/>application<sp/>fails,<sp/>it<sp/>would<sp/>be<sp/>good<sp/>to<sp/>try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>the<sp/>ends<sp/>to<sp/>see<sp/>if<sp/>they<sp/>really<sp/>should<sp/>be<sp/>moved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp"/>
  </compounddef>
</doxygen>
