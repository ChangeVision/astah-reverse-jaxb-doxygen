<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="intmatcher_8cpp" kind="file">
    <compoundname>intmatcher.cpp</compoundname>
    <includes refid="intmatcher_8h" local="yes">intmatcher.h</includes>
    <includes refid="intproto_8h" local="yes">intproto.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="scrollview_8h" local="yes">scrollview.h</includes>
    <includes refid="float2int_8h" local="yes">float2int.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="25332">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="25333" relation="include">
        </childnode>
        <childnode refid="25344" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
      </node>
      <node id="25363">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="25344" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
      </node>
      <node id="25367">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="25384">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
      </node>
      <node id="25360">
        <label>assert.h</label>
      </node>
      <node id="25364">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="25365" relation="include">
        </childnode>
        <childnode refid="25366" relation="include">
        </childnode>
        <childnode refid="25364" relation="include">
        </childnode>
        <childnode refid="25368" relation="include">
        </childnode>
        <childnode refid="25387" relation="include">
        </childnode>
        <childnode refid="25388" relation="include">
        </childnode>
        <childnode refid="25389" relation="include">
        </childnode>
        <childnode refid="25308" relation="include">
        </childnode>
        <childnode refid="25390" relation="include">
        </childnode>
        <childnode refid="25370" relation="include">
        </childnode>
        <childnode refid="25362" relation="include">
        </childnode>
        <childnode refid="25357" relation="include">
        </childnode>
      </node>
      <node id="25320">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="25344">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="25312">
        <label>stdlib.h</label>
      </node>
      <node id="25315">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="25316" relation="include">
        </childnode>
      </node>
      <node id="25356">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25375">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="25317" relation="include">
        </childnode>
      </node>
      <node id="25333">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="25334" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
        <childnode refid="25341" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25342" relation="include">
        </childnode>
        <childnode refid="25343" relation="include">
        </childnode>
      </node>
      <node id="25353">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
      </node>
      <node id="25336">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="25312" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25322" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25337" relation="include">
        </childnode>
      </node>
      <node id="25349">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25336" relation="include">
        </childnode>
        <childnode refid="25338" relation="include">
        </childnode>
      </node>
      <node id="25347">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25348" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
      </node>
      <node id="25366">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="25330" relation="include">
        </childnode>
        <childnode refid="25367" relation="include">
        </childnode>
      </node>
      <node id="25376">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="25377" relation="include">
        </childnode>
        <childnode refid="25350" relation="include">
        </childnode>
      </node>
      <node id="25385">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="25369" relation="include">
        </childnode>
        <childnode refid="25330" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
      </node>
      <node id="25370">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="25360" relation="include">
        </childnode>
        <childnode refid="25349" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25371" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25372" relation="include">
        </childnode>
      </node>
      <node id="25323">
        <label>stddef.h</label>
      </node>
      <node id="25327">
        <label>memory.h</label>
      </node>
      <node id="25358">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="25325" relation="include">
        </childnode>
      </node>
      <node id="25345">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25346" relation="include">
        </childnode>
      </node>
      <node id="25359">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="25360" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25317">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25325">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25316">
        <label>limits.h</label>
      </node>
      <node id="25391">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25308" relation="include">
        </childnode>
      </node>
      <node id="25389">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="25348" relation="include">
        </childnode>
        <childnode refid="25324" relation="include">
        </childnode>
        <childnode refid="25390" relation="include">
        </childnode>
        <childnode refid="25346" relation="include">
        </childnode>
      </node>
      <node id="25368">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="25334" relation="include">
        </childnode>
        <childnode refid="25369" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25367" relation="include">
        </childnode>
        <childnode refid="25329" relation="include">
        </childnode>
        <childnode refid="25370" relation="include">
        </childnode>
        <childnode refid="25383" relation="include">
        </childnode>
        <childnode refid="25385" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25386" relation="include">
        </childnode>
      </node>
      <node id="25352">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="25346" relation="include">
        </childnode>
      </node>
      <node id="25379">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="25351" relation="include">
        </childnode>
      </node>
      <node id="25374">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25336" relation="include">
        </childnode>
        <childnode refid="25338" relation="include">
        </childnode>
      </node>
      <node id="25342">
        <label>pthread.h</label>
      </node>
      <node id="25319">
        <label>string.h</label>
      </node>
      <node id="25340">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25326">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="25327" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
      </node>
      <node id="25330">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
        <childnode refid="25312" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25331" relation="include">
        </childnode>
        <childnode refid="25332" relation="include">
        </childnode>
      </node>
      <node id="25350">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="25346" relation="include">
        </childnode>
        <childnode refid="25351" relation="include">
        </childnode>
        <childnode refid="25320" relation="include">
        </childnode>
        <childnode refid="25353" relation="include">
        </childnode>
        <childnode refid="25331" relation="include">
        </childnode>
      </node>
      <node id="25373">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25313">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25343">
        <label>semaphore.h</label>
      </node>
      <node id="25377">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="25378" relation="include">
        </childnode>
        <childnode refid="25379" relation="include">
        </childnode>
        <childnode refid="25373" relation="include">
        </childnode>
        <childnode refid="25350" relation="include">
        </childnode>
        <childnode refid="25375" relation="include">
        </childnode>
        <childnode refid="25353" relation="include">
        </childnode>
      </node>
      <node id="25372">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25373" relation="include">
        </childnode>
        <childnode refid="25374" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
        <childnode refid="25375" relation="include">
        </childnode>
        <childnode refid="25376" relation="include">
        </childnode>
        <childnode refid="25380" relation="include">
        </childnode>
      </node>
      <node id="25361">
        <label>float2int.h</label>
        <link refid="float2int_8h"/>
        <childnode refid="25308" relation="include">
        </childnode>
        <childnode refid="25362" relation="include">
        </childnode>
      </node>
      <node id="25380">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25381" relation="include">
        </childnode>
        <childnode refid="25372" relation="include">
        </childnode>
      </node>
      <node id="25337">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="25317" relation="include">
        </childnode>
      </node>
      <node id="25328">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25329" relation="include">
        </childnode>
        <childnode refid="25345" relation="include">
        </childnode>
        <childnode refid="25347" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
      </node>
      <node id="25334">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="25335" relation="include">
        </childnode>
        <childnode refid="25331" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
      </node>
      <node id="25357">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="25313" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
      </node>
      <node id="25378">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="25351" relation="include">
        </childnode>
        <childnode refid="25379" relation="include">
        </childnode>
      </node>
      <node id="25346">
        <label>math.h</label>
      </node>
      <node id="25338">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="25317" relation="include">
        </childnode>
      </node>
      <node id="25382">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="25351" relation="include">
        </childnode>
      </node>
      <node id="25354">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="25346" relation="include">
        </childnode>
        <childnode refid="25348" relation="include">
        </childnode>
      </node>
      <node id="25329">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="25330" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
      </node>
      <node id="25362">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="25348" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
      </node>
      <node id="25307">
        <label>classify/intmatcher.cpp</label>
        <link refid="intmatcher.cpp"/>
        <childnode refid="25308" relation="include">
        </childnode>
        <childnode refid="25324" relation="include">
        </childnode>
        <childnode refid="25359" relation="include">
        </childnode>
        <childnode refid="25353" relation="include">
        </childnode>
        <childnode refid="25361" relation="include">
        </childnode>
        <childnode refid="25363" relation="include">
        </childnode>
        <childnode refid="25318" relation="include">
        </childnode>
        <childnode refid="25364" relation="include">
        </childnode>
        <childnode refid="25391" relation="include">
        </childnode>
        <childnode refid="25346" relation="include">
        </childnode>
      </node>
      <node id="25309">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
      </node>
      <node id="25311">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25312" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25318" relation="include">
        </childnode>
        <childnode refid="25320" relation="include">
        </childnode>
      </node>
      <node id="25383">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25370" relation="include">
        </childnode>
        <childnode refid="25384" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25322">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="25323" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25355">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="25356" relation="include">
        </childnode>
        <childnode refid="25330" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
        <childnode refid="25357" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
      </node>
      <node id="25387">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="25362" relation="include">
        </childnode>
      </node>
      <node id="25335">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25336" relation="include">
        </childnode>
        <childnode refid="25338" relation="include">
        </childnode>
      </node>
      <node id="25339">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25318" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
        <childnode refid="25340" relation="include">
        </childnode>
      </node>
      <node id="25369">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="25335" relation="include">
        </childnode>
        <childnode refid="25370" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
      </node>
      <node id="25388">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25326" relation="include">
        </childnode>
      </node>
      <node id="25351">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25346" relation="include">
        </childnode>
        <childnode refid="25335" relation="include">
        </childnode>
        <childnode refid="25352" relation="include">
        </childnode>
      </node>
      <node id="25365">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="25329" relation="include">
        </childnode>
        <childnode refid="25324" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
      </node>
      <node id="25371">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="25331">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="25309" relation="include">
        </childnode>
      </node>
      <node id="25308">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25324" relation="include">
        </childnode>
        <childnode refid="25358" relation="include">
        </childnode>
      </node>
      <node id="25314">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="25315" relation="include">
        </childnode>
      </node>
      <node id="25310">
        <label>stdio.h</label>
      </node>
      <node id="25324">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25325" relation="include">
        </childnode>
        <childnode refid="25328" relation="include">
        </childnode>
        <childnode refid="25355" relation="include">
        </childnode>
        <childnode refid="25353" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
      </node>
      <node id="25341">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25331" relation="include">
        </childnode>
      </node>
      <node id="25390">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
      </node>
      <node id="25321">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
        <childnode refid="25315" relation="include">
        </childnode>
        <childnode refid="25322" relation="include">
        </childnode>
      </node>
      <node id="25348">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="25349" relation="include">
        </childnode>
        <childnode refid="25350" relation="include">
        </childnode>
        <childnode refid="25354" relation="include">
        </childnode>
      </node>
      <node id="25318">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
      </node>
      <node id="25386">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="25370" relation="include">
        </childnode>
        <childnode refid="25309" relation="include">
        </childnode>
        <childnode refid="25339" relation="include">
        </childnode>
      </node>
      <node id="25381">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="25382" relation="include">
        </childnode>
        <childnode refid="25336" relation="include">
        </childnode>
        <childnode refid="25322" relation="include">
        </childnode>
        <childnode refid="25350" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classtesseract_1_1_class_pruner" prot="public">tesseract::ClassPruner</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="intmatcher_8cpp_1ada075a7b701af502f55e59458b03bf68" prot="public" static="yes" mutable="no">
        <type>const <ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>const uinT8 offset_table[256]</definition>
        <argsstring>[256]</argsstring>
        <name>offset_table</name>
        <initializer>= {
  255, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
  4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intmatcher_8cpp_1a03a40dc85689aef5569f9baf7606d7b8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>const uinT8 next_table[256]</definition>
        <argsstring>[256]</argsstring>
        <name>next_table</name>
        <initializer>= {
  0, 0, 0, 0x2, 0, 0x4, 0x4, 0x6, 0, 0x8, 0x8, 0x0a, 0x08, 0x0c, 0x0c, 0x0e,
  0, 0x10, 0x10, 0x12, 0x10, 0x14, 0x14, 0x16, 0x10, 0x18, 0x18, 0x1a, 0x18,
  0x1c, 0x1c, 0x1e,
  0, 0x20, 0x20, 0x22, 0x20, 0x24, 0x24, 0x26, 0x20, 0x28, 0x28, 0x2a, 0x28,
  0x2c, 0x2c, 0x2e,
  0x20, 0x30, 0x30, 0x32, 0x30, 0x34, 0x34, 0x36, 0x30, 0x38, 0x38, 0x3a,
  0x38, 0x3c, 0x3c, 0x3e,
  0, 0x40, 0x40, 0x42, 0x40, 0x44, 0x44, 0x46, 0x40, 0x48, 0x48, 0x4a, 0x48,
  0x4c, 0x4c, 0x4e,
  0x40, 0x50, 0x50, 0x52, 0x50, 0x54, 0x54, 0x56, 0x50, 0x58, 0x58, 0x5a,
  0x58, 0x5c, 0x5c, 0x5e,
  0x40, 0x60, 0x60, 0x62, 0x60, 0x64, 0x64, 0x66, 0x60, 0x68, 0x68, 0x6a,
  0x68, 0x6c, 0x6c, 0x6e,
  0x60, 0x70, 0x70, 0x72, 0x70, 0x74, 0x74, 0x76, 0x70, 0x78, 0x78, 0x7a,
  0x78, 0x7c, 0x7c, 0x7e,
  0, 0x80, 0x80, 0x82, 0x80, 0x84, 0x84, 0x86, 0x80, 0x88, 0x88, 0x8a, 0x88,
  0x8c, 0x8c, 0x8e,
  0x80, 0x90, 0x90, 0x92, 0x90, 0x94, 0x94, 0x96, 0x90, 0x98, 0x98, 0x9a,
  0x98, 0x9c, 0x9c, 0x9e,
  0x80, 0xa0, 0xa0, 0xa2, 0xa0, 0xa4, 0xa4, 0xa6, 0xa0, 0xa8, 0xa8, 0xaa,
  0xa8, 0xac, 0xac, 0xae,
  0xa0, 0xb0, 0xb0, 0xb2, 0xb0, 0xb4, 0xb4, 0xb6, 0xb0, 0xb8, 0xb8, 0xba,
  0xb8, 0xbc, 0xbc, 0xbe,
  0x80, 0xc0, 0xc0, 0xc2, 0xc0, 0xc4, 0xc4, 0xc6, 0xc0, 0xc8, 0xc8, 0xca,
  0xc8, 0xcc, 0xcc, 0xce,
  0xc0, 0xd0, 0xd0, 0xd2, 0xd0, 0xd4, 0xd4, 0xd6, 0xd0, 0xd8, 0xd8, 0xda,
  0xd8, 0xdc, 0xdc, 0xde,
  0xc0, 0xe0, 0xe0, 0xe2, 0xe0, 0xe4, 0xe4, 0xe6, 0xe0, 0xe8, 0xe8, 0xea,
  0xe8, 0xec, 0xec, 0xee,
  0xe0, 0xf0, 0xf0, 0xf2, 0xf0, 0xf4, 0xf4, 0xf6, 0xf0, 0xf8, 0xf8, 0xfa,
  0xf8, 0xfc, 0xfc, 0xfe
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="intmatcher_8cpp_1aa8704170048a3260adca8e8f78eaeb61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IMDebugConfiguration</definition>
        <argsstring>(int FeatureNum, uinT16 ActualProtoNum, uinT8 Evidence, BIT_VECTOR ConfigMask, uinT32 ConfigWord)</argsstring>
        <name>IMDebugConfiguration</name>
        <param>
          <type>int</type>
          <declname>FeatureNum</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>ActualProtoNum</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>Evidence</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>ConfigWord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" line="757" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="757" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="intmatcher_8cpp_1aae66a3365e5ba8921d8bfdddaf9f55e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IMDebugConfigurationSum</definition>
        <argsstring>(int FeatureNum, uinT8 *FeatureEvidence, inT32 ConfigCount)</argsstring>
        <name>IMDebugConfigurationSum</name>
        <param>
          <type>int</type>
          <declname>FeatureNum</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref> *</type>
          <declname>FeatureEvidence</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>ConfigCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" line="785" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="785" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="intmatcher_8cpp_1a11a05eae2b34aea059f9d8c0d2a94484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HeapSort</definition>
        <argsstring>(int n, register int ra[], register int rb[])</argsstring>
        <name>HeapSort</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>register int</type>
          <declname>ra</declname>
          <array>[]</array>
        </param>
        <param>
          <type>register int</type>
          <declname>rb</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" line="1305" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1305" bodyend="1357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Filename:<sp/><sp/><sp/><sp/>intmatcher.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Generic<sp/>high<sp/>level<sp/>classification<sp/>routines.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Robert<sp/>Moss</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Feb<sp/>13<sp/>17:35:28<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mon<sp/>Mar<sp/>11<sp/>16:33:02<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Modified<sp/>to<sp/>add</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>for<sp/>adaptive<sp/>matching.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intmatcher_8h" kindref="compound">intmatcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intproto_8h" kindref="compound">intproto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scrollview_8h" kindref="compound">scrollview.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="float2int_8h" kindref="compound">float2int.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Global<sp/>Data<sp/>Definitions<sp/>and<sp/>Declarations</highlight></codeline>
<codeline lineno="41"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameters<sp/>of<sp/>the<sp/>sigmoid<sp/>used<sp/>to<sp/>convert<sp/>similarity<sp/>to<sp/>evidence<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>similarity_evidence_table_<sp/>that<sp/>is<sp/>used<sp/>to<sp/>convert<sp/>distance<sp/>metric<sp/>to<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>evidence<sp/>value<sp/>in<sp/>the<sp/>secondary<sp/>matcher.<sp/>(See<sp/>IntMatcher::Init).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" kindref="member">IntegerMatcher::kSEExponentialMultiplier</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1abf4850c047b5221fedbaeef45bffa208" kindref="member">IntegerMatcher::kSimilarityCenter</ref><sp/>=<sp/>0.0075;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>offset_table[256]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>255,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>5,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>6,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>5,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>7,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>5,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>6,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>5,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>4,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0,<sp/>3,<sp/>0,<sp/>1,<sp/>0,<sp/>2,<sp/>0,<sp/>1,<sp/>0</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>next_table[256]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0x2,<sp/>0,<sp/>0x4,<sp/>0x4,<sp/>0x6,<sp/>0,<sp/>0x8,<sp/>0x8,<sp/>0x0a,<sp/>0x08,<sp/>0x0c,<sp/>0x0c,<sp/>0x0e,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>0,<sp/>0x10,<sp/>0x10,<sp/>0x12,<sp/>0x10,<sp/>0x14,<sp/>0x14,<sp/>0x16,<sp/>0x10,<sp/>0x18,<sp/>0x18,<sp/>0x1a,<sp/>0x18,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>0x1c,<sp/>0x1c,<sp/>0x1e,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>0,<sp/>0x20,<sp/>0x20,<sp/>0x22,<sp/>0x20,<sp/>0x24,<sp/>0x24,<sp/>0x26,<sp/>0x20,<sp/>0x28,<sp/>0x28,<sp/>0x2a,<sp/>0x28,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>0x2c,<sp/>0x2c,<sp/>0x2e,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>0x20,<sp/>0x30,<sp/>0x30,<sp/>0x32,<sp/>0x30,<sp/>0x34,<sp/>0x34,<sp/>0x36,<sp/>0x30,<sp/>0x38,<sp/>0x38,<sp/>0x3a,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>0x38,<sp/>0x3c,<sp/>0x3c,<sp/>0x3e,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>0,<sp/>0x40,<sp/>0x40,<sp/>0x42,<sp/>0x40,<sp/>0x44,<sp/>0x44,<sp/>0x46,<sp/>0x40,<sp/>0x48,<sp/>0x48,<sp/>0x4a,<sp/>0x48,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>0x4c,<sp/>0x4c,<sp/>0x4e,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>0x40,<sp/>0x50,<sp/>0x50,<sp/>0x52,<sp/>0x50,<sp/>0x54,<sp/>0x54,<sp/>0x56,<sp/>0x50,<sp/>0x58,<sp/>0x58,<sp/>0x5a,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>0x58,<sp/>0x5c,<sp/>0x5c,<sp/>0x5e,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>0x40,<sp/>0x60,<sp/>0x60,<sp/>0x62,<sp/>0x60,<sp/>0x64,<sp/>0x64,<sp/>0x66,<sp/>0x60,<sp/>0x68,<sp/>0x68,<sp/>0x6a,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>0x68,<sp/>0x6c,<sp/>0x6c,<sp/>0x6e,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>0x60,<sp/>0x70,<sp/>0x70,<sp/>0x72,<sp/>0x70,<sp/>0x74,<sp/>0x74,<sp/>0x76,<sp/>0x70,<sp/>0x78,<sp/>0x78,<sp/>0x7a,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>0x78,<sp/>0x7c,<sp/>0x7c,<sp/>0x7e,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>0,<sp/>0x80,<sp/>0x80,<sp/>0x82,<sp/>0x80,<sp/>0x84,<sp/>0x84,<sp/>0x86,<sp/>0x80,<sp/>0x88,<sp/>0x88,<sp/>0x8a,<sp/>0x88,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>0x8c,<sp/>0x8c,<sp/>0x8e,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>0x80,<sp/>0x90,<sp/>0x90,<sp/>0x92,<sp/>0x90,<sp/>0x94,<sp/>0x94,<sp/>0x96,<sp/>0x90,<sp/>0x98,<sp/>0x98,<sp/>0x9a,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>0x98,<sp/>0x9c,<sp/>0x9c,<sp/>0x9e,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>0x80,<sp/>0xa0,<sp/>0xa0,<sp/>0xa2,<sp/>0xa0,<sp/>0xa4,<sp/>0xa4,<sp/>0xa6,<sp/>0xa0,<sp/>0xa8,<sp/>0xa8,<sp/>0xaa,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>0xa8,<sp/>0xac,<sp/>0xac,<sp/>0xae,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>0xa0,<sp/>0xb0,<sp/>0xb0,<sp/>0xb2,<sp/>0xb0,<sp/>0xb4,<sp/>0xb4,<sp/>0xb6,<sp/>0xb0,<sp/>0xb8,<sp/>0xb8,<sp/>0xba,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>0xb8,<sp/>0xbc,<sp/>0xbc,<sp/>0xbe,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>0x80,<sp/>0xc0,<sp/>0xc0,<sp/>0xc2,<sp/>0xc0,<sp/>0xc4,<sp/>0xc4,<sp/>0xc6,<sp/>0xc0,<sp/>0xc8,<sp/>0xc8,<sp/>0xca,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>0xc8,<sp/>0xcc,<sp/>0xcc,<sp/>0xce,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>0xc0,<sp/>0xd0,<sp/>0xd0,<sp/>0xd2,<sp/>0xd0,<sp/>0xd4,<sp/>0xd4,<sp/>0xd6,<sp/>0xd0,<sp/>0xd8,<sp/>0xd8,<sp/>0xda,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>0xd8,<sp/>0xdc,<sp/>0xdc,<sp/>0xde,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>0xc0,<sp/>0xe0,<sp/>0xe0,<sp/>0xe2,<sp/>0xe0,<sp/>0xe4,<sp/>0xe4,<sp/>0xe6,<sp/>0xe0,<sp/>0xe8,<sp/>0xe8,<sp/>0xea,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>0xe8,<sp/>0xec,<sp/>0xec,<sp/>0xee,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>0xe0,<sp/>0xf0,<sp/>0xf0,<sp/>0xf2,<sp/>0xf0,<sp/>0xf4,<sp/>0xf4,<sp/>0xf6,<sp/>0xf0,<sp/>0xf8,<sp/>0xf8,<sp/>0xfa,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>0xf8,<sp/>0xfc,<sp/>0xfc,<sp/>0xfe</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encapsulation<sp/>of<sp/>the<sp/>intermediate<sp/>data<sp/>and<sp/>computations<sp/>made<sp/>by<sp/>the<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pruner.<sp/>The<sp/>class<sp/>pruner<sp/>implements<sp/>a<sp/>simple<sp/>linear<sp/>classifier<sp/>on<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>features<sp/>by<sp/>heavily<sp/>quantizing<sp/>the<sp/>feature<sp/>space,<sp/>and<sp/>applying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NUM_BITS_PER_CLASS<sp/>(2)-bit<sp/>weights<sp/>to<sp/>the<sp/>features.<sp/>Lack<sp/>of<sp/>resolution<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>weights<sp/>is<sp/>compensated<sp/>by<sp/>a<sp/>non-constant<sp/>bias<sp/>that<sp/>is<sp/>dependent<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>features<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classtesseract_1_1_class_pruner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_class_pruner" kindref="compound">ClassPruner</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_class_pruner_1a5cf156abeddb25e0fc19f31b0bd0ded0" kindref="member">ClassPruner</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_classes)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>unrolled<sp/>loop<sp/>in<sp/>ComputeScores<sp/>means<sp/>that<sp/>the<sp/>array<sp/>sizes<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>rounded<sp/>up<sp/>so<sp/>that<sp/>the<sp/>array<sp/>is<sp/>big<sp/>enough<sp/>to<sp/>accommodate<sp/>the<sp/>extra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entries<sp/>accessed<sp/>by<sp/>the<sp/>unrolling.<sp/>Each<sp/>pruner<sp/>word<sp/>is<sp/>of<sp/>sized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BITS_PER_WERD<sp/>and<sp/>each<sp/>entry<sp/>is<sp/>NUM_BITS_PER_CLASS,<sp/>so<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BITS_PER_WERD<sp/>/<sp/>NUM_BITS_PER_CLASS<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>ComputeScores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>max_classes_<sp/>=<sp/>max_classes;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>rounded_classes_<sp/>=<sp/><ref refid="helpers_8h_1aea2e31b49321ab46ca2ec6fa510cc975" kindref="member">RoundUp</ref>(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_classes,<sp/><ref refid="intproto_8h_1ab1e3efe229080aaa98b0df47adf46666" kindref="member">WERDS_PER_CP_VECTOR</ref><sp/>*<sp/><ref refid="intproto_8h_1a65e33e9e10361d8dc9c7760ee256beac" kindref="member">BITS_PER_WERD</ref><sp/>/<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>class_count_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rounded_classes_];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_count_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rounded_classes_];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_key_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rounded_classes_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_index_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[rounded_classes_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rounded_classes_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pruning_threshold_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>num_features_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>num_classes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_class_pruner_1ad012a82eca055274577df89140c516de" kindref="member">~ClassPruner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]class_count_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]norm_count_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]sort_key_;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]sort_index_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>scores<sp/>for<sp/>every<sp/>class<sp/>in<sp/>the<sp/>character<sp/>set,<sp/>by<sp/>summing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>weights<sp/>for<sp/>each<sp/>feature<sp/>and<sp/>stores<sp/>the<sp/>sums<sp/>internally<sp/>in<sp/>class_count_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1a563dcc72126fbeabfc970e44ae9dadf3" kindref="member">ComputeScores</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>int_templates,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>features)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>num_features_<sp/>=<sp/>num_features;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pruners<sp/>=<sp/>int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>num_features;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>feature<sp/>=<sp/>&amp;features[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quantize<sp/>the<sp/>feature<sp/>to<sp/>NUM_CP_BUCKETS*NUM_CP_BUCKETS*NUM_CP_BUCKETS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>CLASS_PRUNER_STRUCT<sp/>only<sp/>covers<sp/>CLASSES_PER_CP(32)<sp/>classes,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>a<sp/>collection<sp/>of<sp/>them,<sp/>indexed<sp/>by<sp/>pruner_set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pruner_set<sp/>=<sp/>0;<sp/>pruner_set<sp/>&lt;<sp/>num_pruners;<sp/>++pruner_set)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>quantized<sp/>feature<sp/>in<sp/>a<sp/>3-D<sp/>array,<sp/>an<sp/>array<sp/>of<sp/>weights<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>pruner_word_ptr<sp/>=</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[pruner_set]-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][theta];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word<sp/>=<sp/>0;<sp/>word<sp/>&lt;<sp/><ref refid="intproto_8h_1ab1e3efe229080aaa98b0df47adf46666" kindref="member">WERDS_PER_CP_VECTOR</ref>;<sp/>++word)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>pruner_word<sp/>=<sp/>*pruner_word_ptr++;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>inner<sp/>loop<sp/>is<sp/>unrolled<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>ClassPruner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>gcc<sp/>would<sp/>not<sp/>unroll<sp/>it<sp/>unless<sp/>it<sp/>is<sp/>set<sp/>to<sp/>O3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>of<sp/>optimization<sp/>or<sp/>-funroll-loops<sp/>is<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uinT32<sp/>class_mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>NUM_BITS_PER_CLASS)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>bit<sp/>=<sp/>0;<sp/>bit<sp/>&lt;<sp/>BITS_PER_WERD/NUM_BITS_PER_CLASS;<sp/>bit++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/>class_mask;</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/>NUM_BITS_PER_CLASS;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id++]<sp/>+=<sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjusts<sp/>the<sp/>scores<sp/>according<sp/>to<sp/>the<sp/>number<sp/>of<sp/>expected<sp/>features.<sp/>Used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>lieu<sp/>of<sp/>a<sp/>constant<sp/>bias,<sp/>this<sp/>penalizes<sp/>classes<sp/>that<sp/>expect<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>features<sp/>than<sp/>there<sp/>are<sp/>present.<sp/>Thus<sp/>an<sp/>actual<sp/>c<sp/>will<sp/>score<sp/>higher<sp/>for<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>e,<sp/>even<sp/>though<sp/>almost<sp/>all<sp/>the<sp/>features<sp/>match<sp/>e<sp/>as<sp/>well<sp/>as<sp/>c,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e<sp/>expects<sp/>more<sp/>features<sp/>to<sp/>be<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1adc3743ff5370e359f949d1416e15b8f4" kindref="member">AdjustForExpectedNumFeatures</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>*<sp/>expected_num_features,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cutoff_strength)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>++class_id)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_features_<sp/>&lt;<sp/>expected_num_features[class_id])<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deficit<sp/>=<sp/>expected_num_features[class_id]<sp/>-<sp/>num_features_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id]<sp/>-=<sp/>class_count_[class_id]<sp/>*<sp/>deficit<sp/>/</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num_features_<sp/>*<sp/>cutoff_strength<sp/>+<sp/>deficit);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Zeros<sp/>the<sp/>scores<sp/>for<sp/>classes<sp/>disabled<sp/>in<sp/>the<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implements<sp/>the<sp/>black-list<sp/>to<sp/>recognize<sp/>a<sp/>subset<sp/>of<sp/>the<sp/>character<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1adfe63c0c9ecd109255cbd9575c4461d5" kindref="member">DisableDisabledClasses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>++class_id)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa5f5f5b010151daf76255777aebeea18" kindref="member">get_enabled</ref>(class_id))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id]<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>char<sp/>is<sp/>disabled!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Zeros<sp/>the<sp/>scores<sp/>of<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1a37c10b610423baeea19484dc649c1faa" kindref="member">DisableFragments</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>++class_id)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>include<sp/>character<sp/>fragments<sp/>in<sp/>the<sp/>class<sp/>pruner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>results<sp/>if<sp/>disable_character_fragments<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(class_id))<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalizes<sp/>the<sp/>counts<sp/>for<sp/>xheight,<sp/>putting<sp/>the<sp/>normalized<sp/>result<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>norm_count_.<sp/>Applies<sp/>a<sp/>simple<sp/>subtractive<sp/>penalty<sp/>for<sp/>incorrect<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>provided<sp/>by<sp/>the<sp/>normalization_factors<sp/>array,<sp/>indexed<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>class,<sp/>and<sp/>scaled<sp/>by<sp/>the<sp/>norm_multiplier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1aecebf61f4c853ee8ce500561e6a2e9de" kindref="member">NormalizeForXheight</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norm_multiplier,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>normalization_factors)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>norm_count_[class_id]<sp/>=<sp/>class_count_[class_id]<sp/>-</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((norm_multiplier<sp/>*<sp/>normalization_factors[class_id])<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>nop<sp/>normalization<sp/>copies<sp/>the<sp/>class_count_<sp/>array<sp/>to<sp/>norm_count_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1acb4a42006118013847d03b4e2d09b1b5" kindref="member">NoNormalization</ref>()<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>norm_count_[class_id]<sp/>=<sp/>class_count_[class_id];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prunes<sp/>the<sp/>classes<sp/>using<sp/>&lt;the<sp/>maximum<sp/>count&gt;<sp/>*<sp/>pruning_factor/256<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold<sp/>for<sp/>keeping<sp/>classes.<sp/>If<sp/>max_of_non_fragments,<sp/>then<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fragments<sp/>in<sp/>computing<sp/>the<sp/>maximum<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1a02a977ac59886202a164b5189ea4d1ed" kindref="member">PruneAndSort</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pruning_factor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>max_of_non_fragments,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>max_classes_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_count_[c]<sp/>&gt;<sp/>max_count<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>additional<sp/>check<sp/>is<sp/>added<sp/>in<sp/>order<sp/>to<sp/>ensure<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>classifier<sp/>will<sp/>return<sp/>at<sp/>least<sp/>one<sp/>non-fragmented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>verify<sp/>that<sp/>this<sp/>helps<sp/>accuracy<sp/>and<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hurt<sp/>performance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!max_of_non_fragments<sp/>||<sp/>!unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(c)))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count<sp/>=<sp/>norm_count_[c];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>Classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>pruning_threshold_<sp/>=<sp/>(max_count<sp/>*<sp/>pruning_factor)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>Classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pruning_threshold_<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pruning_threshold_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>num_classes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>max_classes_;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_count_[class_id]<sp/>&gt;=<sp/>pruning_threshold_)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_classes_;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_index_[num_classes_]<sp/>=<sp/>class_id;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_[num_classes_]<sp/>=<sp/>norm_count_[class_id];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>Classes<sp/>using<sp/>Heapsort<sp/>Algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_classes_<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intmatcher_8cpp_1a11a05eae2b34aea059f9d8c0d2a94484" kindref="member">HeapSort</ref>(num_classes_,<sp/>sort_key_,<sp/>sort_index_);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>debug<sp/>info<sp/>on<sp/>the<sp/>class<sp/>pruner<sp/>matches<sp/>for<sp/>the<sp/>pruned<sp/>classes<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1a096f3b38fce8039eca84763c06ccd54f" kindref="member">DebugMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify" kindref="compound">Classify</ref>&amp;<sp/>classify,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>int_templates,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>features)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pruners<sp/>=<sp/>int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_classes<sp/>=<sp/>int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>num_features_;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>feature<sp/>=<sp/>&amp;features[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;F=%3d(%d,%d,%d),&quot;</highlight><highlight class="normal">,<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref>,<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref>,<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quantize<sp/>the<sp/>feature<sp/>to<sp/>NUM_CP_BUCKETS*NUM_CP_BUCKETS*NUM_CP_BUCKETS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>*<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pruner_set<sp/>=<sp/>0;<sp/>pruner_set<sp/>&lt;<sp/>num_pruners;<sp/>++pruner_set)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>quantized<sp/>feature<sp/>in<sp/>a<sp/>3-D<sp/>array,<sp/>an<sp/>array<sp/>of<sp/>weights<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>pruner_word_ptr<sp/>=</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[pruner_set]-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][theta];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word<sp/>=<sp/>0;<sp/>word<sp/>&lt;<sp/><ref refid="intproto_8h_1ab1e3efe229080aaa98b0df47adf46666" kindref="member">WERDS_PER_CP_VECTOR</ref>;<sp/>++word)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>pruner_word<sp/>=<sp/>*pruner_word_ptr++;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_class<sp/>=<sp/>0;<sp/>word_class<sp/>&lt;<sp/>16<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id<sp/>&lt;<sp/>max_num_classes;<sp/>++word_class,<sp/>++class_id)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_count_[class_id]<sp/>&gt;=<sp/>pruning_threshold_)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%s=%d,&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify.<ref refid="classtesseract_1_1_classify_1a6fc9e3752efb2fe0d74920e082a59bd7" kindref="member">ClassIDToDebugStr</ref>(int_templates,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id,<sp/>0).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&amp;<sp/><ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_word<sp/>&gt;&gt;=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>a<sp/>summary<sp/>of<sp/>the<sp/>pruner<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1abfb31f80329481066c0ac1841443dbff" kindref="member">SummarizeResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify" kindref="compound">Classify</ref>&amp;<sp/>classify,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>int_templates,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>*<sp/>expected_num_features,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norm_multiplier,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>normalization_factors)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CP:%d<sp/>classes,<sp/>%d<sp/>features:\n&quot;</highlight><highlight class="normal">,<sp/>num_classes_,<sp/>num_features_);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_classes_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>sort_index_[num_classes_<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>class_string<sp/>=<sp/>classify.<ref refid="classtesseract_1_1_classify_1a6fc9e3752efb2fe0d74920e082a59bd7" kindref="member">ClassIDToDebugStr</ref>(int_templates,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id,<sp/>0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:Initial=%d,<sp/>E=%d,<sp/>Xht-adj=%d,<sp/>N=%d,<sp/>Rat=%.2f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_string.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count_[class_id],</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_num_features[class_id],</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(norm_multiplier<sp/>*<sp/>normalization_factors[class_id])<sp/>&gt;&gt;<sp/>8,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_[num_classes_<sp/>-<sp/>i],</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>-<sp/>100.0<sp/>*<sp/>sort_key_[num_classes_<sp/>-<sp/>i]<sp/>/</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref><sp/>*<sp/>num_features_));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>pruned,<sp/>sorted<sp/>classes<sp/>into<sp/>the<sp/>output<sp/>results<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_class_pruner_1a75b63ce092416765b95bbb109bbcd749" kindref="member">SetupResults</ref>(<ref refid="struct_c_p___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">CP_RESULT_STRUCT</ref>*<sp/>results)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>num_classes_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results[c].<ref refid="struct_c_p___r_e_s_u_l_t___s_t_r_u_c_t_1ad2b66531391bf80336b3f3ddd8ebf19f" kindref="member">Class</ref><sp/>=<sp/>sort_index_[num_classes_<sp/>-<sp/>c];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results[c].<ref refid="struct_c_p___r_e_s_u_l_t___s_t_r_u_c_t_1a472c9aa05d204cccb7682b976f122276" kindref="member">Rating</ref><sp/>=<sp/>1.0<sp/>-<sp/>sort_key_[num_classes_<sp/>-<sp/>c]<sp/>/</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="intproto_8h_1a7066036227dc10f75035f6a785d03c5d" kindref="member">CLASS_PRUNER_CLASS_MASK</ref>)<sp/>*<sp/>num_features_);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_classes_;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array[rounded_classes_]<sp/>of<sp/>initial<sp/>counts<sp/>for<sp/>each<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*class_count_;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array[rounded_classes_]<sp/>of<sp/>modified<sp/>counts<sp/>for<sp/>each<sp/>class<sp/>after<sp/>normalizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>expected<sp/>number<sp/>of<sp/>features,<sp/>disabled<sp/>classes,<sp/>fragments,<sp/>and<sp/>xheights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*norm_count_;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array[rounded_classes_<sp/>+1]<sp/>of<sp/>pruned<sp/>counts<sp/>that<sp/>gets<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sort_key_;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array[rounded_classes_<sp/>+1]<sp/>of<sp/>classes<sp/>corresponding<sp/>to<sp/>sort_key_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sort_index_;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>classes<sp/>in<sp/>this<sp/>class<sp/>pruner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_classes_;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rounded<sp/>up<sp/>number<sp/>of<sp/>classes<sp/>used<sp/>for<sp/>array<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rounded_classes_;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Threshold<sp/>count<sp/>applied<sp/>to<sp/>prune<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pruning_threshold_;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>features<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>scores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features_;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>number<sp/>of<sp/>pruned<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_classes_;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="393"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Runs<sp/>the<sp/>class<sp/>pruner<sp/>from<sp/>int_templates<sp/>on<sp/>the<sp/>given<sp/>features,<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>classes<sp/>output<sp/>in<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int_templates<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class<sp/>pruner<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>num_features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>features<sp/>in<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>normalization_factors<sp/><sp/>Array<sp/>of<sp/>fudge<sp/>factors<sp/>from<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalization<sp/>process<sp/>(by<sp/>CLASS_INDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>expected_num_features<sp/><sp/>Array<sp/>of<sp/>expected<sp/>number<sp/>of<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>each<sp/>class<sp/>(by<sp/>CLASS_INDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>results<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sorted<sp/>Array<sp/>of<sp/>pruned<sp/>classes.<sp/>Must<sp/>be<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>size<sp/>at<sp/>least<sp/>int_templates-&gt;NumClasses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1af60b52006bbea0cc1727d543c3fcd1ad" kindref="member">Classify::PruneClasses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>int_templates,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>features,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>normalization_factors,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>*<sp/>expected_num_features,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_p___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">CP_RESULT_STRUCT</ref>*<sp/>results)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>**<sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>Prunes<sp/>the<sp/>classes<sp/>using<sp/>a<sp/>modified<sp/>fast<sp/>match<sp/>table.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>sorted<sp/>list<sp/>of<sp/>classes<sp/>along<sp/>with<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>pruned<sp/>classes<sp/>in<sp/>that<sp/>list.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>**<sp/><sp/>Return:<sp/>Number<sp/>of<sp/>pruned<sp/>classes.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>**<sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>**<sp/><sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>10:24:24<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_class_pruner" kindref="compound">ClassPruner</ref><sp/>pruner(int_templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>initial<sp/>match<sp/>scores<sp/>for<sp/>all<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>pruner.ComputeScores(int_templates,<sp/>num_features,<sp/>features);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>match<sp/>scores<sp/>for<sp/>number<sp/>of<sp/>expected<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>pruner.AdjustForExpectedNumFeatures(expected_num_features,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_cp_cutoff_strength);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>disabled<sp/>classes<sp/>in<sp/>unicharset<sp/>-<sp/>only<sp/>works<sp/>without<sp/>a<sp/>shape_table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.DisableDisabledClasses(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>fragments<sp/>are<sp/>disabled,<sp/>remove<sp/>them,<sp/>also<sp/>only<sp/>without<sp/>a<sp/>shape<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disable_character_fragments<sp/>&amp;&amp;<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.DisableFragments(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>good<sp/>x-heights,<sp/>apply<sp/>the<sp/>given<sp/>normalization<sp/>factors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalization_factors<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.NormalizeForXheight(classify_class_pruner_multiplier,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalization_factors);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.NoNormalization();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>actual<sp/>pruning<sp/>and<sp/>sort<sp/>the<sp/>short-list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>pruner.PruneAndSort(classify_class_pruner_threshold,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.DebugMatch(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>int_templates,<sp/>features);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>pruner.SummarizeResult(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>int_templates,<sp/>expected_num_features,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_class_pruner_multiplier,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalization_factors);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>the<sp/>expected<sp/>output<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pruner.SetupResults(results);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">IntegerMatcher::Match</ref>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Features,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT</ref><sp/>Result,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdaptFeatureThreshold,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SeparateDebugWindows)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototypes<sp/>&amp;<sp/>tables<sp/>for<sp/>a<sp/>class</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>unormalized<sp/>blob</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>features<sp/>in<sp/>blob</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>features</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormalizationFactor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fudge<sp/>factor<sp/>from<sp/>blob</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalization<sp/>process</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class<sp/>rating<sp/>&amp;<sp/>configuration:</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0<sp/>-&gt;<sp/>1.0),<sp/>0=good,<sp/>1=bad</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debugger<sp/>flag:<sp/>1=debugger<sp/>on</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_matcher_multiplier_<sp/><sp/><sp/><sp/>Normalization<sp/>factor<sp/>multiplier</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerMatcher<sp/>returns<sp/>the<sp/>best<sp/>configuration<sp/>and<sp/>rating</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>a<sp/>single<sp/>class.<sp/><sp/>The<sp/>class<sp/>matched<sp/>against<sp/>is<sp/>determined</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>uniqueness<sp/>of<sp/>the<sp/>ClassTemplate<sp/>parameter.<sp/><sp/>The</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>rating<sp/>and<sp/>its<sp/>associated<sp/>configuration<sp/>are<sp/>returned.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>16:36:23<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>*tables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Feature;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BestMatch;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref><sp/>(Debug))</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Integer<sp/>Matcher<sp/>-------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2c13d9e0b848687d31343e91e7084814" kindref="member">Clear</ref>(ClassTemplate);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a7b679d879f68fc70f4af3d983cea4036" kindref="member">FeatureMisses</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Feature<sp/>=<sp/>0;<sp/>Feature<sp/>&lt;<sp/>NumFeatures;<sp/>Feature++)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>csum<sp/>=<sp/>UpdateTablesForFeature(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature,<sp/>&amp;Features[Feature],</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tables,<sp/>Debug);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>features<sp/>that<sp/>were<sp/>missed<sp/>over<sp/>all<sp/>configs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csum<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a7b679d879f68fc70f4af3d983cea4036" kindref="member">FeatureMisses</ref>++;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1af9768c71d08cded9ee3736a16fc53a79" kindref="member">PrintProtoMatchesOn</ref>(Debug)<sp/>||<sp/><ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugFeatureProtoError(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>*tables,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,<sp/>Debug);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1aa1c8fa966c1445530f5db86ffce6761f" kindref="member">DisplayProtoMatchesOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>DisplayProtoDebugInfo(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tables,<sp/>SeparateDebugWindows);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a7f6ae528a53c6ccea8213540d348aed5" kindref="member">DisplayFeatureMatchesOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>DisplayFeatureDebugInfo(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>NumFeatures,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Features,<sp/>AdaptFeatureThreshold,<sp/>Debug,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SeparateDebugWindows);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a79dd917414b5c32c9c181fce578fd919" kindref="member">UpdateSumOfProtoEvidences</ref>(ClassTemplate,<sp/>ConfigMask,<sp/>NumFeatures);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a464a2acbcf47898c7028173204793749" kindref="member">NormalizeSums</ref>(ClassTemplate,<sp/>NumFeatures,<sp/>NumFeatures);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>BestMatch<sp/>=<sp/>FindBestMatch(ClassTemplate,<sp/>*tables,<sp/>Result);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref>(Debug))</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugBestMatch(BestMatch,<sp/>Result);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref>(Debug))</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Match<sp/>Complete<sp/>--------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tables;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1aca707de9917b1cf3f19859aa94762ec8" kindref="member">IntegerMatcher::FindGoodProtos</ref>(</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>BlobLength,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>Features,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>*ProtoArray,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdaptProtoThreshold,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototypes<sp/>&amp;<sp/>tables<sp/>for<sp/>a<sp/>class</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND<sp/>Mask<sp/>for<sp/>proto<sp/>word</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND<sp/>Mask<sp/>for<sp/>config<sp/>word</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>unormalized<sp/>blob</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>features<sp/>in<sp/>blob</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>features</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>good<sp/>protos</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptProtoThreshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/>for<sp/>good<sp/>protos</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debugger<sp/>flag:<sp/>1=debugger<sp/>on</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_matcher_multiplier_<sp/><sp/><sp/><sp/>Normalization<sp/>factor<sp/>multiplier</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindGoodProtos<sp/>finds<sp/>all<sp/>protos<sp/>whose<sp/>normalized<sp/>proto-evidence</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exceed<sp/>classify_adapt_proto_thresh.<sp/><sp/>The<sp/>list<sp/>is<sp/>ordered<sp/>by<sp/>increasing</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>id<sp/>number.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>good<sp/>protos<sp/>in<sp/>ProtoArray.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Tue<sp/>Mar<sp/>12<sp/>17:09:26<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>*tables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumGoodProtos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>opening<sp/>heading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref><sp/>(Debug))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Find<sp/>Good<sp/>Protos<sp/>-------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2c13d9e0b848687d31343e91e7084814" kindref="member">Clear</ref>(ClassTemplate);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Feature<sp/>=<sp/>0;<sp/>Feature<sp/>&lt;<sp/>NumFeatures;<sp/>Feature++)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateTablesForFeature(</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>Feature,<sp/>&amp;(Features[Feature]),</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tables,<sp/>Debug);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1af9768c71d08cded9ee3736a16fc53a79" kindref="member">PrintProtoMatchesOn</ref><sp/>(Debug)<sp/>||<sp/><ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref><sp/>(Debug))</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugFeatureProtoError(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>*tables,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,<sp/>Debug);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Average<sp/>Proto<sp/>Evidences<sp/>&amp;<sp/>Find<sp/>Good<sp/>Protos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proto<sp/>=<sp/>0;<sp/>proto<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>;<sp/>proto++)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>Average<sp/>for<sp/>Actual<sp/>Proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[proto];<sp/>i++)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Temp<sp/>+=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[proto][i];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>Temp<sp/>/=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[proto];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>Good<sp/>Protos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(Temp<sp/>&gt;=<sp/>AdaptProtoThreshold)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ProtoArray<sp/>=<sp/>proto;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoArray++;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumGoodProtos++;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref><sp/>(Debug))</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Match<sp/>Complete<sp/>--------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tables;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumGoodProtos;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1a174bbfbb928c62b6e36c4f116e480de0" kindref="member">IntegerMatcher::FindBadFeatures</ref>(</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>BlobLength,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>Features,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>*FeatureArray,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdaptFeatureThreshold,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>**<sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototypes<sp/>&amp;<sp/>tables<sp/>for<sp/>a<sp/>class</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>ProtoMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND<sp/>Mask<sp/>for<sp/>proto<sp/>word</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>ConfigMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AND<sp/>Mask<sp/>for<sp/>config<sp/>word</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>BlobLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>unormalized<sp/>blob</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>features<sp/>in<sp/>blob</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Features<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>features</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>FeatureArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>of<sp/>bad<sp/>features</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>AdaptFeatureThreshold<sp/><sp/><sp/><sp/><sp/>Threshold<sp/>for<sp/>bad<sp/>features</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Debug<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debugger<sp/>flag:<sp/>1=debugger<sp/>on</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>**<sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>FindBadFeatures<sp/>finds<sp/>all<sp/>features<sp/>with<sp/>maximum<sp/>feature-evidence<sp/>&lt;</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>AdaptFeatureThresh.<sp/>The<sp/>list<sp/>is<sp/>ordered<sp/>by<sp/>increasing<sp/>feature<sp/>number.</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>**<sp/><sp/>Return:</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>bad<sp/>features<sp/>in<sp/>FeatureArray.</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>**<sp/><sp/>History:<sp/>Tue<sp/>Mar<sp/>12<sp/>17:09:26<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>*tables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBadFeatures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>opening<sp/>heading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref>(Debug))</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Find<sp/>Bad<sp/>Features<sp/>-------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2c13d9e0b848687d31343e91e7084814" kindref="member">Clear</ref>(ClassTemplate);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Feature<sp/>=<sp/>0;<sp/>Feature<sp/>&lt;<sp/>NumFeatures;<sp/>Feature++)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateTablesForFeature(</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>Feature,<sp/>&amp;Features[Feature],</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tables,<sp/>Debug);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>Best<sp/>Evidence<sp/>for<sp/>Current<sp/>Feature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>[i]<sp/>&gt;<sp/>best)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>[i];</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>Bad<sp/>Features<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best<sp/>&lt;<sp/>AdaptFeatureThreshold)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*FeatureArray<sp/>=<sp/>Feature;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FeatureArray++;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumBadFeatures++;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1af9768c71d08cded9ee3736a16fc53a79" kindref="member">PrintProtoMatchesOn</ref>(Debug)<sp/>||<sp/><ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref>(Debug))</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugFeatureProtoError(ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>*tables,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,<sp/>Debug);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a1cd342e35493343c79e4c24d9070a803" kindref="member">MatchDebuggingOn</ref>(Debug))</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Match<sp/>Complete<sp/>--------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tables;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumBadFeatures;</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1ac248b864f3f5effc9225c6f68d4b9e5b" kindref="member">IntegerMatcher::Init</ref>(<ref refid="classtesseract_1_1_int_param" kindref="compound">tesseract::IntParam</ref><sp/>*classify_debug_level,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>classify_integer_matcher_multiplier)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>classify_debug_level_<sp/>=<sp/>classify_debug_level;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>default<sp/>mode<sp/>of<sp/>operation<sp/>of<sp/>IntegerMatcher<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" kindref="member">SetCharNormMatch</ref>(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>table<sp/>for<sp/>evidence<sp/>to<sp/>similarity<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="intmatcher_8h_1a1a81f6021dc96b06bb0683c605b77a1b" kindref="member">SE_TABLE_SIZE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>IntSimilarity<sp/>=<sp/>i<sp/>&lt;&lt;<sp/>(27<sp/>-<sp/><ref refid="intmatcher_8h_1a3698359e38298fe5dce86d20443acd3f" kindref="member">SE_TABLE_BITS</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Similarity<sp/>=<sp/>((double)<sp/>IntSimilarity)<sp/>/<sp/>65536.0<sp/>/<sp/>65536.0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>evidence<sp/>=<sp/>Similarity<sp/>/<sp/><ref refid="class_integer_matcher_1abf4850c047b5221fedbaeef45bffa208" kindref="member">kSimilarityCenter</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>evidence<sp/>=<sp/>255.0<sp/>/<sp/>(evidence<sp/>*<sp/>evidence<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" kindref="member">kSEExponentialMultiplier</ref><sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1.0<sp/>-<sp/>exp(-<ref refid="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" kindref="member">kSEExponentialMultiplier</ref>)<sp/>*</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(<ref refid="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" kindref="member">kSEExponentialMultiplier</ref><sp/>*<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>i<sp/>/<sp/>SE_TABLE_SIZE));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>evidence<sp/>*=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(scale,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>similarity_evidence_table_[i]<sp/>=<sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>)<sp/>(evidence<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>evidence<sp/>computation<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>evidence_table_mask_<sp/>=</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>((1<sp/>&lt;&lt;<sp/><ref refid="class_integer_matcher_1a405d8797e28cafc6be50dd522d191031" kindref="member">kEvidenceTableBits</ref>)<sp/>-<sp/>1)<sp/>&lt;&lt;<sp/>(9<sp/>-<sp/><ref refid="class_integer_matcher_1a405d8797e28cafc6be50dd522d191031" kindref="member">kEvidenceTableBits</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>mult_trunc_shift_bits_<sp/>=<sp/>(14<sp/>-<sp/><ref refid="class_integer_matcher_1a95f9b8220f07f5c258880fa2be8eeb48" kindref="member">kIntEvidenceTruncBits</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>table_trunc_shift_bits_<sp/>=<sp/>(27<sp/>-<sp/><ref refid="intmatcher_8h_1a3698359e38298fe5dce86d20443acd3f" kindref="member">SE_TABLE_BITS</ref><sp/>-<sp/>(mult_trunc_shift_bits_<sp/>&lt;&lt;<sp/>1));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>evidence_mult_mask_<sp/>=<sp/>((1<sp/>&lt;&lt;<sp/><ref refid="class_integer_matcher_1a95f9b8220f07f5c258880fa2be8eeb48" kindref="member">kIntEvidenceTruncBits</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1a30a627213fe38d7ae508cf6eaa946b41" kindref="member">IntegerMatcher::SetBaseLineMatch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>local_matcher_multiplier_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" kindref="member">IntegerMatcher::SetCharNormMatch</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer_matcher_multiplier)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>local_matcher_multiplier_<sp/>=<sp/>integer_matcher_multiplier;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence_1a2c13d9e0b848687d31343e91e7084814" kindref="member">ScratchEvidence::Clear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>class_template)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>memset(<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_template-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>[0]));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>memset(<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_template-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[0]));</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence_1a471d50a958b4db76b029fb80cfe518df" kindref="member">ScratchEvidence::ClearFeatureEvidence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>class_template)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>memset(<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_template-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>[0]));</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intmatcher_8cpp_1aa8704170048a3260adca8e8f78eaeb61" kindref="member">IMDebugConfiguration</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FeatureNum,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ActualProtoNum,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>Evidence,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigWord)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>debugging<sp/>information<sp/>for<sp/>Configuations</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>14:12:28<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;F<sp/>=<sp/>%3d,<sp/>P<sp/>=<sp/>%3d,<sp/>E<sp/>=<sp/>%3d,<sp/>Configs<sp/>=<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureNum,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>ActualProtoNum,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>Evidence);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ConfigWord)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ConfigWord<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>ConfigWord<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intmatcher_8cpp_1aae66a3365e5ba8921d8bfdddaf9f55e5" kindref="member">IMDebugConfigurationSum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FeatureNum,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*FeatureEvidence,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>ConfigCount)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>debugging<sp/>information<sp/>for<sp/>Configuations</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>14:12:28<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;F=%3d,<sp/>C=&quot;</highlight><highlight class="normal">,<sp/>FeatureNum);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ConfigCount;<sp/>ConfigNum++)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;%4d&quot;</highlight><highlight class="normal">,<sp/>FeatureEvidence[ConfigNum]);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IntegerMatcher::UpdateTablesForFeature(</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FeatureNum,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Feature,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>*tables,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>**<sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototypes<sp/>&amp;<sp/>tables<sp/>for<sp/>a<sp/>class</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>FeatureNum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Current<sp/>feature<sp/>number<sp/>(for<sp/>DEBUG<sp/>only)</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Feature<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>feature<sp/>struct</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>tables<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence<sp/>tables</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Debug<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debugger<sp/>flag:<sp/>1=debugger<sp/>on</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>**<sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>the<sp/>given<sp/>feature:<sp/>prune<sp/>protos,<sp/>compute<sp/>evidence,</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>update<sp/>Feature<sp/>Evidence,<sp/>Proto<sp/>Evidence,<sp/>and<sp/>Sum<sp/>of<sp/>Feature</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence<sp/>tables.</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>**<sp/><sp/>Return:</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigWord;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ProtoWord;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ProtoNum;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ActualProtoNum;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>proto_byte;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>proto_word_offset;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>proto_offset;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>config_byte;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>config_offset;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>*ProtoPrunerPtr;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">INT_PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetIndex;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>Evidence;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>XFeatureAddress;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>YFeatureAddress;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ThetaFeatureAddress;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*UINT8Pointer;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoIndex;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>Temp;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*IntPointer;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigNum;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>M3;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>A3;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>A4;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a471d50a958b4db76b029fb80cfe518df" kindref="member">ClearFeatureEvidence</ref>(ClassTemplate);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precompute<sp/>Feature<sp/>Address<sp/>offset<sp/>for<sp/>Proto<sp/>Pruning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>XFeatureAddress<sp/>=<sp/>((Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref><sp/>&gt;&gt;<sp/>2)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>YFeatureAddress<sp/>=<sp/>(<ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref><sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>((Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref><sp/>&gt;&gt;<sp/>2)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>ThetaFeatureAddress<sp/>=<sp/>(<ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref><sp/>&lt;&lt;<sp/>2)<sp/>+<sp/>((Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>&gt;&gt;<sp/>2)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoSetIndex<sp/>=<sp/>0,<sp/>ActualProtoNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>ProtoSetIndex<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;<sp/>ProtoSetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[ProtoSetIndex];</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoPrunerPtr<sp/>=<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>*)<sp/>((*ProtoSet).ProtoPruner);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoNum<sp/>=<sp/>0;<sp/>ProtoNum<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoNum<sp/>+=<sp/>(PROTOS_PER_PROTO_SET<sp/>&gt;&gt;<sp/>1),<sp/>ActualProtoNum<sp/>+=</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>(PROTOS_PER_PROTO_SET<sp/>&gt;&gt;<sp/>1),<sp/>ProtoMask++,<sp/>ProtoPrunerPtr++)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prune<sp/>Protos<sp/>of<sp/>current<sp/>Proto<sp/>Set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>=<sp/>*(ProtoPrunerPtr<sp/>+<sp/>XFeatureAddress);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>&amp;=<sp/>*(ProtoPrunerPtr<sp/>+<sp/>YFeatureAddress);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>&amp;=<sp/>*(ProtoPrunerPtr<sp/>+<sp/>ThetaFeatureAddress);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>&amp;=<sp/>*ProtoMask;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoWord<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_byte<sp/>=<sp/>ProtoWord<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_word_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ProtoWord<sp/>!=<sp/>0<sp/>||<sp/>proto_byte<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(proto_byte<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_byte<sp/>=<sp/>ProtoWord<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWord<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_word_offset<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_offset<sp/>=<sp/>offset_table[proto_byte]<sp/>+<sp/>proto_word_offset;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto_byte<sp/>=<sp/>next_table[proto_byte];</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>&amp;(ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[ProtoNum<sp/>+<sp/>proto_offset]);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>=<sp/>Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>[0];</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3<sp/>=<sp/>(((Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a1a04b5d1566d1ec88d99da275208f064" kindref="member">A</ref><sp/>*<sp/>(Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref><sp/>-<sp/>128))<sp/>&lt;&lt;<sp/>1)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ae3a26a69bb3e3dcc7138fa036d3cb9e8" kindref="member">B</ref><sp/>*<sp/>(Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref><sp/>-<sp/>128))<sp/>+<sp/>(Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1af1c3246d7de60562deed8d58d292bb01" kindref="member">C</ref><sp/>&lt;&lt;<sp/>9));</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M3<sp/>=</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/>(Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>-<sp/>Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref>))<sp/>*<sp/><ref refid="class_integer_matcher_1a88c2bf2659e8f9b3a8fb7de3e20b4586" kindref="member">kIntThetaFudge</ref>)<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A3<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3<sp/>=<sp/>~A3;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M3<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M3<sp/>=<sp/>~M3;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3<sp/>&gt;&gt;=<sp/>mult_trunc_shift_bits_;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M3<sp/>&gt;&gt;=<sp/>mult_trunc_shift_bits_;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A3<sp/>&gt;<sp/>evidence_mult_mask_)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3<sp/>=<sp/>evidence_mult_mask_;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M3<sp/>&gt;<sp/>evidence_mult_mask_)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M3<sp/>=<sp/>evidence_mult_mask_;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A4<sp/>=<sp/>(A3<sp/>*<sp/>A3)<sp/>+<sp/>(M3<sp/>*<sp/>M3);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A4<sp/>&gt;&gt;=<sp/>table_trunc_shift_bits_;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A4<sp/>&gt;<sp/>evidence_table_mask_)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence<sp/>=<sp/>similarity_evidence_table_[A4];</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a48c73a08f2b93aea7b672d64cf2aa6b5" kindref="member">PrintFeatureMatchesOn</ref><sp/>(Debug))</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intmatcher_8cpp_1aa8704170048a3260adca8e8f78eaeb61" kindref="member">IMDebugConfiguration</ref><sp/>(FeatureNum,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>+<sp/>proto_offset,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence,<sp/>ConfigMask,<sp/>ConfigWord);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>&amp;=<sp/>*ConfigMask;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8Pointer<sp/>=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref><sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ConfigWord<sp/>!=<sp/>0<sp/>||<sp/>config_byte<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(config_byte<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_byte<sp/>=<sp/>ConfigWord<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8Pointer<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_offset<sp/>=<sp/>offset_table[config_byte];</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_byte<sp/>=<sp/>next_table[config_byte];</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>&gt;<sp/>UINT8Pointer[config_offset])</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8Pointer[config_offset]<sp/>=<sp/>Evidence;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT8Pointer<sp/>=</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(tables-&gt;<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[ActualProtoNum<sp/>+<sp/>proto_offset][0]);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoIndex<sp/>=</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum<sp/>+<sp/>proto_offset];</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoIndex<sp/>&gt;<sp/>0;<sp/>ProtoIndex--,<sp/>UINT8Pointer++)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>&gt;<sp/>*UINT8Pointer)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Temp<sp/>=<sp/>*UINT8Pointer;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*UINT8Pointer<sp/>=<sp/>Evidence;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evidence<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a48c73a08f2b93aea7b672d64cf2aa6b5" kindref="member">PrintFeatureMatchesOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intmatcher_8cpp_1aae66a3365e5ba8921d8bfdddaf9f55e5" kindref="member">IMDebugConfigurationSum</ref>(FeatureNum,<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>IntPointer<sp/>=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>UINT8Pointer<sp/>=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SumOverConfigs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum<sp/>&gt;<sp/>0;<sp/>ConfigNum--)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>evidence<sp/>=<sp/>*UINT8Pointer++;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>SumOverConfigs<sp/>+=<sp/>evidence;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>*IntPointer++<sp/>+=<sp/>evidence;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SumOverConfigs;</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="969"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntegerMatcher::DebugFeatureProtoError(</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>debugging<sp/>information<sp/>for<sp/>Configuations</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>14:12:28<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>ProtoConfigs[<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>];</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigNum;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigWord;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetIndex;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ProtoNum;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>ProtoWordNum;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ActualProtoNum;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Configuration<sp/>Mask:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;%1d&quot;</highlight><highlight class="normal">,<sp/>(((*ConfigMask)<sp/>&gt;&gt;<sp/>ConfigNum)<sp/>&amp;<sp/>1));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Feature<sp/>Error<sp/>for<sp/>Configurations:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>%5.1f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>(1.0<sp/>-</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>)<sp/>tables.<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>[ConfigNum]</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>NumFeatures<sp/>/<sp/>256.0));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref><sp/>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>Mask:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoSetIndex<sp/>=<sp/>0;<sp/>ProtoSetIndex<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>=<sp/>(ProtoSetIndex<sp/>*<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoWordNum<sp/>=<sp/>0;<sp/>ProtoWordNum<sp/>&lt;<sp/>2;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoWordNum++,<sp/>ProtoMask++)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>=<sp/>(ProtoSetIndex<sp/>*<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ProtoNum<sp/>&lt;<sp/>(PROTOS_PER_PROTO_SET<sp/>&gt;&gt;<sp/>1))</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(ActualProtoNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoNum++,<sp/>ActualProtoNum++)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%1d&quot;</highlight><highlight class="normal">,<sp/>(((*ProtoMask)<sp/>&gt;&gt;<sp/>ProtoNum)<sp/>&amp;<sp/>1));</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoConfigs[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1af9768c71d08cded9ee3736a16fc53a79" kindref="member">PrintProtoMatchesOn</ref><sp/>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>Evidence:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoSetIndex<sp/>=<sp/>0;<sp/>ProtoSetIndex<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[ProtoSetIndex];</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>=<sp/>(ProtoSetIndex<sp/>*<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ProtoNum<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ActualProtoNum<sp/>&lt;<sp/>ClassTemplate-&gt;NumProtos));</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoNum++,<sp/>ActualProtoNum++)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;P<sp/>%3d<sp/>=&quot;</highlight><highlight class="normal">,<sp/>ActualProtoNum);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>data<sp/>=<sp/>tables.<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[ActualProtoNum][j];</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>data);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>data;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>%6.4f%%\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>/<sp/>256.0<sp/>/<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum]);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>=<sp/>ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[ProtoNum].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>[0];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ConfigWord)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%5d&quot;</highlight><highlight class="normal">,<sp/>ConfigWord<sp/>&amp;<sp/>1<sp/>?<sp/>temp<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ConfigWord<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoConfigs[ConfigNum]<sp/>+=<sp/>temp;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigNum++;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a58f7baca07428ed3a374eba467ae560f" kindref="member">PrintMatchSummaryOn</ref><sp/>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>Error<sp/>for<sp/>Configurations:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%5.1f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>(1.0<sp/>-</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoConfigs[ConfigNum]<sp/>/</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[ConfigNum]<sp/>/<sp/>256.0));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1af9768c71d08cded9ee3736a16fc53a79" kindref="member">PrintProtoMatchesOn</ref><sp/>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>Sum<sp/>for<sp/>Configurations:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%4.1f&quot;</highlight><highlight class="normal">,<sp/>ProtoConfigs[ConfigNum]<sp/>/<sp/>256.0);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>Length<sp/>for<sp/>Configurations:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%4.1f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[ConfigNum]);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntegerMatcher::DisplayProtoDebugInfo(</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SeparateDebugWindows)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ProtoNum;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ActualProtoNum;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetIndex;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a142586ad15312463838c8202dd88d9b0" kindref="member">InitIntMatchWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SeparateDebugWindows)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a4879721f850252687fa5230fd661bc91" kindref="member">InitFeatureDisplayWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1ad0d97c266889ef7d0dd78885b34b89d8" kindref="member">InitProtoDisplayWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoSetIndex<sp/>=<sp/>0;<sp/>ProtoSetIndex<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoSetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[ProtoSetIndex];</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>=<sp/>ProtoSetIndex<sp/>*<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ProtoNum<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ActualProtoNum<sp/>&lt;<sp/>ClassTemplate-&gt;NumProtos));</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoNum++,<sp/>ActualProtoNum++)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>Average<sp/>for<sp/>Actual<sp/>Proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum];<sp/>i++)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>tables.<ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[ActualProtoNum][i];</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>/=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[ProtoNum]).Configs[0]<sp/>&amp;<sp/>(*ConfigMask))<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a6a0b3c9d68e99b70f1a5bbd6919ac98a" kindref="member">DisplayIntProto</ref>(ClassTemplate,<sp/>ActualProtoNum,<sp/>temp<sp/>/<sp/>255.0);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntegerMatcher::DisplayFeatureDebugInfo(</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ProtoMask,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Features,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdaptFeatureThreshold,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Debug,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SeparateDebugWindows)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>*tables<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref>();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2c13d9e0b848687d31343e91e7084814" kindref="member">Clear</ref>(ClassTemplate);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a142586ad15312463838c8202dd88d9b0" kindref="member">InitIntMatchWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SeparateDebugWindows)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a4879721f850252687fa5230fd661bc91" kindref="member">InitFeatureDisplayWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1ad0d97c266889ef7d0dd78885b34b89d8" kindref="member">InitProtoDisplayWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Feature<sp/>=<sp/>0;<sp/>Feature<sp/>&lt;<sp/>NumFeatures;<sp/>Feature++)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateTablesForFeature(</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassTemplate,<sp/>ProtoMask,<sp/>ConfigMask,<sp/>Feature,<sp/>&amp;Features[Feature],</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tables,<sp/>0);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>Best<sp/>Evidence<sp/>for<sp/>Current<sp/>Feature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>[i]<sp/>&gt;<sp/>best)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>tables-&gt;<ref refid="struct_scratch_evidence_1a2f6cd0256a14c478b7f36369fcdd2598" kindref="member">feature_evidence_</ref>[i];</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>display<sp/>for<sp/>current<sp/>feature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1ad85f8ac2ca6534309650551432d69274" kindref="member">ClipMatchEvidenceOn</ref>(Debug))<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best<sp/>&lt;<sp/>AdaptFeatureThreshold)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a7a82b76e5d96e5a5c0b714da6b8aa37a" kindref="member">DisplayIntFeature</ref>(&amp;Features[Feature],<sp/>0.0);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a7a82b76e5d96e5a5c0b714da6b8aa37a" kindref="member">DisplayIntFeature</ref>(&amp;Features[Feature],<sp/>1.0);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a7a82b76e5d96e5a5c0b714da6b8aa37a" kindref="member">DisplayIntFeature</ref>(&amp;Features[Feature],<sp/>best<sp/>/<sp/>255.0);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tables;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1181"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>sum<sp/>of<sp/>Proto<sp/>Evidences<sp/>into<sp/>Sum<sp/>Of<sp/>Feature<sp/>Evidence<sp/>Array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence_1a79dd917414b5c32c9c181fce578fd919" kindref="member">ScratchEvidence::UpdateSumOfProtoEvidences</ref>(</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,<sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ConfigMask,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*IntPointer;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigWord;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetIndex;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ProtoNum;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumProtos;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>ActualProtoNum;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>NumProtos<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoSetIndex<sp/>=<sp/>0;<sp/>ProtoSetIndex<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoSetIndex++)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[ProtoSetIndex];</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>ActualProtoNum<sp/>=<sp/>(ProtoSetIndex<sp/>*<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ProtoNum<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>)<sp/>&amp;&amp;<sp/>(ActualProtoNum<sp/>&lt;<sp/>NumProtos));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoNum++,<sp/>ActualProtoNum++)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ActualProtoNum];<sp/>i++)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/><ref refid="struct_scratch_evidence_1aa1deee6251a747be0029b4976d8189fc" kindref="member">proto_evidence_</ref>[ActualProtoNum]<sp/>[i];</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>=<sp/>ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[ProtoNum].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>[0];</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>&amp;=<sp/>*ConfigMask;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPointer<sp/>=<sp/><ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ConfigWord)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ConfigWord<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*IntPointer<sp/>+=<sp/>temp;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntPointer++;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigWord<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>Sum<sp/>of<sp/>Proto<sp/>and<sp/>Feature<sp/>Evidence<sp/>by<sp/>dividing<sp/>by<sp/>the<sp/>sum<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Feature<sp/>Lengths<sp/>and<sp/>the<sp/>Proto<sp/>Lengths<sp/>for<sp/>each<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence_1a464a2acbcf47898c7028173204793749" kindref="member">ScratchEvidence::NormalizeSums</ref>(</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>NumFeatures,<sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>used_features)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>[i]<sp/>=<sp/>(<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>[i]<sp/>&lt;&lt;<sp/>8)<sp/>/</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NumFeatures<sp/>+<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[i]);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IntegerMatcher::FindBestMatch(</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>ClassTemplate,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref><sp/>&amp;tables,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT</ref><sp/>Result)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>the<sp/>best<sp/>match<sp/>for<sp/>the<sp/>current<sp/>class<sp/>and<sp/>update<sp/>the<sp/>Result</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>configuration<sp/>and<sp/>match<sp/>rating.</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>best<sp/>normalized<sp/>sum<sp/>of<sp/>evidences</highlight></codeline>
<codeline lineno="1249"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1250"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>14:12:28<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BestMatch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Best2Match<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>best<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigNum<sp/>=<sp/>0;<sp/>ConfigNum<sp/>&lt;<sp/>ClassTemplate-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>ConfigNum++)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rating<sp/>=<sp/>tables.<ref refid="struct_scratch_evidence_1aa506641fdae19a8525d95369f7aea660" kindref="member">sum_feature_evidence_</ref>[ConfigNum];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*classify_debug_level_<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Config<sp/>%d,<sp/>rating=%d\n&quot;</highlight><highlight class="normal">,<sp/>ConfigNum,<sp/>rating);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rating<sp/>&gt;<sp/>BestMatch)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestMatch<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>=<sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Best2Match<sp/>=<sp/>BestMatch;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>=<sp/>ConfigNum;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref><sp/>=<sp/>ConfigNum;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestMatch<sp/>=<sp/>rating;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rating<sp/>&gt;<sp/>Best2Match)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>=<sp/>ConfigNum;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Best2Match<sp/>=<sp/>rating;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>Certainty<sp/>Rating<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>=<sp/>(65536.0<sp/>-<sp/>BestMatch)<sp/>/<sp/>65536.0;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BestMatch;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applies<sp/>the<sp/>CN<sp/>normalization<sp/>factor<sp/>to<sp/>the<sp/>given<sp/>rating<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>modified<sp/>rating.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_integer_matcher_1ab943619d1ec5d510c5fd9a2ba7bbb55d" kindref="member">IntegerMatcher::ApplyCNCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rating,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_length,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normalization_factor)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rating<sp/>*<sp/>blob_length<sp/>+</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>local_matcher_multiplier_<sp/>*<sp/>normalization_factor<sp/>/<sp/>256.0)<sp/>/</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>(blob_length<sp/>+<sp/>local_matcher_multiplier_);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1294"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Print<sp/>debug<sp/>information<sp/>about<sp/>the<sp/>best<sp/>match<sp/>for<sp/>the<sp/>current<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntegerMatcher::DebugBestMatch(</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BestMatch,<sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT</ref><sp/>Result)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Rating<sp/>=<sp/>%5.1f%%<sp/><sp/>Best<sp/>Config<sp/>=<sp/>%3d,<sp/>Distance<sp/>=<sp/>%5.1f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>,<sp/>Result-&gt;<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>(65536.0<sp/>-<sp/>BestMatch)<sp/>/<sp/>65536.0);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1302"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><ref refid="intmatcher_8cpp_1a11a05eae2b34aea059f9d8c0d2a94484" kindref="member">HeapSort</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ra[],<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rb[])<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>elements<sp/>to<sp/>sort</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra<sp/><sp/><sp/><sp/><sp/>Key<sp/>array<sp/>[1..n]</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rb<sp/><sp/><sp/><sp/><sp/>Index<sp/>array<sp/>[1..n]</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sort<sp/>Key<sp/>array<sp/>in<sp/>ascending<sp/>order<sp/>using<sp/>heap<sp/>sort</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm.<sp/><sp/>Also<sp/>sort<sp/>Index<sp/>array<sp/>that<sp/>is<sp/>tied<sp/>to</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>key<sp/>array.</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>10:24:24<sp/>MST<sp/>1991,<sp/>RWM,<sp/>Created.</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>rra,<sp/>rrb;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,<sp/>j,<sp/>ir;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>(n<sp/>&gt;&gt;<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>ir<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rra<sp/>=<sp/>ra[--l];</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rrb<sp/>=<sp/>rb[l];</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rra<sp/>=<sp/>ra[ir];</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rrb<sp/>=<sp/>rb[ir];</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ra[ir]<sp/>=<sp/>ra[1];</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rb[ir]<sp/>=<sp/>rb[1];</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--ir<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra[1]<sp/>=<sp/>rra;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rb[1]<sp/>=<sp/>rrb;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>l<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>ir)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>ir<sp/>&amp;&amp;<sp/>ra[j]<sp/>&lt;<sp/>ra[j<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rra<sp/>&lt;<sp/>ra[j])<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra[i]<sp/>=<sp/>ra[j];</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rb[i]<sp/>=<sp/>rb[j];</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>(i<sp/>=<sp/>j);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>ir<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>ra[i]<sp/>=<sp/>rra;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>rb[i]<sp/>=<sp/>rrb;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp"/>
  </compounddef>
</doxygen>
