<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="beam__search_8h" kind="file">
    <compoundname>beam_search.h</compoundname>
    <includes refid="search__column_8h" local="yes">search_column.h</includes>
    <includes refid="word__altlist_8h" local="yes">word_altlist.h</includes>
    <includes refid="search__object_8h" local="yes">search_object.h</includes>
    <includes refid="lang__model_8h" local="yes">lang_model.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="cube__reco__context_8h" local="yes">cube_reco_context.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includedby refid="beam__search_8cpp" local="yes">cube/beam_search.cpp</includedby>
    <includedby refid="cube__object_8h" local="yes">cube/cube_object.h</includedby>
    <incdepgraph>
      <node id="28545">
        <label>cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28546" relation="include">
        </childnode>
        <childnode refid="28550" relation="include">
        </childnode>
        <childnode refid="28561" relation="include">
        </childnode>
        <childnode refid="28562" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
        <childnode refid="28563" relation="include">
        </childnode>
        <childnode refid="28564" relation="include">
        </childnode>
        <childnode refid="28565" relation="include">
        </childnode>
      </node>
      <node id="28536">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28555">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28532">
        <label>stdlib.h</label>
      </node>
      <node id="28550">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="28515" relation="include">
        </childnode>
        <childnode refid="28551" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
        <childnode refid="28518" relation="include">
        </childnode>
      </node>
      <node id="28527">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28528" relation="include">
        </childnode>
      </node>
      <node id="28547">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="28548" relation="include">
        </childnode>
        <childnode refid="28523" relation="include">
        </childnode>
      </node>
      <node id="28554">
        <label>allheaders.h</label>
      </node>
      <node id="28546">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28523" relation="include">
        </childnode>
        <childnode refid="28547" relation="include">
        </childnode>
        <childnode refid="28549" relation="include">
        </childnode>
      </node>
      <node id="28517">
        <label>string</label>
      </node>
      <node id="28514">
        <label>search_node.h</label>
        <link refid="search__node_8h"/>
        <childnode refid="28515" relation="include">
        </childnode>
        <childnode refid="28545" relation="include">
        </childnode>
      </node>
      <node id="28539">
        <label>stddef.h</label>
      </node>
      <node id="28542">
        <label>memory.h</label>
      </node>
      <node id="28562">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="28556" relation="include">
        </childnode>
        <childnode refid="28518" relation="include">
        </childnode>
      </node>
      <node id="28518">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
      </node>
      <node id="28566">
        <label>word_altlist.h</label>
        <link refid="word__altlist_8h"/>
        <childnode refid="28552" relation="include">
        </childnode>
      </node>
      <node id="28534">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28526" relation="include">
        </childnode>
      </node>
      <node id="28564">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
      </node>
      <node id="28561">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28556" relation="include">
        </childnode>
        <childnode refid="28551" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
        <childnode refid="28562" relation="include">
        </childnode>
        <childnode refid="28550" relation="include">
        </childnode>
        <childnode refid="28518" relation="include">
        </childnode>
      </node>
      <node id="28528">
        <label>limits.h</label>
      </node>
      <node id="28556">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="28532" relation="include">
        </childnode>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28557" relation="include">
        </childnode>
        <childnode refid="28522" relation="include">
        </childnode>
      </node>
      <node id="28519">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="28520" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28521" relation="include">
        </childnode>
        <childnode refid="28522" relation="include">
        </childnode>
        <childnode refid="28524" relation="include">
        </childnode>
        <childnode refid="28540" relation="include">
        </childnode>
        <childnode refid="28544" relation="include">
        </childnode>
      </node>
      <node id="28520">
        <label>string.h</label>
      </node>
      <node id="28543">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28541" relation="include">
        </childnode>
      </node>
      <node id="28541">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28542" relation="include">
        </childnode>
        <childnode refid="28520" relation="include">
        </childnode>
      </node>
      <node id="28553">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="28523" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28554" relation="include">
        </childnode>
        <childnode refid="28555" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
        <childnode refid="28556" relation="include">
        </childnode>
        <childnode refid="28560" relation="include">
        </childnode>
      </node>
      <node id="28513">
        <label>search_column.h</label>
        <link refid="search__column_8h"/>
        <childnode refid="28514" relation="include">
        </childnode>
        <childnode refid="28515" relation="include">
        </childnode>
        <childnode refid="28545" relation="include">
        </childnode>
      </node>
      <node id="28523">
        <label>vector</label>
      </node>
      <node id="28533">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28526" relation="include">
        </childnode>
      </node>
      <node id="28512">
        <label>cube/beam_search.h</label>
        <link refid="beam_search.h"/>
        <childnode refid="28513" relation="include">
        </childnode>
        <childnode refid="28566" relation="include">
        </childnode>
        <childnode refid="28567" relation="include">
        </childnode>
        <childnode refid="28550" relation="include">
        </childnode>
        <childnode refid="28553" relation="include">
        </childnode>
        <childnode refid="28545" relation="include">
        </childnode>
        <childnode refid="28554" relation="include">
        </childnode>
      </node>
      <node id="28548">
        <label>math.h</label>
      </node>
      <node id="28515">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="28516" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
      </node>
      <node id="28530">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28531" relation="include">
        </childnode>
        <childnode refid="28537" relation="include">
        </childnode>
      </node>
      <node id="28531">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28532" relation="include">
        </childnode>
        <childnode refid="28533" relation="include">
        </childnode>
        <childnode refid="28534" relation="include">
        </childnode>
        <childnode refid="28535" relation="include">
        </childnode>
        <childnode refid="28536" relation="include">
        </childnode>
      </node>
      <node id="28538">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28539" relation="include">
        </childnode>
        <childnode refid="28526" relation="include">
        </childnode>
      </node>
      <node id="28557">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="28532" relation="include">
        </childnode>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28558" relation="include">
        </childnode>
        <childnode refid="28559" relation="include">
        </childnode>
      </node>
      <node id="28558">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="28565">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
        <childnode refid="28550" relation="include">
        </childnode>
      </node>
      <node id="28516">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28518" relation="include">
        </childnode>
      </node>
      <node id="28540">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28534" relation="include">
        </childnode>
        <childnode refid="28535" relation="include">
        </childnode>
        <childnode refid="28537" relation="include">
        </childnode>
        <childnode refid="28533" relation="include">
        </childnode>
        <childnode refid="28541" relation="include">
        </childnode>
        <childnode refid="28543" relation="include">
        </childnode>
      </node>
      <node id="28551">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="28552" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
      </node>
      <node id="28544">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="28560">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="28538" relation="include">
        </childnode>
      </node>
      <node id="28529">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28530" relation="include">
        </childnode>
      </node>
      <node id="28521">
        <label>algorithm</label>
      </node>
      <node id="28526">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28527" relation="include">
        </childnode>
      </node>
      <node id="28563">
        <label>word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28556" relation="include">
        </childnode>
        <childnode refid="28519" relation="include">
        </childnode>
      </node>
      <node id="28559">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
      </node>
      <node id="28525">
        <label>stdio.h</label>
      </node>
      <node id="28549">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
      </node>
      <node id="28522">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="28520" relation="include">
        </childnode>
        <childnode refid="28517" relation="include">
        </childnode>
        <childnode refid="28521" relation="include">
        </childnode>
        <childnode refid="28523" relation="include">
        </childnode>
      </node>
      <node id="28567">
        <label>search_object.h</label>
        <link refid="search__object_8h"/>
        <childnode refid="28551" relation="include">
        </childnode>
        <childnode refid="28556" relation="include">
        </childnode>
        <childnode refid="28545" relation="include">
        </childnode>
      </node>
      <node id="28524">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28526" relation="include">
        </childnode>
        <childnode refid="28529" relation="include">
        </childnode>
      </node>
      <node id="28537">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28520" relation="include">
        </childnode>
        <childnode refid="28527" relation="include">
        </childnode>
        <childnode refid="28538" relation="include">
        </childnode>
      </node>
      <node id="28552">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="28548" relation="include">
        </childnode>
        <childnode refid="28553" relation="include">
        </childnode>
      </node>
      <node id="28535">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28525" relation="include">
        </childnode>
        <childnode refid="28520" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28571">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="28574">
        <label>cube/cube_line_object.h</label>
        <link refid="cube__line__object_8h"/>
        <childnode refid="28575" relation="include">
        </childnode>
      </node>
      <node id="28575">
        <label>cube/cube_line_object.cpp</label>
        <link refid="cube__line__object_8cpp"/>
      </node>
      <node id="28569">
        <label>cube/beam_search.cpp</label>
        <link refid="beam__search_8cpp"/>
      </node>
      <node id="28570">
        <label>cube/cube_object.h</label>
        <link refid="cube__object_8h"/>
        <childnode refid="28571" relation="include">
        </childnode>
        <childnode refid="28572" relation="include">
        </childnode>
        <childnode refid="28573" relation="include">
        </childnode>
        <childnode refid="28574" relation="include">
        </childnode>
        <childnode refid="28576" relation="include">
        </childnode>
      </node>
      <node id="28576">
        <label>cube/cube_object.cpp</label>
        <link refid="cube__object_8cpp"/>
      </node>
      <node id="28573">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="28568">
        <label>cube/beam_search.h</label>
        <link refid="beam_search.h"/>
        <childnode refid="28569" relation="include">
        </childnode>
        <childnode refid="28570" relation="include">
        </childnode>
      </node>
      <node id="28572">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_beam_search" prot="public">tesseract::BeamSearch</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_search.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Declaration<sp/>of<sp/>Beam<sp/>Word<sp/>Search<sp/>Algorithm<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Beam<sp/>Search<sp/>class<sp/>implements<sp/>a<sp/>Beam<sp/>Search<sp/>algorithm<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>N-best<sp/>paths<sp/>through<sp/>the<sp/>lattice<sp/>of<sp/>a<sp/>search<sp/>object<sp/>using<sp/>a<sp/>language<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>search<sp/>object<sp/>is<sp/>a<sp/>segmented<sp/>bitmap<sp/>of<sp/>a<sp/>word<sp/>image.<sp/>The<sp/>language<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>state<sp/>machine<sp/>that<sp/>defines<sp/>valid<sp/>sequences<sp/>of<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>cost<sp/>of<sp/>each<sp/>path<sp/>is<sp/>the<sp/>combined<sp/>(product)<sp/>probabilities<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters<sp/>along<sp/>the<sp/>path.<sp/>The<sp/>character<sp/>probabilities<sp/>are<sp/>computed<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>character<sp/>classifier<sp/>member<sp/>of<sp/>the<sp/>RecoContext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>BeamSearch<sp/>class<sp/>itself<sp/>holds<sp/>the<sp/>state<sp/>of<sp/>the<sp/>last<sp/>search<sp/>it<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>its<sp/>&quot;Search&quot;<sp/>method.<sp/>Subsequent<sp/>class<sp/>to<sp/>the<sp/>Search<sp/>method<sp/>erase<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>states<sp/>of<sp/>previously<sp/>done<sp/>searches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BEAM_SEARCH_H</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BEAM_SEARCH_H</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="search__column_8h" kindref="compound">search_column.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="word__altlist_8h" kindref="compound">word_altlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="search__object_8h" kindref="compound">search_object.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lang__model_8h" kindref="compound">lang_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__reco__context_8h" kindref="compound">cube_reco_context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classtesseract_1_1_beam_search" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_beam_search" kindref="compound">BeamSearch</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1a990eb3dcc8f14f2a17639caf93f840c1" kindref="member">BeamSearch</ref>(<ref refid="classtesseract_1_1_cube_reco_context" kindref="compound">CubeRecoContext</ref><sp/>*cntxt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_beam_search_1a1ad5f964a4b335929d99ab5596595428" kindref="member">~BeamSearch</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Performs<sp/>a<sp/>beam<sp/>seach<sp/>in<sp/>the<sp/>specified<sp/>search<sp/>using<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>language<sp/>model;<sp/>returns<sp/>an<sp/>alternate<sp/>list<sp/>of<sp/>possible<sp/>words<sp/>as<sp/>a<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_word_alt_list" kindref="compound">WordAltList</ref><sp/>*<ref refid="classtesseract_1_1_beam_search_1adce6622c6d74ecae947f11aeac486ca0" kindref="member">Search</ref>(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj,<sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>best<sp/>node<sp/>in<sp/>the<sp/>last<sp/>column<sp/>of<sp/>last<sp/>performed<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_search_node" kindref="compound">SearchNode</ref><sp/>*<ref refid="classtesseract_1_1_beam_search_1a57eea92e9a652a61a734f357104144d6" kindref="member">BestNode</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>string<sp/>corresponding<sp/>to<sp/>the<sp/>specified<sp/>alt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*<ref refid="classtesseract_1_1_beam_search_1a627bb3008dad38d1424d8af99fbe9261" kindref="member">Alt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backtracks<sp/>from<sp/>the<sp/>specified<sp/>lattice<sp/>node<sp/>and<sp/>returns<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character-mapped<sp/>segments,<sp/>character<sp/>count,<sp/>char_32<sp/>result<sp/>string,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character<sp/>bounding<sp/>boxes<sp/>(if<sp/>char_boxes<sp/>is<sp/>not<sp/>NULL).<sp/>If<sp/>the<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>be<sp/>constructed,<sp/>returns<sp/>NULL,<sp/>and<sp/>all<sp/>result<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>**<ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BackTrack</ref>(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_index,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*char_cnt,<sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32,<sp/>Boxa<sp/>**char_boxes)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>except<sp/>it<sp/>takes<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>search<sp/>node<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>node<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>**<ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BackTrack</ref>(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj,<sp/><ref refid="classtesseract_1_1_search_node" kindref="compound">SearchNode</ref><sp/>*node,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*char_cnt,<sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32,<sp/>Boxa<sp/>**char_boxes)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>cost<sp/>of<sp/>a<sp/>specified<sp/>string<sp/>of<sp/>a<sp/>lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>that<sp/>ends<sp/>at<sp/>the<sp/>specified<sp/>lattice<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1a8db9d114117e35964e67e2dedfaae253" kindref="member">SizeCost</ref>(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj,<sp/><ref refid="classtesseract_1_1_search_node" kindref="compound">SearchNode</ref><sp/>*node,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>word<sp/>unigram<sp/>cost<sp/>of<sp/>the<sp/>given<sp/>string,<sp/>possibly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stripping<sp/>out<sp/>a<sp/>single<sp/>trailing<sp/>punctuation<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1a2d635a7c06465225c22392d5a2f82ffc" kindref="member">WordUnigramCost</ref>(<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*str32,<sp/><ref refid="classtesseract_1_1_word_unigrams" kindref="compound">WordUnigrams</ref>*<sp/>word_unigrams)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Supplementary<sp/>functions<sp/>needed<sp/>for<sp/>visualization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>column<sp/>count<sp/>of<sp/>the<sp/>lattice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classtesseract_1_1_beam_search_1acb55bf11ed4d685593c189f0ffac8f79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1acb55bf11ed4d685593c189f0ffac8f79" kindref="member">ColCnt</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col_cnt_;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>lattice<sp/>column<sp/>corresponding<sp/>to<sp/>the<sp/>specified<sp/>column<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_search_column" kindref="compound">SearchColumn</ref><sp/>*<ref refid="classtesseract_1_1_beam_search_1aaca2dc4ddb2857ffbbb84e69f8a0f789" kindref="member">Column</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_idx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>index<sp/>of<sp/>the<sp/>best<sp/>node<sp/>in<sp/>the<sp/>last<sp/>column<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best-cost<sp/>path<sp/>before<sp/>the<sp/>alternates<sp/>list<sp/>is<sp/>sorted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classtesseract_1_1_beam_search_1a02c434058eeab3e63d825af28ea57dc4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1a02c434058eeab3e63d825af28ea57dc4" kindref="member">BestPresortedNodeIndex</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_presorted_node_idx_;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>reasonable<sp/>segmentation<sp/>point<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxSegPointCnt<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recognition<sp/>context<sp/>object;<sp/>the<sp/>context<sp/>holds<sp/>the<sp/>character<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>tuning<sp/>parameters<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_reco_context" kindref="compound">CubeRecoContext</ref><sp/>*cntxt_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>of<sp/>segmentation<sp/>pts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_pt_cnt_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lattice<sp/>column<sp/>count;<sp/>currently<sp/>redundant<sp/>with<sp/>respect<sp/>to<sp/>seg_pt_cnt_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>that<sp/>might<sp/>change<sp/>in<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_cnt_;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>lattice<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_search_column" kindref="compound">SearchColumn</ref><sp/>**col_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>in<sp/>word<sp/>or<sp/>phrase<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_mode_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Node<sp/>index<sp/>of<sp/>best-cost<sp/>node,<sp/>before<sp/>alternates<sp/>are<sp/>merged<sp/>and<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_presorted_node_idx_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>beam<sp/>search<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cleanup();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>Word<sp/>alternate<sp/>list<sp/>from<sp/>the<sp/>results<sp/>in<sp/>the<sp/>lattice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>computes<sp/>a<sp/>cost<sp/>for<sp/>each<sp/>node<sp/>in<sp/>the<sp/>final<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>lattice,<sp/>which<sp/>is<sp/>a<sp/>weighted<sp/>average<sp/>of<sp/>several<sp/>costs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>cost,<sp/>character<sp/>bigram<sp/>cost,<sp/>word<sp/>unigram<sp/>cost,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recognition<sp/>cost<sp/>from<sp/>the<sp/>beam<sp/>search.<sp/>The<sp/>weights<sp/>are<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CubeTuningParams,<sp/>which<sp/>are<sp/>learned<sp/>together<sp/>with<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>classifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_word_alt_list" kindref="compound">WordAltList</ref><sp/>*CreateWordAltList(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>set<sp/>of<sp/>children<sp/>nodes<sp/>emerging<sp/>from<sp/>a<sp/>parent<sp/>node<sp/>based<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>character<sp/>alternate<sp/>list<sp/>and<sp/>the<sp/>language<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateChildren(<ref refid="classtesseract_1_1_search_column" kindref="compound">SearchColumn</ref><sp/>*out_col,<sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_search_node" kindref="compound">SearchNode</ref><sp/>*parent_node,<sp/><ref refid="classtesseract_1_1_lang_mod_edge" kindref="compound">LangModEdge</ref><sp/>*lm_parent_edge,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_char_alt_list" kindref="compound">CharAltList</ref><sp/>*char_alt_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra_cost);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backtracks<sp/>from<sp/>the<sp/>given<sp/>lattice<sp/>node<sp/>and<sp/>returns<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>mapped<sp/>segments,<sp/>character<sp/>count,<sp/>and<sp/>character<sp/>bounding<sp/>boxes<sp/>(if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>char_boxes<sp/>is<sp/>not<sp/>NULL).<sp/>If<sp/>the<sp/>segments<sp/>cannot<sp/>be<sp/>constructed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>NULL,<sp/>and<sp/>all<sp/>result<sp/>arguments<sp/>will<sp/>be<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>**SplitByNode(<ref refid="classtesseract_1_1_search_object" kindref="compound">SearchObject</ref><sp/>*srch_obj,<sp/><ref refid="classtesseract_1_1_search_node" kindref="compound">SearchNode</ref><sp/>*srch_node,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>char_cnt,<sp/>Boxa<sp/>**char_boxes)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>BEAM_SEARCH_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/beam_search.h"/>
  </compounddef>
</doxygen>
