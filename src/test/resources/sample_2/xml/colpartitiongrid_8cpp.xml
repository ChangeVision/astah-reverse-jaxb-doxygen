<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="colpartitiongrid_8cpp" kind="file">
    <compoundname>colpartitiongrid.cpp</compoundname>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="imagefind_8h" local="yes">imagefind.h</includes>
    <incdepgraph>
      <node id="37380">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="37347" relation="include">
        </childnode>
        <childnode refid="37381" relation="include">
        </childnode>
        <childnode refid="37382" relation="include">
        </childnode>
        <childnode refid="37387" relation="include">
        </childnode>
        <childnode refid="37394" relation="include">
        </childnode>
      </node>
      <node id="37397">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="37398" relation="include">
        </childnode>
        <childnode refid="37347" relation="include">
        </childnode>
        <childnode refid="37364" relation="include">
        </childnode>
        <childnode refid="37381" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37346" relation="include">
        </childnode>
      </node>
      <node id="37369">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="37346">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="37347" relation="include">
        </childnode>
        <childnode refid="37360" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
        <childnode refid="37378" relation="include">
        </childnode>
      </node>
      <node id="37394">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37349" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
      </node>
      <node id="37353">
        <label>stdlib.h</label>
      </node>
      <node id="37350">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="37351" relation="include">
        </childnode>
      </node>
      <node id="37377">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="37357" relation="include">
        </childnode>
      </node>
      <node id="37378">
        <label>allheaders.h</label>
      </node>
      <node id="37370">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
      </node>
      <node id="37352">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="37353" relation="include">
        </childnode>
        <childnode refid="37354" relation="include">
        </childnode>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37355" relation="include">
        </childnode>
        <childnode refid="37357" relation="include">
        </childnode>
        <childnode refid="37358" relation="include">
        </childnode>
      </node>
      <node id="37347">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37349" relation="include">
        </childnode>
        <childnode refid="37352" relation="include">
        </childnode>
        <childnode refid="37359" relation="include">
        </childnode>
      </node>
      <node id="37383">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="37360" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
      </node>
      <node id="37356">
        <label>stddef.h</label>
      </node>
      <node id="37357">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="37349" relation="include">
        </childnode>
      </node>
      <node id="37392">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="37390" relation="include">
        </childnode>
        <childnode refid="37364" relation="include">
        </childnode>
        <childnode refid="37362" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
        <childnode refid="37393" relation="include">
        </childnode>
      </node>
      <node id="37351">
        <label>limits.h</label>
      </node>
      <node id="37396">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="37346" relation="include">
        </childnode>
        <childnode refid="37380" relation="include">
        </childnode>
        <childnode refid="37376" relation="include">
        </childnode>
        <childnode refid="37397" relation="include">
        </childnode>
      </node>
      <node id="37365">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="37363" relation="include">
        </childnode>
      </node>
      <node id="37366">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="37362" relation="include">
        </childnode>
      </node>
      <node id="37381">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37349" relation="include">
        </childnode>
        <childnode refid="37352" relation="include">
        </childnode>
        <childnode refid="37359" relation="include">
        </childnode>
      </node>
      <node id="37354">
        <label>string.h</label>
      </node>
      <node id="37368">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="37363" relation="include">
        </childnode>
        <childnode refid="37362" relation="include">
        </childnode>
        <childnode refid="37369" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
        <childnode refid="37371" relation="include">
        </childnode>
      </node>
      <node id="37367">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="37349" relation="include">
        </childnode>
      </node>
      <node id="37399">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="37374">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="37349" relation="include">
        </childnode>
      </node>
      <node id="37345">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="37346" relation="include">
        </childnode>
        <childnode refid="37379" relation="include">
        </childnode>
        <childnode refid="37400" relation="include">
        </childnode>
      </node>
      <node id="37360">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="37361" relation="include">
        </childnode>
        <childnode refid="37366" relation="include">
        </childnode>
        <childnode refid="37367" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37377" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
      </node>
      <node id="37382">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="37372" relation="include">
        </childnode>
        <childnode refid="37367" relation="include">
        </childnode>
        <childnode refid="37381" relation="include">
        </childnode>
        <childnode refid="37376" relation="include">
        </childnode>
        <childnode refid="37377" relation="include">
        </childnode>
        <childnode refid="37383" relation="include">
        </childnode>
        <childnode refid="37384" relation="include">
        </childnode>
      </node>
      <node id="37384">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37385" relation="include">
        </childnode>
        <childnode refid="37382" relation="include">
        </childnode>
      </node>
      <node id="37358">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="37357" relation="include">
        </childnode>
      </node>
      <node id="37395">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="37396" relation="include">
        </childnode>
        <childnode refid="37374" relation="include">
        </childnode>
        <childnode refid="37397" relation="include">
        </childnode>
        <childnode refid="37399" relation="include">
        </childnode>
      </node>
      <node id="37363">
        <label>math.h</label>
      </node>
      <node id="37361">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="37362" relation="include">
        </childnode>
        <childnode refid="37366" relation="include">
        </childnode>
      </node>
      <node id="37344">
        <label>textord/colpartitiongrid.cpp</label>
        <link refid="colpartitiongrid.cpp"/>
        <childnode refid="37345" relation="include">
        </childnode>
        <childnode refid="37400" relation="include">
        </childnode>
        <childnode refid="37401" relation="include">
        </childnode>
      </node>
      <node id="37359">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="37357" relation="include">
        </childnode>
      </node>
      <node id="37386">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="37362" relation="include">
        </childnode>
      </node>
      <node id="37390">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="37387">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="37388" relation="include">
        </childnode>
        <childnode refid="37389" relation="include">
        </childnode>
        <childnode refid="37384" relation="include">
        </childnode>
        <childnode refid="37391" relation="include">
        </childnode>
      </node>
      <node id="37372">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37373" relation="include">
        </childnode>
        <childnode refid="37376" relation="include">
        </childnode>
      </node>
      <node id="37373">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37353" relation="include">
        </childnode>
        <childnode refid="37374" relation="include">
        </childnode>
        <childnode refid="37357" relation="include">
        </childnode>
        <childnode refid="37375" relation="include">
        </childnode>
        <childnode refid="37369" relation="include">
        </childnode>
      </node>
      <node id="37355">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="37356" relation="include">
        </childnode>
        <childnode refid="37349" relation="include">
        </childnode>
      </node>
      <node id="37398">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="37346" relation="include">
        </childnode>
        <childnode refid="37380" relation="include">
        </childnode>
      </node>
      <node id="37389">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="37390" relation="include">
        </childnode>
        <childnode refid="37364" relation="include">
        </childnode>
        <childnode refid="37376" relation="include">
        </childnode>
      </node>
      <node id="37364">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37349" relation="include">
        </childnode>
        <childnode refid="37352" relation="include">
        </childnode>
        <childnode refid="37359" relation="include">
        </childnode>
      </node>
      <node id="37379">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="37346" relation="include">
        </childnode>
        <childnode refid="37380" relation="include">
        </childnode>
        <childnode refid="37369" relation="include">
        </childnode>
        <childnode refid="37387" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37370" relation="include">
        </childnode>
        <childnode refid="37395" relation="include">
        </childnode>
        <childnode refid="37397" relation="include">
        </childnode>
      </node>
      <node id="37401">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="37349" relation="include">
        </childnode>
      </node>
      <node id="37362">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37363" relation="include">
        </childnode>
        <childnode refid="37364" relation="include">
        </childnode>
        <childnode refid="37365" relation="include">
        </childnode>
      </node>
      <node id="37388">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="37355" relation="include">
        </childnode>
      </node>
      <node id="37371">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="37372" relation="include">
        </childnode>
      </node>
      <node id="37393">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="37349">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="37350" relation="include">
        </childnode>
      </node>
      <node id="37391">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="37347" relation="include">
        </childnode>
        <childnode refid="37388" relation="include">
        </childnode>
        <childnode refid="37376" relation="include">
        </childnode>
        <childnode refid="37392" relation="include">
        </childnode>
        <childnode refid="37393" relation="include">
        </childnode>
      </node>
      <node id="37400">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="37379" relation="include">
        </childnode>
        <childnode refid="37373" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
        <childnode refid="37397" relation="include">
        </childnode>
      </node>
      <node id="37348">
        <label>stdio.h</label>
      </node>
      <node id="37376">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37354" relation="include">
        </childnode>
        <childnode refid="37350" relation="include">
        </childnode>
        <childnode refid="37355" relation="include">
        </childnode>
      </node>
      <node id="37375">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="37348" relation="include">
        </childnode>
        <childnode refid="37354" relation="include">
        </childnode>
      </node>
      <node id="37385">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="37386" relation="include">
        </childnode>
        <childnode refid="37352" relation="include">
        </childnode>
        <childnode refid="37355" relation="include">
        </childnode>
        <childnode refid="37368" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colpartitionrid.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>collecting<sp/>code<sp/>that<sp/>acts<sp/>on<sp/>a<sp/>BBGrid<sp/>of<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Oct<sp/>05<sp/>08:42:01<sp/>PDT<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2009,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagefind_8h" kindref="compound">imagefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_color_fit,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>stroke<sp/>widths&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>pad<sp/>factor<sp/>used<sp/>to<sp/>search<sp/>the<sp/>neighbourhood<sp/>of<sp/>a<sp/>partition<sp/>to<sp/>smooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partition<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aae8f2f2cc0e41a6cc4a6d1bf322f4b2a" kindref="member">kMaxPadFactor</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>multiple<sp/>of<sp/>size<sp/>(min(height,<sp/>width))<sp/>for<sp/>the<sp/>distance<sp/>of<sp/>the<sp/>nearest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neighbour<sp/>for<sp/>the<sp/>change<sp/>of<sp/>type<sp/>to<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae4ffbfaa120044bd1f22b6f95ead9dce" kindref="member">kMaxNeighbourDistFactor</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>RMS<sp/>color<sp/>noise<sp/>to<sp/>compare<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abf95c90bc0630ea9218c2eb0d70472dd" kindref="member">kMaxRMSColorNoise</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>blobs<sp/>in<sp/>text<sp/>to<sp/>make<sp/>a<sp/>strong<sp/>text<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a32f2825c55e218c93202c88eb0a9e9cd" kindref="member">kHorzStrongTextlineCount</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>a<sp/>credible<sp/>figure<sp/>caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a0c0112882a0fd4d5db231341b276748f" kindref="member">kMaxCaptionLines</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>ratio<sp/>between<sp/>biggest<sp/>and<sp/>smallest<sp/>gap<sp/>to<sp/>bound<sp/>a<sp/>caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aede50c5fa6fdad612c08e73757501178" kindref="member">kMinCaptionGapRatio</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>ratio<sp/>between<sp/>biggest<sp/>gap<sp/>and<sp/>mean<sp/>line<sp/>height<sp/>to<sp/>bound<sp/>a<sp/>caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3edae94975001932766025af12aa9615" kindref="member">kMinCaptionGapHeightRatio</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>fraction<sp/>of<sp/>ColPartition<sp/>height<sp/>to<sp/>be<sp/>overlapping<sp/>for<sp/>margin<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1acea5cf3f3fc7999a57079cc1bb4104f7" kindref="member">kMarginOverlapFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Size<sp/>ratio<sp/>required<sp/>to<sp/>consider<sp/>an<sp/>unmerged<sp/>overlapping<sp/>partition<sp/>to<sp/>be<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a45530b4b5280b8d2f185a531cab4169b" kindref="member">kBigPartSizeRatio</ref><sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allowed<sp/>proportional<sp/>change<sp/>in<sp/>stroke<sp/>width<sp/>to<sp/>match<sp/>for<sp/>smoothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abc28700fa5d19f82a78db318450d7786" kindref="member">kStrokeWidthFractionTolerance</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allowed<sp/>constant<sp/>change<sp/>in<sp/>stroke<sp/>width<sp/>to<sp/>match<sp/>for<sp/>smoothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a7dc74940f73222c81918e8701c301516" kindref="member">kStrokeWidthConstantTolerance</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>gridsize<sp/>to<sp/>allow<sp/>arbitrary<sp/>overlap<sp/>between<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1fa28613a5db6fb9d0c7fdef0f151872" kindref="member">kTinyEnoughTextlineOverlapFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>vertical<sp/>distance<sp/>of<sp/>neighbouring<sp/>ColPartition<sp/>as<sp/>a<sp/>multiple<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partition<sp/>height<sp/>for<sp/>it<sp/>to<sp/>be<sp/>a<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>fix<sp/>the<sp/>problem<sp/>that<sp/>causes<sp/>a<sp/>larger<sp/>number<sp/>to<sp/>not<sp/>work<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>needs<sp/>to<sp/>be<sp/>larger<sp/>as<sp/>sparse<sp/>text<sp/>blocks<sp/>in<sp/>a<sp/>page<sp/>that<sp/>gets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>marked<sp/>as<sp/>single<sp/>column<sp/>will<sp/>not<sp/>find<sp/>adjacent<sp/>lines<sp/>as<sp/>partners,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>merge<sp/>horizontally<sp/>distant,<sp/>but<sp/>aligned<sp/>lines.<sp/>See<sp/>rep.4B3<sp/>p5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>needs<sp/>to<sp/>be<sp/>small<sp/>because<sp/>double-spaced<sp/>legal<sp/>docs<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>single<sp/>column,<sp/>but<sp/>justified<sp/>courier<sp/>have<sp/>widely<sp/>spaced<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>need<sp/>to<sp/>get<sp/>merged<sp/>before<sp/>they<sp/>partner-up<sp/>with<sp/>the<sp/>lines<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>below.<sp/>See<sp/>legal.3B5<sp/>p13/17.<sp/>Neither<sp/>of<sp/>these<sp/>should<sp/>depend<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>value<sp/>of<sp/>kMaxPartitionSpacing<sp/>to<sp/>be<sp/>successful,<sp/>and<sp/>ColPartition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>merging<sp/>needs<sp/>attention<sp/>to<sp/>fix<sp/>this<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a03ac774c4cfbfe5f2b611e59b1e3f74b" kindref="member">kMaxPartitionSpacing</ref><sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Margin<sp/>by<sp/>which<sp/>text<sp/>has<sp/>to<sp/>beat<sp/>image<sp/>or<sp/>vice-versa<sp/>to<sp/>make<sp/>a<sp/>firm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decision<sp/>in<sp/>GridSmoothNeighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="classtesseract_1_1_col_partition_grid_1af3cb4db916111aede6f4afde7fed8dca" kindref="member">ColPartitionGrid::ColPartitionGrid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="classtesseract_1_1_col_partition_grid_1af3cb4db916111aede6f4afde7fed8dca" kindref="member">ColPartitionGrid::ColPartitionGrid</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>:<sp/>BBGrid&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;(gridsize,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bleft,<sp/>tright)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">ColPartitionGrid::~ColPartitionGrid()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handles<sp/>a<sp/>click<sp/>event<sp/>in<sp/>a<sp/>display<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::HandleClick(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>BBGrid&lt;ColPartition,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;::HandleClick(x,<sp/>y);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>radial<sp/>search<sp/>for<sp/>partitions<sp/>that<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>radsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>radsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>radsearch.StartRadSearch(x,<sp/>y,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>click(x,<sp/>y);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>radsearch.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;bounding_box();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbox.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(click))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Block<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;Print();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>that<sp/>look<sp/>like<sp/>they<sp/>belong<sp/>in<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>partitions<sp/>in<sp/>the<sp/>grid,<sp/>calls<sp/>the<sp/>box_cb<sp/>permanent<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>compute<sp/>the<sp/>search<sp/>box,<sp/>seaches<sp/>the<sp/>box,<sp/>and<sp/>if<sp/>a<sp/>candidate<sp/>is<sp/>found,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calls<sp/>the<sp/>confirm_cb<sp/>to<sp/>check<sp/>any<sp/>more<sp/>rules.<sp/>If<sp/>the<sp/>confirm_cb<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true,<sp/>then<sp/>the<sp/>partitions<sp/>are<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>callbacks<sp/>are<sp/>deleted<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::Merges(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, ColPartition*, TBOX*&gt;</ref>*<sp/>box_cb,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2</ref>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*&gt;*<sp/>confirm_cb)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MergePart(box_cb,<sp/>confirm_cb,<sp/>part))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>box_cb;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>confirm_cb;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>given<sp/>partition,<sp/>calls<sp/>the<sp/>box_cb<sp/>permanent<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>compute<sp/>the<sp/>search<sp/>box,<sp/>searches<sp/>the<sp/>box,<sp/>and<sp/>if<sp/>a<sp/>candidate<sp/>is<sp/>found,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calls<sp/>the<sp/>confirm_cb<sp/>to<sp/>check<sp/>any<sp/>more<sp/>rules.<sp/>If<sp/>the<sp/>confirm_cb<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true,<sp/>then<sp/>the<sp/>partitions<sp/>are<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>partition<sp/>is<sp/>consumed<sp/>by<sp/>one<sp/>or<sp/>more<sp/>merges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartitionGrid::MergePart(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, ColPartition*, TBOX*&gt;</ref>*<sp/>box_cb,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2</ref>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*&gt;*<sp/>confirm_cb,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsUnMergeableType())</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeatedly<sp/>merge<sp/>part<sp/>while<sp/>we<sp/>find<sp/>a<sp/>best<sp/>merge<sp/>candidate<sp/>that<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>merge_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merge<sp/>candidate:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>bounded<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!box_cb-&gt;<ref refid="class_tess_result_callback2_1a61bd799697bce338fc064326a7b764e3" kindref="member">Run</ref>(part,<sp/>&amp;box))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>list<sp/>of<sp/>merge<sp/>candidates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_CLIST<sp/>merge_candidates;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>FindMergeCandidates(part,<sp/>box,<sp/>debug,<sp/>&amp;merge_candidates);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>best<sp/>merge<sp/>candidate<sp/>based<sp/>on<sp/>minimal<sp/>overlap<sp/>increase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap_increase;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbour<sp/>=<sp/>BestMergeCandidate(part,<sp/>&amp;merge_candidates,<sp/>debug,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confirm_cb,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;overlap_increase);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>overlap_increase<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging:hoverlap=%d,<sp/>voverlap=%d,<sp/>OLI=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;HCoreOverlap(*neighbour),<sp/>part-&gt;VCoreOverlap(*neighbour),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlap_increase);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Looks<sp/>like<sp/>a<sp/>good<sp/>candidate<sp/>so<sp/>merge<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(neighbour);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>modify<sp/>the<sp/>box<sp/>of<sp/>part,<sp/>so<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>grid,<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>and<sp/>then<sp/>re-insert<sp/>it<sp/>into<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(part);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Absorb(neighbour,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merge_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Overlapped<sp/>when<sp/>merged<sp/>with<sp/>increase<sp/>%d:<sp/>&quot;</highlight><highlight class="normal">,<sp/>overlap_increase);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>candidate<sp/>neighbour<sp/>returned\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(merge_done);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_done;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>part<sp/>and<sp/>merge<sp/>candidate<sp/>might<sp/>believably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>part<sp/>of<sp/>a<sp/>single<sp/>text<sp/>line<sp/>according<sp/>to<sp/>the<sp/>default<sp/>rules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>general<sp/>we<sp/>only<sp/>want<sp/>to<sp/>merge<sp/>partitions<sp/>that<sp/>look<sp/>like<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>on<sp/>the<sp/>same<sp/>text<sp/>line,<sp/>ie<sp/>their<sp/>median<sp/>limits<sp/>overlap,<sp/>but<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>exceptions<sp/>for<sp/>diacritics<sp/>and<sp/>stray<sp/>punctuation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OKMergeCandidate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>candidate,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate<sp/>==<sp/>part)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;TypesMatch(*candidate)<sp/>||<sp/>candidate-&gt;IsUnMergeableType())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>mix<sp/>inappropriate<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>c_box<sp/>=<sp/>candidate-&gt;bounding_box();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Examining<sp/>merge<sp/>candidate:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>c_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Candidates<sp/>must<sp/>be<sp/>within<sp/>a<sp/>reasonable<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate-&gt;IsVerticalType()<sp/>||<sp/>part-&gt;IsVerticalType())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_dist<sp/>=<sp/>-part-&gt;HCoreOverlap(*candidate);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_dist<sp/>&gt;=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>c_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>far<sp/>away:<sp/>h_dist<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>h_dist);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coarse<sp/>filter<sp/>by<sp/>vertical<sp/>distance<sp/>between<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_dist<sp/>=<sp/>-part-&gt;VCoreOverlap(*candidate);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_dist<sp/>&gt;=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>c_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>far<sp/>away:<sp/>v_dist<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>v_dist);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Candidates<sp/>must<sp/>either<sp/>overlap<sp/>in<sp/>median<sp/>y,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>part<sp/>or<sp/>candidate<sp/>must<sp/>be<sp/>an<sp/>acceptable<sp/>diacritic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;VSignificantCoreOverlap(*candidate)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!part-&gt;OKDiacriticMerge(*candidate,<sp/>debug)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!candidate-&gt;OKDiacriticMerge(*part,<sp/>debug))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Candidate<sp/>fails<sp/>overlap<sp/>and<sp/>diacritic<sp/>tests!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>compute<sp/>the<sp/>increase<sp/>in<sp/>overlap<sp/>of<sp/>the<sp/>parts<sp/>list<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Colpartitions<sp/>with<sp/>the<sp/>combination<sp/>of<sp/>merge1<sp/>and<sp/>merge2,<sp/>compared<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>overlap<sp/>with<sp/>them<sp/>uncombined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>overlap<sp/>is<sp/>not<sp/>counted<sp/>if<sp/>passes<sp/>the<sp/>OKMergeOverlap<sp/>test<sp/>with<sp/>ok_overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>pixel<sp/>overlap<sp/>limit.<sp/>merge1<sp/>and<sp/>merge2<sp/>must<sp/>both<sp/>be<sp/>non-NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IncreaseInOverlap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>merge1,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>merge2,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_overlap,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(merge1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>merge2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_area<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(parts);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>merged_box(merge1-&gt;bounding_box());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>merged_box<sp/>+=<sp/>merge2-&gt;bounding_box();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>merge1<sp/>||<sp/>part<sp/>==<sp/>merge2)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>overlap<sp/>of<sp/>the<sp/>merged<sp/>box<sp/>with<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap_area<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(merged_box).<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_area<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!part-&gt;OKMergeOverlap(*merge1,<sp/>*merge2,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_overlap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_area<sp/>+=<sp/>overlap_area;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subtract<sp/>the<sp/>overlap<sp/>of<sp/>merge1<sp/>and<sp/>merge2<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlap_area<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(merge1-&gt;bounding_box()).area();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_area<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_area<sp/>-=<sp/>overlap_area;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>intersection_box<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(merge2-&gt;bounding_box());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlap_area<sp/>=<sp/>intersection_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_area<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_area<sp/>-=<sp/>overlap_area;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>back<sp/>the<sp/>3-way<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersection_box<sp/>&amp;=<sp/>merge1-&gt;bounding_box();<sp/><sp/></highlight><highlight class="comment">//<sp/>In-place<sp/>intersection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlap_area<sp/>=<sp/>intersection_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_area<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_area<sp/>+=<sp/>overlap_area;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_area;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>test<sp/>that<sp/>each<sp/>partition<sp/>in<sp/>candidates<sp/>is<sp/>either<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>good<sp/>diacritic<sp/>merge<sp/>with<sp/>part<sp/>or<sp/>an<sp/>OK<sp/>merge<sp/>candidate<sp/>with<sp/>all<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>candidates<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASCII<sp/>Art<sp/>Scenario:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>sometimes<sp/>get<sp/>text<sp/>such<sp/>as<sp/>&quot;join-this&quot;<sp/>where<sp/>the<sp/>-<sp/>is<sp/>actually<sp/>a<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dash<sp/>culled<sp/>from<sp/>a<sp/>standard<sp/>set<sp/>of<sp/>extra<sp/>characters<sp/>that<sp/>don&apos;t<sp/>match<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font<sp/>of<sp/>the<sp/>text.<sp/>This<sp/>makes<sp/>its<sp/>strokewidth<sp/>not<sp/>match<sp/>and<sp/>forms<sp/>a<sp/>broken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>of<sp/>3<sp/>partitions<sp/>for<sp/>&quot;join&quot;,<sp/>&quot;-&quot;<sp/>and<sp/>&quot;this&quot;<sp/>and<sp/>the<sp/>dash<sp/>may<sp/>slightly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlap<sp/>BOTH<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------<sp/><sp/>-------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/>====<sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------<sp/><sp/>-------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>standard<sp/>merge<sp/>rule:<sp/>&quot;you<sp/>can<sp/>merge<sp/>2<sp/>partitions<sp/>as<sp/>long<sp/>as<sp/>there<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>increase<sp/>in<sp/>overlap<sp/>elsewhere&quot;<sp/>fails<sp/>miserably<sp/>here.<sp/>Merge<sp/>any<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>partitions<sp/>and<sp/>the<sp/>combined<sp/>box<sp/>overlaps<sp/>more<sp/>with<sp/>the<sp/>third<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before.<sp/>To<sp/>allow<sp/>the<sp/>merge,<sp/>we<sp/>need<sp/>to<sp/>consider<sp/>whether<sp/>it<sp/>is<sp/>safe<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>merge<sp/>everything,<sp/>without<sp/>merging<sp/>separate<sp/>text<sp/>lines.<sp/>For<sp/>that<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>everything<sp/>to<sp/>be<sp/>an<sp/>OKMergeCandidate<sp/>(which<sp/>is<sp/>supposed<sp/>to<sp/>prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>separate<sp/>text<sp/>lines<sp/>merging),<sp/>but<sp/>this<sp/>is<sp/>hard<sp/>for<sp/>diacritics<sp/>to<sp/>satisfy,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>an<sp/>alternative<sp/>to<sp/>being<sp/>OKMergeCandidate<sp/>with<sp/>everything<sp/>is<sp/>to<sp/>be<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OKDiacriticMerge<sp/>with<sp/>part<sp/>as<sp/>the<sp/>base<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TestCompatibleCandidates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>candidates)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(candidates);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>candidate<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!candidate-&gt;OKDiacriticMerge(part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>it2(it);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it2.mark_cycle_pt();<sp/>!it2.cycled_list();<sp/>it2.forward())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>candidate2<sp/>=<sp/>it2.data();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate2<sp/>!=<sp/>candidate<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!OKMergeCandidate(candidate,<sp/>candidate2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NC<sp/>overlap<sp/>failed:Candidate:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate2-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;fails<sp/>to<sp/>be<sp/>a<sp/>good<sp/>merge<sp/>with:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>all<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>that<sp/>overlap<sp/>with<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box<sp/>and<sp/>returns<sp/>them<sp/>SortByBoxLeft(ed)<sp/>and<sp/>uniqued<sp/>in<sp/>the<sp/>given<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>partition<sp/>equal<sp/>to<sp/>not_this<sp/>(may<sp/>be<sp/>NULL)<sp/>is<sp/>excluded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindOverlappingPartitions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>not_this,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>rsearch.StartRectSearch(box);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/>not_this)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts-&gt;add_sorted(SortByBoxLeft&lt;ColPartition&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>returns<sp/>the<sp/>best<sp/>candidate<sp/>ColPartition<sp/>to<sp/>merge<sp/>with<sp/>part,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>selected<sp/>from<sp/>the<sp/>candidates<sp/>list,<sp/>based<sp/>on<sp/>the<sp/>minimum<sp/>increase<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pairwise<sp/>overlap<sp/>among<sp/>all<sp/>the<sp/>partitions<sp/>overlapped<sp/>by<sp/>the<sp/>combined<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>overlap_increase<sp/>is<sp/>not<sp/>NULL<sp/>then<sp/>it<sp/>returns<sp/>the<sp/>increase<sp/>in<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>would<sp/>result<sp/>from<sp/>the<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>confirm_cb<sp/>is<sp/>a<sp/>permanent<sp/>callback<sp/>that<sp/>(if<sp/>non-null)<sp/>will<sp/>be<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>confirm<sp/>the<sp/>validity<sp/>of<sp/>a<sp/>proposed<sp/>merge<sp/>candidate<sp/>before<sp/>selecting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>======HOW<sp/>MERGING<sp/>WORKS======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>problem:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>merge<sp/>all<sp/>the<sp/>parts<sp/>of<sp/>a<sp/>textline<sp/>together,<sp/>but<sp/>avoid<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>separate<sp/>textlines.<sp/>Diacritics,<sp/>i<sp/>dots,<sp/>punctuation,<sp/>and<sp/>broken<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>examples<sp/>of<sp/>small<sp/>bits<sp/>that<sp/>need<sp/>merging<sp/>with<sp/>the<sp/>main<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Drop-caps<sp/>and<sp/>descenders<sp/>in<sp/>one<sp/>line<sp/>that<sp/>touch<sp/>ascenders<sp/>in<sp/>the<sp/>one<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>examples<sp/>of<sp/>cases<sp/>where<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>solution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>that<sp/>increase<sp/>overlap<sp/>among<sp/>other<sp/>partitions<sp/>are<sp/>generally<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Those<sp/>that<sp/>don&apos;t<sp/>increase<sp/>overlap<sp/>(much)<sp/>and<sp/>minimize<sp/>the<sp/>total<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>seem<sp/>to<sp/>be<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ascii<sp/>art<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>text:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>groggy<sp/>descenders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>minimum<sp/>ascenders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>boxes:<sp/>The<sp/>===<sp/>represents<sp/>a<sp/>small<sp/>box<sp/>near<sp/>or<sp/>overlapping<sp/>the<sp/>lower<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-===-------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>considering<sp/>what<sp/>to<sp/>do<sp/>with<sp/>the<sp/>small<sp/>===<sp/>box,<sp/>we<sp/>find<sp/>the<sp/>2<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes<sp/>as<sp/>neighbours<sp/>and<sp/>possible<sp/>merge<sp/>candidates,<sp/>but<sp/>merging<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>upper<sp/>box<sp/>increases<sp/>overlap<sp/>with<sp/>the<sp/>lower<sp/>box,<sp/>whereas<sp/>merging<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lower<sp/>box<sp/>does<sp/>not<sp/>increase<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>small<sp/>===<sp/>box<sp/>didn&apos;t<sp/>overlap<sp/>either<sp/>to<sp/>start<sp/>with,<sp/>total<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>minimized<sp/>by<sp/>merging<sp/>with<sp/>the<sp/>nearer<sp/>(lower)<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>example.<sp/>In<sp/>reality,<sp/>we<sp/>have<sp/>to<sp/>allow<sp/>some<sp/>increase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>overlap,<sp/>or<sp/>tightly<sp/>spaced<sp/>text<sp/>would<sp/>end<sp/>up<sp/>in<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">ColPartition*<sp/>ColPartitionGrid::BestMergeCandidate(</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part,<sp/>ColPartition_CLIST*<sp/>candidates,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, const ColPartition*, const ColPartition*&gt;</ref>*<sp/>confirm_cb,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>overlap_increase)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_increase<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>*overlap_increase<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidates-&gt;empty())</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_overlap<sp/>=</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesseract_1a1fa28613a5db6fb9d0c7fdef0f151872" kindref="member">kTinyEnoughTextlineOverlapFraction</ref><sp/>*<sp/>gridsize()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>best<sp/>neighbour<sp/>to<sp/>merge<sp/>with<sp/>is<sp/>the<sp/>one<sp/>that<sp/>causes<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>pairwise<sp/>overlap<sp/>among<sp/>all<sp/>the<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>more<sp/>than<sp/>one<sp/>offers<sp/>the<sp/>same<sp/>total<sp/>overlap,<sp/>choose<sp/>the<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>least<sp/>total<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(candidates);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>best_candidate<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>total<sp/>combined<sp/>box<sp/>of<sp/>all<sp/>candidates<sp/>and<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>full_box(part_box);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>candidate<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>full_box<sp/>+=<sp/>candidate-&gt;bounding_box();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>valid<sp/>neighbours<sp/>in<sp/>a<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>ColPartition_CLIST<sp/>neighbours;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>a<sp/>rect<sp/>search<sp/>of<sp/>the<sp/>merged<sp/>box<sp/>for<sp/>overlapping<sp/>neighbours,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>anything<sp/>that<sp/>might<sp/>be<sp/>overlapped<sp/>by<sp/>the<sp/>merged<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>FindOverlappingPartitions(full_box,<sp/>part,<sp/>&amp;neighbours);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Finding<sp/>best<sp/>merge<sp/>candidate<sp/>from<sp/>%d,<sp/>%d<sp/>neighbours<sp/>for<sp/>box:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates-&gt;length(),<sp/>neighbours.length());</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>best<sp/>increase<sp/>in<sp/>overlap<sp/>is<sp/>positive,<sp/>then<sp/>we<sp/>also<sp/>check<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>worst<sp/>non-candidate<sp/>overlap.<sp/>This<sp/>catches<sp/>the<sp/>case<sp/>of<sp/>multiple<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>candidates<sp/>that<sp/>overlap<sp/>each<sp/>other<sp/>when<sp/>merged.<sp/>If<sp/>the<sp/>worst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-candidate<sp/>overlap<sp/>is<sp/>better<sp/>than<sp/>the<sp/>best<sp/>overlap,<sp/>then<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>worst<sp/>non-candidate<sp/>overlap<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>ColPartition_CLIST<sp/>non_candidate_neighbours;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>non_candidate_neighbours.set_subtract(SortByBoxLeft&lt;ColPartition&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;neighbours,<sp/>candidates);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_nc_increase<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_increase<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_area<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>candidate<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(confirm_cb<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!confirm_cb-&gt;<ref refid="class_tess_result_callback2_1a61bd799697bce338fc064326a7b764e3" kindref="member">Run</ref>(part,<sp/>candidate))<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Candidate<sp/>not<sp/>confirmed:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increase<sp/>=<sp/>IncreaseInOverlap(part,<sp/>candidate,<sp/>ok_overlap,<sp/>&amp;neighbours);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>cand_box<sp/>=<sp/>candidate-&gt;bounding_box();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_candidate<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>increase<sp/>&lt;<sp/>best_increase)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_candidate<sp/>=<sp/>candidate;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_increase<sp/>=<sp/>increase;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_area<sp/>=<sp/>cand_box.<ref refid="class_t_b_o_x_1ab8ae7b66782fa1802f78ff034da16089" kindref="member">bounding_union</ref>(part_box).<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>-<sp/>cand_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>best<sp/>merge<sp/>candidate<sp/>has<sp/>increase<sp/>%d,<sp/>area<sp/>%d,<sp/>over<sp/>box:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increase,<sp/>best_area);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_box.print();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate-&gt;Print();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(increase<sp/>==<sp/>best_increase)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>cand_box.<ref refid="class_t_b_o_x_1ab8ae7b66782fa1802f78ff034da16089" kindref="member">bounding_union</ref>(part_box).<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>-<sp/>cand_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area<sp/>&lt;<sp/>best_area)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_area<sp/>=<sp/>area;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_candidate<sp/>=<sp/>candidate;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>increase<sp/>=<sp/>IncreaseInOverlap(part,<sp/>candidate,<sp/>ok_overlap,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;non_candidate_neighbours);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(increase<sp/>&gt;<sp/>worst_nc_increase)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worst_nc_increase<sp/>=<sp/>increase;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_increase<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>worst<sp/>non-candidate<sp/>increase<sp/>is<sp/>less<sp/>than<sp/>the<sp/>best<sp/>increase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>including<sp/>the<sp/>candidates,<sp/>then<sp/>all<sp/>the<sp/>candidates<sp/>can<sp/>merge<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>increase<sp/>in<sp/>outside<sp/>overlap<sp/>would<sp/>be<sp/>less,<sp/>so<sp/>use<sp/>that<sp/>result,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>only<sp/>if<sp/>each<sp/>candidate<sp/>is<sp/>either<sp/>a<sp/>good<sp/>diacritic<sp/>merge<sp/>with<sp/>part,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>an<sp/>ok<sp/>merge<sp/>candidate<sp/>with<sp/>all<sp/>the<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>TestCompatibleCandidates<sp/>for<sp/>more<sp/>explanation<sp/>and<sp/>a<sp/>picture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worst_nc_increase<sp/>&lt;<sp/>best_increase<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestCompatibleCandidates(*part,<sp/>debug,<sp/>candidates))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_increase<sp/>=<sp/>worst_nc_increase;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_increase<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>*overlap_increase<sp/>=<sp/>best_increase;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_candidate;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>remove<sp/>the<sp/>given<sp/>box<sp/>from<sp/>the<sp/>given<sp/>partition,<sp/>put<sp/>it<sp/>in<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own<sp/>partition,<sp/>and<sp/>add<sp/>to<sp/>the<sp/>partition<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveBadBox(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>box,<sp/>ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>part_list)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>part-&gt;RemoveBox(box);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>ColPartition::MakeBigPartition(box,<sp/>part_list);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>partitions<sp/>where<sp/>it<sp/>reduces<sp/>overlap<sp/>between<sp/>their<sp/>bounding<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitions<sp/>are<sp/>after<sp/>all<sp/>supposed<sp/>to<sp/>be<sp/>a<sp/>partitioning<sp/>of<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>of<sp/>the<sp/>space<sp/>on<sp/>the<sp/>page!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Blobs<sp/>that<sp/>cause<sp/>overlaps<sp/>get<sp/>removed,<sp/>put<sp/>in<sp/>individual<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>added<sp/>to<sp/>the<sp/>big_parts<sp/>list.<sp/>They<sp/>are<sp/>most<sp/>likely<sp/>characters<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>textlines<sp/>that<sp/>touch,<sp/>or<sp/>something<sp/>big<sp/>like<sp/>a<sp/>dropcap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::SplitOverlappingPartitions(</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_overlap<sp/>=</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesseract_1a1fa28613a5db6fb9d0c7fdef0f151872" kindref="member">kTinyEnoughTextlineOverlapFraction</ref><sp/>*<sp/>gridsize()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>bounded<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.StartRectSearch(box);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unresolved_overlaps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>part)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbour_box<sp/>=<sp/>neighbour-&gt;bounding_box();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;OKMergeOverlap(*part,<sp/>*part,<sp/>ok_overlap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;OKMergeOverlap(*neighbour,<sp/>*neighbour,<sp/>ok_overlap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>overlap<sp/>is<sp/>OK<sp/>both<sp/>ways.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>removal<sp/>of<sp/>the<sp/>biggest<sp/>box<sp/>from<sp/>either<sp/>partition<sp/>eliminates<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap,<sp/>and<sp/>it<sp/>is<sp/>much<sp/>bigger<sp/>than<sp/>the<sp/>box<sp/>left<sp/>behind,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>either<sp/>a<sp/>drop-cap,<sp/>an<sp/>inter-line<sp/>join,<sp/>or<sp/>some<sp/>junk<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>want<sp/>anyway,<sp/>so<sp/>put<sp/>it<sp/>in<sp/>the<sp/>big_parts<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;IsSingleton())<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>excluded<sp/>=<sp/>part-&gt;BiggestBox();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>shrunken<sp/>=<sp/>part-&gt;BoundsWithoutBox(excluded);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shrunken.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(neighbour_box)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>excluded-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a45530b4b5280b8d2f185a531cab4169b" kindref="member">kBigPartSizeRatio</ref><sp/>*<sp/>shrunken.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Removing<sp/>the<sp/>biggest<sp/>box<sp/>fixes<sp/>the<sp/>overlap,<sp/>so<sp/>do<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBadBox(excluded,<sp/>part,<sp/>big_parts);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(neighbour_box))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++unresolved_overlaps;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>amount<sp/>of<sp/>splitting<sp/>will<sp/>fix<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!neighbour-&gt;IsSingleton())<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>excluded<sp/>=<sp/>neighbour-&gt;BiggestBox();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>shrunken<sp/>=<sp/>neighbour-&gt;BoundsWithoutBox(excluded);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shrunken.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(box)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>excluded-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a45530b4b5280b8d2f185a531cab4169b" kindref="member">kBigPartSizeRatio</ref><sp/>*<sp/>shrunken.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Removing<sp/>the<sp/>biggest<sp/>box<sp/>fixes<sp/>the<sp/>overlap,<sp/>so<sp/>do<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBadBox(excluded,<sp/>neighbour,<sp/>big_parts);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>neighbour);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_overlap_count<sp/>=<sp/>part-&gt;CountOverlappingBoxes(neighbour_box);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_overlap_count<sp/>=<sp/>neighbour-&gt;CountOverlappingBoxes(box);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>right_part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_overlap_count<sp/>&lt;=<sp/>part_overlap_count<sp/>||</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;IsSingleton())<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>split<sp/>the<sp/>neighbour<sp/>to<sp/>reduce<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>split_blob<sp/>=<sp/>neighbour-&gt;OverlapSplitBlob(box);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_part<sp/>=<sp/>neighbour-&gt;SplitAtBlob(split_blob);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>neighbour);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(right_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>split<sp/>part<sp/>to<sp/>reduce<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>split_blob<sp/>=<sp/>part-&gt;OverlapSplitBlob(neighbour_box);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_part<sp/>=<sp/>part-&gt;SplitAtBlob(split_blob);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(right_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>right_part);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unresolved_overlaps<sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/>part-&gt;IsSingleton())<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>part<sp/>is<sp/>no<sp/>good<sp/>so<sp/>just<sp/>add<sp/>to<sp/>big_parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveBBox(part);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>big_it(big_parts);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_block_owned(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>big_it.add_to_end(part);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Filters<sp/>partitions<sp/>of<sp/>source_type<sp/>by<sp/>looking<sp/>at<sp/>local<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Where<sp/>a<sp/>majority<sp/>of<sp/>neighbours<sp/>have<sp/>a<sp/>text<sp/>type,<sp/>the<sp/>partitions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>changed<sp/>to<sp/>text,<sp/>where<sp/>the<sp/>neighbours<sp/>have<sp/>image<sp/>type,<sp/>they<sp/>are<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>image,<sp/>and<sp/>partitions<sp/>that<sp/>have<sp/>no<sp/>definite<sp/>neighbourhood<sp/>type<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>im_box<sp/>and<sp/>rerotation<sp/>are<sp/>used<sp/>to<sp/>map<sp/>blob<sp/>coordinates<sp/>onto<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_map,<sp/>which<sp/>is<sp/>used<sp/>to<sp/>prevent<sp/>the<sp/>spread<sp/>of<sp/>text<sp/>neighbourhoods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>anything<sp/>was<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartitionGrid::GridSmoothNeighbours(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>source_type,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_map,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>!=<sp/>source_type<sp/>||<sp/><ref refid="class_b_l_o_b_n_b_o_x_1a86decfe35457329f062098901d56015f" kindref="member">BLOBNBOX::IsLineType</ref>(part-&gt;blob_type()))</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SmoothRegionType(nontext_map,<sp/>im_box,<sp/>rotation,<sp/>debug,<sp/>part))</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_changed;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>mean<sp/>RGB<sp/>of<sp/>the<sp/>light<sp/>and<sp/>dark<sp/>pixels<sp/>in<sp/>each<sp/>ColPartition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>also<sp/>the<sp/>rms<sp/>error<sp/>in<sp/>the<sp/>linearity<sp/>of<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ComputePartitionColors(Pix*<sp/>scaled_color,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_factor,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaled_color<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>Pix*<sp/>color_map1<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>Pix*<sp/>color_map2<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>Pix*<sp/>rms_map<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_color_fit)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(scaled_color);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(scaled_color);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>color_map1<sp/>=<sp/>pixCreate(width,<sp/>height,<sp/>32);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>color_map2<sp/>=<sp/>pixCreate(width,<sp/>height,<sp/>32);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>rms_map<sp/>=<sp/>pixCreate(width,<sp/>height,<sp/>8);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a56b4e1cc91e8abcb9f97622da7468e98" kindref="member">rotate_large</ref>(rerotation);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageFind::ComputeRectangleColors(part_box,<sp/>scaled_color,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaled_factor,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_map1,<sp/>color_map2,<sp/>rms_map,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;color1(),<sp/>part-&gt;color2());</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color_map1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;swcolorinput.png&quot;</highlight><highlight class="normal">,<sp/>scaled_color,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;swcolor1.png&quot;</highlight><highlight class="normal">,<sp/>color_map1,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;swcolor2.png&quot;</highlight><highlight class="normal">,<sp/>color_map2,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;swrms.png&quot;</highlight><highlight class="normal">,<sp/>rms_map,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;color_map1);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;color_map2);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;rms_map);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reflects<sp/>the<sp/>grid<sp/>and<sp/>its<sp/>colpartitions<sp/>in<sp/>the<sp/>y-axis,<sp/>assuming<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>blob<sp/>boxes<sp/>have<sp/>already<sp/>been<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ReflectInYAxis()<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>parts;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;parts);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>extract<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>bot_left(-tright().x(),<sp/>bleft().y());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>top_right(-bleft().x(),<sp/>tright().y());</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reinitializing<sp/>the<sp/>grid<sp/>with<sp/>reflected<sp/>coords<sp/>also<sp/>clears<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers,<sp/>so<sp/>parts<sp/>will<sp/>now<sp/>own<sp/>the<sp/>ColPartitions.<sp/>(Briefly).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>Init(gridsize(),<sp/>bot_left,<sp/>top_right);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ReflectInYAxis();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transforms<sp/>the<sp/>grid<sp/>of<sp/>partitions<sp/>to<sp/>the<sp/>output<sp/>blocks,<sp/>putting<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partition<sp/>into<sp/>a<sp/>separate<sp/>block.<sp/>We<sp/>don&apos;t<sp/>really<sp/>care<sp/>about<sp/>the<sp/>order,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>just<sp/>want<sp/>to<sp/>get<sp/>as<sp/>much<sp/>text<sp/>as<sp/>possible<sp/>without<sp/>trying<sp/>to<sp/>organize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>into<sp/>proper<sp/>blocks<sp/>or<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>some<sp/>kind<sp/>of<sp/>sort<sp/>function<sp/>would<sp/>be<sp/>useful<sp/>and<sp/>probably<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>default<sp/>here,<sp/>which<sp/>is<sp/>to<sp/>sort<sp/>by<sp/>order<sp/>of<sp/>the<sp/>grid<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ExtractPartitionsAsBlocks(BLOCK_LIST*<sp/>blocks,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO_BLOCK_LIST*<sp/>to_blocks)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>TO_BLOCK_IT<sp/>to_block_it(to_blocks);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>block_it(blocks);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>partitions<sp/>will<sp/>be<sp/>put<sp/>on<sp/>this<sp/>list<sp/>and<sp/>deleted<sp/>on<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>parts;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;parts);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>extract<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>partition<sp/>has<sp/>to<sp/>be<sp/>at<sp/>least<sp/>vaguely<sp/>like<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" kindref="member">BLOBNBOX::IsTextType</ref>(blob_type)<sp/>||</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>&amp;&amp;<sp/>part-&gt;boxes_count()<sp/>&gt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>type<sp/>=<sp/>blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref><sp/>?<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fadf6b7dd3b8ca94923c3b94dfe53f230e" kindref="member">PT_VERTICAL_TEXT</ref></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677faaa63d8d8a99ddc2b3957f8e8787b4eca" kindref="member">PT_FLOWING_TEXT</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>metrics<sp/>from<sp/>the<sp/>row<sp/>that<sp/>will<sp/>be<sp/>used<sp/>for<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_width<sp/>=<sp/>part-&gt;median_width();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_height<sp/>=<sp/>part-&gt;median_size();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>partition<sp/>into<sp/>a<sp/>TO_ROW.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___r_o_w" kindref="compound">TO_ROW</ref>*<sp/>row<sp/>=<sp/>part-&gt;MakeToRow();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>partition<sp/>is<sp/>dead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a60f8ad7b10ca32e3ece92bb04e3f2793" kindref="member" tooltip="set the poly block ">set_poly_block</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_o_l_y___b_l_o_c_k" kindref="compound">POLY_BLOCK</ref>(box,<sp/>type));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>to_block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>(block);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TO_ROW_IT<sp/>row_it(to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a4846ebdcc832b4b0a762d87c0d83a056" kindref="member">get_rows</ref>());</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row_it.add_after_then_move(row);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>haven&apos;t<sp/>differentially<sp/>rotated<sp/>vertical<sp/>and<sp/>horizontal<sp/>text<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>point,<sp/>so<sp/>use<sp/>width<sp/>or<sp/>height<sp/>as<sp/>appropriate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ab106233da0599f3e1595c1c765acadec" kindref="member">line_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(median_width);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ac17b9c95641b2eebee9d972338c2e5f6" kindref="member">line_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1abda136ff240577928343ca37453aca7a" kindref="member">max_blob_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ab106233da0599f3e1595c1c765acadec" kindref="member">line_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(median_height);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ac17b9c95641b2eebee9d972338c2e5f6" kindref="member">line_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1abda136ff240577928343ca37453aca7a" kindref="member">max_blob_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_it.add_to_end(block);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_block_it.add_to_end(to_block);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>partition<sp/>is<sp/>dead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>delete<sp/>the<sp/>ColPartitions<sp/>as<sp/>parts<sp/>goes<sp/>out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotates<sp/>the<sp/>grid<sp/>and<sp/>its<sp/>colpartitions<sp/>by<sp/>the<sp/>given<sp/>angle,<sp/>assuming<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>blob<sp/>boxes<sp/>have<sp/>already<sp/>been<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::Deskew(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>deskew)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>parts;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;parts);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>extract<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebuild<sp/>the<sp/>grid<sp/>to<sp/>the<sp/>new<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box(bleft_,<sp/>tright_);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>grid_box.rotate_large(deskew);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>Init(gridsize(),<sp/>grid_box.botleft(),<sp/>grid_box.topright());</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reinitializing<sp/>the<sp/>grid<sp/>with<sp/>rotated<sp/>coords<sp/>also<sp/>clears<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers,<sp/>so<sp/>parts<sp/>will<sp/>now<sp/>own<sp/>the<sp/>ColPartitions.<sp/>(Briefly).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>left<sp/>and<sp/>right<sp/>tabs<sp/>of<sp/>the<sp/>partitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::SetTabStops(TabFind*<sp/>tabgrid)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>left_line<sp/>=<sp/>tabgrid-&gt;LeftTabForBox(part_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>overlapping<sp/>line<sp/>is<sp/>not<sp/>a<sp/>left<sp/>tab,<sp/>try<sp/>for<sp/>non-overlapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_line<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!left_line-&gt;IsLeftTab())</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left_line<sp/>=<sp/>tabgrid-&gt;LeftTabForBox(part_box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_line<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>left_line-&gt;IsLeftTab())</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetLeftTab(left_line);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>right_line<sp/>=<sp/>tabgrid-&gt;RightTabForBox(part_box,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_line<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!right_line-&gt;IsRightTab())</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_line<sp/>=<sp/>tabgrid-&gt;RightTabForBox(part_box,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_line<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>right_line-&gt;IsRightTab())</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetRightTab(right_line);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;SetColumnGoodness(tabgrid-&gt;WidthCB());</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Makes<sp/>the<sp/>ColPartSets<sp/>and<sp/>puts<sp/>them<sp/>in<sp/>the<sp/>PartSetVector<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>finding<sp/>column<sp/>bounds.<sp/>Returns<sp/>false<sp/>if<sp/>no<sp/>partitions<sp/>were<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartitionGrid::MakeColPartSets(<ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>part_sets)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>ColPartition_LIST*<sp/>part_lists<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartition_LIST[gridheight()];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>part_sets-&gt;reserve(gridheight());</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>get<sp/>parts<sp/>onto<sp/>lists<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>bottom<sp/>of<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_parts_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob_type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>||<sp/>!part-&gt;boxes()-&gt;singleton()))<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_x,<sp/>grid_y;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GridCoords(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>&amp;grid_x,<sp/>&amp;grid_y);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;part_lists[grid_y]);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_to_end(part);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_parts_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any_parts_found)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_y<sp/>=<sp/>0;<sp/>grid_y<sp/>&lt;<sp/>gridheight();<sp/>++grid_y)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>line_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_lists[grid_y].empty())<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_set<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartitionSet(&amp;part_lists[grid_y]);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_sets-&gt;push_back(line_set);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>part_lists;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_parts_found;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Makes<sp/>a<sp/>single<sp/>ColPartitionSet<sp/>consisting<sp/>of<sp/>a<sp/>single<sp/>ColPartition<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>represents<sp/>the<sp/>total<sp/>horizontal<sp/>extent<sp/>of<sp/>the<sp/>significant<sp/>content<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">//<sp/>page.<sp/>Used<sp/>for<sp/>the<sp/>single<sp/>column<sp/>setting<sp/>in<sp/>place<sp/>of<sp/>automatic<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>NULL<sp/>if<sp/>the<sp/>page<sp/>is<sp/>empty<sp/>of<sp/>significant<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">ColPartitionSet*<sp/>ColPartitionGrid::MakeSingleColumnSet(<ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>single_column_part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>get<sp/>parts<sp/>onto<sp/>lists<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>bottom<sp/>of<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob_type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>||<sp/>!part-&gt;boxes()-&gt;singleton()))<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>for<sp/>single<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow<sp/>=<sp/>part-&gt;flow();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>||</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref><sp/>||<sp/>flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref>))<sp/>||</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>||<sp/>blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(single_column_part<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part<sp/>=<sp/>part-&gt;ShallowCopy();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part-&gt;set_blob_type(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>tabs<sp/>from<sp/>itself<sp/>to<sp/>properly<sp/>setup<sp/>the<sp/>margins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part-&gt;CopyLeftTab(*single_column_part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part-&gt;CopyRightTab(*single_column_part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;left_key()<sp/>&lt;<sp/>single_column_part-&gt;left_key())</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part-&gt;CopyLeftTab(*part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;right_key()<sp/>&gt;<sp/>single_column_part-&gt;right_key())</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_column_part-&gt;CopyRightTab(*part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(single_column_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>ColPartitionSet<sp/>out<sp/>of<sp/>the<sp/>single_column_part<sp/>as<sp/>a<sp/>candidate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>single<sp/>column<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>single_column_part-&gt;SetColumnGoodness(cb);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartitionSet(single_column_part);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>BLOBNBOXes<sp/>in<sp/>each<sp/>partition<sp/>as<sp/>being<sp/>owned<sp/>by<sp/>that<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ClaimBoxes()<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ClaimBoxes();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retypes<sp/>all<sp/>the<sp/>blobs<sp/>referenced<sp/>by<sp/>the<sp/>partitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Image<sp/>blobs<sp/>are<sp/>found<sp/>and<sp/>returned<sp/>in<sp/>the<sp/>im_blobs<sp/>list,<sp/>as<sp/>they<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>owned<sp/>by<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ReTypeBlobs(BLOBNBOX_LIST*<sp/>im_blobs)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>im_blob_it(im_blobs);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>dead_parts;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>dead_part_it(&amp;dead_parts);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow<sp/>=<sp/>part-&gt;flow();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref><sp/>||<sp/>blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_blob_it.add_after_then_move(blob);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>blobs<sp/>are<sp/>marked<sp/>with<sp/>the<sp/>correct<sp/>type<sp/>and<sp/>flow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Deprecated.<sp/>Change<sp/>this<sp/>section<sp/>to<sp/>an<sp/>assert<sp/>to<sp/>verify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>delete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1af8d6cc72e454c97c5e14d7ccd12925e3" kindref="member">area</ref>()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_it.extract();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(blob_type);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(flow);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref><sp/>||<sp/>part-&gt;boxes()-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;DisownBoxes();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dead_part_it.add_to_end(part);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1af8d6cc72e454c97c5e14d7ccd12925e3" kindref="member">area</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>blob<sp/>with<sp/>zero<sp/>area<sp/>is<sp/>a<sp/>fake<sp/>image<sp/>blob<sp/>and<sp/>should<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blob;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>boxes<sp/>within<sp/>the<sp/>partitions<sp/>have<sp/>changed<sp/>(by<sp/>deskew)<sp/>so<sp/>recompute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bounds<sp/>of<sp/>all<sp/>the<sp/>partitions<sp/>and<sp/>reinsert<sp/>them<sp/>into<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::RecomputeBounds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>saved_parts;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;saved_parts);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>to<sp/>get<sp/>parts<sp/>onto<sp/>a<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_to_end(part);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reinitialize<sp/>grid<sp/>to<sp/>the<sp/>new<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>Init(gridsize,<sp/>bleft,<sp/>tright);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recompute<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>parts<sp/>and<sp/>put<sp/>them<sp/>back<sp/>in<sp/>the<sp/>new<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_vertical(vertical);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Improves<sp/>the<sp/>margins<sp/>of<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid<sp/>by<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FindPartitionMargins<sp/>on<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment">//<sp/>best_columns,<sp/>which<sp/>may<sp/>be<sp/>NULL,<sp/>is<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>indicating<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>set<sp/>at<sp/>each<sp/>y-coordinate<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">//<sp/>best_columns<sp/>is<sp/>usually<sp/>the<sp/>best_columns_<sp/>member<sp/>of<sp/>ColumnFinder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::GridFindMargins(ColPartitionSet**<sp/>best_columns)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>x-bounded<sp/>by<sp/>the<sp/>column<sp/>and<sp/>y<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>columns<sp/>=<sp/>best_columns<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>best_columns[gsearch.GridY()]</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>FindPartitionMargins(columns,<sp/>part);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AlignedBlob::WithinTestRegion(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Computed<sp/>margins<sp/>for<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Improves<sp/>the<sp/>margins<sp/>of<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>list<sp/>by<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FindPartitionMargins<sp/>on<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment">//<sp/>best_columns,<sp/>which<sp/>may<sp/>be<sp/>NULL,<sp/>is<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>indicating<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>set<sp/>at<sp/>each<sp/>y-coordinate<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>best_columns<sp/>is<sp/>usually<sp/>the<sp/>best_columns_<sp/>member<sp/>of<sp/>ColumnFinder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::ListFindMargins(ColPartitionSet**<sp/>best_columns,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(parts);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.mark_cycle_pt();<sp/>!part_it.cycled_list();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>columns<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>columns<sp/>from<sp/>the<sp/>y<sp/>grid<sp/>coord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_x,<sp/>grid_y;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GridCoords(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>&amp;grid_x,<sp/>&amp;grid_y);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>best_columns[grid_y];</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>FindPartitionMargins(columns,<sp/>part);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>the<sp/>partitions<sp/>in<sp/>the<sp/>grid<sp/>after<sp/>disowning<sp/>all<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::DeleteParts()<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>dead_parts;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>dead_it(&amp;dead_parts);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;DisownBoxes();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>dead_it.add_to_end(part);<sp/><sp/></highlight><highlight class="comment">//<sp/>Parts<sp/>will<sp/>be<sp/>deleted<sp/>on<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>the<sp/>partitions<sp/>in<sp/>the<sp/>grid<sp/>that<sp/>are<sp/>of<sp/>type<sp/>BRT_UNKNOWN<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>blobs<sp/>in<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::DeleteUnknownParts(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;blob_type()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>marked,<sp/>the<sp/>blobs<sp/>will<sp/>be<sp/>swept<sp/>up<sp/>by<sp/>DeleteUnownedNoise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_flow(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_blob_type(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;DisownBoxes();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9ce3c22594b44b4faad5c331ad0265ea" kindref="member">DeleteUnownedNoise</ref>();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>marks<sp/>text<sp/>partitions<sp/>that<sp/>represent<sp/>figure<sp/>captions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindFigureCaptions()<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>image<sp/>region<sp/>find<sp/>its<sp/>best<sp/>candidate<sp/>text<sp/>caption<sp/>region,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>any<sp/>and<sp/>mark<sp/>it<sp/>as<sp/>such.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsImageType())<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>AlignedBlob::WithinTestRegion(2,<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>best_caption<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_dist<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>to<sp/>best_caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_upper<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Direction<sp/>of<sp/>best_caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>both<sp/>lower<sp/>and<sp/>upper<sp/>directions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>0;<sp/>upper<sp/>&lt;<sp/>2;<sp/>++upper)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>partner_it(upper<sp/>?<sp/>part-&gt;upper_partners()</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>part-&gt;lower_partners());</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>image<sp/>partners,<sp/>then<sp/>this<sp/>direction<sp/>is<sp/>ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(partner_it.mark_cycle_pt();<sp/>!partner_it.cycled_list();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>partner<sp/>=<sp/>partner_it.data();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;IsImageType())<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partner_it.cycled_list())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>nearest<sp/>totally<sp/>overlapping<sp/>text<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(partner_it.mark_cycle_pt();<sp/>!partner_it.cycled_list();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>partner<sp/>=<sp/>partner_it.data();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partner-&gt;IsTextType())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>partner_box<sp/>=<sp/>partner-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Finding<sp/>figure<sp/>captions<sp/>for<sp/>image<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;=<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;=<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>partner_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(part_box);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_caption<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>dist<sp/>&lt;<sp/>best_dist)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_caption<sp/>=<sp/>partner;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_upper<sp/>=<sp/>upper;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_caption<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Best<sp/>caption<sp/>candidate:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_caption-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>candidate<sp/>caption.<sp/>Qualify<sp/>it<sp/>as<sp/>being<sp/>separable<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>body<sp/>text.<sp/>We<sp/>are<sp/>looking<sp/>for<sp/>either<sp/>a<sp/>small<sp/>number<sp/>of<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>a<sp/>big<sp/>gap<sp/>that<sp/>indicates<sp/>a<sp/>separation<sp/>from<sp/>the<sp/>body<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>biggest_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>smallest_gap<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mean_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>end_partner<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>next_partner<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ColPartition*<sp/>partner<sp/>=<sp/>best_caption;<sp/>partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a0c0112882a0fd4d5db231341b276748f" kindref="member">kMaxCaptionLines</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>=<sp/>next_partner)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partner-&gt;IsTextType())<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_partner<sp/>=<sp/>partner;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++line_count;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_height<sp/>+=<sp/>partner-&gt;bounding_box().height();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_partner<sp/>=<sp/>partner-&gt;SingletonPartner(best_upper);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>partner-&gt;bounding_box().y_gap(</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_partner-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&gt;<sp/>biggest_gap)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biggest_gap<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_partner<sp/>=<sp/>next_partner;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_height<sp/>=<sp/>total_height<sp/>/<sp/>line_count;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;<sp/>smallest_gap)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest_gap<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>gap<sp/>looks<sp/>big<sp/>compared<sp/>to<sp/>the<sp/>text<sp/>size<sp/>and<sp/>the<sp/>smallest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gap<sp/>seen<sp/>so<sp/>far,<sp/>then<sp/>we<sp/>can<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(biggest_gap<sp/>&gt;<sp/>mean_height<sp/>*<sp/><ref refid="namespacetesseract_1a3edae94975001932766025af12aa9615" kindref="member">kMinCaptionGapHeightRatio</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biggest_gap<sp/>&gt;<sp/>smallest_gap<sp/>*<sp/><ref refid="namespacetesseract_1aede50c5fa6fdad612c08e73757501178" kindref="member">kMinCaptionGapRatio</ref>)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Line<sp/>count=%d,<sp/>biggest<sp/>gap<sp/>%d,<sp/>smallest%d,<sp/>mean<sp/>height<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_count,<sp/>biggest_gap,<sp/>smallest_gap,<sp/>mean_height);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end_partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;End<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_partner-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_partner<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>line_count<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a0c0112882a0fd4d5db231341b276748f" kindref="member">kMaxCaptionLines</ref>)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_partner<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>gap,<sp/>but<sp/>line<sp/>count<sp/>is<sp/>small.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_count<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a0c0112882a0fd4d5db231341b276748f" kindref="member">kMaxCaptionLines</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>qualified<sp/>caption.<sp/>Mark<sp/>the<sp/>text<sp/>as<sp/>caption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ColPartition*<sp/>partner<sp/>=<sp/>best_caption;<sp/>partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>!=<sp/>end_partner;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>=<sp/>next_partner)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;set_type(<ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677faf25906cdd91c91c56489f5878b89b99b" kindref="member">PT_CAPTION_TEXT</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>caption<sp/>type<sp/>for<sp/>partition:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_partner<sp/>=<sp/>partner-&gt;SingletonPartner(best_upper);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>ColPartition<sp/>in<sp/>the<sp/>grid,<sp/>finds<sp/>its<sp/>upper<sp/>and<sp/>lower<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindPartitionPartners()<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsVerticalType())<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindVPartitionPartners(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindVPartitionPartners(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindPartitionPartners(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindPartitionPartners(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>best<sp/>partner<sp/>in<sp/>the<sp/>given<sp/>direction<sp/>for<sp/>the<sp/>given<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>result<sp/>with<sp/>AddPartner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindPartitionPartners(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,<sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>partner<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>part-&gt;median_top();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>part-&gt;median_bottom();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>top<sp/>-<sp/>bottom;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(bottom<sp/>+<sp/>top)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>vsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>down<sp/>for<sp/>neighbour<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>vsearch.StartVerticalSearch(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>part-&gt;MidY());</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>best_neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_dist<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>vsearch.NextVerticalSearch(!upper))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>part<sp/>||<sp/>neighbour-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>partner<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_bottom<sp/>=<sp/>neighbour-&gt;median_bottom();</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_top<sp/>=<sp/>neighbour-&gt;median_top();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_y<sp/>=<sp/>(neighbour_bottom<sp/>+<sp/>neighbour_top)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper<sp/>!=<sp/>(neighbour_y<sp/>&gt;<sp/>mid_y))</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;HOverlaps(*neighbour)<sp/>&amp;&amp;<sp/>!part-&gt;WithinSameMargins(*neighbour))</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;TypesMatch(*neighbour))<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_neighbour<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_neighbour<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>upper<sp/>?<sp/>neighbour_bottom<sp/>-<sp/>top<sp/>:<sp/>bottom<sp/>-<sp/>neighbour_top;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a03ac774c4cfbfe5f2b611e59b1e3f74b" kindref="member">kMaxPartitionSpacing</ref><sp/>*<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>best_dist)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_neighbour<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;AddPartner(upper,<sp/>best_neighbour);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>best<sp/>partner<sp/>in<sp/>the<sp/>given<sp/>direction<sp/>for<sp/>the<sp/>given<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stores<sp/>the<sp/>result<sp/>with<sp/>AddPartner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindVPartitionPartners(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>to_the_left,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>partner<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>part-&gt;median_left();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>part-&gt;median_right();</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_x<sp/>=<sp/>(left<sp/>+<sp/>right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>hsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>left<sp/>for<sp/>neighbour<sp/>to_the_left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>hsearch.StartSideSearch(mid_x,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>best_neighbour<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_dist<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>hsearch.NextSideSearch(to_the_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>part<sp/>||<sp/>neighbour-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>partner<sp/>anything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_left<sp/>=<sp/>neighbour-&gt;median_left();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_right<sp/>=<sp/>neighbour-&gt;median_right();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_x<sp/>=<sp/>(neighbour_left<sp/>+<sp/>neighbour_right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_the_left<sp/>!=<sp/>(neighbour_x<sp/>&lt;<sp/>mid_x))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;VOverlaps(*neighbour))</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;TypesMatch(*neighbour))</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>match<sp/>to<sp/>other<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>to_the_left<sp/>?<sp/>left<sp/>-<sp/>neighbour_right<sp/>:<sp/>neighbour_left<sp/>-<sp/>right;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a03ac774c4cfbfe5f2b611e59b1e3f74b" kindref="member">kMaxPartitionSpacing</ref><sp/>*<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>best_dist<sp/>||<sp/>best_neighbour<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_neighbour<sp/>=<sp/>neighbour;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>vertical<sp/>partitions,<sp/>the<sp/>upper<sp/>partner<sp/>is<sp/>to<sp/>the<sp/>left,<sp/>and<sp/>lower<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;AddPartner(to_the_left,<sp/>best_neighbour);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>ColPartition<sp/>with<sp/>multiple<sp/>partners<sp/>in<sp/>the<sp/>grid,<sp/>reduces<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>partners<sp/>to<sp/>0<sp/>or<sp/>1.<sp/>If<sp/>get_desperate<sp/>is<sp/>true,<sp/>goes<sp/>to<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>desperate<sp/>merge<sp/>methods<sp/>to<sp/>merge<sp/>flowing<sp/>text<sp/>before<sp/>breaking<sp/>partnerships.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::RefinePartitionPartners(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_desperate)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Refine<sp/>in<sp/>type<sp/>order<sp/>so<sp/>that<sp/>chasing<sp/>multiple<sp/>partners<sp/>can<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>eliminating<sp/>type<sp/>mis-matching<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref><sp/>+<sp/>1;<sp/>type<sp/>&lt;=<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa1cfce41c30bf1aefe403aaa66d271da1" kindref="member">PT_COUNT</ref>;<sp/>type++)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;RefinePartners(static_cast&lt;PolyBlockType&gt;(type),</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_desperate,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterator<sp/>may<sp/>have<sp/>been<sp/>messed<sp/>up<sp/>by<sp/>a<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================<sp/>PRIVATE<sp/>CODE<sp/>========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>candidate<sp/>ColPartitions<sp/>to<sp/>merge<sp/>with<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>candidates<sp/>must<sp/>overlap<sp/>search_box,<sp/>and<sp/>when<sp/>merged<sp/>must<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlap<sp/>any<sp/>other<sp/>partitions<sp/>that<sp/>are<sp/>not<sp/>overlapped<sp/>by<sp/>each<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindMergeCandidates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>search_box,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>candidates)<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_overlap<sp/>=</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesseract_1a1fa28613a5db6fb9d0c7fdef0f151872" kindref="member">kTinyEnoughTextlineOverlapFraction</ref><sp/>*<sp/>gridsize()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>the<sp/>rect<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>candidate;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((candidate<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OKMergeCandidate(part,<sp/>candidate,<sp/>debug))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>c_box<sp/>=<sp/>candidate-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Candidate<sp/>seems<sp/>to<sp/>be<sp/>a<sp/>potential<sp/>merge<sp/>with<sp/>part.<sp/>If<sp/>one<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>other,<sp/>then<sp/>the<sp/>merge<sp/>is<sp/>a<sp/>no-brainer.<sp/>Otherwise,<sp/>search<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combined<sp/>box<sp/>to<sp/>see<sp/>if<sp/>anything<sp/>else<sp/>is<sp/>inappropriately<sp/>overlapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(c_box)<sp/>&amp;&amp;<sp/>!c_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(part_box))<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>combined<sp/>rectangle<sp/>to<sp/>see<sp/>if<sp/>anything<sp/>new<sp/>is<sp/>overlapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>preliminary<sp/>test<sp/>designed<sp/>to<sp/>quickly<sp/>weed-out<sp/>stupid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>candidates<sp/>that<sp/>would<sp/>create<sp/>a<sp/>big<sp/>list<sp/>of<sp/>overlapped<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>squared-order<sp/>overlap<sp/>analysis.<sp/>Eg.<sp/>vertical<sp/>and<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line-like<sp/>objects<sp/>that<sp/>overlap<sp/>real<sp/>text<sp/>when<sp/>merged:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>||<sp/>==========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>||<sp/><sp/>r<sp/>e<sp/>a<sp/>l<sp/><sp/>t<sp/>e<sp/>x<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>merged_box(part_box);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_box<sp/>+=<sp/>c_box;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>msearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msearch.StartRectSearch(merged_box);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>msearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>part<sp/>||<sp/>neighbour<sp/>==<sp/>candidate)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;OKMergeOverlap(*part,<sp/>*candidate,<sp/>ok_overlap,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>kind<sp/>of<sp/>merge<sp/>overlap<sp/>is<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>n_box<sp/>=<sp/>neighbour-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>overlap<sp/>is<sp/>OK<sp/>if:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>n_box<sp/>already<sp/>overlapped<sp/>the<sp/>part<sp/>or<sp/>the<sp/>candidate<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>n_box<sp/>is<sp/>a<sp/>suitable<sp/>merge<sp/>with<sp/>either<sp/>part<sp/>or<sp/>candidate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n_box.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(part_box)<sp/>&amp;&amp;<sp/>!n_box.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(c_box)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!OKMergeCandidate(part,<sp/>neighbour,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!OKMergeCandidate(candidate,<sp/>neighbour,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Combined<sp/>box<sp/>overlaps<sp/>another<sp/>that<sp/>is<sp/>not<sp/>OK<sp/>despite&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>allowance<sp/>of<sp/>%d:&quot;</highlight><highlight class="normal">,<sp/>ok_overlap);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Reason:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OKMergeCandidate(part,<sp/>neighbour,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;...and:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OKMergeCandidate(candidate,<sp/>neighbour,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Overlap:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;OKMergeOverlap(*part,<sp/>*candidate,<sp/>ok_overlap,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>candidate:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>candidate-&gt;bounding_box().print();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unique<sp/>elements<sp/>as<sp/>they<sp/>arrive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>candidates-&gt;add_sorted(SortByBoxLeft&lt;ColPartition&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>candidate);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smoothes<sp/>the<sp/>region<sp/>type/flow<sp/>type<sp/>of<sp/>the<sp/>given<sp/>part<sp/>by<sp/>looking<sp/>at<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neigbours<sp/>and<sp/>the<sp/>given<sp/>image<sp/>mask.<sp/>Searches<sp/>a<sp/>padded<sp/>rectangle<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>padding<sp/>truncated<sp/>on<sp/>one<sp/>size<sp/>of<sp/>the<sp/>part&apos;s<sp/>box<sp/>in<sp/>turn<sp/>for<sp/>each<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>result<sp/>(if<sp/>any)<sp/>that<sp/>has<sp/>the<sp/>least<sp/>distance<sp/>to<sp/>all<sp/>neighbours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>contribute<sp/>to<sp/>the<sp/>decision.<sp/>This<sp/>biases<sp/>in<sp/>favor<sp/>of<sp/>rectangular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regions<sp/>without<sp/>completely<sp/>enforcing<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>good<sp/>decision<sp/>cannot<sp/>be<sp/>reached,<sp/>the<sp/>part<sp/>is<sp/>left<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>im_box<sp/>and<sp/>rerotation<sp/>are<sp/>used<sp/>to<sp/>map<sp/>blob<sp/>coordinates<sp/>onto<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_map,<sp/>which<sp/>is<sp/>used<sp/>to<sp/>prevent<sp/>the<sp/>spread<sp/>of<sp/>text<sp/>neighbourhoods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>partition<sp/>was<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartitionGrid::SmoothRegionType(Pix*<sp/>nontext_map,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Smooothing<sp/>part<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>best_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_dist<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_dist<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>max_dist<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(max_dist<sp/>*<sp/><ref refid="namespacetesseract_1ae4ffbfaa120044bd1f22b6f95ead9dce" kindref="member">kMaxNeighbourDistFactor</ref>,<sp/>gridsize()<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>with<sp/>the<sp/>pad<sp/>truncated<sp/>on<sp/>each<sp/>side<sp/>of<sp/>the<sp/>box<sp/>in<sp/>turn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_image<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>type<sp/>=<sp/>SmoothInOneDirection(dir,<sp/>nontext_map,<sp/>im_box,</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rerotation,<sp/>debug,<sp/>*part,</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dist);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Result<sp/>in<sp/>dir<sp/>%d<sp/>=<sp/>%d<sp/>at<sp/>dist<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dir,<sp/>type,<sp/>dist);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>&amp;&amp;<sp/>dist<sp/>&lt;<sp/>best_dist)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>all_image<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_dist<sp/>&gt;<sp/>max_dist)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>far<sp/>away<sp/>to<sp/>set<sp/>the<sp/>type<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>&amp;&amp;<sp/>!all_image)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>not<sp/>modifying<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>new_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>new_flow<sp/>=<sp/>part-&gt;flow();</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>&amp;&amp;<sp/>!any_image)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>new_flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref><sp/>&amp;&amp;<sp/>!any_image)<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>new_flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>new_flow<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_type<sp/>!=<sp/>part-&gt;blob_type()<sp/>||<sp/>new_flow<sp/>!=<sp/>part-&gt;flow())<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_flow(new_flow);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_blob_type(new_type);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Modified<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>a<sp/>search<sp/>box<sp/>based<sp/>on<sp/>the<sp/>part_box,<sp/>padded<sp/>in<sp/>all<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>except<sp/>direction.<sp/>Also<sp/>setup<sp/>dist_scaling<sp/>to<sp/>weight<sp/>x,y<sp/>distances<sp/>according</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>given<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeSearchBoxAndScaling(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_padding,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>search_box,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>dist_scaling)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>*search_box<sp/>=<sp/>part_box;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>pad<sp/>value<sp/>based<sp/>on<sp/>the<sp/>min<sp/>dimension<sp/>of<sp/>part_box,<sp/>but<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>min_padding<sp/>and<sp/>then<sp/>scaled<sp/>by<sp/>kMaxPadFactor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>padding<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(padding,<sp/>min_padding);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>padding<sp/>*=<sp/><ref refid="namespacetesseract_1aae8f2f2cc0e41a6cc4a6d1bf322f4b2a" kindref="member">kMaxPadFactor</ref>;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>search_box-&gt;<ref refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" kindref="member">pad</ref>(padding,<sp/>padding);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncate<sp/>the<sp/>box<sp/>in<sp/>the<sp/>appropriate<sp/>direction<sp/>and<sp/>make<sp/>the<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>metric<sp/>slightly<sp/>biased<sp/>in<sp/>the<sp/>truncated<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(direction)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box-&gt;<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dist_scaling<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(2,<sp/>1);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>:</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box-&gt;<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dist_scaling<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(1,<sp/>2);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>:</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box-&gt;<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dist_scaling<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(2,<sp/>1);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>:</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_box-&gt;<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dist_scaling<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(1,<sp/>2);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>enum<sp/>used<sp/>by<sp/>SmoothInOneDirection<sp/>and<sp/>AccumulatePartDistances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>different<sp/>types<sp/>of<sp/>partition<sp/>neighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20f" kindref="member">NeighbourPartitionType</ref><sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Definite<sp/>horizontal<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Definite<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>Weakly<sp/>horizontal<sp/>text.<sp/>Counts<sp/>as<sp/>HTEXT<sp/>for<sp/>HTEXT,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>for<sp/>image<sp/>and<sp/>VTEXT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>Weakly<sp/>vertical<sp/>text.<sp/>Counts<sp/>as<sp/>VTEXT<sp/>for<sp/>VTEXT,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>for<sp/>image<sp/>and<sp/>HTEXT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" kindref="member">NPT_IMAGE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defininte<sp/>non-text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>array<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Executes<sp/>the<sp/>search<sp/>for<sp/>SmoothRegionType<sp/>in<sp/>a<sp/>single<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>bounding<sp/>box<sp/>that<sp/>is<sp/>padded<sp/>in<sp/>all<sp/>directions<sp/>except<sp/>direction,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>searches<sp/>it<sp/>for<sp/>other<sp/>partitions.<sp/>Finds<sp/>the<sp/>nearest<sp/>collection<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partitions<sp/>that<sp/>makes<sp/>a<sp/>decisive<sp/>result<sp/>(if<sp/>any)<sp/>and<sp/>returns<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>distance<sp/>of<sp/>the<sp/>collection.<sp/>If<sp/>there<sp/>are<sp/>any<sp/>pixels<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_map,<sp/>then<sp/>the<sp/>decision<sp/>is<sp/>biased<sp/>towards<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>ColPartitionGrid::SmoothInOneDirection(</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>direction,<sp/>Pix*<sp/>nontext_map,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>best_distance)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>bounded<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>dist_scaling;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/>ComputeSearchBoxAndScaling(direction,<sp/>part_box,<sp/>gridsize(),</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;search_box,<sp/>&amp;dist_scaling);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>image_region<sp/>=<sp/>ImageFind::CountPixelsInRotatedBox(search_box,<sp/>im_box,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rerotation,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nontext_map)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>];</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>AccumulatePartDistances(part,<sp/>dist_scaling,<sp/>search_box,</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nontext_map,<sp/>im_box,<sp/>rerotation,<sp/>debug,<sp/>dists);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>iteratively<sp/>including<sp/>the<sp/>next<sp/>smallest<sp/>distance<sp/>across<sp/>the<sp/>vectors,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(as<sp/>in<sp/>a<sp/>merge<sp/>sort)<sp/>we<sp/>can<sp/>use<sp/>the<sp/>vector<sp/>indices<sp/>as<sp/>counts<sp/>of<sp/>each<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>find<sp/>the<sp/>nearest<sp/>set<sp/>of<sp/>objects<sp/>that<sp/>give<sp/>us<sp/>a<sp/>definite<sp/>decision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>];</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>memset(counts,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(counts[0])<sp/>*<sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>image<sp/>in<sp/>the<sp/>search<sp/>box,<sp/>tip<sp/>the<sp/>balance<sp/>in<sp/>image&apos;s<sp/>favor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_bias<sp/>=<sp/>image_region<sp/>?<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref><sp/>/<sp/>2<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>text_dir<sp/>=<sp/>part.blob_type();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow_type<sp/>=<sp/>part.flow();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>minimum<sp/>new<sp/>entry<sp/>across<sp/>the<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counts[i]<sp/>&lt;<sp/>dists[i].size()<sp/>&amp;&amp;<sp/>dists[i][counts[i]]<sp/>&lt;<sp/>min_dist)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>dists[i][counts[i]];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>all<sp/>the<sp/>indices/counts<sp/>forward<sp/>to<sp/>include<sp/>min_dist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(counts[i]<sp/>&lt;<sp/>dists[i].size()<sp/>&amp;&amp;<sp/>dists[i][counts[i]]<sp/>&lt;=<sp/>min_dist)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++counts[i];</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>min_dist;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Totals:<sp/>htext=%d+%d,<sp/>vtext=%d+%d,<sp/>image=%d+%d,<sp/>at<sp/>dist=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>],<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>],</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>],<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>],</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" kindref="member">NPT_IMAGE</ref>],<sp/>image_bias,<sp/>min_dist);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>we<sp/>have<sp/>a<sp/>decision<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_count<sp/>=<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" kindref="member">NPT_IMAGE</ref>];</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>htext_score<sp/>=<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>]<sp/>+<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>]<sp/>-</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(image_count<sp/>+<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>]);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vtext_score<sp/>=<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>]<sp/>+<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>]<sp/>-</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(image_count<sp/>+<sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>]);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image_count<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_bias<sp/>-<sp/>htext_score<sp/>&gt;=<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_bias<sp/>-<sp/>vtext_score<sp/>&gt;=<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" kindref="member">NPT_IMAGE</ref>][0];</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>].size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>&gt;<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>][0])</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>][0];</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>].size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>&gt;<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>][0])</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>][0];</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((text_dir<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref><sp/>||<sp/>flow_type<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>htext_score<sp/>&gt;=<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>][0];</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((text_dir<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>||<sp/>flow_type<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>vtext_score<sp/>&gt;=<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_distance<sp/>=<sp/>dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>][0];</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(min_dist<sp/>&lt;<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Counts<sp/>the<sp/>partitions<sp/>in<sp/>the<sp/>given<sp/>search_box<sp/>by<sp/>appending<sp/>the<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>(scaled<sp/>by<sp/>dist_scaling)<sp/>of<sp/>the<sp/>part<sp/>from<sp/>the<sp/>base_part<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>the<sp/>appropriate<sp/>type<sp/>for<sp/>the<sp/>partition.<sp/>Prior<sp/>to<sp/>return,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vectors<sp/>in<sp/>the<sp/>dists<sp/>array<sp/>are<sp/>sorted<sp/>in<sp/>increasing<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>nontext_map<sp/>(+im_box,<sp/>rerotation)<sp/>is<sp/>used<sp/>to<sp/>make<sp/>text<sp/>invisible<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>non-text<sp/>in<sp/>between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dists<sp/>must<sp/>be<sp/>an<sp/>array<sp/>of<sp/>GenericVectors<sp/>of<sp/>size<sp/>NPT_COUNT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::AccumulatePartDistances(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>base_part,</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>dist_scaling,</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>search_box,</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_map,</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>dists)<sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>base_part.bounding_box();</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>compatible<sp/>neighbours<sp/>with<sp/>a<sp/>similar<sp/>strokewidth,<sp/>but<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>other<sp/>side<sp/>of<sp/>a<sp/>tab<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour-&gt;IsUnMergeableType()<sp/>||</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!base_part.ConfirmNoTabViolation(*neighbour)<sp/>||</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour<sp/>==<sp/>&amp;base_part)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>neighbour-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>n_type<sp/>=<sp/>neighbour-&gt;blob_type();</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>||<sp/>n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!ImageFind::BlankImageInBetween(part_box,<sp/>nbox,<sp/>im_box,<sp/>rerotation,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nontext_map))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>not<sp/>visible<sp/>the<sp/>other<sp/>side<sp/>of<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1a86decfe35457329f062098901d56015f" kindref="member">BLOBNBOX::IsLineType</ref>(n_type))</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use<sp/>horizontal<sp/>lines<sp/>as<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_gap<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(nbox),<sp/>0);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_gap<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(nbox),<sp/>0);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_dist<sp/>=<sp/>x_gap<sp/>*<sp/>dist_scaling.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>+<sp/>y_gap*<sp/>dist_scaling.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Part<sp/>has<sp/>x-gap=%d,<sp/>y=%d,<sp/>dist=%d<sp/>at:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_gap,<sp/>y_gap,<sp/>n_dist);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbox.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncate<sp/>the<sp/>number<sp/>of<sp/>boxes,<sp/>so<sp/>text<sp/>doesn&apos;t<sp/>get<sp/>too<sp/>much<sp/>advantage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_boxes<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(neighbour-&gt;boxes_count(),<sp/><ref refid="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" kindref="member">kSmoothDecisionMargin</ref>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>n_flow<sp/>=<sp/>neighbour-&gt;flow();</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>count_vector<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_vector<sp/>=<sp/>&amp;dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" kindref="member">NPT_HTEXT</ref>];</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_vector<sp/>=<sp/>&amp;dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" kindref="member">NPT_VTEXT</ref>];</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Htext&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Vtext&quot;</highlight><highlight class="normal">,<sp/>n_boxes);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>||<sp/>n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(n_flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>||<sp/>n_flow<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Medium<sp/>text<sp/>counts<sp/>as<sp/>weak,<sp/>and<sp/>all<sp/>else<sp/>counts<sp/>as<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_vector<sp/>=<sp/>&amp;dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" kindref="member">NPT_WEAK_HTEXT</ref>];</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_vector<sp/>=<sp/>&amp;dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" kindref="member">NPT_WEAK_VTEXT</ref>];</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Weak<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n_boxes);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count_vector<sp/>=<sp/>&amp;dists[<ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" kindref="member">NPT_IMAGE</ref>];</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Image<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>n_boxes);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_vector<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_boxes;<sp/>++i)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_vector-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(n_dist);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;Print();</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" kindref="member">NPT_COUNT</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>dists[i].sort();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Improves<sp/>the<sp/>margins<sp/>of<sp/>the<sp/>part<sp/>ColPartition<sp/>by<sp/>searching<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neighbours<sp/>that<sp/>vertically<sp/>overlap<sp/>significantly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="comment">//<sp/>columns<sp/>may<sp/>be<sp/>NULL,<sp/>and<sp/>indicates<sp/>the<sp/>assigned<sp/>column<sp/>structure<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>applicable<sp/>to<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindPartitionMargins(ColPartitionSet*<sp/>columns,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>x-bounded<sp/>by<sp/>the<sp/>column<sp/>and<sp/>y<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>left<sp/>margin<sp/>is<sp/>based<sp/>on<sp/>the<sp/>column,<sp/>if<sp/>there<sp/>is<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_margin<sp/>=<sp/>bleft().<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>();</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_margin<sp/>=<sp/>tright().<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columns<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>column<sp/>=<sp/>columns-&gt;ColumnContaining(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left_margin<sp/>=<sp/>column-&gt;LeftAtY(y);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>column<sp/>=<sp/>columns-&gt;ColumnContaining(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_margin<sp/>=<sp/>column-&gt;RightAtY(y);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>left_margin<sp/>-=<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>right_margin<sp/>+=<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>ColPartitions<sp/>that<sp/>reduce<sp/>the<sp/>margin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/>left_margin<sp/>=<sp/>FindMargin(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>left_margin,</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>part);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/>part-&gt;set_left_margin(left_margin);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>ColPartitions<sp/>that<sp/>reduce<sp/>the<sp/>margin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>right_margin<sp/>=<sp/>FindMargin(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>right_margin,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>part);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>part-&gt;set_right_margin(right_margin);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Starting<sp/>at<sp/>x,<sp/>and<sp/>going<sp/>in<sp/>the<sp/>specified<sp/>direction,<sp/>upto<sp/>x_limit,<sp/>finds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>margin<sp/>for<sp/>the<sp/>given<sp/>y<sp/>range<sp/>by<sp/>searching<sp/>sideways,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>ignoring<sp/>not_this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ColPartitionGrid::FindMargin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_to_left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_limit,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_bottom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_top,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>not_this)<sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>y_top<sp/>-<sp/>y_bottom;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>side_search(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/>side_search.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/>side_search.StartSideSearch(x,<sp/>y_bottom,<sp/>y_top);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>side_search.NextSideSearch(right_to_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>not_this)<sp/><sp/></highlight><highlight class="comment">//<sp/>||<sp/>part-&gt;IsLineType())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>overlap<sp/>by<sp/>enough,<sp/>based<sp/>on<sp/>the<sp/>min<sp/>of<sp/>the<sp/>heights,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>large<sp/>partitions<sp/>can&apos;t<sp/>smash<sp/>through<sp/>small<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(height,<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>min_overlap<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(min_overlap<sp/>*<sp/><ref refid="namespacetesseract_1acea5cf3f3fc7999a57079cc1bb4104f7" kindref="member">kMarginOverlapFraction</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(y_top,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(y_bottom,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_overlap<sp/>&lt;<sp/>min_overlap)</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>going<sp/>the<sp/>right<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_edge<sp/>=<sp/>right_to_left<sp/>?<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x_edge<sp/>&lt;<sp/>x)<sp/>!=<sp/>right_to_left)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>gone<sp/>past<sp/>x_limit,<sp/>then<sp/>x_limit<sp/>will<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x_edge<sp/>&lt;<sp/>x_limit)<sp/>==<sp/>right_to_left)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>reduces<sp/>x<sp/>limit,<sp/>so<sp/>save<sp/>the<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>x_limit<sp/>=<sp/>x_edge;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_limit;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp"/>
  </compounddef>
</doxygen>
