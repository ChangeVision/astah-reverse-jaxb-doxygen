<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="adaptive_8cpp" kind="file">
    <compoundname>adaptive.cpp</compoundname>
    <includes refid="adaptive_8h" local="yes">adaptive.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="22812">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22847">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22850">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="22867">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22845">
        <label>assert.h</label>
      </node>
      <node id="22848">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="22793" relation="include">
        </childnode>
        <childnode refid="22849" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
        <childnode refid="22851" relation="include">
        </childnode>
        <childnode refid="22870" relation="include">
        </childnode>
        <childnode refid="22872" relation="include">
        </childnode>
        <childnode refid="22873" relation="include">
        </childnode>
        <childnode refid="22875" relation="include">
        </childnode>
        <childnode refid="22874" relation="include">
        </childnode>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22871" relation="include">
        </childnode>
        <childnode refid="22842" relation="include">
        </childnode>
      </node>
      <node id="22808">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="22826">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="22798">
        <label>stdlib.h</label>
      </node>
      <node id="22800">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="22801" relation="include">
        </childnode>
      </node>
      <node id="22841">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22858">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="22806" relation="include">
        </childnode>
      </node>
      <node id="22813">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22823" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
      </node>
      <node id="22838">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22816">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
      </node>
      <node id="22834">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
      </node>
      <node id="22832">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22833" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
      </node>
      <node id="22849">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
      </node>
      <node id="22859">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="22860" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
      </node>
      <node id="22868">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
      </node>
      <node id="22853">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="22845" relation="include">
        </childnode>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22854" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22855" relation="include">
        </childnode>
      </node>
      <node id="22811">
        <label>stddef.h</label>
      </node>
      <node id="22820">
        <label>memory.h</label>
      </node>
      <node id="22876">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="22828" relation="include">
        </childnode>
      </node>
      <node id="22830">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
      </node>
      <node id="22844">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="22845" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22806">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22828">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22801">
        <label>limits.h</label>
      </node>
      <node id="22873">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="22833" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22874" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
      </node>
      <node id="22851">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22852" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22866" relation="include">
        </childnode>
        <childnode refid="22868" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22869" relation="include">
        </childnode>
      </node>
      <node id="22837">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="22831" relation="include">
        </childnode>
      </node>
      <node id="22862">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="22836" relation="include">
        </childnode>
      </node>
      <node id="22857">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
      </node>
      <node id="22824">
        <label>pthread.h</label>
      </node>
      <node id="22797">
        <label>string.h</label>
      </node>
      <node id="22822">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22819">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
      </node>
      <node id="22795">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
      </node>
      <node id="22835">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22802" relation="include">
        </childnode>
      </node>
      <node id="22856">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22805">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22825">
        <label>semaphore.h</label>
      </node>
      <node id="22792">
        <label>classify/adaptive.cpp</label>
        <link refid="adaptive.cpp"/>
        <childnode refid="22793" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22847" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22860">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="22861" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
        <childnode refid="22856" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22858" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
      </node>
      <node id="22855">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22856" relation="include">
        </childnode>
        <childnode refid="22857" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22858" relation="include">
        </childnode>
        <childnode refid="22859" relation="include">
        </childnode>
        <childnode refid="22863" relation="include">
        </childnode>
      </node>
      <node id="22863">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22864" relation="include">
        </childnode>
        <childnode refid="22855" relation="include">
        </childnode>
      </node>
      <node id="22817">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="22806" relation="include">
        </childnode>
      </node>
      <node id="22829">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22832" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
      </node>
      <node id="22814">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
      </node>
      <node id="22842">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
      </node>
      <node id="22861">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22862" relation="include">
        </childnode>
      </node>
      <node id="22831">
        <label>math.h</label>
      </node>
      <node id="22818">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="22806" relation="include">
        </childnode>
      </node>
      <node id="22865">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="22836" relation="include">
        </childnode>
      </node>
      <node id="22843">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
      </node>
      <node id="22839">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22833" relation="include">
        </childnode>
      </node>
      <node id="22794">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
      </node>
      <node id="22871">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="22833" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22803">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22804">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
      </node>
      <node id="22866">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22867" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22810">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22840">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22795" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22842" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
      </node>
      <node id="22846">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22870">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="22871" relation="include">
        </childnode>
      </node>
      <node id="22815">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
      </node>
      <node id="22821">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
      </node>
      <node id="22852">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22805" relation="include">
        </childnode>
      </node>
      <node id="22872">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
      </node>
      <node id="22836">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22837" relation="include">
        </childnode>
      </node>
      <node id="22793">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="22794" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22796" relation="include">
        </childnode>
      </node>
      <node id="22854">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="22802">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="22803" relation="include">
        </childnode>
      </node>
      <node id="22875">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22876" relation="include">
        </childnode>
      </node>
      <node id="22799">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="22800" relation="include">
        </childnode>
      </node>
      <node id="22796">
        <label>stdio.h</label>
      </node>
      <node id="22827">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22828" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22840" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
      </node>
      <node id="22823">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22802" relation="include">
        </childnode>
      </node>
      <node id="22874">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22799" relation="include">
        </childnode>
      </node>
      <node id="22809">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
      </node>
      <node id="22833">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22839" relation="include">
        </childnode>
      </node>
      <node id="22807">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="22796" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
      </node>
      <node id="22869">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="22853" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22821" relation="include">
        </childnode>
      </node>
      <node id="22864">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="22865" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="adaptive_8cpp_1a24dee29813d20462932722df976fd062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddAdaptedClass</definition>
        <argsstring>(ADAPT_TEMPLATES Templates, ADAPT_CLASS Class, CLASS_ID ClassId)</argsstring>
        <name>AddAdaptedClass</name>
        <param>
          <type><ref refid="adaptive_8h_1a41c6dcad3fe69d675809c177e5537812" kindref="member">ADAPT_TEMPLATES</ref></type>
          <declname>Templates</declname>
        </param>
        <param>
          <type><ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref></type>
          <declname>ClassId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine adds a new adapted class to an existing set of adapted templates.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Templates</parametername>
</parameternamelist>
<parameterdescription>
<para>set of templates to add new class to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>new class to add to templates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ClassId</parametername>
</parameternamelist>
<parameterdescription>
<para>class id to associate with new class</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 13:06:09 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="49" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a69bbd5a22930a7f4cc2d85f49b468b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeTempConfig</definition>
        <argsstring>(TEMP_CONFIG Config)</argsstring>
        <name>FreeTempConfig</name>
        <param>
          <type><ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref></type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine frees all memory consumed by a temporary configuration.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Config</parametername>
</parameternamelist>
<parameterdescription>
<para>config to be freed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 13:34:23 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="80" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a6dd6f2bb609ab699a22ea1df6a7f67cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeTempProto</definition>
        <argsstring>(void *arg)</argsstring>
        <name>FreeTempProto</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a1d29b7ae60406ea3223879dfd7c9059e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreePermConfig</definition>
        <argsstring>(PERM_CONFIG Config)</argsstring>
        <name>FreePermConfig</name>
        <param>
          <type><ref refid="adaptive_8h_1a461ee34b392d9264f8ff553d28029c52" kindref="member">PERM_CONFIG</ref></type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1ab0586da849c1ffcb5f1ba8c7de9c571a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref></type>
        <definition>ADAPT_CLASS NewAdaptedClass</definition>
        <argsstring>()</argsstring>
        <name>NewAdaptedClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This operation allocates and initializes a new adapted class data structure and returns a ptr to it.</para><para><simplesect kind="return"><para>Ptr to new class data structure.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 12:58:13 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="113" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="113" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a33bf306964684354020fccff8aaa612d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_adapted_class</definition>
        <argsstring>(ADAPT_CLASS adapt_class)</argsstring>
        <name>free_adapted_class</name>
        <param>
          <type><ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref></type>
          <declname>adapt_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="136" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1accee3ce0fad02a088149b714621dc21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_adapted_templates</definition>
        <argsstring>(ADAPT_TEMPLATES templates)</argsstring>
        <name>free_adapted_templates</name>
        <param>
          <type><ref refid="adaptive_8h_1a41c6dcad3fe69d675809c177e5537812" kindref="member">ADAPT_TEMPLATES</ref></type>
          <declname>templates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="199" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1af29bddcf8cc7f50548382c9594716559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref></type>
        <definition>TEMP_CONFIG NewTempConfig</definition>
        <argsstring>(int MaxProtoId, int FontinfoId)</argsstring>
        <name>NewTempConfig</name>
        <param>
          <type>int</type>
          <declname>MaxProtoId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>FontinfoId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine allocates and returns a new temporary config.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MaxProtoId</parametername>
</parameternamelist>
<parameterdescription>
<para>max id of any proto in new config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FontinfoId</parametername>
</parameternamelist>
<parameterdescription>
<para>font information from pre-trained templates </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ptr to new temp config.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 13:28:21 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="223" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="223" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a5dec565ee3ad1656d02860db322e4448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a03dc56d9af9a82277b248c3b58267c25" kindref="member">TEMP_PROTO</ref></type>
        <definition>TEMP_PROTO NewTempProto</definition>
        <argsstring>()</argsstring>
        <name>NewTempProto</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine allocates and returns a new temporary proto.</para><para><simplesect kind="return"><para>Ptr to new temporary proto.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 13:31:31 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="254" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a0319827551564cc4815347fafb12ebc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref></type>
        <definition>ADAPT_CLASS ReadAdaptedClass</definition>
        <argsstring>(FILE *File)</argsstring>
        <name>ReadAdaptedClass</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an adapted class description from File and return a ptr to the adapted class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to read adapted class from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ptr to new adapted class.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 14:11:01 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="315" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="315" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a7bc232880f998a1280c8e4cda8219501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a461ee34b392d9264f8ff553d28029c52" kindref="member">PERM_CONFIG</ref></type>
        <definition>PERM_CONFIG ReadPermConfig</definition>
        <argsstring>(FILE *File)</argsstring>
        <name>ReadPermConfig</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a permanent configuration description from File and return a ptr to it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to read permanent config from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ptr to new permanent configuration description.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 14:25:26 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="404" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="404" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1ae5320862b15744db04215279be302b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref></type>
        <definition>TEMP_CONFIG ReadTempConfig</definition>
        <argsstring>(FILE *File)</argsstring>
        <name>ReadTempConfig</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a temporary configuration description from File and return a ptr to it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to read temporary config from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ptr to new temporary configuration description.</para></simplesect>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 14:29:59 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="431" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="431" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a78e408661f8ca7de9554205ffa48781e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteAdaptedClass</definition>
        <argsstring>(FILE *File, ADAPT_CLASS Class, int NumConfigs)</argsstring>
        <name>WriteAdaptedClass</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumConfigs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine writes a binary representation of Class to File.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to write Class to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>adapted class to write to File </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NumConfigs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of configs in Class</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 13:33:51 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="461" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="461" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1a90dbf37fe253a2a933ebf53219c242f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WritePermConfig</definition>
        <argsstring>(FILE *File, PERM_CONFIG Config)</argsstring>
        <name>WritePermConfig</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="adaptive_8h_1a461ee34b392d9264f8ff553d28029c52" kindref="member">PERM_CONFIG</ref></type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine writes a binary representation of a permanent configuration to File.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to write Config to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Config</parametername>
</parameternamelist>
<parameterdescription>
<para>permanent config to write to File</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 13:55:44 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="537" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="537" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="adaptive_8cpp_1ae1843d3d2a73ecb6b9168146a1b1d133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteTempConfig</definition>
        <argsstring>(FILE *File, TEMP_CONFIG Config)</argsstring>
        <name>WriteTempConfig</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref></type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine writes a binary representation of a temporary configuration to File.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open file to write Config to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Config</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary config to write to File</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Globals: none </para><simplesectsep/><para>Exceptions: none </para><simplesectsep/><para>History: Tue Mar 19 14:00:28 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" line="561" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptive.cpp" bodystart="561" bodyend="570"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>adaptive.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Adaptive<sp/>matcher.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Mar<sp/><sp/>8<sp/>10:00:21<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="21"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="adaptive_8h" kindref="compound">adaptive.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="35"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a24dee29813d20462932722df976fd062" kindref="member">AddAdaptedClass</ref>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IntClass;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert<sp/>(Templates<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>assert<sp/>(Class<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="intproto_8h_1a6edc7e9d060a50cd3617bb509a061eb5" kindref="member">LegalClassId</ref><sp/>(ClassId));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="intproto_8h_1a3e7ae3ffbac606326937a4c701aeeaf2" kindref="member">UnusedClassIdIn</ref><sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>ClassId));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>assert<sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>IntClass<sp/>=<sp/><ref refid="intproto_8cpp_1af77150e8523be2b3f6449e194eb55e7b" kindref="member">NewIntClass</ref><sp/>(1,<sp/>1);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a66f71b82c006e385d6e3ce7c677c6ad8" kindref="member">AddIntClass</ref><sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>ClassId,<sp/>IntClass);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>assert<sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId]<sp/>=<sp/>Class;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddAdaptedClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a69bbd5a22930a7f4cc2d85f49b468b67" kindref="member">FreeTempConfig</ref>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>assert<sp/>(Config<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a59022330cdccbdc05e900c6aaf6e9f63" kindref="member">ContextsSeen</ref>,<sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="memry_8cpp_1a204a6cd6de69d4bd7a73ca30e0a0f947" kindref="member">free_struct</ref><sp/>(Config,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG_STRUCT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;TEMP_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeTempConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a6dd6f2bb609ab699a22ea1df6a7f67cd" kindref="member">FreeTempProto</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>proto<sp/>=<sp/>(<ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref>)<sp/>arg;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="memry_8cpp_1a204a6cd6de69d4bd7a73ca30e0a0f947" kindref="member">free_struct</ref><sp/>(proto,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO_STRUCT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;TEMP_PROTO_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a1d29b7ae60406ea3223879dfd7c9059e" kindref="member">FreePermConfig</ref>(<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG</ref><sp/>Config)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>assert(Config<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="memry_8cpp_1a204a6cd6de69d4bd7a73ca30e0a0f947" kindref="member">free_struct</ref>(Config,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG_STRUCT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;PERM_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/><ref refid="adaptive_8cpp_1ab0586da849c1ffcb5f1ba8c7de9c571a" kindref="member">NewAdaptedClass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>(<ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS_STRUCT</ref>));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a88d1300e6657fc7c98af721983018b36" kindref="member">MaxNumTimesSeen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref><sp/>(Class,<sp/>i)<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Class);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewAdaptedClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a33bf306964684354020fccff8aaa612d" kindref="member">free_adapted_class</ref>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>adapt_class)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a45d630ce43777ee1ab16048b0a846813" kindref="member">ConfigIsPermanent</ref><sp/>(adapt_class,<sp/>i)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="adaptive_8h_1aea4d5dd0059c222f111f9537af74a325" kindref="member">PermConfigFor</ref><sp/>(adapt_class,<sp/>i)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a1d29b7ae60406ea3223879dfd7c9059e" kindref="member">FreePermConfig</ref><sp/>(<ref refid="adaptive_8h_1aea4d5dd0059c222f111f9537af74a325" kindref="member">PermConfigFor</ref><sp/>(adapt_class,<sp/>i));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="adaptive_8h_1a45d630ce43777ee1ab16048b0a846813" kindref="member">ConfigIsPermanent</ref><sp/>(adapt_class,<sp/>i)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref><sp/>(adapt_class,<sp/>i)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a69bbd5a22930a7f4cc2d85f49b468b67" kindref="member">FreeTempConfig</ref><sp/>(<ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref><sp/>(adapt_class,<sp/>i));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref><sp/>(adapt_class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref><sp/>(adapt_class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref><sp/>(adapt_class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>,<sp/><ref refid="adaptive_8cpp_1a6dd6f2bb609ab699a22ea1df6a7f67cd" kindref="member">FreeTempProto</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(adapt_class);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/><ref refid="classtesseract_1_1_classify_1a28ddc270cb5d2613f5f0f24ad53a5a21" kindref="member">Classify::NewAdaptedTemplates</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InitFromUnicharset)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>Templates<sp/>=<sp/>(<ref refid="adaptive_8h_1a41c6dcad3fe69d675809c177e5537812" kindref="member">ADAPT_TEMPLATES</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES_STRUCT</ref>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a020880b72d2d68c69edba44494fce647" kindref="member">NewIntTemplates</ref><sp/>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac4e39261d76ebdd092eeb754fe1e15c3" kindref="member">NumPermClasses</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1aa644a299b7046916ce731566866df325" kindref="member">NumNonEmptyClasses</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>an<sp/>empty<sp/>class<sp/>for<sp/>each<sp/>unichar<sp/>id<sp/>in<sp/>unicharset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[i]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InitFromUnicharset<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a24dee29813d20462932722df976fd062" kindref="member">AddAdaptedClass</ref>(Templates,<sp/><ref refid="adaptive_8cpp_1ab0586da849c1ffcb5f1ba8c7de9c571a" kindref="member">NewAdaptedClass</ref>(),<sp/>i);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Templates);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewAdaptedTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>FontinfoId<sp/>of<sp/>the<sp/>given<sp/>config<sp/>of<sp/>the<sp/>given<sp/>adapted<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1afae8a55c28ee68de92ab1b1dd37c6905" kindref="member">Classify::GetFontinfoId</ref>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class,<sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>ConfigId)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a45d630ce43777ee1ab16048b0a846813" kindref="member">ConfigIsPermanent</ref>(Class,<sp/>ConfigId)<sp/>?</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1aea4d5dd0059c222f111f9537af74a325" kindref="member">PermConfigFor</ref>(Class,<sp/>ConfigId)-&gt;FontinfoId<sp/>:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>ConfigId)-&gt;FontinfoId);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1accee3ce0fad02a088149b714621dc21d" kindref="member">free_adapted_templates</ref>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>templates)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(templates<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>)-&gt;NumClasses;<sp/>i++)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a33bf306964684354020fccff8aaa612d" kindref="member">free_adapted_class</ref><sp/>(templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[i]);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1aed61c96f41cad7c9871e809124987ca8" kindref="member">free_int_templates</ref><sp/>(templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(templates);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="adaptive_8cpp_1af29bddcf8cc7f50548382c9594716559" kindref="member">NewTempConfig</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxProtoId,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FontinfoId)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumProtos<sp/>=<sp/>MaxProtoId<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>Config<sp/>=</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref>)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG_STRUCT</ref>),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TEMP_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(NumProtos);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a973aee4e62bf2e6f6949b13020c984d8" kindref="member">MaxProtoId</ref><sp/>=<sp/>MaxProtoId;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref><sp/>=<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(NumProtos);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a59022330cdccbdc05e900c6aaf6e9f63" kindref="member">ContextsSeen</ref><sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a76b02dedaede2e6e34653155be6f8c7b" kindref="member">FontinfoId</ref><sp/>=<sp/>FontinfoId;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Config);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewTempConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref><sp/><ref refid="adaptive_8cpp_1a5dec565ee3ad1656d02860db322e4448" kindref="member">NewTempProto</ref>()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO_STRUCT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;TEMP_PROTO_STRUCT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewTempProto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a15d6951abc586793270de0825bdb7dd7" kindref="member">Classify::PrintAdaptedTemplates</ref>(FILE<sp/>*File,<sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>AClass;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>SECURE_NAMES</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\n\nSUMMARY<sp/>OF<sp/>ADAPTED<sp/>TEMPLATES:\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;Num<sp/>classes<sp/>=<sp/>%d;<sp/><sp/>Num<sp/>permanent<sp/>classes<sp/>=<sp/>%d\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1aa644a299b7046916ce731566866df325" kindref="member">NumNonEmptyClasses</ref>,<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac4e39261d76ebdd092eeb754fe1e15c3" kindref="member">NumPermClasses</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Id<sp/><sp/>NC<sp/>NPC<sp/><sp/>NP<sp/>NPP\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>)-&gt;NumClasses;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>IClass<sp/>=<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a2083307ebe623a6617ff38291a2f3614" kindref="member">Class</ref>[i];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>AClass<sp/>=<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[i];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="adaptive_8h_1a1d2aa2b696e73525cb57373fcc5a83ae" kindref="member">IsEmptyAdaptedClass</ref><sp/>(AClass))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%5d<sp/><sp/>%s<sp/>%3d<sp/>%3d<sp/>%3d<sp/>%3d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(i),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>,<sp/>AClass-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref>,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>-<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>(AClass-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PrintAdaptedTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/><ref refid="adaptive_8cpp_1a0319827551564cc4815347fafb12ebc6" kindref="member">ReadAdaptedClass</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumTempProtos;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumConfigs;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref><sp/>TempProto;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>read<sp/>high<sp/>level<sp/>adapted<sp/>class<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>(<ref refid="adaptive_8h_1a1e42b7a7460500ee9e8b3d09a1f0330d" kindref="member">ADAPT_CLASS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS_STRUCT</ref>));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>definitions<sp/>of<sp/>the<sp/>permanent<sp/>protos<sp/>and<sp/>configs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(MAX_NUM_CONFIGS);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>),<sp/>File);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(MAX_NUM_CONFIGS),<sp/>File);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>list<sp/>of<sp/>temporary<sp/>protos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumTempProtos,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumTempProtos;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>TempProto<sp/>=</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="adaptive_8h_1a03dc56d9af9a82277b248c3b58267c25" kindref="member">TEMP_PROTO</ref>)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO_STRUCT</ref>),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TEMP_PROTO_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>TempProto,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a1019c2e1108695bb4f33f83e02ee62ad" kindref="member">push_last</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>,<sp/>TempProto);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>adapted<sp/>configs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumConfigs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumConfigs;<sp/>i++)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a1fcaa1765008eae77ee99631cf3c4555" kindref="member">Config</ref>[i].<ref refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g_1a2327d1db8e954280ae274a0dc106f99c" kindref="member">Perm</ref><sp/>=<sp/><ref refid="adaptive_8cpp_1a7bc232880f998a1280c8e4cda8219501" kindref="member">ReadPermConfig</ref><sp/>(File);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a1fcaa1765008eae77ee99631cf3c4555" kindref="member">Config</ref>[i].<ref refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g_1a72bae94de2c63cca7f4e00ca8874b556" kindref="member">Temp</ref><sp/>=<sp/><ref refid="adaptive_8cpp_1ae5320862b15744db04215279be302b25" kindref="member">ReadTempConfig</ref><sp/>(File);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Class);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ReadAdaptedClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/><ref refid="classtesseract_1_1_classify_1aa74ebd96d85efc39d71c37985e50c8aa" kindref="member">Classify::ReadAdaptedTemplates</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>read<sp/>the<sp/>high<sp/>level<sp/>adaptive<sp/>template<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>Templates<sp/>=<sp/>(<ref refid="adaptive_8h_1a41c6dcad3fe69d675809c177e5537812" kindref="member">ADAPT_TEMPLATES</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES_STRUCT</ref>));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Templates,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>basic<sp/>integer<sp/>templates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref><sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a98459996e5e6ab1dc1de71411fd32b89" kindref="member">ReadIntTemplates</ref><sp/>(File);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>adaptive<sp/>info<sp/>for<sp/>each<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>)-&gt;NumClasses;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[i]<sp/>=<sp/><ref refid="adaptive_8cpp_1a0319827551564cc4815347fafb12ebc6" kindref="member">ReadAdaptedClass</ref><sp/>(File);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Templates);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ReadAdaptedTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG</ref><sp/><ref refid="adaptive_8cpp_1a7bc232880f998a1280c8e4cda8219501" kindref="member">ReadPermConfig</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG</ref><sp/>Config<sp/>=<sp/>(<ref refid="adaptive_8h_1a461ee34b392d9264f8ff553d28029c52" kindref="member">PERM_CONFIG</ref>)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG_STRUCT</ref>),</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PERM_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>NumAmbigs;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumAmbigs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref><sp/>=<sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref>)<sp/>*<sp/>(NumAmbigs<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>fread(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref>),<sp/>NumAmbigs,<sp/>File);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref>[NumAmbigs]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>fread(&amp;(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1a81ce1dd96fbaed7c30c47bc6a1d19d92" kindref="member">FontinfoId</ref>),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Config);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ReadPermConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="adaptive_8cpp_1ae5320862b15744db04215279be302b25" kindref="member">ReadTempConfig</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>Config<sp/>=</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="adaptive_8h_1a844d69e71035a4a60207cedab3521f9e" kindref="member">TEMP_CONFIG</ref>)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG_STRUCT</ref>),</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TEMP_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Config,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref><sp/>*<sp/><ref refid="bitvec_8h_1a0bb2f0d77b12e8c8061c18e0edac99ca" kindref="member">BITSINLONG</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>fread<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref>,<sp/>File);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Config);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ReadTempConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a78e408661f8ca7de9554205ffa48781e" kindref="member">WriteAdaptedClass</ref>(FILE<sp/>*File,<sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumConfigs)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumTempProtos;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>TempProtos;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>write<sp/>high<sp/>level<sp/>adapted<sp/>class<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>definitions<sp/>of<sp/>the<sp/>permanent<sp/>protos<sp/>and<sp/>configs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>),<sp/>File);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(MAX_NUM_CONFIGS),<sp/>File);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>list<sp/>of<sp/>temporary<sp/>protos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>NumTempProtos<sp/>=<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumTempProtos,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>TempProtos<sp/>=<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref><sp/>(TempProtos)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>proto<sp/>=<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(TempProtos);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>proto,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>adapted<sp/>configs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumConfigs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumConfigs;<sp/>i++)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref>,<sp/>i))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a90dbf37fe253a2a933ebf53219c242f2" kindref="member">WritePermConfig</ref><sp/>(File,<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a1fcaa1765008eae77ee99631cf3c4555" kindref="member">Config</ref>[i].<ref refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g_1a2327d1db8e954280ae274a0dc106f99c" kindref="member">Perm</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1ae1843d3d2a73ecb6b9168146a1b1d133" kindref="member">WriteTempConfig</ref><sp/>(File,<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a1fcaa1765008eae77ee99631cf3c4555" kindref="member">Config</ref>[i].<ref refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g_1a72bae94de2c63cca7f4e00ca8874b556" kindref="member">Temp</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteAdaptedClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a1718afe45a09c6631f11ae224e6d5db6" kindref="member">Classify::WriteAdaptedTemplates</ref>(FILE<sp/>*File,<sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>write<sp/>the<sp/>high<sp/>level<sp/>adaptive<sp/>template<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Templates,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>basic<sp/>integer<sp/>templates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a81e8a5e5adfc60146ea3eb5b60936dd9" kindref="member">WriteIntTemplates</ref><sp/>(File,<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>adaptive<sp/>info<sp/>for<sp/>each<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>)-&gt;NumClasses;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1a78e408661f8ca7de9554205ffa48781e" kindref="member">WriteAdaptedClass</ref><sp/>(File,<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[i],</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a2083307ebe623a6617ff38291a2f3614" kindref="member">Class</ref>[i]-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteAdaptedTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="537"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1a90dbf37fe253a2a933ebf53219c242f2" kindref="member">WritePermConfig</ref>(FILE<sp/>*File,<sp/><ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG</ref><sp/>Config)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>NumAmbigs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>assert<sp/>(Config<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref>[NumAmbigs]<sp/>&gt;<sp/>0)<sp/>++NumAmbigs;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>fwrite((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;NumAmbigs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>fwrite(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref>),<sp/>NumAmbigs,<sp/>File);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>fwrite(&amp;(Config-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1a81ce1dd96fbaed7c30c47bc6a1d19d92" kindref="member">FontinfoId</ref>),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WritePermConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="561"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptive_8cpp_1ae1843d3d2a73ecb6b9168146a1b1d133" kindref="member">WriteTempConfig</ref>(FILE<sp/>*File,<sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/>Config)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>assert<sp/>(Config<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>contexts<sp/>not<sp/>yet<sp/>implemented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>assert<sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a59022330cdccbdc05e900c6aaf6e9f63" kindref="member">ContextsSeen</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Config,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>sizeof<sp/>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref>,<sp/>File);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteTempConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/adaptive.cpp"/>
  </compounddef>
</doxygen>
