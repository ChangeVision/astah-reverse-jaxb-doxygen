<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="imagefind_8cpp" kind="file">
    <compoundname>imagefind.cpp</compoundname>
    <includes refid="imagefind_8h" local="yes">imagefind.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="linlsq_8h" local="yes">linlsq.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="statistc_8h" local="yes">statistc.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes local="yes">allheaders.h</includes>
    <incdepgraph>
      <node id="38453">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="38423" relation="include">
        </childnode>
        <childnode refid="38454" relation="include">
        </childnode>
        <childnode refid="38455" relation="include">
        </childnode>
        <childnode refid="38460" relation="include">
        </childnode>
        <childnode refid="38467" relation="include">
        </childnode>
      </node>
      <node id="38470">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="38471" relation="include">
        </childnode>
        <childnode refid="38423" relation="include">
        </childnode>
        <childnode refid="38437" relation="include">
        </childnode>
        <childnode refid="38454" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38422" relation="include">
        </childnode>
      </node>
      <node id="38442">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="38422">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="38423" relation="include">
        </childnode>
        <childnode refid="38433" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
        <childnode refid="38451" relation="include">
        </childnode>
      </node>
      <node id="38467">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38418" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
      </node>
      <node id="38426">
        <label>stdlib.h</label>
      </node>
      <node id="38419">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="38420" relation="include">
        </childnode>
      </node>
      <node id="38450">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="38430" relation="include">
        </childnode>
      </node>
      <node id="38451">
        <label>allheaders.h</label>
      </node>
      <node id="38443">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
      </node>
      <node id="38425">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="38426" relation="include">
        </childnode>
        <childnode refid="38427" relation="include">
        </childnode>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38428" relation="include">
        </childnode>
        <childnode refid="38430" relation="include">
        </childnode>
        <childnode refid="38431" relation="include">
        </childnode>
      </node>
      <node id="38423">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38418" relation="include">
        </childnode>
        <childnode refid="38425" relation="include">
        </childnode>
        <childnode refid="38432" relation="include">
        </childnode>
      </node>
      <node id="38416">
        <label>textord/imagefind.cpp</label>
        <link refid="imagefind.cpp"/>
        <childnode refid="38417" relation="include">
        </childnode>
        <childnode refid="38421" relation="include">
        </childnode>
        <childnode refid="38474" relation="include">
        </childnode>
        <childnode refid="38442" relation="include">
        </childnode>
        <childnode refid="38467" relation="include">
        </childnode>
        <childnode refid="38445" relation="include">
        </childnode>
        <childnode refid="38451" relation="include">
        </childnode>
      </node>
      <node id="38456">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="38433" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
      </node>
      <node id="38429">
        <label>stddef.h</label>
      </node>
      <node id="38430">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="38418" relation="include">
        </childnode>
      </node>
      <node id="38465">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="38463" relation="include">
        </childnode>
        <childnode refid="38437" relation="include">
        </childnode>
        <childnode refid="38435" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
        <childnode refid="38466" relation="include">
        </childnode>
      </node>
      <node id="38420">
        <label>limits.h</label>
      </node>
      <node id="38469">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="38422" relation="include">
        </childnode>
        <childnode refid="38453" relation="include">
        </childnode>
        <childnode refid="38449" relation="include">
        </childnode>
        <childnode refid="38470" relation="include">
        </childnode>
      </node>
      <node id="38438">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="38436" relation="include">
        </childnode>
      </node>
      <node id="38439">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="38435" relation="include">
        </childnode>
      </node>
      <node id="38454">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38418" relation="include">
        </childnode>
        <childnode refid="38425" relation="include">
        </childnode>
        <childnode refid="38432" relation="include">
        </childnode>
      </node>
      <node id="38427">
        <label>string.h</label>
      </node>
      <node id="38441">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="38436" relation="include">
        </childnode>
        <childnode refid="38435" relation="include">
        </childnode>
        <childnode refid="38442" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
        <childnode refid="38444" relation="include">
        </childnode>
      </node>
      <node id="38440">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="38418" relation="include">
        </childnode>
      </node>
      <node id="38472">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="38447">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="38418" relation="include">
        </childnode>
      </node>
      <node id="38421">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="38422" relation="include">
        </childnode>
        <childnode refid="38452" relation="include">
        </childnode>
        <childnode refid="38473" relation="include">
        </childnode>
      </node>
      <node id="38433">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="38434" relation="include">
        </childnode>
        <childnode refid="38439" relation="include">
        </childnode>
        <childnode refid="38440" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38450" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
      </node>
      <node id="38455">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="38445" relation="include">
        </childnode>
        <childnode refid="38440" relation="include">
        </childnode>
        <childnode refid="38454" relation="include">
        </childnode>
        <childnode refid="38449" relation="include">
        </childnode>
        <childnode refid="38450" relation="include">
        </childnode>
        <childnode refid="38456" relation="include">
        </childnode>
        <childnode refid="38457" relation="include">
        </childnode>
      </node>
      <node id="38457">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38458" relation="include">
        </childnode>
        <childnode refid="38455" relation="include">
        </childnode>
      </node>
      <node id="38431">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="38430" relation="include">
        </childnode>
      </node>
      <node id="38474">
        <label>linlsq.h</label>
        <link refid="linlsq_8h"/>
        <childnode refid="38435" relation="include">
        </childnode>
        <childnode refid="38445" relation="include">
        </childnode>
      </node>
      <node id="38468">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="38469" relation="include">
        </childnode>
        <childnode refid="38447" relation="include">
        </childnode>
        <childnode refid="38470" relation="include">
        </childnode>
        <childnode refid="38472" relation="include">
        </childnode>
      </node>
      <node id="38436">
        <label>math.h</label>
      </node>
      <node id="38434">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="38435" relation="include">
        </childnode>
        <childnode refid="38439" relation="include">
        </childnode>
      </node>
      <node id="38432">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="38430" relation="include">
        </childnode>
      </node>
      <node id="38459">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="38435" relation="include">
        </childnode>
      </node>
      <node id="38463">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="38460">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="38461" relation="include">
        </childnode>
        <childnode refid="38462" relation="include">
        </childnode>
        <childnode refid="38457" relation="include">
        </childnode>
        <childnode refid="38464" relation="include">
        </childnode>
      </node>
      <node id="38445">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38446" relation="include">
        </childnode>
        <childnode refid="38449" relation="include">
        </childnode>
      </node>
      <node id="38446">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38426" relation="include">
        </childnode>
        <childnode refid="38447" relation="include">
        </childnode>
        <childnode refid="38430" relation="include">
        </childnode>
        <childnode refid="38448" relation="include">
        </childnode>
        <childnode refid="38442" relation="include">
        </childnode>
      </node>
      <node id="38428">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="38429" relation="include">
        </childnode>
        <childnode refid="38418" relation="include">
        </childnode>
      </node>
      <node id="38471">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="38422" relation="include">
        </childnode>
        <childnode refid="38453" relation="include">
        </childnode>
      </node>
      <node id="38462">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="38463" relation="include">
        </childnode>
        <childnode refid="38437" relation="include">
        </childnode>
        <childnode refid="38449" relation="include">
        </childnode>
      </node>
      <node id="38437">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38418" relation="include">
        </childnode>
        <childnode refid="38425" relation="include">
        </childnode>
        <childnode refid="38432" relation="include">
        </childnode>
      </node>
      <node id="38452">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="38422" relation="include">
        </childnode>
        <childnode refid="38453" relation="include">
        </childnode>
        <childnode refid="38442" relation="include">
        </childnode>
        <childnode refid="38460" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38443" relation="include">
        </childnode>
        <childnode refid="38468" relation="include">
        </childnode>
        <childnode refid="38470" relation="include">
        </childnode>
      </node>
      <node id="38417">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="38418" relation="include">
        </childnode>
      </node>
      <node id="38435">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38436" relation="include">
        </childnode>
        <childnode refid="38437" relation="include">
        </childnode>
        <childnode refid="38438" relation="include">
        </childnode>
      </node>
      <node id="38461">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="38428" relation="include">
        </childnode>
      </node>
      <node id="38444">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="38445" relation="include">
        </childnode>
      </node>
      <node id="38466">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="38418">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="38419" relation="include">
        </childnode>
      </node>
      <node id="38464">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="38423" relation="include">
        </childnode>
        <childnode refid="38461" relation="include">
        </childnode>
        <childnode refid="38449" relation="include">
        </childnode>
        <childnode refid="38465" relation="include">
        </childnode>
        <childnode refid="38466" relation="include">
        </childnode>
      </node>
      <node id="38473">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="38452" relation="include">
        </childnode>
        <childnode refid="38446" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
        <childnode refid="38470" relation="include">
        </childnode>
      </node>
      <node id="38424">
        <label>stdio.h</label>
      </node>
      <node id="38449">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38427" relation="include">
        </childnode>
        <childnode refid="38419" relation="include">
        </childnode>
        <childnode refid="38428" relation="include">
        </childnode>
      </node>
      <node id="38448">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="38424" relation="include">
        </childnode>
        <childnode refid="38427" relation="include">
        </childnode>
      </node>
      <node id="38458">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="38459" relation="include">
        </childnode>
        <childnode refid="38425" relation="include">
        </childnode>
        <childnode refid="38428" relation="include">
        </childnode>
        <childnode refid="38441" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="imagefind_8cpp_1a8d2d3f88e3cffab590c829815f967467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INT_VAR</definition>
        <argsstring>(textord_tabfind_show_images, false,&quot;Show image blobs&quot;)</argsstring>
        <name>INT_VAR</name>
        <param>
          <type>textord_tabfind_show_images</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show image blobs&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imagefind.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Function<sp/>to<sp/>find<sp/>image<sp/>and<sp/>drawing<sp/>regions<sp/>in<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>create<sp/>a<sp/>corresponding<sp/>list<sp/>of<sp/>empty<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Mar<sp/>20<sp/>09:49:01<sp/>PDT<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagefind_8h" kindref="compound">imagefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linlsq_8h" kindref="compound">linlsq.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistc_8h" kindref="compound">statistc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entire<sp/>file<sp/>is<sp/>dependent<sp/>upon<sp/>leptonica.<sp/>If<sp/>you<sp/>don&apos;t<sp/>have<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>don&apos;t<sp/>get<sp/>this<sp/>functionality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="params_8h_1a554d43d0cf0e3f9552921941d9e147bd" kindref="member">INT_VAR</ref>(textord_tabfind_show_images,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>image<sp/>blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>width<sp/>or<sp/>height<sp/>of<sp/>on<sp/>pixels<sp/>that<sp/>can<sp/>be<sp/>discarded<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>roughly<sp/>rectangular<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1f21fe8acb13b4e1904e1d1157183d0d" kindref="member">kMinRectangularFraction</ref><sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>width<sp/>or<sp/>height<sp/>to<sp/>consider<sp/>image<sp/>completely<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae6dc7638052b18db703d824259f9d39e" kindref="member">kMaxRectangularFraction</ref><sp/>=<sp/>0.75;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>width<sp/>or<sp/>height<sp/>to<sp/>allow<sp/>transition<sp/>from<sp/>kMinRectangularFraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>kMaxRectangularFraction,<sp/>equivalent<sp/>to<sp/>a<sp/>dy/dx<sp/>skew.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac980c05231fe3f7a8cb4c7ed7f9b6516" kindref="member">kMaxRectangularGradient</ref><sp/>=<sp/>0.1;<sp/><sp/></highlight><highlight class="comment">//<sp/>About<sp/>6<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>image<sp/>size<sp/>to<sp/>be<sp/>worth<sp/>looking<sp/>for<sp/>images<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" kindref="member">kMinImageFindSize</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scale<sp/>factor<sp/>for<sp/>the<sp/>rms<sp/>color<sp/>fit<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a351af5b8ad4d2b3fd95e59d758f13e7a" kindref="member">kRMSFitScaling</ref><sp/>=<sp/>8.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>color<sp/>difference<sp/>to<sp/>call<sp/>it<sp/>two<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa76be4c175875d95748cec9f9d5467e3" kindref="member">kMinColorDifference</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pixel<sp/>padding<sp/>for<sp/>noise<sp/>blobs<sp/>and<sp/>partitions<sp/>when<sp/>rendering<sp/>on<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mask<sp/>to<sp/>encourage<sp/>them<sp/>to<sp/>join<sp/>together.<sp/>Make<sp/>it<sp/>too<sp/>big<sp/>and<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>fatten<sp/>out<sp/>too<sp/>much<sp/>and<sp/>have<sp/>to<sp/>be<sp/>clipped<sp/>to<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3b862db5dec2761daccc3215b5082c4f" kindref="member">kNoisePadding</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>image<sp/>regions<sp/>within<sp/>the<sp/>BINARY<sp/>source<sp/>pix<sp/>(page<sp/>image)<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>image<sp/>regions<sp/>as<sp/>a<sp/>mask<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>pix<sp/>may<sp/>be<sp/>NULL,<sp/>meaning<sp/>no<sp/>images<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>NULL,<sp/>it<sp/>must<sp/>be<sp/>PixDestroyed<sp/>by<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">Pix*<sp/><ref refid="classtesseract_1_1_image_find_1af465be1a567090dcaaa74eb7742c51fe" kindref="member">ImageFind::FindImages</ref>(Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>worth<sp/>looking<sp/>at<sp/>small<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixGetWidth(pix)<sp/>&lt;<sp/><ref refid="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" kindref="member">kMinImageFindSize</ref><sp/>||</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixGetHeight(pix)<sp/>&lt;<sp/><ref refid="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" kindref="member">kMinImageFindSize</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pixCreate(pixGetWidth(pix),<sp/>pixGetHeight(pix),<sp/>1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>by<sp/>factor<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>Pix<sp/>*pixr<sp/>=<sp/>pixReduceRankBinaryCascade(pix,<sp/>1,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>pixDisplayWrite(pixr,<sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>halftone<sp/>mask<sp/>directly<sp/>from<sp/>Leptonica.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>l_int32<sp/>ht_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>Pix<sp/>*pixht2<sp/>=<sp/>pixGenHalftoneMask(pixr,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;ht_found,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixr);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ht_found<sp/>&amp;&amp;<sp/>pixht2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pixht2);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixht2<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pixCreate(pixGetWidth(pix),<sp/>pixGetHeight(pix),<sp/>1);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>back<sp/>up<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>Pix<sp/>*pixht<sp/>=<sp/>pixExpandReplicate(pixht2,<sp/>2);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>pixDisplayWrite(pixht,<sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixht2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>to<sp/>capture<sp/>pixels<sp/>near<sp/>the<sp/>mask<sp/>edges<sp/>that<sp/>were<sp/>missed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>Pix<sp/>*pixt<sp/>=<sp/>pixSeedfillBinary(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pixht,<sp/>pix,<sp/>8);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>pixOr(pixht,<sp/>pixht,<sp/>pixt);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixt);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminate<sp/>lines<sp/>and<sp/>bars<sp/>that<sp/>may<sp/>be<sp/>joined<sp/>to<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixfinemask<sp/>=<sp/>pixReduceRankBinaryCascade(pixht,<sp/>1,<sp/>1,<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>pixDilateBrick(pixfinemask,<sp/>pixfinemask,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>pixDisplayWrite(pixfinemask,<sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixreduced<sp/>=<sp/>pixReduceRankBinaryCascade(pixht,<sp/>1,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixreduced2<sp/>=<sp/>pixReduceRankBinaryCascade(pixreduced,<sp/>3,<sp/>3,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixreduced);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>pixDilateBrick(pixreduced2,<sp/>pixreduced2,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixcoarsemask<sp/>=<sp/>pixExpandReplicate(pixreduced2,<sp/>8);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixreduced2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>pixDisplayWrite(pixcoarsemask,<sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>the<sp/>coarse<sp/>and<sp/>fine<sp/>image<sp/>masks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>pixAnd(pixcoarsemask,<sp/>pixcoarsemask,<sp/>pixfinemask);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixfinemask);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dilate<sp/>a<sp/>bit<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>get<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pixDilateBrick(pixcoarsemask,<sp/>pixcoarsemask,<sp/>3,<sp/>3);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixmask<sp/>=<sp/>pixExpandReplicate(pixcoarsemask,<sp/>16);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixcoarsemask);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;junkexpandedcoarsemask.png&quot;</highlight><highlight class="normal">,<sp/>pixmask,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>image<sp/>mask<sp/>with<sp/>the<sp/>line<sp/>and<sp/>bar<sp/>remover.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>pixAnd(pixht,<sp/>pixht,<sp/>pixmask);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixmask);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;junkfinalimagemask.png&quot;</highlight><highlight class="normal">,<sp/>pixht,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>result<sp/>image<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>Pix*<sp/>result<sp/>=<sp/>pixCreate(pixGetWidth(pix),<sp/>pixGetHeight(pix),<sp/>1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>pixOr(result,<sp/>result,<sp/>pixht);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixht);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generates<sp/>a<sp/>Boxa,<sp/>Pixa<sp/>pair<sp/>from<sp/>the<sp/>input<sp/>binary<sp/>(image<sp/>mask)<sp/>pix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>analgous<sp/>to<sp/>pixConnComp,<sp/>except<sp/>that<sp/>connected<sp/>components<sp/>which<sp/>are<sp/>nearly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectangular<sp/>are<sp/>replaced<sp/>with<sp/>solid<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>boxa,<sp/>pixa<sp/>may<sp/>be<sp/>NULL,<sp/>meaning<sp/>no<sp/>images<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>NULL,<sp/>they<sp/>must<sp/>be<sp/>destroyed<sp/>by<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resolution<sp/>of<sp/>pix<sp/>should<sp/>match<sp/>the<sp/>source<sp/>image<sp/>(Tesseract::pix_binary_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>output<sp/>coordinate<sp/>systems<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a43d1cc728fa439676891e5655dadb595" kindref="member">ImageFind::ConnCompAndRectangularize</ref>(Pix*<sp/>pix,<sp/>Boxa**<sp/>boxa,<sp/>Pixa**<sp/>pixa)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>*boxa<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>*pixa<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;junkconncompimage.png&quot;</highlight><highlight class="normal">,<sp/>pix,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>individual<sp/>image<sp/>regions<sp/>in<sp/>the<sp/>mask<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>*boxa<sp/>=<sp/>pixConnComp(pix,<sp/>pixa,<sp/>8);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rectangularize<sp/>the<sp/>individual<sp/>images.<sp/>If<sp/>a<sp/>sharp<sp/>edge<sp/>in<sp/>vertical<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>occupancy<sp/>can<sp/>be<sp/>found,<sp/>it<sp/>indicates<sp/>a<sp/>probably<sp/>rectangular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>with<sp/>unwanted<sp/>bits<sp/>merged<sp/>on,<sp/>so<sp/>clip<sp/>to<sp/>the<sp/>approximate<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>npixes<sp/>=<sp/>pixaGetCount(*pixa);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>npixes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/>x_end,<sp/>y_start,<sp/>y_end;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>img_pix<sp/>=<sp/>pixaGetPix(*pixa,<sp/>i,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDisplayWrite(img_pix,<sp/>textord_tabfind_show_images);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_image_find_1a3797147bcff0b7fd5ffee3f818770165" kindref="member">pixNearlyRectangular</ref>(img_pix,<sp/><ref refid="namespacetesseract_1a1f21fe8acb13b4e1904e1d1157183d0d" kindref="member">kMinRectangularFraction</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ae6dc7638052b18db703d824259f9d39e" kindref="member">kMaxRectangularFraction</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ac980c05231fe3f7a8cb4c7ed7f9b6516" kindref="member">kMaxRectangularGradient</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x_start,<sp/>&amp;y_start,<sp/>&amp;x_end,<sp/>&amp;y_end))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>simple_pix<sp/>=<sp/>pixCreate(x_end<sp/>-<sp/>x_start,<sp/>y_end<sp/>-<sp/>y_start,<sp/>1);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixSetAll(simple_pix);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixDestroy(&amp;img_pix);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixaReplacePix<sp/>takes<sp/>ownership<sp/>of<sp/>the<sp/>simple_pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixaReplacePix(*pixa,<sp/>i,<sp/>simple_pix,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>img_pix<sp/>=<sp/>pixaGetPix(*pixa,<sp/>i,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>the<sp/>box<sp/>to<sp/>match<sp/>the<sp/>new<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_int32<sp/>x,<sp/>y,<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaGetBoxGeometry(*boxa,<sp/>i,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box*<sp/>simple_box<sp/>=<sp/>boxCreate(x<sp/>+<sp/>x_start,<sp/>y<sp/>+<sp/>y_start,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_end<sp/>-<sp/>x_start,<sp/>y_end<sp/>-<sp/>y_start);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaReplaceBox(*boxa,<sp/>i,<sp/>simple_box);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;img_pix);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scans<sp/>horizontally<sp/>on<sp/>x=[x_start,x_end),<sp/>starting<sp/>with<sp/>y=*y_start,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stepping<sp/>y+=y_step,<sp/>until<sp/>y=y_end.<sp/>*ystart<sp/>is<sp/>input/output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>black<sp/>pixels<sp/>in<sp/>a<sp/>row,<sp/>pix_count<sp/>fits<sp/>this<sp/>pattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>more<sp/>rows<sp/>with<sp/>pix_count<sp/>&lt;<sp/>min_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>mid_width<sp/>rows<sp/>with<sp/>min_count<sp/>&lt;=<sp/>pix_count<sp/>&lt;=<sp/>max_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>row<sp/>with<sp/>pix_count<sp/>&gt;<sp/>max_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true<sp/>is<sp/>returned,<sp/>and<sp/>*y_start<sp/>=<sp/>the<sp/>first<sp/>y<sp/>with<sp/>pix_count<sp/>&gt;=<sp/>min_count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HScanForEdge(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_end,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_start)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>*y_start;<sp/>y<sp/>!=<sp/>y_end;<sp/>y<sp/>+=<sp/>y_step)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>pixCountPixelsInRow(pix,<sp/>y,<sp/>&amp;pix_count,<sp/>NULL)<sp/>to<sp/>count<sp/>in<sp/>a<sp/>subset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>line<sp/>=<sp/>data<sp/>+<sp/>wpl<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x_start;<sp/>x<sp/>&lt;<sp/>x_end;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GET_DATA_BIT(line,<sp/>x))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pix_count;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_rows<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pix_count<sp/>&lt;<sp/>min_count)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>min<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_rows<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*y_start<sp/>=<sp/>y;<sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>y_start<sp/>where<sp/>we<sp/>came<sp/>out<sp/>of<sp/>the<sp/>min<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix_count<sp/>&gt;<sp/>max_count)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>the<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>++mid_rows;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_rows<sp/>&gt;<sp/>mid_width)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Middle<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>found<sp/>max_count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scans<sp/>vertically<sp/>on<sp/>y=[y_start,y_end),<sp/>starting<sp/>with<sp/>x=*x_start,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stepping<sp/>x+=x_step,<sp/>until<sp/>x=x_end.<sp/>*x_start<sp/>is<sp/>input/output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>black<sp/>pixels<sp/>in<sp/>a<sp/>column,<sp/>pix_count<sp/>fits<sp/>this<sp/>pattern:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>more<sp/>cols<sp/>with<sp/>pix_count<sp/>&lt;<sp/>min_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>mid_width<sp/>cols<sp/>with<sp/>min_count<sp/>&lt;=<sp/>pix_count<sp/>&lt;=<sp/>max_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>column<sp/>with<sp/>pix_count<sp/>&gt;<sp/>max_count<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true<sp/>is<sp/>returned,<sp/>and<sp/>*x_start<sp/>=<sp/>the<sp/>first<sp/>x<sp/>with<sp/>pix_count<sp/>&gt;=<sp/>min_count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>VScanForEdge(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_end,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_start)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>*x_start;<sp/>x<sp/>!=<sp/>x_end;<sp/>x<sp/>+=<sp/>x_step)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>line<sp/>=<sp/>data<sp/>+<sp/>y_start<sp/>*<sp/>wpl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y_start;<sp/>y<sp/>&lt;<sp/>y_end;<sp/>++y,<sp/>line<sp/>+=<sp/>wpl)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GET_DATA_BIT(line,<sp/>x))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pix_count;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_cols<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pix_count<sp/>&lt;<sp/>min_count)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>min<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_cols<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x_start<sp/>=<sp/>x;<sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>place<sp/>where<sp/>we<sp/>came<sp/>out<sp/>of<sp/>the<sp/>min<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix_count<sp/>&gt;<sp/>max_count)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>the<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>++mid_cols;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_cols<sp/>&gt;<sp/>mid_width)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Middle<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>found<sp/>max_count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>a<sp/>rectangle<sp/>in<sp/>the<sp/>source<sp/>pix,<sp/>such<sp/>that<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixel<sp/>rows<sp/>and<sp/>column<sp/>slices<sp/>outside<sp/>of<sp/>it<sp/>have<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>min_fraction<sp/>of<sp/>the<sp/>pixels<sp/>black,<sp/>and<sp/>within<sp/>max_skew_gradient<sp/>fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>pixels<sp/>on<sp/>the<sp/>inside,<sp/>there<sp/>are<sp/>at<sp/>least<sp/>max_fraction<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixels<sp/>black.<sp/>In<sp/>other<sp/>words,<sp/>the<sp/>inside<sp/>of<sp/>the<sp/>rectangle<sp/>looks<sp/>roughly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectangular,<sp/>and<sp/>the<sp/>outside<sp/>of<sp/>it<sp/>looks<sp/>like<sp/>extra<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>return,<sp/>the<sp/>rectangle<sp/>is<sp/>defined<sp/>by<sp/>x_start,<sp/>y_start,<sp/>x_end<sp/>and<sp/>y_end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>the<sp/>algorithm<sp/>is<sp/>iterative,<sp/>allowing<sp/>it<sp/>to<sp/>slice<sp/>off<sp/>pixels<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>edge,<sp/>allowing<sp/>it<sp/>to<sp/>then<sp/>slice<sp/>off<sp/>more<sp/>pixels<sp/>from<sp/>another<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a3797147bcff0b7fd5ffee3f818770165" kindref="member">ImageFind::pixNearlyRectangular</ref>(Pix*<sp/>pix,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_fraction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_fraction,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_skew_gradient,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_start,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_end)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(pix<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>*x_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>*x_end<sp/>=<sp/>pixGetWidth(pix);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>*y_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>*y_end<sp/>=<sp/>pixGetHeight(pix);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(pix);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>top_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bottom_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>top/bottom<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>*x_end<sp/>-<sp/>*x_start;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width<sp/>*<sp/>min_fraction);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width<sp/>*<sp/>max_fraction);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_width<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width<sp/>*<sp/>max_skew_gradient);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HScanForEdge(data,<sp/>wpl,<sp/>*x_start,<sp/>*x_end,<sp/>min_count,<sp/>edge_width,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count,<sp/>*y_end,<sp/>1,<sp/>y_start)<sp/>&amp;&amp;<sp/>!top_done)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>--(*y_end);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HScanForEdge(data,<sp/>wpl,<sp/>*x_start,<sp/>*x_end,<sp/>min_count,<sp/>edge_width,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count,<sp/>*y_start,<sp/>-1,<sp/>y_end)<sp/>&amp;&amp;<sp/>!bottom_done)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>++(*y_end);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>left/right<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>*y_end<sp/>-<sp/>*y_start;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>min_count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(height<sp/>*<sp/>min_fraction);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>max_count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(height<sp/>*<sp/>max_fraction);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_width<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(height<sp/>*<sp/>max_skew_gradient);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VScanForEdge(data,<sp/>wpl,<sp/>*y_start,<sp/>*y_end,<sp/>min_count,<sp/>edge_width,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count,<sp/>*x_end,<sp/>1,<sp/>x_start)<sp/>&amp;&amp;<sp/>!left_done)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>--(*x_end);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VScanForEdge(data,<sp/>wpl,<sp/>*y_start,<sp/>*y_end,<sp/>min_count,<sp/>edge_width,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_count,<sp/>*x_start,<sp/>-1,<sp/>x_end)<sp/>&amp;&amp;<sp/>!right_done)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_cut<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>++(*x_end);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(any_cut);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>edges<sp/>must<sp/>satisfy<sp/>the<sp/>condition<sp/>of<sp/>sharp<sp/>gradient<sp/>in<sp/>pixel<sp/>density</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>order<sp/>for<sp/>the<sp/>full<sp/>rectangle<sp/>to<sp/>be<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left_done<sp/>&amp;&amp;<sp/>right_done<sp/>&amp;&amp;<sp/>top_done<sp/>&amp;&amp;<sp/>bottom_done;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>an<sp/>input<sp/>pix,<sp/>and<sp/>a<sp/>bounding<sp/>rectangle,<sp/>the<sp/>sides<sp/>of<sp/>the<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>shrunk<sp/>inwards<sp/>until<sp/>they<sp/>bound<sp/>any<sp/>black<sp/>pixels<sp/>found<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>original<sp/>rectangle.<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>rectangle<sp/>contains<sp/>no<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pixels<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a98363e328fcc349cfdc5a7ea72ac77d9" kindref="member">ImageFind::BoundsWithinRect</ref>(Pix*<sp/>pix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_start,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_end)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>Box*<sp/>input_box<sp/>=<sp/>boxCreate(*x_start,<sp/>*y_start,<sp/>*x_end<sp/>-<sp/>*x_start,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y_end<sp/>-<sp/>*y_start);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>Box*<sp/>output_box<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>pixClipBoxToForeground(pix,<sp/>input_box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;output_box);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>output_box<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>l_int32<sp/>x,<sp/>y,<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>boxGetGeometry(output_box,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>*x_start<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>*y_start<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>*x_end<sp/>=<sp/>x<sp/>+<sp/>width;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>*y_end<sp/>=<sp/>y<sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>boxDestroy(&amp;output_box);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>boxDestroy(&amp;input_box);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>a<sp/>point<sp/>in<sp/>3-D<sp/>(RGB)<sp/>space,<sp/>returns<sp/>the<sp/>squared<sp/>Euclidean<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>point<sp/>from<sp/>the<sp/>given<sp/>line,<sp/>defined<sp/>by<sp/>a<sp/>pair<sp/>of<sp/>points<sp/>in<sp/>the<sp/>3-D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(RGB)<sp/>space,<sp/>line1<sp/>and<sp/>line2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a2164c90398c78d8343f4bebec81f8341" kindref="member">ImageFind::ColorDistanceFromLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>line1,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>line2,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>point)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_vector[<ref refid="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" kindref="member">kRGBRMSColors</ref>];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point_vector[<ref refid="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" kindref="member">kRGBRMSColors</ref>];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" kindref="member">kRGBRMSColors</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>line_vector[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(line2[i])<sp/>-<sp/>static_cast&lt;int&gt;(line1[i]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>point_vector[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(point[i])<sp/>-<sp/>static_cast&lt;int&gt;(line1[i]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>line_vector[L_ALPHA_CHANNEL]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>the<sp/>cross<sp/>product<sp/>in<sp/>3d.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cross[<ref refid="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" kindref="member">kRGBRMSColors</ref>];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>cross[COLOR_RED]<sp/>=<sp/>line_vector[COLOR_GREEN]<sp/>*<sp/>point_vector[COLOR_BLUE]</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>line_vector[COLOR_BLUE]<sp/>*<sp/>point_vector[COLOR_GREEN];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>cross[COLOR_GREEN]<sp/>=<sp/>line_vector[COLOR_BLUE]<sp/>*<sp/>point_vector[COLOR_RED]</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>line_vector[COLOR_RED]<sp/>*<sp/>point_vector[COLOR_BLUE];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>cross[COLOR_BLUE]<sp/>=<sp/>line_vector[COLOR_RED]<sp/>*<sp/>point_vector[COLOR_GREEN]</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>line_vector[COLOR_GREEN]<sp/>*<sp/>point_vector[COLOR_RED];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>cross[L_ALPHA_CHANNEL]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>the<sp/>sums<sp/>of<sp/>the<sp/>squares.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cross_sq<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>line_sq<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" kindref="member">kRGBRMSColors</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>cross_sq<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cross[j])<sp/>*<sp/>cross[j];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>line_sq<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(line_vector[j])<sp/>*<sp/>line_vector[j];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_sq<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cross_sq<sp/>/<sp/>line_sq;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>squared<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>leptonica<sp/>combined<sp/>code<sp/>for<sp/>the<sp/>given<sp/>RGB<sp/>triplet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/><ref refid="classtesseract_1_1_image_find_1aa660fcf01330a75513f168b6b7f21082" kindref="member">ImageFind::ComposeRGB</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>r,<sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/><ref refid="imgscale_8cpp_1a903837bbd632ce4c73eebe5852874a71" kindref="member">g</ref>,<sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>l_uint32<sp/>result;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>composeRGBPixel(r,<sp/>g,<sp/>b,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>input<sp/>value<sp/>clipped<sp/>to<sp/>a<sp/>uinT8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ImageFind::ClipToByte</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pixel)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&gt;=<sp/>255.0)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>255;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pixel);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>light<sp/>and<sp/>dark<sp/>extremes<sp/>of<sp/>color<sp/>in<sp/>the<sp/>given<sp/>rectangle<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>pix,<sp/>which<sp/>is<sp/>factor<sp/>smaller<sp/>than<sp/>the<sp/>coordinate<sp/>system<sp/>in<sp/>rect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>light<sp/>and<sp/>dark<sp/>points<sp/>are<sp/>taken<sp/>to<sp/>be<sp/>the<sp/>upper<sp/>and<sp/>lower<sp/>8th-ile<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>most<sp/>deviant<sp/>of<sp/>R,<sp/>G<sp/>and<sp/>B.<sp/>The<sp/>value<sp/>of<sp/>the<sp/>other<sp/>2<sp/>channels<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computed<sp/>by<sp/>linear<sp/>fit<sp/>against<sp/>the<sp/>most<sp/>deviant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>colors<sp/>of<sp/>the<sp/>two<sp/>points<sp/>are<sp/>returned<sp/>in<sp/>color1<sp/>and<sp/>color2,<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alpha<sp/>channel<sp/>set<sp/>to<sp/>a<sp/>scaled<sp/>mean<sp/>rms<sp/>of<sp/>the<sp/>fits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>color_map1<sp/>is<sp/>not<sp/>null<sp/>then<sp/>it<sp/>and<sp/>color_map2<sp/>get<sp/>rect<sp/>pasted<sp/>in<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>two<sp/>calculated<sp/>colors,<sp/>and<sp/>rms<sp/>map<sp/>gets<sp/>a<sp/>pasted<sp/>rect<sp/>of<sp/>the<sp/>rms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>color_map1,<sp/>color_map2<sp/>and<sp/>rms_map<sp/>are<sp/>assumed<sp/>to<sp/>be<sp/>the<sp/>same<sp/>scale<sp/>as<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a642f61eaa3639dfe013615737ea02c41" kindref="member">ImageFind::ComputeRectangleColors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>rect,<sp/>Pix*<sp/>pix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>factor,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>color_map1,<sp/>Pix*<sp/>color_map2,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>rms_map,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>color1,<sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>color2)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(pix<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>pixGetDepth(pix)<sp/>==<sp/>32);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>rectangle<sp/>outwards<sp/>by<sp/>2<sp/>(scaled)<sp/>pixels<sp/>if<sp/>possible<sp/>to<sp/>get<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>background.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(pix);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(pix);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_pad<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(rect.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>2<sp/>*<sp/>factor,<sp/>0)<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_pad<sp/>=<sp/>(rect.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>2<sp/>*<sp/>factor<sp/>+<sp/>(factor<sp/>-<sp/>1))<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>top_pad<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(height,<sp/>top_pad);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_pad<sp/>=<sp/>(rect.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>2<sp/>*<sp/>factor<sp/>+<sp/>(factor<sp/>-<sp/>1))<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>right_pad<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(width,<sp/>right_pad);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_pad<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(rect.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>2<sp/>*<sp/>factor,<sp/>0)<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_pad<sp/>=<sp/>right_pad<sp/>-<sp/>left_pad;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_pad<sp/>=<sp/>top_pad<sp/>-<sp/>bottom_pad;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_pad<sp/>&lt;<sp/>1<sp/>||<sp/>height_pad<sp/>&lt;<sp/>1<sp/>||<sp/>width_pad<sp/>+<sp/>height_pad<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>crop<sp/>the<sp/>pix<sp/>to<sp/>the<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>Box*<sp/>scaled_box<sp/>=<sp/>boxCreate(left_pad,<sp/>height<sp/>-<sp/>top_pad,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_pad,<sp/>height_pad);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>Pix*<sp/>scaled<sp/>=<sp/>pixClipRectangle(pix,<sp/>scaled_box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>stats<sp/>over<sp/>the<sp/>whole<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>red_stats(0,<sp/>256);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>green_stats(0,<sp/>256);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>blue_stats(0,<sp/>256);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(scaled);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(pixGetWpl(scaled)<sp/>==<sp/>width_pad);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height_pad;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width_pad;<sp/>++x,<sp/>++data)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>COLOR_RED);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a903837bbd632ce4c73eebe5852874a71" kindref="member">g</ref><sp/>=<sp/>GET_DATA_BYTE(data,<sp/>COLOR_GREEN);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>COLOR_BLUE);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>red_stats.add(r,<sp/>1);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green_stats.add(g,<sp/>1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue_stats.add(b,<sp/>1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>RGB<sp/>component<sp/>with<sp/>the<sp/>greatest<sp/>8th-ile-range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>8th-iles<sp/>are<sp/>used<sp/>instead<sp/>of<sp/>quartiles<sp/>to<sp/>get<sp/>closer<sp/>to<sp/>the<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>foreground<sp/>color,<sp/>which<sp/>is<sp/>going<sp/>to<sp/>be<sp/>faint<sp/>at<sp/>best<sp/>because<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pre-scaling<sp/>of<sp/>the<sp/>input<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_l8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(red_stats.ile(0.125<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_u8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ceil(red_stats.ile(0.875f)));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_i8r<sp/>=<sp/>best_u8<sp/>-<sp/>best_l8;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_color<sp/>=<sp/>COLOR_RED;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1_color<sp/>=<sp/>COLOR_GREEN;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2_color<sp/>=<sp/>COLOR_BLUE;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(green_stats.ile(0.125<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ceil(green_stats.ile(0.875f)));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8<sp/>-<sp/>l8<sp/>&gt;<sp/>best_i8r)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>best_i8r<sp/>=<sp/>u8<sp/>-<sp/>l8;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>best_l8<sp/>=<sp/>l8;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>best_u8<sp/>=<sp/>u8;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>x_color<sp/>=<sp/>COLOR_GREEN;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>y1_color<sp/>=<sp/>COLOR_RED;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>l8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(blue_stats.ile(0.125<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>u8<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ceil(blue_stats.ile(0.875f)));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8<sp/>-<sp/>l8<sp/>&gt;<sp/>best_i8r)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>best_i8r<sp/>=<sp/>u8<sp/>-<sp/>l8;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>best_l8<sp/>=<sp/>l8;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>best_u8<sp/>=<sp/>u8;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>x_color<sp/>=<sp/>COLOR_BLUE;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>y1_color<sp/>=<sp/>COLOR_GREEN;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>y2_color<sp/>=<sp/>COLOR_RED;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_i8r<sp/>&gt;=<sp/><ref refid="namespacetesseract_1aa76be4c175875d95748cec9f9d5467e3" kindref="member">kMinColorDifference</ref>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_l_s_q" kindref="compound">LLSQ</ref><sp/>line1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_l_s_q" kindref="compound">LLSQ</ref><sp/>line2;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(scaled);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>im_y<sp/>=<sp/>0;<sp/>im_y<sp/>&lt;<sp/>height_pad;<sp/>++im_y)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>im_x<sp/>=<sp/>0;<sp/>im_x<sp/>&lt;<sp/>width_pad;<sp/>++im_x,<sp/>++data)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x_color);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>y1_color);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>y2_color);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line1.<ref refid="class_l_l_s_q_1aa439294be0539828cf042f8941125b3c" kindref="member">add</ref>(x,<sp/>y1);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line2.<ref refid="class_l_l_s_q_1aa439294be0539828cf042f8941125b3c" kindref="member">add</ref>(x,<sp/>y2);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1<sp/>=<sp/>line1.<ref refid="class_l_l_s_q_1ad3aed3a5a46cf180dd80893c1034aa9e" kindref="member">m</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>line1.<ref refid="class_l_l_s_q_1af66af81c0276216acfa659178189019f" kindref="member">c</ref>(m1);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2<sp/>=<sp/>line2.<ref refid="class_l_l_s_q_1ad3aed3a5a46cf180dd80893c1034aa9e" kindref="member">m</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>line2.<ref refid="class_l_l_s_q_1af66af81c0276216acfa659178189019f" kindref="member">c</ref>(m2);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>line1.<ref refid="class_l_l_s_q_1adb169c39429f6f206130e463c557af67" kindref="member">rms</ref>(m1,<sp/>c1)<sp/>+<sp/>line2.<ref refid="class_l_l_s_q_1adb169c39429f6f206130e463c557af67" kindref="member">rms</ref>(m2,<sp/>c2);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>rms<sp/>*=<sp/><ref refid="namespacetesseract_1a351af5b8ad4d2b3fd95e59d758f13e7a" kindref="member">kRMSFitScaling</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[x_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(best_l8);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[y1_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(m1<sp/>*<sp/>best_l8<sp/>+<sp/>c1<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[y2_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(m2<sp/>*<sp/>best_l8<sp/>+<sp/>c2<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[L_ALPHA_CHANNEL]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(rms);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>color2[x_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(best_u8);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>color2[y1_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(m1<sp/>*<sp/>best_u8<sp/>+<sp/>c1<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>color2[y2_color]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(m2<sp/>*<sp/>best_u8<sp/>+<sp/>c2<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>color2[L_ALPHA_CHANNEL]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(rms);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>only<sp/>one<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[COLOR_RED]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(red_stats.median());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[COLOR_GREEN]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(green_stats.median());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[COLOR_BLUE]<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a4ce4005e08974dc96353023756b26c74" kindref="member">ClipToByte</ref>(blue_stats.median());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>color1[L_ALPHA_CHANNEL]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(color2,<sp/>color1,<sp/>4);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color_map1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>pixSetInRectArbitrary(color_map1,<sp/>scaled_box,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_image_find_1aa660fcf01330a75513f168b6b7f21082" kindref="member">ComposeRGB</ref>(color1[COLOR_RED],</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color1[COLOR_GREEN],</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color1[COLOR_BLUE]));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>pixSetInRectArbitrary(color_map2,<sp/>scaled_box,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_image_find_1aa660fcf01330a75513f168b6b7f21082" kindref="member">ComposeRGB</ref>(color2[COLOR_RED],</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color2[COLOR_GREEN],</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color2[COLOR_BLUE]));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>pixSetInRectArbitrary(rms_map,<sp/>scaled_box,<sp/>color1[L_ALPHA_CHANNEL]);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;scaled);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>boxDestroy(&amp;scaled_box);</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================<sp/>CUTTING<sp/>POLYGONAL<sp/>IMAGES<sp/>FROM<sp/>A<sp/>RECTANGLE<sp/>================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>functions<sp/>are<sp/>responsible<sp/>for<sp/>cutting<sp/>a<sp/>polygonal<sp/>image<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>rectangle:<sp/>CountPixelsInRotatedBox,<sp/>AttemptToShrinkBox,<sp/>CutChunkFromParts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>DivideImageIntoParts<sp/>as<sp/>the<sp/>master.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Problem<sp/>statement:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>start<sp/>with<sp/>a<sp/>single<sp/>connected<sp/>component<sp/>from<sp/>the<sp/>image<sp/>mask:<sp/>we<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>Pix<sp/>of<sp/>the<sp/>component,<sp/>and<sp/>its<sp/>location<sp/>on<sp/>the<sp/>page<sp/>(im_box).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>objective<sp/>of<sp/>cutting<sp/>a<sp/>polygonal<sp/>image<sp/>from<sp/>its<sp/>rectangle<sp/>is<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interfering<sp/>text,<sp/>but<sp/>not<sp/>text<sp/>that<sp/>completely<sp/>overlaps<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>------------------------------<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>Single<sp/>input<sp/>partition<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>1<sp/>Cut<sp/>up<sp/>output<sp/>partitions<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Av|oid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>Avoid<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|________________________|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Int|erfering<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>Interfering<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____|__________________|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>T|ext<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>Text<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text-on-image<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>Text-on-image<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>------------------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DivideImageIntoParts<sp/>does<sp/>this<sp/>by<sp/>building<sp/>a<sp/>ColPartition_LIST<sp/>(not<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//<sp/>grid)<sp/>with<sp/>each<sp/>ColPartition<sp/>representing<sp/>one<sp/>of<sp/>the<sp/>rectangles<sp/>needed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">//<sp/>starting<sp/>with<sp/>a<sp/>single<sp/>rectangle<sp/>for<sp/>the<sp/>whole<sp/>image<sp/>component,<sp/>and<sp/>cutting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bits<sp/>out<sp/>of<sp/>it<sp/>with<sp/>CutChunkFromParts<sp/>as<sp/>needed<sp/>to<sp/>avoid<sp/>text.<sp/>The<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitions<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>ordered<sp/>from<sp/>top<sp/>to<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>problem<sp/>is<sp/>complicated<sp/>by<sp/>the<sp/>fact<sp/>that<sp/>we<sp/>have<sp/>rotated<sp/>the<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system<sp/>to<sp/>make<sp/>text<sp/>lines<sp/>horizontal,<sp/>so<sp/>if<sp/>we<sp/>need<sp/>to<sp/>look<sp/>at<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image,<sp/>we<sp/>have<sp/>to<sp/>rotate<sp/>the<sp/>coordinates.<sp/>Throughout<sp/>the<sp/>functions<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>section<sp/>im_box<sp/>is<sp/>the<sp/>rectangle<sp/>representing<sp/>the<sp/>image<sp/>component<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotated<sp/>page<sp/>coordinates<sp/>(where<sp/>we<sp/>are<sp/>building<sp/>our<sp/>output<sp/>ColPartitions),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation<sp/>is<sp/>the<sp/>rotation<sp/>that<sp/>we<sp/>used<sp/>to<sp/>get<sp/>there,<sp/>and<sp/>rerotation<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation<sp/>required<sp/>to<sp/>get<sp/>back<sp/>to<sp/>original<sp/>page<sp/>image<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>to<sp/>coordinates<sp/>in<sp/>the<sp/>component<sp/>image,<sp/>pix,<sp/>we<sp/>rotate<sp/>the<sp/>im_box,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>point<sp/>we<sp/>want<sp/>to<sp/>locate,<sp/>and<sp/>subtract<sp/>the<sp/>rotated<sp/>point<sp/>from<sp/>the<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>rotated<sp/>im_box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>im_box<sp/>is<sp/>therefore<sp/>essential<sp/>to<sp/>calculating<sp/>coordinates<sp/>within<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>are<sp/>no<sp/>black<sp/>pixels<sp/>in<sp/>between<sp/>the<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>im_box<sp/>must<sp/>represent<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>pix<sp/>in<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinates,<sp/>which<sp/>may<sp/>be<sp/>negative,<sp/>due<sp/>to<sp/>rotations<sp/>to<sp/>make<sp/>the<sp/>textlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal.<sp/>The<sp/>boxes<sp/>are<sp/>rotated<sp/>by<sp/>rotation,<sp/>which<sp/>should<sp/>undo<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotations,<sp/>before<sp/>mapping<sp/>them<sp/>onto<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a958b710c77aa2f60d139dbd50f2bb4d6" kindref="member">ImageFind::BlankImageInBetween</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box2,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(box1);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>search_box<sp/>+=<sp/>box2;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box1.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box2)<sp/>&gt;=<sp/>box1.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box2))<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box1.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box2)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(<ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(box1.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box2.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.set_right(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(box1.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box2.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box1.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box2)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.set_top(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(box1.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box2.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.set_bottom(<ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(box1.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>box2.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">CountPixelsInRotatedBox</ref>(search_box,<sp/>im_box,<sp/>rotation,<sp/>pix)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>pixels<sp/>in<sp/>box<sp/>in<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation,<sp/>pix<sp/>and<sp/>im_box<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>large<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(<ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,<sp/>Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Intersect<sp/>it<sp/>with<sp/>the<sp/>image<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>box<sp/>&amp;=<sp/>im_box;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>in-place<sp/>box<sp/>intersection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>box.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(rotation);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>rotated_im_box(im_box);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>rotated_im_box.rotate(rotation);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>Pix*<sp/>rect_pix<sp/>=<sp/>pixCreate(box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>pixRasterop(rect_pix,<sp/>0,<sp/>0,<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIX_SRC,<sp/>pix,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>rotated_im_box.left(),</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotated_im_box.top()<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>l_int32<sp/>result;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>pixCountPixels(rect_pix,<sp/>&amp;result,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;rect_pix);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>box<sp/>given<sp/>by<sp/>slice<sp/>contains<sp/>some<sp/>black<sp/>pixels,<sp/>but<sp/>not<sp/>necessarily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>over<sp/>the<sp/>whole<sp/>box.<sp/>Shrink<sp/>the<sp/>x<sp/>bounds<sp/>of<sp/>slice,<sp/>but<sp/>not<sp/>the<sp/>y<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>until<sp/>there<sp/>is<sp/>at<sp/>least<sp/>one<sp/>black<sp/>pixel<sp/>in<sp/>the<sp/>outermost<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation,<sp/>rerotation,<sp/>pix<sp/>and<sp/>im_box<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>large<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AttemptToShrinkBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,<sp/>Pix*<sp/>pix,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>slice)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>rotated_box(*slice);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>rotated_box.rotate(rerotation);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>rotated_im_box(im_box);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>rotated_im_box.rotate(rerotation);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>rotated_box.left()<sp/>-<sp/>rotated_im_box.left();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>rotated_box.right()<sp/>-<sp/>rotated_im_box.left();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>rotated_im_box.top()<sp/>-<sp/>rotated_box.top();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>rotated_im_box.top()<sp/>-<sp/>rotated_box.bottom();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_image_find_1a98363e328fcc349cfdc5a7ea72ac77d9" kindref="member">ImageFind::BoundsWithinRect</ref>(pix,<sp/>&amp;left,<sp/>&amp;top,<sp/>&amp;right,<sp/>&amp;bottom);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>top<sp/>=<sp/>rotated_im_box.top()<sp/>-<sp/>top;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>bottom<sp/>=<sp/>rotated_im_box.top()<sp/>-<sp/>bottom;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>left<sp/>+=<sp/>rotated_im_box.left();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>right<sp/>+=<sp/>rotated_im_box.left();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>rotated_box.set_to_given_coords(left,<sp/>bottom,<sp/>right,<sp/>top);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>rotated_box.rotate(rotation);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>slice-&gt;<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(rotated_box.left());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>slice-&gt;<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(rotated_box.right());</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>meat<sp/>of<sp/>cutting<sp/>a<sp/>polygonal<sp/>image<sp/>around<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>covers<sp/>the<sp/>general<sp/>case<sp/>of<sp/>cutting<sp/>a<sp/>box<sp/>out<sp/>of<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shown:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/>Single<sp/>input<sp/>partition<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>1<sp/>Cut<sp/>up<sp/>output<sp/>partitions<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>---------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>box<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>2<sp/><sp/><sp/>|<sp/><sp/><sp/>box<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>3<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>is<sp/>cut<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>---------<sp/><sp/><sp/>out<sp/><sp/><sp/><sp/><sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------<sp/><sp/><sp/><sp/><sp/><sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>context<sp/>that<sp/>this<sp/>function<sp/>is<sp/>used,<sp/>at<sp/>most<sp/>3<sp/>of<sp/>the<sp/>above<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes<sp/>will<sp/>be<sp/>created,<sp/>as<sp/>the<sp/>overlapping<sp/>box<sp/>is<sp/>never<sp/>contained<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>cutting<sp/>operation<sp/>is<sp/>executed<sp/>for<sp/>each<sp/>element<sp/>of<sp/>part_list<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>overlapped<sp/>by<sp/>the<sp/>input<sp/>box.<sp/>Each<sp/>modified<sp/>ColPartition<sp/>is<sp/>replaced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>place<sp/>in<sp/>the<sp/>list<sp/>by<sp/>the<sp/>output<sp/>of<sp/>the<sp/>cutting<sp/>operation<sp/>in<sp/>the<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shown<sp/>above,<sp/>so<sp/>iff<sp/>no<sp/>holes<sp/>are<sp/>ever<sp/>created,<sp/>the<sp/>output<sp/>will<sp/>be<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>top-to-bottom<sp/>order,<sp/>but<sp/>in<sp/>extreme<sp/>cases,<sp/>hole<sp/>creation<sp/>is<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>such<sp/>cases,<sp/>the<sp/>output<sp/>order<sp/>may<sp/>cause<sp/>strange<sp/>block<sp/>polygons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation,<sp/>rerotation,<sp/>pix<sp/>and<sp/>im_box<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>large<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CutChunkFromParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix,<sp/>ColPartition_LIST*<sp/>part_list)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!part_list-&gt;empty());</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(part_list);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(box))<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>part<sp/>must<sp/>be<sp/>cut<sp/>and<sp/>replaced<sp/>with<sp/>the<sp/>remains.<sp/>There<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upto<sp/>4<sp/>pieces<sp/>to<sp/>be<sp/>made.<sp/>Start<sp/>with<sp/>the<sp/>first<sp/>one<sp/>and<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add_before_stay_put.<sp/>For<sp/>each<sp/>piece<sp/>if<sp/>it<sp/>has<sp/>no<sp/>black<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left,<sp/>just<sp/>don&apos;t<sp/>make<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Above<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>slice(part_box);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(slice,<sp/>im_box,<sp/>rerotation,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttemptToShrinkBox(rotation,<sp/>rerotation,<sp/>im_box,<sp/>pix,<sp/>&amp;slice);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_before_stay_put(</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(slice,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>of<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>slice(part_box);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(slice,<sp/>im_box,<sp/>rerotation,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttemptToShrinkBox(rotation,<sp/>rerotation,<sp/>im_box,<sp/>pix,<sp/>&amp;slice);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_before_stay_put(</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(slice,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>of<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>slice(part_box);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(slice,<sp/>im_box,<sp/>rerotation,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttemptToShrinkBox(rotation,<sp/>rerotation,<sp/>im_box,<sp/>pix,<sp/>&amp;slice);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_before_stay_put(</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(slice,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>slice(part_box);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(slice,<sp/>im_box,<sp/>rerotation,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttemptToShrinkBox(rotation,<sp/>rerotation,<sp/>im_box,<sp/>pix,<sp/>&amp;slice);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_before_stay_put(</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(slice,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part_it.extract();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.forward();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!part_it.at_first());</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>image<sp/>component<sp/>and<sp/>cuts<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>intersect<sp/>text<sp/>where<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Strong<sp/>fully<sp/>contained<sp/>horizontal<sp/>text<sp/>is<sp/>marked<sp/>as<sp/>text<sp/>on<sp/>image,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>does<sp/>not<sp/>cause<sp/>a<sp/>division<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>more<sp/>detail<sp/>see<sp/>the<sp/>large<sp/>comment<sp/>above<sp/>on<sp/>cutting<sp/>polygonal<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>a<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rotation,<sp/>rerotation,<sp/>pix<sp/>and<sp/>im_box<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>large<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DivideImageIntoParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,<sp/>Pix*<sp/>pix,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref>*<sp/>rectsearch,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>part_list)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>full<sp/>im_box<sp/>partition<sp/>to<sp/>the<sp/>list<sp/>to<sp/>begin<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>pix_part<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(im_box,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(part_list);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>part_it.add_after_then_move(pix_part);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>rectsearch-&gt;StartRectSearch(im_box);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rectsearch-&gt;NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(im_box)<sp/>&amp;&amp;<sp/>part-&gt;flow()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>image<sp/>is<sp/>completely<sp/>covered<sp/>by<sp/>an<sp/>existing<sp/>text<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>pix_part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix_part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pix_part;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>intersects<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>overlap_box<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(im_box);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intersect<sp/>it<sp/>with<sp/>the<sp/>image<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>black_area<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a8b562438d65621d641ed0d7a66d60a8f" kindref="member">ImageFind::CountPixelsInRotatedBox</ref>(overlap_box,<sp/>im_box,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rerotation,<sp/>pix);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(black_area<sp/>*<sp/>2<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>||<sp/>!im_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(part_box))<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eat<sp/>a<sp/>piece<sp/>out<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>it<sp/>so<sp/>that<sp/>pieces<sp/>eaten<sp/>out<sp/>look<sp/>decent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/>part-&gt;blob_type()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>:<sp/>part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>padding<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>padding<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CutChunkFromParts(part_box,<sp/>im_box,<sp/>rotation,<sp/>rerotation,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix,<sp/>part_list);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strong<sp/>overlap<sp/>with<sp/>the<sp/>black<sp/>area,<sp/>so<sp/>call<sp/>it<sp/>text<sp/>on<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_flow(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_list-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>rightmost<sp/>text<sp/>that<sp/>overlaps<sp/>vertically<sp/>and<sp/>is<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>given<sp/>box,<sp/>but<sp/>within<sp/>the<sp/>given<sp/>left<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExpandImageLeft(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_limit,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(part_grid);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>right<sp/>to<sp/>left<sp/>for<sp/>any<sp/>text<sp/>that<sp/>overlaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartSideSearch(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextSideSearch(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>left_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>nearest<sp/>text<sp/>up<sp/>to<sp/>the<sp/>one<sp/>we<sp/>already<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(left_limit,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>left_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left_limit;</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>leftmost<sp/>text<sp/>that<sp/>overlaps<sp/>vertically<sp/>and<sp/>is<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>given<sp/>box,<sp/>but<sp/>within<sp/>the<sp/>given<sp/>right<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExpandImageRight(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_limit,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(part_grid);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>left<sp/>to<sp/>right<sp/>for<sp/>any<sp/>text<sp/>that<sp/>overlaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartSideSearch(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextSideSearch(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>right_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>nearest<sp/>text<sp/>up<sp/>to<sp/>the<sp/>one<sp/>we<sp/>already<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>right_limit,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>right_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right_limit;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>topmost<sp/>text<sp/>that<sp/>overlaps<sp/>horizontally<sp/>and<sp/>is<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>box,<sp/>but<sp/>within<sp/>the<sp/>given<sp/>bottom<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExpandImageBottom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_limit,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(part_grid);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>right<sp/>to<sp/>left<sp/>for<sp/>any<sp/>text<sp/>that<sp/>overlaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextVerticalSearch(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;<sp/>bottom_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>nearest<sp/>text<sp/>up<sp/>to<sp/>the<sp/>one<sp/>we<sp/>already<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bottom_limit,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;<sp/>bottom_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bottom_limit;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>bottommost<sp/>text<sp/>that<sp/>overlaps<sp/>horizontally<sp/>and<sp/>is<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>box,<sp/>but<sp/>within<sp/>the<sp/>given<sp/>top<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExpandImageTop(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_limit,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(part_grid);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>right<sp/>to<sp/>left<sp/>for<sp/>any<sp/>text<sp/>that<sp/>overlaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextVerticalSearch(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>top_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>nearest<sp/>text<sp/>up<sp/>to<sp/>the<sp/>one<sp/>we<sp/>already<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>top_limit);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||<sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>top_limit<sp/>&amp;&amp;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_limit<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>top_limit;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expands<sp/>the<sp/>image<sp/>box<sp/>in<sp/>the<sp/>given<sp/>direction<sp/>until<sp/>it<sp/>hits<sp/>text,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limiting<sp/>the<sp/>expansion<sp/>to<sp/>the<sp/>given<sp/>limit<sp/>box,<sp/>returning<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>expanded<sp/>box,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returning<sp/>the<sp/>increase<sp/>in<sp/>area<sp/>resulting<sp/>from<sp/>the<sp/>expansion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ExpandImageDir(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>limit_box,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>expanded_box)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>*expanded_box<sp/>=<sp/>im_box;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dir)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expanded_box-&gt;<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(ExpandImageLeft(im_box,<sp/>limit_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid));</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expanded_box-&gt;<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(ExpandImageRight(im_box,<sp/>limit_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expanded_box-&gt;<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(ExpandImageTop(im_box,<sp/>limit_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>part_grid));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expanded_box-&gt;<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(ExpandImageBottom(im_box,<sp/>limit_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expanded_box-&gt;<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>-<sp/>im_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expands<sp/>the<sp/>image<sp/>partition<sp/>into<sp/>any<sp/>non-text<sp/>until<sp/>it<sp/>touches<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>expansion<sp/>proceeds<sp/>in<sp/>the<sp/>order<sp/>of<sp/>increasing<sp/>increase<sp/>in<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>heuristic<sp/>to<sp/>find<sp/>the<sp/>best<sp/>rectangle<sp/>by<sp/>expanding<sp/>in<sp/>the<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constrained<sp/>direction<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MaximalImageBoundingBox(ColPartitionGrid*<sp/>part_grid,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>im_box)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dunnit[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>];</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>memset(dunnit,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dunnit));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>limit_box(part_grid-&gt;bleft().x(),<sp/>part_grid-&gt;bleft().y(),</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid-&gt;tright().x(),<sp/>part_grid-&gt;tright().y());</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>text_box(*im_box);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>0;<sp/>iteration<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++iteration)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>direction<sp/>with<sp/>least<sp/>area<sp/>increase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_delta<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>best_dir<sp/>=<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>expanded_boxes[<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>];</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;<sp/>dir<sp/>&lt;<sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a0f3b81ac0cbf413ac18c6de98cd69921" kindref="member">BND_COUNT</ref>;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>bnd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dir);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dunnit[bnd])<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>expanded_box;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area_delta<sp/>=<sp/>ExpandImageDir(bnd,<sp/>text_box,<sp/>limit_box,<sp/>part_grid,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;expanded_boxes[bnd]);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_delta<sp/>&lt;<sp/>0<sp/>||<sp/>area_delta<sp/>&lt;<sp/>best_delta)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_delta<sp/>=<sp/>area_delta;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dir<sp/>=<sp/>bnd;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>the<sp/>best<sp/>and<sp/>remember<sp/>the<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>dunnit[best_dir]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>text_box<sp/>=<sp/>expanded_boxes[best_dir];</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>*im_box<sp/>=<sp/>text_box;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>deletes<sp/>the<sp/>given<sp/>partition<sp/>but<sp/>first<sp/>marks<sp/>up<sp/>all<sp/>the<sp/>blobs<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>noise,<sp/>so<sp/>they<sp/>get<sp/>deleted<sp/>later,<sp/>and<sp/>disowns<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>initial<sp/>type<sp/>of<sp/>the<sp/>partition<sp/>is<sp/>image,<sp/>then<sp/>it<sp/>actually<sp/>deletes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blobs,<sp/>as<sp/>the<sp/>partition<sp/>owns<sp/>them<sp/>in<sp/>that<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeletePartition(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>partition<sp/>owns<sp/>the<sp/>boxes<sp/>of<sp/>these<sp/>types,<sp/>so<sp/>just<sp/>delete<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();<sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>a<sp/>previous<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>marked,<sp/>the<sp/>blobs<sp/>will<sp/>be<sp/>swept<sp/>up<sp/>by<sp/>TidyBlobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_flow(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_blob_type(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;DisownBoxes();<sp/><sp/></highlight><highlight class="comment">//<sp/>Created<sp/>before<sp/>FindImagePartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>meat<sp/>of<sp/>joining<sp/>fragmented<sp/>images<sp/>and<sp/>consuming<sp/>ColPartitions<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uncertain<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*part_ptr<sp/>is<sp/>an<sp/>input/output<sp/>BRT_RECTIMAGE<sp/>ColPartition<sp/>that<sp/>is<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expanded<sp/>to<sp/>consume<sp/>overlapping<sp/>and<sp/>nearby<sp/>ColPartitions<sp/>of<sp/>uncertain<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>other<sp/>BRT_RECTIMAGE<sp/>partitions,<sp/>but<sp/>NOT<sp/>to<sp/>be<sp/>expanded<sp/>beyond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max_image_box.<sp/>*part_ptr<sp/>is<sp/>NOT<sp/>in<sp/>the<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rectsearch<sp/>is<sp/>already<sp/>constructed<sp/>on<sp/>the<sp/>part_grid,<sp/>and<sp/>is<sp/>used<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>searching<sp/>for<sp/>overlapping<sp/>and<sp/>nearby<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ExpandImageIntoParts<sp/>is<sp/>called<sp/>iteratively<sp/>until<sp/>it<sp/>returns<sp/>false.<sp/>Each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>it<sp/>absorbs<sp/>the<sp/>nearest<sp/>non-contained<sp/>candidate,<sp/>and<sp/>everything<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>fully<sp/>contained<sp/>within<sp/>part_ptr&apos;s<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>what<sp/>if<sp/>it<sp/>just<sp/>eats<sp/>everything<sp/>inside<sp/>max_image_box<sp/>in<sp/>one<sp/>go?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExpandImageIntoParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>max_image_box,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref>*<sp/>rectsearch,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition**<sp/>part_ptr)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>image_part<sp/>=<sp/>*part_ptr;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>im_part_box<sp/>=<sp/>image_part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Searching<sp/>for<sp/>merge<sp/>with<sp/>image<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>im_part_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Text<sp/>box=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>max_image_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>rectsearch-&gt;StartRectSearch(max_image_box);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>best_part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rectsearch-&gt;NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>merge<sp/>with<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(im_part_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(part-&gt;bounding_box()))</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Fully<sp/>contained\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!max_image_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(part-&gt;bounding_box()))</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>within<sp/>text<sp/>box\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Too<sp/>strong<sp/>text\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Real<sp/>candidate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>||</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref><sp/>||</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;blob_type()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_image_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(box)<sp/>&amp;&amp;<sp/>part-&gt;blob_type()<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(im_part_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(box))<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eat<sp/>it<sp/>completely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectsearch-&gt;RemoveBBox();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeletePartition(part);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_dist<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(0,<sp/>box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(im_part_box));</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_dist<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(0,<sp/>box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(im_part_box));</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>x_dist<sp/>*<sp/>x_dist<sp/>+<sp/>y_dist<sp/>*<sp/>y_dist;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>||<sp/>dist<sp/>&gt;<sp/>im_part_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>())</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>close<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_part<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>dist<sp/>&lt;<sp/>best_dist)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>keep<sp/>the<sp/>nearest<sp/>qualifier,<sp/>which<sp/>is<sp/>not<sp/>necessarily<sp/>the<sp/>nearest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_part<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>needs<sp/>expanding.<sp/>We<sp/>can<sp/>do<sp/>it<sp/>without<sp/>touching<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>best_part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging<sp/>image<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>im_part_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;with<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>im_part_box<sp/>+=<sp/>box;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>*part_ptr<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(im_part_box,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>DeletePartition(image_part);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;RemoveBBox(best_part);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>DeletePartition(best_part);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>rectsearch-&gt;RepositionIterator();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>compute<sp/>the<sp/>overlap<sp/>area<sp/>between<sp/>the<sp/>box<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>list<sp/>of<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IntersectArea(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/>ColPartition_LIST*<sp/>part_list)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intersect_area<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(part_list);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>parts<sp/>and<sp/>subtract<sp/>intersecting<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.mark_cycle_pt();<sp/>!part_it.cycled_list();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>image_part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>intersect<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(image_part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>intersect_area<sp/>+=<sp/>intersect.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intersect_area;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part_list<sp/>is<sp/>a<sp/>set<sp/>of<sp/>ColPartitions<sp/>representing<sp/>a<sp/>polygonal<sp/>image,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>im_box<sp/>is<sp/>the<sp/>union<sp/>of<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>all<sp/>the<sp/>parts<sp/>in<sp/>part_list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>whether<sp/>part<sp/>is<sp/>to<sp/>be<sp/>consumed<sp/>by<sp/>the<sp/>polygonal<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>part<sp/>is<sp/>weak<sp/>text<sp/>and<sp/>more<sp/>than<sp/>half<sp/>of<sp/>its<sp/>area<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>intersected<sp/>by<sp/>parts<sp/>from<sp/>the<sp/>part_list,<sp/>and<sp/>it<sp/>is<sp/>contained<sp/>within<sp/>im_box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TestWeakIntersectedPart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>part_list,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>weak<sp/>partition<sp/>intersects<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(im_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(part_box))<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intersect_area<sp/>=<sp/>IntersectArea(part_box,<sp/>part_list);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(area<sp/>&lt;<sp/>2<sp/>*<sp/>intersect_area)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>rectangular<sp/>or<sp/>polygonal<sp/>image<sp/>has<sp/>been<sp/>completed,<sp/>in<sp/>part_list,<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box<sp/>in<sp/>im_box.<sp/>We<sp/>want<sp/>to<sp/>eliminate<sp/>weak<sp/>text<sp/>or<sp/>other<sp/>uncertain<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(basically<sp/>anything<sp/>that<sp/>is<sp/>not<sp/>BRT_STRONG_CHAIN<sp/>or<sp/>better)<sp/>from<sp/>both<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part_grid<sp/>and<sp/>the<sp/>big_parts<sp/>list<sp/>that<sp/>are<sp/>contained<sp/>within<sp/>im_box<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlapped<sp/>enough<sp/>by<sp/>the<sp/>possibly<sp/>polygonal<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EliminateWeakParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>im_box,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>part_list)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rectsearch(part_grid);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>rectsearch.StartRectSearch(im_box);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rectsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TestWeakIntersectedPart(im_box,<sp/>part_list,<sp/>part))<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeletePartition(part);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>part<sp/>is<sp/>mostly<sp/>covered,<sp/>so<sp/>mark<sp/>it.<sp/>Non-image<sp/>partitions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kept<sp/>hanging<sp/>around<sp/>to<sp/>mark<sp/>the<sp/>image<sp/>for<sp/>pass2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_flow(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_blob_type(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>big_it(big_parts);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(big_it.mark_cycle_pt();<sp/>!big_it.cycled_list();<sp/>big_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>big_it.data();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TestWeakIntersectedPart(im_box,<sp/>part_list,<sp/>part))<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>marked,<sp/>the<sp/>blobs<sp/>will<sp/>be<sp/>swept<sp/>up<sp/>by<sp/>TidyBlobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DeletePartition(big_it.extract());</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>scans<sp/>for<sp/>good<sp/>text<sp/>partitions<sp/>overlapping<sp/>the<sp/>given<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>good<sp/>text<sp/>partitions<sp/>overlapping<sp/>an<sp/>expanded<sp/>box,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>box<sp/>is<sp/>expanded,<sp/>otherwise,<sp/>the<sp/>original<sp/>box<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>good<sp/>text<sp/>overlaps<sp/>the<sp/>box,<sp/>true<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ScanForOverlappingText(ColPartitionGrid*<sp/>part_grid,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rectsearch(part_grid);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>padded_box(*box);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>padded_box.pad(<ref refid="namespacetesseract_1a3b862db5dec2761daccc3215b5082c4f" kindref="member">kNoisePadding</ref>,<sp/><ref refid="namespacetesseract_1a3b862db5dec2761daccc3215b5082c4f" kindref="member">kNoisePadding</ref>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>rectsearch.StartRectSearch(padded_box);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_text_in_padded_rect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rectsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>||</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;flow()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>intersects<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_text_in_padded_rect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box-&gt;<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(part_box))<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!any_text_in_padded_rect)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>*box<sp/>=<sp/>padded_box;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Renders<sp/>the<sp/>boxes<sp/>of<sp/>image<sp/>parts<sp/>from<sp/>the<sp/>supplied<sp/>list<sp/>onto<sp/>the<sp/>image_pix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>except<sp/>where<sp/>they<sp/>interfere<sp/>with<sp/>existing<sp/>strong<sp/>text<sp/>in<sp/>the<sp/>part_grid,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>deletes<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Box<sp/>coordinates<sp/>are<sp/>rotated<sp/>by<sp/>rerotate<sp/>to<sp/>match<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MarkAndDeleteImageParts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotate,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>image_parts,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>image_pix)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image_pix<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageheight<sp/>=<sp/>pixGetHeight(image_pix);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(image_parts);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ScanForOverlappingText(part_grid,<sp/>&amp;part_box)<sp/>||</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>box<sp/>on<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>coords<sp/>need<sp/>to<sp/>be<sp/>rotated<sp/>to<sp/>match<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(rerotate);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRasterop(image_pix,<sp/>left,<sp/>imageheight<sp/>-<sp/>top,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>PIX_SET,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>DeletePartition(part);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Locates<sp/>all<sp/>the<sp/>image<sp/>partitions<sp/>in<sp/>the<sp/>part_grid,<sp/>that<sp/>were<sp/>found<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>previous<sp/>call<sp/>to<sp/>FindImagePartitions,<sp/>marks<sp/>them<sp/>in<sp/>the<sp/>image_mask,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>removes<sp/>them<sp/>from<sp/>the<sp/>grid,<sp/>and<sp/>deletes<sp/>them.<sp/>This<sp/>makes<sp/>it<sp/>possble<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>call<sp/>FindImagePartitions<sp/>again<sp/>to<sp/>produce<sp/>less<sp/>broken-up<sp/>and<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlapping<sp/>image<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rerotation<sp/>specifies<sp/>how<sp/>to<sp/>rotate<sp/>the<sp/>partition<sp/>coords<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>image_mask,<sp/>since<sp/>this<sp/>function<sp/>is<sp/>used<sp/>after<sp/>orientation<sp/>correction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1af98436ea599236937f5c013853f437df" kindref="member">ImageFind::TransferImagePartsToImageMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>image_mask)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>noise<sp/>parts<sp/>from<sp/>the<sp/>grid<sp/>and<sp/>put<sp/>them<sp/>on<sp/>a<sp/>temporary<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>parts_list;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;parts_list);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(part_grid);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/><sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>listed<sp/>noise<sp/>partitions<sp/>to<sp/>the<sp/>image<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>MarkAndDeleteImageParts(rerotation,<sp/>part_grid,<sp/>&amp;parts_list,<sp/>image_mask);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>and<sp/>deletes<sp/>all<sp/>image<sp/>partitions<sp/>that<sp/>are<sp/>too<sp/>small<sp/>to<sp/>be<sp/>worth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keeping.<sp/>We<sp/>have<sp/>to<sp/>do<sp/>this<sp/>as<sp/>a<sp/>separate<sp/>phase<sp/>after<sp/>creating<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partitions<sp/>as<sp/>the<sp/>small<sp/>images<sp/>are<sp/>needed<sp/>to<sp/>join<sp/>the<sp/>larger<sp/>ones<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeleteSmallImages(ColPartitionGrid*<sp/>part_grid)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_grid<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(part_grid);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>delete<sp/>rectangular<sp/>images,<sp/>since<sp/>if<sp/>it<sp/>became<sp/>a<sp/>poly<sp/>image,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>more<sp/>evidence<sp/>that<sp/>it<sp/>is<sp/>somehow<sp/>important.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;blob_type()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&lt;<sp/><ref refid="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" kindref="member">kMinImageFindSize</ref><sp/>||</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&lt;<sp/><ref refid="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" kindref="member">kMinImageFindSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>too<sp/>small<sp/>to<sp/>keep.<sp/>Just<sp/>make<sp/>it<sp/>disappear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeletePartition(part);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Runs<sp/>a<sp/>CC<sp/>analysis<sp/>on<sp/>the<sp/>image_pix<sp/>mask<sp/>image,<sp/>and<sp/>creates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>partitions<sp/>from<sp/>them,<sp/>cutting<sp/>out<sp/>strong<sp/>text,<sp/>and<sp/>merging<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nearby<sp/>image<sp/>regions<sp/>such<sp/>that<sp/>they<sp/>don&apos;t<sp/>interfere<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotation<sp/>and<sp/>rerotation<sp/>specify<sp/>how<sp/>to<sp/>rotate<sp/>image<sp/>coords<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blob<sp/>and<sp/>partition<sp/>coords<sp/>and<sp/>back<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input/output<sp/>part_grid<sp/>owns<sp/>all<sp/>the<sp/>created<sp/>partitions,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>partitions<sp/>own<sp/>all<sp/>the<sp/>fake<sp/>blobs<sp/>that<sp/>belong<sp/>in<sp/>the<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>other<sp/>blobs<sp/>in<sp/>the<sp/>other<sp/>partitions<sp/>will<sp/>be<sp/>owned<sp/>by<sp/>the<sp/>block,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitionGrid::ReTypeBlobs<sp/>must<sp/>be<sp/>called<sp/>afterwards<sp/>to<sp/>fix<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>situation<sp/>and<sp/>collect<sp/>the<sp/>image<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_image_find_1aa45bf8c2f6ca0dc31e8f1ef08ffea700" kindref="member">ImageFind::FindImagePartitions</ref>(Pix*<sp/>image_pix,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind*<sp/>tab_grid,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageheight<sp/>=<sp/>pixGetHeight(image_pix);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>Boxa*<sp/>boxa;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>Pixa*<sp/>pixa;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_image_find_1a43d1cc728fa439676891e5655dadb595" kindref="member">ConnCompAndRectangularize</ref>(image_pix,<sp/>&amp;boxa,<sp/>&amp;pixa);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>connected<sp/>components<sp/>in<sp/>the<sp/>image<sp/>regions<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxes<sp/>=<sp/>boxaGetCount(boxa);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nboxes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>l_int32<sp/>x,<sp/>y,<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>boxaGetBoxGeometry(boxa,<sp/>i,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix<sp/>=<sp/>pixaGetPix(pixa,<sp/>i,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>im_box(x,<sp/>imageheight<sp/>-y<sp/>-<sp/>height,<sp/>x<sp/>+<sp/>width,<sp/>imageheight<sp/>-<sp/>y);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>im_box.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(rotation);<sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>matches<sp/>all<sp/>partitions<sp/>and<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rectsearch(part_grid);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>rectsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_LIST<sp/>part_list;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>DivideImageIntoParts(im_box,<sp/>rotation,<sp/>rerotation,<sp/>pix,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;rectsearch,<sp/>&amp;part_list);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;junkimagecomponent.png&quot;</highlight><highlight class="normal">,<sp/>pix,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Component<sp/>has<sp/>%d<sp/>parts\n&quot;</highlight><highlight class="normal">,<sp/>part_list.length());</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_list.empty())<sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;part_list);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_list.singleton())<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>have<sp/>to<sp/>chop<sp/>it<sp/>into<sp/>a<sp/>polygon<sp/>to<sp/>fit<sp/>around<sp/>text,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>expanding<sp/>it<sp/>to<sp/>merge<sp/>fragmented<sp/>image<sp/>parts,<sp/>as<sp/>long<sp/>as<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>touch<sp/>strong<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>text_box(im_box);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaximalImageBoundingBox(part_grid,<sp/>&amp;text_box);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ExpandImageIntoParts(text_box,<sp/>&amp;rectsearch,<sp/>part_grid,<sp/>&amp;part));</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.set_to_list(&amp;part_list);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EliminateWeakParts(im_box,<sp/>part_grid,<sp/>big_parts,<sp/>&amp;part_list);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>part_list<sp/>and<sp/>put<sp/>the<sp/>parts<sp/>into<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>image_part<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>image_part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid-&gt;InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>image_part);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbour<sp/>=<sp/>part_it.data_relative(1);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_part-&gt;AddPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>neighbour);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;AddPartner(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>image_part);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>boxaDestroy(&amp;boxa);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>pixaDestroy(&amp;pixa);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>DeleteSmallImages(part_grid);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_images)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>images_win_<sp/>=<sp/>part_grid-&gt;MakeWindow(1000,<sp/>400,<sp/></highlight><highlight class="stringliteral">&quot;With<sp/>Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid-&gt;DisplayBoxes(images_win_);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp"/>
  </compounddef>
</doxygen>
