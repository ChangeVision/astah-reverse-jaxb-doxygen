<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="osdetect_8h" kind="file">
    <compoundname>osdetect.h</compoundname>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includedby refid="baseapi_8cpp" local="yes">api/baseapi.cpp</includedby>
    <includedby refid="osdetect_8cpp" local="yes">ccmain/osdetect.cpp</includedby>
    <includedby refid="pagesegmain_8cpp" local="yes">ccmain/pagesegmain.cpp</includedby>
    <incdepgraph>
      <node id="2379">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="2380" relation="include">
        </childnode>
      </node>
      <node id="2382">
        <label>stddef.h</label>
      </node>
      <node id="2389">
        <label>memory.h</label>
      </node>
      <node id="2385">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="2383" relation="include">
        </childnode>
      </node>
      <node id="2375">
        <label>ccmain/osdetect.h</label>
        <link refid="osdetect.h"/>
        <childnode refid="2376" relation="include">
        </childnode>
        <childnode refid="2384" relation="include">
        </childnode>
      </node>
      <node id="2380">
        <label>limits.h</label>
      </node>
      <node id="2378">
        <label>string.h</label>
      </node>
      <node id="2390">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="2388" relation="include">
        </childnode>
      </node>
      <node id="2388">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="2389" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
      </node>
      <node id="2387">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="2383" relation="include">
        </childnode>
      </node>
      <node id="2381">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="2382" relation="include">
        </childnode>
        <childnode refid="2383" relation="include">
        </childnode>
      </node>
      <node id="2384">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="2385" relation="include">
        </childnode>
        <childnode refid="2386" relation="include">
        </childnode>
        <childnode refid="2376" relation="include">
        </childnode>
        <childnode refid="2387" relation="include">
        </childnode>
        <childnode refid="2388" relation="include">
        </childnode>
        <childnode refid="2390" relation="include">
        </childnode>
      </node>
      <node id="2383">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="2379" relation="include">
        </childnode>
      </node>
      <node id="2377">
        <label>stdio.h</label>
      </node>
      <node id="2376">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
        <childnode refid="2379" relation="include">
        </childnode>
        <childnode refid="2381" relation="include">
        </childnode>
      </node>
      <node id="2386">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2393">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="2392">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="2391">
        <label>ccmain/osdetect.h</label>
        <link refid="osdetect.h"/>
        <childnode refid="2392" relation="include">
        </childnode>
        <childnode refid="2393" relation="include">
        </childnode>
        <childnode refid="2394" relation="include">
        </childnode>
      </node>
      <node id="2394">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_o_s_best_result" prot="public">OSBestResult</innerclass>
    <innerclass refid="struct_o_s_results" prot="public">OSResults</innerclass>
    <innerclass refid="class_orientation_detector" prot="public">OrientationDetector</innerclass>
    <innerclass refid="class_script_detector" prot="public">ScriptDetector</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="osdetect_8h_1ab52d878a730b63bcf57d7bb3113882a1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kMaxNumberOfScripts</definition>
        <argsstring></argsstring>
        <name>kMaxNumberOfScripts</name>
        <initializer>= 116 + 1 + 2 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="osdetect_8h_1af7ea57b0e1847f524c98576cb5cace43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int orientation_and_script_detection</definition>
        <argsstring>(STRING &amp;filename, OSResults *, tesseract::Tesseract *)</argsstring>
        <name>orientation_and_script_detection</name>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s_results" kindref="compound">OSResults</ref> *</type>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="113" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.cpp" bodystart="189" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="osdetect_8h_1a93fedb9cccbbcf81d3433b95bbc46bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int os_detect</definition>
        <argsstring>(TO_BLOCK_LIST *port_blocks, OSResults *osr, tesseract::Tesseract *tess)</argsstring>
        <name>os_detect</name>
        <param>
          <type>TO_BLOCK_LIST *</type>
          <declname>port_blocks</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s_results" kindref="compound">OSResults</ref> *</type>
          <declname>osr</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref> *</type>
          <declname>tess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="117" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.cpp" bodystart="236" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="osdetect_8h_1a1007e747656418b79d4ce9f8f14f2a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int os_detect_blobs</definition>
        <argsstring>(BLOBNBOX_CLIST *blob_list, OSResults *osr, tesseract::Tesseract *tess)</argsstring>
        <name>os_detect_blobs</name>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>blob_list</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s_results" kindref="compound">OSResults</ref> *</type>
          <declname>osr</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref> *</type>
          <declname>tess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="121" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.cpp" bodystart="275" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="osdetect_8h_1acd67dc649eafb2a0048434366730af2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool os_detect_blob</definition>
        <argsstring>(BLOBNBOX *bbox, OrientationDetector *o, ScriptDetector *s, OSResults *, tesseract::Tesseract *tess)</argsstring>
        <name>os_detect_blob</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type><ref refid="class_orientation_detector" kindref="compound">OrientationDetector</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_script_detector" kindref="compound">ScriptDetector</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s_results" kindref="compound">OSResults</ref> *</type>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref> *</type>
          <declname>tess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="125" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.cpp" bodystart="323" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="osdetect_8h_1a94d19668c76dab0d8ab3832c765303da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int OrientationIdToValue</definition>
        <argsstring>(const int &amp;id)</argsstring>
        <name>OrientationIdToValue</name>
        <param>
          <type>const int &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h" line="132" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/osdetect.cpp" bodystart="534" bodyend="547"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osdetect.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Orientation<sp/>and<sp/>script<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Samuel<sp/>Charron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ranjith<sp/>Unnikrishnan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCMAIN_OSDETECT_H__</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCMAIN_OSDETECT_H__</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TO_BLOCK_LIST;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BLOB_CHOICE_LIST;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BLOBNBOX_CLIST;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tesseract;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>scripts<sp/>in<sp/>ICU<sp/>+<sp/>&quot;NULL&quot;<sp/>+<sp/>Japanese<sp/>and<sp/>Korean<sp/>+<sp/>Fraktur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="osdetect_8h_1ab52d878a730b63bcf57d7bb3113882a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osdetect_8h_1ab52d878a730b63bcf57d7bb3113882a1" kindref="member">kMaxNumberOfScripts</ref><sp/>=<sp/>116<sp/>+<sp/>1<sp/>+<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_o_s_best_result" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_o_s_best_result" kindref="compound">OSBestResult</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="struct_o_s_best_result_1a516db80da6727056f92664053e6d34af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_o_s_best_result_1a516db80da6727056f92664053e6d34af" kindref="member">OSBestResult</ref>()<sp/>:<sp/><ref refid="struct_o_s_best_result_1a6dfb6826b41a81524ce867b005ba5641" kindref="member">orientation_id</ref>(0),<sp/><ref refid="struct_o_s_best_result_1a0647ea3dc4a399a472c48ab1eacd31e1" kindref="member">script_id</ref>(0),<sp/><ref refid="struct_o_s_best_result_1ae39a2c718b010ed27eb7f820546da6d6" kindref="member">sconfidence</ref>(0.0),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_best_result_1a67e009467e4db6c40777548ffdfe464e" kindref="member">oconfidence</ref>(0.0)<sp/>{}</highlight></codeline>
<codeline lineno="41" refid="struct_o_s_best_result_1a6dfb6826b41a81524ce867b005ba5641" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_best_result_1a6dfb6826b41a81524ce867b005ba5641" kindref="member">orientation_id</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_o_s_best_result_1a0647ea3dc4a399a472c48ab1eacd31e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_best_result_1a0647ea3dc4a399a472c48ab1eacd31e1" kindref="member">script_id</ref>;</highlight></codeline>
<codeline lineno="43" refid="struct_o_s_best_result_1ae39a2c718b010ed27eb7f820546da6d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_best_result_1ae39a2c718b010ed27eb7f820546da6d6" kindref="member">sconfidence</ref>;</highlight></codeline>
<codeline lineno="44" refid="struct_o_s_best_result_1a67e009467e4db6c40777548ffdfe464e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_best_result_1a67e009467e4db6c40777548ffdfe464e" kindref="member">oconfidence</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_o_s_results" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_o_s_results" kindref="compound">OSResults</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="struct_o_s_results_1a08aa76cac72da5479bf32789dcc511dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_o_s_results_1a08aa76cac72da5479bf32789dcc511dc" kindref="member">OSResults</ref>()<sp/>:<sp/><ref refid="struct_o_s_results_1a78ebdae52f3c685095b56790598ad97c" kindref="member">unicharset</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="osdetect_8h_1ab52d878a730b63bcf57d7bb3113882a1" kindref="member">kMaxNumberOfScripts</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_results_1af612cc25d8432678d5b87a5911544792" kindref="member">scripts_na</ref>[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_results_1a5fe9fa97000f89cd6f4392b55638e882" kindref="member">orientations</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1af7b5cea89a2bdace52ad5825d6d5d4e6" kindref="member">update_best_orientation</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>estimate<sp/>of<sp/>the<sp/>orientation<sp/>to<sp/>the<sp/>given<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1aa13f0e8c136d10e0af341f163951ed3d" kindref="member">set_best_orientation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation_id);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update/Compute<sp/>the<sp/>best<sp/>estimate<sp/>of<sp/>the<sp/>script<sp/>assuming<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>orientation<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1ab796da60cc16d39f464c03fe4047c358" kindref="member">update_best_script</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation_id);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>index<sp/>of<sp/>the<sp/>script<sp/>with<sp/>the<sp/>highest<sp/>score<sp/>for<sp/>this<sp/>orientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1a9dcb5250ae2466116c33f5d220223296" kindref="member">get_best_script</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>scores<sp/>with<sp/>given<sp/>OSResults<sp/>instance<sp/>and<sp/>update<sp/>the<sp/>best<sp/>script.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1a25b4edef21699b3a367d7978733595be" kindref="member">accumulate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>&amp;<sp/>osr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>statistics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1a4425aefc39fde345cea1288d95691bed" kindref="member">print_scores</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1a4425aefc39fde345cea1288d95691bed" kindref="member">print_scores</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>holding<sp/>scores<sp/>for<sp/>each<sp/>orientation<sp/>id<sp/>[0,3].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Orientation<sp/>ids<sp/>[0..3]<sp/>map<sp/>to<sp/>[0,<sp/>270,<sp/>180,<sp/>90]<sp/>degree<sp/>orientations<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>page<sp/>respectively,<sp/>where<sp/>the<sp/>values<sp/>refer<sp/>to<sp/>the<sp/>amount<sp/>of<sp/>clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>to<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>page<sp/>for<sp/>the<sp/>text<sp/>to<sp/>be<sp/>upright<sp/>and<sp/>readable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct_o_s_results_1a5fe9fa97000f89cd6f4392b55638e882" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1a5fe9fa97000f89cd6f4392b55638e882" kindref="member">orientations</ref>[4];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Script<sp/>confidence<sp/>scores<sp/>for<sp/>each<sp/>of<sp/>4<sp/>possible<sp/>orientations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_o_s_results_1af612cc25d8432678d5b87a5911544792" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_o_s_results_1af612cc25d8432678d5b87a5911544792" kindref="member">scripts_na</ref>[4][<ref refid="osdetect_8h_1ab52d878a730b63bcf57d7bb3113882a1" kindref="member">kMaxNumberOfScripts</ref>];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_o_s_results_1a78ebdae52f3c685095b56790598ad97c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>*<sp/><ref refid="struct_o_s_results_1a78ebdae52f3c685095b56790598ad97c" kindref="member">unicharset</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_o_s_results_1a25f64011ea65c038c1ef1a6cedd10f1c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_o_s_best_result" kindref="compound">OSBestResult</ref><sp/><ref refid="struct_o_s_results_1a25f64011ea65c038c1ef1a6cedd10f1c" kindref="member">best_result</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_orientation_detector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orientation_detector" kindref="compound">OrientationDetector</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="class_orientation_detector_1aa00a93a069267a2636ec74f4ebb11095" kindref="member">OrientationDetector</ref>(<ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orientation_detector_1a7f3ad682712b5ff3bfcecca0a8a5b086" kindref="member">detect_blob</ref>(BLOB_CHOICE_LIST*<sp/>scores);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_orientation_detector_1a382b5269675f9db848485be62f35742e" kindref="member">get_orientation</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*<sp/>osr_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_script_detector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_script_detector" kindref="compound">ScriptDetector</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="class_script_detector_1ac44d1acf5214aecb8437e160e30db1d4" kindref="member">ScriptDetector</ref>(<ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*,<sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*<sp/>tess);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_script_detector_1aa1626a91138960515d479a781a6b97ca" kindref="member">detect_blob</ref>(BLOB_CHOICE_LIST*<sp/>scores);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_script_detector_1a69b1a013d54d64a619f399b23dd9058f" kindref="member">get_script</ref>()<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_script_detector_1a951bd4d3f5b14ee234d20afc91d44585" kindref="member">must_stop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*<sp/>osr_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>korean_script_;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>japanese_script_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fraktur_script_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>korean_id_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>japanese_id_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>katakana_id_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hiragana_id_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>han_id_;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hangul_id_;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latin_id_;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fraktur_id_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*<sp/>tess_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osdetect_8cpp_1aec0e2284de8927ea9f29b61ff30d052a" kindref="member">orientation_and_script_detection</ref>(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osdetect_8cpp_1a93fedb9cccbbcf81d3433b95bbc46bdd" kindref="member">os_detect</ref>(TO_BLOCK_LIST*<sp/>port_blocks,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*<sp/>osr,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*<sp/>tess);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osdetect_8cpp_1a1007e747656418b79d4ce9f8f14f2a7b" kindref="member">os_detect_blobs</ref>(BLOBNBOX_CLIST*<sp/>blob_list,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*<sp/>osr,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*<sp/>tess);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="osdetect_8cpp_1a35fb2b0177ed2a774307373aeb7b13d1" kindref="member">os_detect_blob</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,<sp/><ref refid="class_orientation_detector" kindref="compound">OrientationDetector</ref>*<sp/>o,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_detector" kindref="compound">ScriptDetector</ref>*<sp/>s,<sp/><ref refid="struct_o_s_results" kindref="compound">OSResults</ref>*,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">tesseract::Tesseract</ref>*<sp/>tess);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>method<sp/>to<sp/>convert<sp/>an<sp/>orientation<sp/>index<sp/>to<sp/>its<sp/>value<sp/>in<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>represents<sp/>the<sp/>amount<sp/>of<sp/>clockwise<sp/>rotation<sp/>in<sp/>degrees<sp/>that<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applied<sp/>for<sp/>the<sp/>text<sp/>to<sp/>be<sp/>upright<sp/>(readable).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osdetect_8cpp_1a94d19668c76dab0d8ab3832c765303da" kindref="member">OrientationIdToValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCMAIN_OSDETECT_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/osdetect.h"/>
  </compounddef>
</doxygen>
