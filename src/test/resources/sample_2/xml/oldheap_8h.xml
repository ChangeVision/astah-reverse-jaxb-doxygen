<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="oldheap_8h" kind="file">
    <compoundname>oldheap.h</compoundname>
    <includes refid="host_8h" local="yes">host.h</includes>
    <includes refid="cutil_8h" local="yes">cutil.h</includes>
    <includedby refid="cluster_8cpp" local="yes">classify/cluster.cpp</includedby>
    <includedby refid="oldheap_8cpp" local="yes">cutil/oldheap.cpp</includedby>
    <includedby refid="bestfirst_8h" local="yes">wordrec/bestfirst.h</includedby>
    <includedby refid="language__model_8h" local="yes">wordrec/language_model.h</includedby>
    <includedby refid="wordrec_8h" local="yes">wordrec/wordrec.h</includedby>
    <includedby refid="findseam_8h" local="yes">wordrec/findseam.h</includedby>
    <includedby refid="chop_8h" local="yes">wordrec/chop.h</includedby>
    <includedby refid="segsearch_8cpp" local="yes">wordrec/segsearch.cpp</includedby>
    <incdepgraph>
      <node id="33815">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="33816" relation="include">
        </childnode>
        <childnode refid="33829" relation="include">
        </childnode>
        <childnode refid="33812" relation="include">
        </childnode>
      </node>
      <node id="33811">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="33829">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="33804">
        <label>stdlib.h</label>
      </node>
      <node id="33799">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="33800" relation="include">
        </childnode>
      </node>
      <node id="33816">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="33817" relation="include">
        </childnode>
        <childnode refid="33809" relation="include">
        </childnode>
        <childnode refid="33812" relation="include">
        </childnode>
        <childnode refid="33826" relation="include">
        </childnode>
        <childnode refid="33806" relation="include">
        </childnode>
        <childnode refid="33824" relation="include">
        </childnode>
        <childnode refid="33827" relation="include">
        </childnode>
        <childnode refid="33828" relation="include">
        </childnode>
      </node>
      <node id="33819">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="33804" relation="include">
        </childnode>
        <childnode refid="33803" relation="include">
        </childnode>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33813" relation="include">
        </childnode>
        <childnode refid="33809" relation="include">
        </childnode>
        <childnode refid="33820" relation="include">
        </childnode>
      </node>
      <node id="33814">
        <label>stddef.h</label>
      </node>
      <node id="33823">
        <label>memory.h</label>
      </node>
      <node id="33809">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="33798" relation="include">
        </childnode>
      </node>
      <node id="33800">
        <label>limits.h</label>
      </node>
      <node id="33827">
        <label>pthread.h</label>
      </node>
      <node id="33803">
        <label>string.h</label>
      </node>
      <node id="33825">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="33822" relation="include">
        </childnode>
      </node>
      <node id="33822">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="33823" relation="include">
        </childnode>
        <childnode refid="33803" relation="include">
        </childnode>
      </node>
      <node id="33801">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33803" relation="include">
        </childnode>
        <childnode refid="33804" relation="include">
        </childnode>
        <childnode refid="33798" relation="include">
        </childnode>
        <childnode refid="33805" relation="include">
        </childnode>
        <childnode refid="33815" relation="include">
        </childnode>
      </node>
      <node id="33808">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="33798" relation="include">
        </childnode>
      </node>
      <node id="33828">
        <label>semaphore.h</label>
      </node>
      <node id="33820">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="33809" relation="include">
        </childnode>
      </node>
      <node id="33817">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="33818" relation="include">
        </childnode>
        <childnode refid="33805" relation="include">
        </childnode>
        <childnode refid="33822" relation="include">
        </childnode>
        <childnode refid="33824" relation="include">
        </childnode>
        <childnode refid="33807" relation="include">
        </childnode>
      </node>
      <node id="33821">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="33809" relation="include">
        </childnode>
      </node>
      <node id="33806">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33807" relation="include">
        </childnode>
        <childnode refid="33812" relation="include">
        </childnode>
      </node>
      <node id="33807">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33804" relation="include">
        </childnode>
        <childnode refid="33808" relation="include">
        </childnode>
        <childnode refid="33809" relation="include">
        </childnode>
        <childnode refid="33810" relation="include">
        </childnode>
        <childnode refid="33811" relation="include">
        </childnode>
      </node>
      <node id="33813">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="33814" relation="include">
        </childnode>
        <childnode refid="33798" relation="include">
        </childnode>
      </node>
      <node id="33818">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33798" relation="include">
        </childnode>
        <childnode refid="33819" relation="include">
        </childnode>
        <childnode refid="33821" relation="include">
        </childnode>
      </node>
      <node id="33824">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="33809" relation="include">
        </childnode>
        <childnode refid="33810" relation="include">
        </childnode>
        <childnode refid="33812" relation="include">
        </childnode>
        <childnode refid="33808" relation="include">
        </childnode>
        <childnode refid="33822" relation="include">
        </childnode>
        <childnode refid="33825" relation="include">
        </childnode>
      </node>
      <node id="33797">
        <label>cutil/oldheap.h</label>
        <link refid="oldheap.h"/>
        <childnode refid="33798" relation="include">
        </childnode>
        <childnode refid="33801" relation="include">
        </childnode>
      </node>
      <node id="33805">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="33806" relation="include">
        </childnode>
      </node>
      <node id="33798">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="33799" relation="include">
        </childnode>
      </node>
      <node id="33802">
        <label>stdio.h</label>
      </node>
      <node id="33826">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33798" relation="include">
        </childnode>
        <childnode refid="33805" relation="include">
        </childnode>
      </node>
      <node id="33812">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33803" relation="include">
        </childnode>
        <childnode refid="33799" relation="include">
        </childnode>
        <childnode refid="33813" relation="include">
        </childnode>
      </node>
      <node id="33810">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="33802" relation="include">
        </childnode>
        <childnode refid="33803" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="33852">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="33845">
        <label>ccmain/fixspace.cpp</label>
        <link refid="fixspace_8cpp"/>
      </node>
      <node id="33889">
        <label>wordrec/makechop.h</label>
        <link refid="makechop_8h"/>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33890" relation="include">
        </childnode>
      </node>
      <node id="33887">
        <label>ccmain/tfacep.h</label>
        <link refid="tfacep_8h"/>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33834" relation="include">
        </childnode>
        <childnode refid="33866" relation="include">
        </childnode>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
      </node>
      <node id="33851">
        <label>ccmain/tessedit.h</label>
        <link refid="tessedit_8h"/>
        <childnode refid="33850" relation="include">
        </childnode>
      </node>
      <node id="33839">
        <label>wordrec/wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="33840" relation="include">
        </childnode>
        <childnode refid="33835" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33878" relation="include">
        </childnode>
        <childnode refid="33836" relation="include">
        </childnode>
        <childnode refid="33879" relation="include">
        </childnode>
        <childnode refid="33880" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33837" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
      </node>
      <node id="33834">
        <label>ccmain/output.cpp</label>
        <link refid="output_8cpp"/>
      </node>
      <node id="33836">
        <label>wordrec/heuristic.cpp</label>
        <link refid="heuristic_8cpp"/>
      </node>
      <node id="33840">
        <label>ccmain/tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="33841" relation="include">
        </childnode>
        <childnode refid="33842" relation="include">
        </childnode>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33847" relation="include">
        </childnode>
        <childnode refid="33848" relation="include">
        </childnode>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33852" relation="include">
        </childnode>
        <childnode refid="33853" relation="include">
        </childnode>
        <childnode refid="33854" relation="include">
        </childnode>
        <childnode refid="33855" relation="include">
        </childnode>
        <childnode refid="33856" relation="include">
        </childnode>
        <childnode refid="33845" relation="include">
        </childnode>
        <childnode refid="33857" relation="include">
        </childnode>
        <childnode refid="33858" relation="include">
        </childnode>
        <childnode refid="33859" relation="include">
        </childnode>
        <childnode refid="33834" relation="include">
        </childnode>
        <childnode refid="33860" relation="include">
        </childnode>
        <childnode refid="33861" relation="include">
        </childnode>
        <childnode refid="33862" relation="include">
        </childnode>
        <childnode refid="33863" relation="include">
        </childnode>
        <childnode refid="33849" relation="include">
        </childnode>
        <childnode refid="33865" relation="include">
        </childnode>
        <childnode refid="33866" relation="include">
        </childnode>
        <childnode refid="33867" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33873" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
      </node>
      <node id="33855">
        <label>ccmain/docqual.cpp</label>
        <link refid="docqual_8cpp"/>
      </node>
      <node id="33859">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="33890">
        <label>wordrec/makechop.cpp</label>
        <link refid="makechop_8cpp"/>
      </node>
      <node id="33843">
        <label>ccmain/adaptions.cpp</label>
        <link refid="adaptions_8cpp"/>
      </node>
      <node id="33853">
        <label>ccmain/cube_reco_context.cpp</label>
        <link refid="cube__reco__context_8cpp"/>
      </node>
      <node id="33879">
        <label>wordrec/outlines.cpp</label>
        <link refid="outlines_8cpp"/>
      </node>
      <node id="33858">
        <label>ccmain/ltrresultiterator.cpp</label>
        <link refid="ltrresultiterator_8cpp"/>
      </node>
      <node id="33857">
        <label>ccmain/fixxht.cpp</label>
        <link refid="fixxht_8cpp"/>
      </node>
      <node id="33876">
        <label>wordrec/chopper.cpp</label>
        <link refid="chopper_8cpp"/>
      </node>
      <node id="33872">
        <label>cube/beam_search.cpp</label>
        <link refid="beam__search_8cpp"/>
      </node>
      <node id="33866">
        <label>ccmain/reject.cpp</label>
        <link refid="reject_8cpp"/>
      </node>
      <node id="33882">
        <label>wordrec/wordclass.cpp</label>
        <link refid="wordclass_8cpp"/>
      </node>
      <node id="33841">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="33862">
        <label>ccmain/pagewalk.cpp</label>
        <link refid="pagewalk_8cpp"/>
      </node>
      <node id="33844">
        <label>ccmain/control.cpp</label>
        <link refid="control_8cpp"/>
      </node>
      <node id="33883">
        <label>wordrec/wordrec.cpp</label>
        <link refid="wordrec_8cpp"/>
      </node>
      <node id="33886">
        <label>wordrec/chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="33887" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33888" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33878" relation="include">
        </childnode>
        <childnode refid="33837" relation="include">
        </childnode>
      </node>
      <node id="33877">
        <label>wordrec/findseam.cpp</label>
        <link refid="findseam_8cpp"/>
      </node>
      <node id="33860">
        <label>ccmain/pageiterator.cpp</label>
        <link refid="pageiterator_8cpp"/>
      </node>
      <node id="33861">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
      <node id="33884">
        <label>wordrec/language_model.cpp</label>
        <link refid="language__model_8cpp"/>
      </node>
      <node id="33869">
        <label>ccmain/tfacepp.cpp</label>
        <link refid="tfacepp_8cpp"/>
      </node>
      <node id="33864">
        <label>ccmain/paramsd.cpp</label>
        <link refid="paramsd_8cpp"/>
      </node>
      <node id="33847">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox_8cpp"/>
      </node>
      <node id="33832">
        <label>cutil/oldheap.cpp</label>
        <link refid="oldheap_8cpp"/>
      </node>
      <node id="33881">
        <label>wordrec/segsearch.cpp</label>
        <link refid="segsearch_8cpp"/>
      </node>
      <node id="33850">
        <label>ccmain/tessedit.cpp</label>
        <link refid="tessedit_8cpp"/>
      </node>
      <node id="33848">
        <label>ccmain/pgedit.h</label>
        <link refid="pgedit_8h"/>
        <childnode refid="33841" relation="include">
        </childnode>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33849" relation="include">
        </childnode>
        <childnode refid="33850" relation="include">
        </childnode>
        <childnode refid="33851" relation="include">
        </childnode>
      </node>
      <node id="33870">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="33835">
        <label>wordrec/bestfirst.cpp</label>
        <link refid="bestfirst_8cpp"/>
      </node>
      <node id="33885">
        <label>wordrec/findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="33839" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
      </node>
      <node id="33888">
        <label>wordrec/outlines.h</label>
        <link refid="outlines_8h"/>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33879" relation="include">
        </childnode>
      </node>
      <node id="33878">
        <label>wordrec/gradechop.cpp</label>
        <link refid="gradechop_8cpp"/>
      </node>
      <node id="33833">
        <label>wordrec/bestfirst.h</label>
        <link refid="bestfirst_8h"/>
        <childnode refid="33834" relation="include">
        </childnode>
        <childnode refid="33835" relation="include">
        </childnode>
        <childnode refid="33836" relation="include">
        </childnode>
        <childnode refid="33837" relation="include">
        </childnode>
      </node>
      <node id="33874">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="33873">
        <label>cube/tess_lang_model.cpp</label>
        <link refid="tess__lang__model_8cpp"/>
      </node>
      <node id="33854">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="33863">
        <label>ccmain/paramsd.h</label>
        <link refid="paramsd_8h"/>
        <childnode refid="33841" relation="include">
        </childnode>
        <childnode refid="33864" relation="include">
        </childnode>
        <childnode refid="33849" relation="include">
        </childnode>
      </node>
      <node id="33856">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect_8cpp"/>
      </node>
      <node id="33880">
        <label>wordrec/pieces.cpp</label>
        <link refid="pieces_8cpp"/>
      </node>
      <node id="33838">
        <label>wordrec/language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="33839" relation="include">
        </childnode>
        <childnode refid="33884" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33883" relation="include">
        </childnode>
      </node>
      <node id="33875">
        <label>wordrec/chop.cpp</label>
        <link refid="chop_8cpp"/>
      </node>
      <node id="33871">
        <label>ccmain/tesseractclass.cpp</label>
        <link refid="tesseractclass_8cpp"/>
      </node>
      <node id="33846">
        <label>ccmain/tessbox.cpp</label>
        <link refid="tessbox_8cpp"/>
      </node>
      <node id="33867">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
      <node id="33830">
        <label>cutil/oldheap.h</label>
        <link refid="oldheap.h"/>
        <childnode refid="33831" relation="include">
        </childnode>
        <childnode refid="33832" relation="include">
        </childnode>
        <childnode refid="33833" relation="include">
        </childnode>
        <childnode refid="33838" relation="include">
        </childnode>
        <childnode refid="33839" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33886" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
      </node>
      <node id="33837">
        <label>wordrec/tface.cpp</label>
        <link refid="tface_8cpp"/>
      </node>
      <node id="33842">
        <label>ccmain/tessbox.h</label>
        <link refid="tessbox_8h"/>
        <childnode refid="33841" relation="include">
        </childnode>
        <childnode refid="33843" relation="include">
        </childnode>
        <childnode refid="33844" relation="include">
        </childnode>
        <childnode refid="33845" relation="include">
        </childnode>
        <childnode refid="33846" relation="include">
        </childnode>
      </node>
      <node id="33868">
        <label>ccmain/tfacepp.h</label>
        <link refid="tfacepp_8h"/>
        <childnode refid="33846" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
      </node>
      <node id="33831">
        <label>classify/cluster.cpp</label>
        <link refid="cluster_8cpp"/>
      </node>
      <node id="33849">
        <label>ccmain/pgedit.cpp</label>
        <link refid="pgedit_8cpp"/>
      </node>
      <node id="33865">
        <label>ccmain/recogtraining.cpp</label>
        <link refid="recogtraining_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_h_e_a_p_e_n_t_r_y" prot="public">HEAPENTRY</innerclass>
    <innerclass refid="struct_h_e_a_p" prot="public">HEAP</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="oldheap_8h_1a3c47feb3b0f0ff2776f40483ae95d84b" prot="public" static="no">
        <name>HEAPFULL</name>
        <initializer>3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="27" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1a2b7cf2a3641be7b89138615764d60ba3" prot="public" static="no">
        <name>EMPTY</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="29" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1ae14e7ed9f6b99e7bcf6f27a73f741870" prot="public" static="no">
        <name>TESS_HEAP_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="30" column="9" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1a8631cc3f443c4ea3e99195df1ca1dd8d" prot="public" static="no">
        <name>FreeHeap</name>
        <param><defname>H</defname></param>
        <initializer><ref refid="freelist_8h_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>(H)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="46" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1af7057d20ec3cbd5fc55f9367ba365a7e" prot="public" static="no">
        <name>MaxSizeOfHeap</name>
        <param><defname>H</defname></param>
        <initializer>(H-&gt;Size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="47" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1adef5e73cd09ccb5b785927a8b7499873" prot="public" static="no">
        <name>SizeOfHeap</name>
        <param><defname>H</defname></param>
        <initializer>(H-&gt;FirstFree - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="48" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1a1055ccd38ad6faae3382e8d2b0181041" prot="public" static="no">
        <name>InitHeap</name>
        <param><defname>H</defname></param>
        <initializer>(H-&gt;FirstFree = 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="49" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1a073befc4de31136695fba2903cb95c7e" prot="public" static="no">
        <name>HeapFull</name>
        <param><defname>H</defname></param>
        <initializer>((H)-&gt;FirstFree &gt; (H)-&gt;Size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="50" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1aa47fb6ded42e8ac7e61484b1581807ab" prot="public" static="no">
        <name>HeapEmpty</name>
        <param><defname>H</defname></param>
        <initializer>((H)-&gt;FirstFree &lt;= 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="51" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1a119328d2c5be994cf9e71eda5ec9f8c4" prot="public" static="no">
        <name>HeapKeyFor</name>
        <param><defname>H</defname></param>
        <param><defname>E</defname></param>
        <initializer>((H)-&gt;Entry[(E)+1].Key)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="58" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="oldheap_8h_1aa2ffe32199fbf3ae06aef950a9a508fc" prot="public" static="no">
        <name>HeapDataFor</name>
        <param><defname>H</defname></param>
        <param><defname>E</defname></param>
        <initializer>((H)-&gt;Entry[(E)+1].Data)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="59" column="19" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="oldheap_8h_1a101bee15b825fee78f29c8679cc00595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
        <definition>HEAP* MakeHeap</definition>
        <argsstring>(int Size)</argsstring>
        <name>MakeHeap</name>
        <param>
          <type>int</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine creates and initializes a new heap data structure containing Size elements. In actuality, Size + 1 elements are allocated. The first element, element 0, is unused, this makes the index arithmetic easier.</para><para>Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of entries in the heap </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the new heap. </para></simplesect>
<simplesect kind="note"><para>Exceptions: None </para><simplesectsep/><para>History: 3/13/89, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1a133a020354d84309c10dfea471f213f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HeapPop</definition>
        <argsstring>(HEAP *Heap, FLOAT32 *Key, void *out_ptr)</argsstring>
        <name>HeapPop</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine removes the top item on the heap and places its contents into Key and Data.</para><para>Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap whose top is to be removed and returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>place to put key of top heap item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>place to put data of top heap item</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OK if top entry returned, EMPTY if heap is empty </para></simplesect>
<simplesect kind="note"><para>Exceptions: None </para><simplesectsep/><para>History: 5/10/91, DSJ, Created (Modified from GetTopOfHeap). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="76" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1a3ce0caf83478a579d919e1a510a23d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HeapPopWorst</definition>
        <argsstring>(HEAP *Heap, FLOAT32 *Key, void *out_ptr)</argsstring>
        <name>HeapPopWorst</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HeapPopWorst</para><para>Remove the largest item from the heap.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap whose top is to be removed and returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>place to put key of top heap item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>place to put data of top heap item </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="124" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1ad66e9a2d1419e6b12501a783fda5d7c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HeapPush</definition>
        <argsstring>(HEAP *Heap, FLOAT32 Key, void *Data)</argsstring>
        <name>HeapPush</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine stores Data into Heap and associates it with Key. The heap is maintained in such a way that the item with the lowest key is always at the top of the heap.</para><para>Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap to store new item in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric key associated with new item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to data contents of new item</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Exceptions:<itemizedlist>
<listitem><para>HEAPFULL error if heap size is exceeded</para></listitem></itemizedlist>
</para><simplesectsep/><para>History: 5/10/91, DSJ, Created (Modified version of HeapStore). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="195" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1a21a037334c93e1d0e7ae2059203a9cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HeapStore</definition>
        <argsstring>(HEAP *Heap, HEAPENTRY *Entry)</argsstring>
        <name>HeapStore</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref> *</type>
          <declname>Entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine stores Entry into Heap. The heap is maintained in such a way that the item with the lowest key is always at the top of the heap.</para><para>Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap to store new item in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Entry</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to item to be stored in Heap </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Exceptions:<itemizedlist>
<listitem><para>HEAPFULL error if heap size is exceeded </para></listitem></itemizedlist>
</para><simplesectsep/><para>History: 3/13/89, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="234" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1aad11f18baf53c82e65a054ff7552d0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetTopOfHeap</definition>
        <argsstring>(HEAP *Heap, HEAPENTRY *Entry)</argsstring>
        <name>GetTopOfHeap</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref> *</type>
          <declname>Entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine removes the top item on the heap and copies its contents into Entry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap whose top is to be removed and returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Entry</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to heap entry to be filled with top entry on Heap</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>OK if top entry returned, EMPTY if heap is empty </para></simplesect>
<simplesect kind="note"><para>Exceptions: None </para><simplesectsep/><para>History: 3/13/89, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="74" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="273" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1a66bcae55ce37fec5afd5fdeb5a879d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeHeapData</definition>
        <argsstring>(HEAP *Heap, void_dest destructor)</argsstring>
        <name>FreeHeapData</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="cutil_8h_1a840df4080fe3d271893f7db1ff27cc90" kindref="member">void_dest</ref></type>
          <declname>destructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine is similar to FreeHeap in that it deallocates the memory consumed by the heap. However, it also calls Deallocator for each item in the heap so that this data is also deallocated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Heap</parametername>
</parameternamelist>
<parameterdescription>
<para>heap whose data is to be freed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destructor</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be used to deallocate data</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals:<itemizedlist>
<listitem><para>None</para></listitem></itemizedlist>
</para><para><simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Tue May 15 08:52:04 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="327" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="oldheap_8h_1a21d28375a456d5c0238134a101e0236a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HeapPushCheckSize</definition>
        <argsstring>(HEAP *Heap, FLOAT32 Key, void *Data)</argsstring>
        <name>HeapPushCheckSize</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>Heap</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/oldheap.cpp" bodystart="170" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/>heap.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/>Definition<sp/>of<sp/>heap<sp/>access<sp/>routines.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/>3/13/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/>HEAP_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>HEAP_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="23"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="host_8h" kindref="compound">host.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cutil_8h" kindref="compound">cutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="oldheap_8h_1a3c47feb3b0f0ff2776f40483ae95d84b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEAPFULL<sp/><sp/><sp/><sp/><sp/><sp/>3000</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="oldheap_8h_1a2b7cf2a3641be7b89138615764d60ba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY<sp/>-1</highlight></codeline>
<codeline lineno="30" refid="oldheap_8h_1ae14e7ed9f6b99e7bcf6f27a73f741870" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESS_HEAP_OK<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_h_e_a_p_e_n_t_r_y" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="struct_h_e_a_p_e_n_t_r_y_1aa80cabd8128f5fa5a64e00b2e41e9c54" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_h_e_a_p_e_n_t_r_y_1aa80cabd8128f5fa5a64e00b2e41e9c54" kindref="member">Key</ref>;</highlight></codeline>
<codeline lineno="34" refid="struct_h_e_a_p_e_n_t_r_y_1ab04a38c2cfaa44594782f052cbe7414d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_h_e_a_p_e_n_t_r_y_1ab04a38c2cfaa44594782f052cbe7414d" kindref="member">Data</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="struct_h_e_a_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>{</highlight></codeline>
<codeline lineno="38" refid="struct_h_e_a_p_1ac3df0bda023b1ac82fa5e8f163f9f567" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_h_e_a_p_1ac3df0bda023b1ac82fa5e8f163f9f567" kindref="member">Size</ref>;</highlight></codeline>
<codeline lineno="39" refid="struct_h_e_a_p_1ab6f67f42d4fc122780b88fdcd08a8839" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_h_e_a_p_1ab6f67f42d4fc122780b88fdcd08a8839" kindref="member">FirstFree</ref>;</highlight></codeline>
<codeline lineno="40" refid="struct_h_e_a_p_1a4eb91fc02a92104ca8c81dbdd2c8a055" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref><sp/><ref refid="struct_h_e_a_p_1a4eb91fc02a92104ca8c81dbdd2c8a055" kindref="member">Entry</ref>[1];</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="45"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="oldheap_8h_1a8631cc3f443c4ea3e99195df1ca1dd8d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeHeap(H)<sp/>memfree(H)</highlight></codeline>
<codeline lineno="47" refid="oldheap_8h_1af7057d20ec3cbd5fc55f9367ba365a7e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxSizeOfHeap(H)<sp/><sp/>(H-&gt;Size)</highlight></codeline>
<codeline lineno="48" refid="oldheap_8h_1adef5e73cd09ccb5b785927a8b7499873" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SizeOfHeap(H)<sp/><sp/><sp/>(H-&gt;FirstFree<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="49" refid="oldheap_8h_1a1055ccd38ad6faae3382e8d2b0181041" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitHeap(H)<sp/><sp/><sp/>(H-&gt;FirstFree<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="50" refid="oldheap_8h_1a073befc4de31136695fba2903cb95c7e" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapFull(H)<sp/><sp/><sp/>((H)-&gt;FirstFree<sp/>&gt;<sp/>(H)-&gt;Size)</highlight></codeline>
<codeline lineno="51" refid="oldheap_8h_1aa47fb6ded42e8ac7e61484b1581807ab" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapEmpty(H)<sp/><sp/><sp/><sp/>((H)-&gt;FirstFree<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>macros<sp/>for<sp/>accessing<sp/>elements<sp/>in<sp/>heap<sp/>by<sp/>index.<sp/><sp/>The<sp/>indicies<sp/>vary<sp/>from</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>0<sp/>to<sp/>SizeOfHeap-1.<sp/><sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>done.<sp/><sp/>Elements<sp/>accessed<sp/>in</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>this<sp/>manner<sp/>are<sp/>in<sp/>random<sp/>order<sp/>relative<sp/>to<sp/>the<sp/>Key<sp/>values.<sp/><sp/>These</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>macros<sp/>should<sp/>never<sp/>be<sp/>used<sp/>as<sp/>the<sp/>LHS<sp/>of<sp/>an<sp/>assignment<sp/>statement<sp/>as<sp/>this</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>will<sp/>corrupt<sp/>the<sp/>heap.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="oldheap_8h_1a119328d2c5be994cf9e71eda5ec9f8c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapKeyFor(H,E)<sp/><sp/><sp/>((H)-&gt;Entry[(E)+1].Key)</highlight></codeline>
<codeline lineno="59" refid="oldheap_8h_1aa2ffe32199fbf3ae06aef950a9a508fc" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapDataFor(H,E)<sp/><sp/>((H)-&gt;Entry[(E)+1].Data)</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="63"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*<ref refid="oldheap_8cpp_1a101bee15b825fee78f29c8679cc00595" kindref="member">MakeHeap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Size);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1a133a020354d84309c10dfea471f213f4" kindref="member">HeapPop</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*Key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*out_ptr);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1a3ce0caf83478a579d919e1a510a23d92" kindref="member">HeapPopWorst</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*Key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*out_ptr);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1ad66e9a2d1419e6b12501a783fda5d7c3" kindref="member">HeapPush</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1a21a037334c93e1d0e7ae2059203a9cf3" kindref="member">HeapStore</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref><sp/>*Entry);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1aad11f18baf53c82e65a054ff7552d0d1" kindref="member">GetTopOfHeap</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="struct_h_e_a_p_e_n_t_r_y" kindref="compound">HEAPENTRY</ref><sp/>*Entry);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1a66bcae55ce37fec5afd5fdeb5a879d37" kindref="member">FreeHeapData</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="cutil_8h_1a840df4080fe3d271893f7db1ff27cc90" kindref="member">void_dest</ref><sp/>destructor);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="oldheap_8cpp_1a21d28375a456d5c0238134a101e0236a" kindref="member">HeapPushCheckSize</ref>(<ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*Heap,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Data);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cutil/oldheap.h"/>
  </compounddef>
</doxygen>
