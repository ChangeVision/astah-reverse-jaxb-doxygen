<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="char__set_8cpp" kind="file">
    <compoundname>char_set.cpp</compoundname>
    <includes local="no">string</includes>
    <includes refid="char__set_8h" local="yes">char_set.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="tessdatamanager_8h" local="yes">tessdatamanager.h</includes>
    <incdepgraph>
      <node id="29181">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="29192">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="29177">
        <label>stdlib.h</label>
      </node>
      <node id="29172">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="29173" relation="include">
        </childnode>
      </node>
      <node id="29191">
        <label>allheaders.h</label>
      </node>
      <node id="29163">
        <label>string</label>
      </node>
      <node id="29184">
        <label>stddef.h</label>
      </node>
      <node id="29187">
        <label>memory.h</label>
      </node>
      <node id="29162">
        <label>cube/char_set.cpp</label>
        <link refid="char_set.cpp"/>
        <childnode refid="29163" relation="include">
        </childnode>
        <childnode refid="29164" relation="include">
        </childnode>
        <childnode refid="29190" relation="include">
        </childnode>
        <childnode refid="29169" relation="include">
        </childnode>
      </node>
      <node id="29179">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="29171" relation="include">
        </childnode>
      </node>
      <node id="29173">
        <label>limits.h</label>
      </node>
      <node id="29193">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="29177" relation="include">
        </childnode>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29163" relation="include">
        </childnode>
        <childnode refid="29194" relation="include">
        </childnode>
        <childnode refid="29167" relation="include">
        </childnode>
      </node>
      <node id="29164">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="29165" relation="include">
        </childnode>
        <childnode refid="29163" relation="include">
        </childnode>
        <childnode refid="29166" relation="include">
        </childnode>
        <childnode refid="29167" relation="include">
        </childnode>
        <childnode refid="29169" relation="include">
        </childnode>
        <childnode refid="29185" relation="include">
        </childnode>
        <childnode refid="29189" relation="include">
        </childnode>
      </node>
      <node id="29165">
        <label>string.h</label>
      </node>
      <node id="29188">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="29186" relation="include">
        </childnode>
      </node>
      <node id="29186">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="29187" relation="include">
        </childnode>
        <childnode refid="29165" relation="include">
        </childnode>
      </node>
      <node id="29190">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="29168" relation="include">
        </childnode>
        <childnode refid="29163" relation="include">
        </childnode>
        <childnode refid="29191" relation="include">
        </childnode>
        <childnode refid="29192" relation="include">
        </childnode>
        <childnode refid="29164" relation="include">
        </childnode>
        <childnode refid="29193" relation="include">
        </childnode>
        <childnode refid="29197" relation="include">
        </childnode>
      </node>
      <node id="29168">
        <label>vector</label>
      </node>
      <node id="29178">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="29171" relation="include">
        </childnode>
      </node>
      <node id="29175">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29176" relation="include">
        </childnode>
        <childnode refid="29182" relation="include">
        </childnode>
      </node>
      <node id="29176">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29177" relation="include">
        </childnode>
        <childnode refid="29178" relation="include">
        </childnode>
        <childnode refid="29179" relation="include">
        </childnode>
        <childnode refid="29180" relation="include">
        </childnode>
        <childnode refid="29181" relation="include">
        </childnode>
      </node>
      <node id="29183">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="29184" relation="include">
        </childnode>
        <childnode refid="29171" relation="include">
        </childnode>
      </node>
      <node id="29194">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="29177" relation="include">
        </childnode>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29195" relation="include">
        </childnode>
        <childnode refid="29196" relation="include">
        </childnode>
      </node>
      <node id="29195">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="29185">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="29179" relation="include">
        </childnode>
        <childnode refid="29180" relation="include">
        </childnode>
        <childnode refid="29182" relation="include">
        </childnode>
        <childnode refid="29178" relation="include">
        </childnode>
        <childnode refid="29186" relation="include">
        </childnode>
        <childnode refid="29188" relation="include">
        </childnode>
      </node>
      <node id="29189">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="29197">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="29183" relation="include">
        </childnode>
      </node>
      <node id="29174">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="29175" relation="include">
        </childnode>
      </node>
      <node id="29166">
        <label>algorithm</label>
      </node>
      <node id="29171">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="29172" relation="include">
        </childnode>
      </node>
      <node id="29196">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29163" relation="include">
        </childnode>
      </node>
      <node id="29170">
        <label>stdio.h</label>
      </node>
      <node id="29167">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="29165" relation="include">
        </childnode>
        <childnode refid="29163" relation="include">
        </childnode>
        <childnode refid="29166" relation="include">
        </childnode>
        <childnode refid="29168" relation="include">
        </childnode>
      </node>
      <node id="29169">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29171" relation="include">
        </childnode>
        <childnode refid="29174" relation="include">
        </childnode>
      </node>
      <node id="29182">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29165" relation="include">
        </childnode>
        <childnode refid="29172" relation="include">
        </childnode>
        <childnode refid="29183" relation="include">
        </childnode>
      </node>
      <node id="29180">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="29170" relation="include">
        </childnode>
        <childnode refid="29165" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_samp_enum.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>a<sp/>Character<sp/>Set<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__set_8h" kindref="compound">char_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tessdatamanager_8h" kindref="compound">tessdatamanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="classtesseract_1_1_char_set_1a8007ad7fa4bd3d5d788f3a4770e21c62" kindref="member">CharSet::CharSet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>class_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>class_strings_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>unicharset_map_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>init_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>memset(hash_bin_size_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash_bin_size_));</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classtesseract_1_1_char_set_1a8763a05033a659db7c55454b04b00b2b" kindref="member">CharSet::~CharSet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_strings_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cls<sp/>=<sp/>0;<sp/>cls<sp/>&lt;<sp/>class_cnt_;<sp/>cls++)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_strings_[cls]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>class_strings_[cls];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]class_strings_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>class_strings_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]unicharset_map_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>CharSet<sp/>object<sp/>by<sp/>reading<sp/>the<sp/>unicharset<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TessDatamanager,<sp/>and<sp/>mapping<sp/>Cube&apos;s<sp/>unicharset<sp/>to<sp/>Tesseract&apos;s<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>differ.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">CharSet<sp/>*<ref refid="classtesseract_1_1_char_set_1ac73b5ed196711abcd393c6bc578988fe" kindref="member">CharSet::Create</ref>(TessdataManager<sp/>*tessdata_manager,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*tess_unicharset)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_set_1a8007ad7fa4bd3d5d788f3a4770e21c62" kindref="member">CharSet</ref><sp/>*char_set<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_set_1a8007ad7fa4bd3d5d788f3a4770e21c62" kindref="member">CharSet</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_set<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>look<sp/>for<sp/>Cube&apos;s<sp/>unicharset;<sp/>if<sp/>not<sp/>there,<sp/>use<sp/>tesseract&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cube_unicharset_exists;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(cube_unicharset_exists<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tessdata_manager-&gt;SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a87310a274403592ee7b1bd07e8b29973" kindref="member">TESSDATA_CUBE_UNICHARSET</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!tessdata_manager-&gt;SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a54d433c57446ba87f95299d42d324a18" kindref="member">TESSDATA_UNICHARSET</ref>))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::Create):<sp/>could<sp/>not<sp/>find<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;either<sp/>cube<sp/>or<sp/>tesseract<sp/>unicharset\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>FILE<sp/>*charset_fp<sp/>=<sp/>tessdata_manager-&gt;GetDataFilePtr();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!charset_fp)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::Create):<sp/>could<sp/>not<sp/>load<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>unicharset\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>a<sp/>cube<sp/>unicharset<sp/>separate<sp/>from<sp/>tesseract&apos;s,<sp/>load<sp/>it<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>its<sp/>unichars<sp/>to<sp/>tesseract&apos;s;<sp/>if<sp/>only<sp/>one<sp/>unicharset<sp/>exists,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>load<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loaded;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cube_unicharset_exists)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>char_set-&gt;cube_unicharset_.load_from_file(charset_fp);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>loaded<sp/>=<sp/>tessdata_manager-&gt;SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a87310a274403592ee7b1bd07e8b29973" kindref="member">TESSDATA_CUBE_UNICHARSET</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>loaded<sp/>=<sp/>loaded<sp/>&amp;&amp;<sp/>char_set-&gt;LoadSupportedCharList(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tessdata_manager-&gt;GetDataFilePtr(),<sp/>tess_unicharset);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>char_set-&gt;unicharset_<sp/>=<sp/>&amp;char_set-&gt;cube_unicharset_;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>loaded<sp/>=<sp/>char_set-&gt;LoadSupportedCharList(charset_fp,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>char_set-&gt;unicharset_<sp/>=<sp/>tess_unicharset;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!loaded)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_set;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>char_set-&gt;init_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_set;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>list<sp/>of<sp/>supported<sp/>chars<sp/>from<sp/>the<sp/>given<sp/>data<sp/>file<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CharSet::LoadSupportedCharList(FILE<sp/>*fp,<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*tess_unicharset)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str_line[256];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>memset(hash_bin_size_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hash_bin_size_));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>char<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(str_line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(str_line),<sp/>fp)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::InitMemory):<sp/>could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;read<sp/>char<sp/>count.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>class_cnt_<sp/>=<sp/>atoi(str_line);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>(class_cnt_<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::InitMemory):<sp/>invalid<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;class<sp/>count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>class_cnt_);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>for<sp/>class<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>class_strings_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref>*[class_cnt_];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_strings_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::InitMemory):<sp/>could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;allocate<sp/>memory<sp/>for<sp/>class<sp/>strings.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>for<sp/>unicharset<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tess_unicharset)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_map_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[class_cnt_];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset_map_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::InitMemory):<sp/>could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;allocate<sp/>memory<sp/>for<sp/>unicharset<sp/>map.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>character<sp/>strings<sp/>and<sp/>add<sp/>to<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>class_cnt_;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>class<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(str_line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(str_line),<sp/>fp)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::ReadAndHashStrings):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>read<sp/>class<sp/>string<sp/>with<sp/>class_id=%d.\n&quot;</highlight><highlight class="normal">,<sp/>class_id);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Terminate<sp/>at<sp/>space<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>strchr(str_line,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>UTF32<sp/>and<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>str32;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>NULL<sp/>to<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str_line,<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(str_line,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a911ee12931d18c46e7db79c6758a91cc" kindref="member">CubeUtils::UTF8ToUTF32</ref>(str_line,<sp/>&amp;str32);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>class_strings_[class_id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref>(str32);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_strings_[class_id]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::ReadAndHashStrings):<sp/>could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;allocate<sp/>memory<sp/>for<sp/>class<sp/>string<sp/>with<sp/>class_id=%d.\n&quot;</highlight><highlight class="normal">,<sp/>class_id);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>hash-table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_val<sp/>=<sp/>Hash(reinterpret_cast&lt;const<sp/>char_32<sp/>*&gt;(str32.c_str()));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash_bin_size_[hash_val]<sp/>&gt;=<sp/>kMaxHashSize)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSet::LoadSupportedCharList):<sp/>hash<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;table<sp/>is<sp/>full.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_bins_[hash_val][hash_bin_size_[hash_val]++]<sp/>=<sp/>class_id;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tess_unicharset<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>class<sp/>id<sp/>to<sp/>unicharset<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>tess_id<sp/>=<sp/>tess_unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(str_line);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tess_id<sp/>==<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(str_line);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_id<sp/>=<sp/>tess_unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(str_line);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(tess_id<sp/>!=<sp/>INVALID_UNICHAR_ID);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unicharset_map_[class_id]<sp/>=<sp/>tess_id;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/char_set.cpp"/>
  </compounddef>
</doxygen>
