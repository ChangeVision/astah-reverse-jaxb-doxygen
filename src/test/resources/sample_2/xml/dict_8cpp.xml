<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="dict_8cpp" kind="file">
    <compoundname>dict.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="unicodes_8h" local="yes">unicodes.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <incdepgraph>
      <node id="34653">
        <label>unicodes.h</label>
        <link refid="unicodes_8h"/>
      </node>
      <node id="34643">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="34644" relation="include">
        </childnode>
        <childnode refid="34648" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
      </node>
      <node id="34640">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="34650">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
      </node>
      <node id="34621">
        <label>assert.h</label>
      </node>
      <node id="34613">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="34648">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="34601">
        <label>stdlib.h</label>
      </node>
      <node id="34598">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="34599" relation="include">
        </childnode>
      </node>
      <node id="34627">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="34605" relation="include">
        </childnode>
      </node>
      <node id="34644">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="34595" relation="include">
        </childnode>
        <childnode refid="34605" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34645" relation="include">
        </childnode>
        <childnode refid="34609" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
        <childnode refid="34646" relation="include">
        </childnode>
        <childnode refid="34647" relation="include">
        </childnode>
      </node>
      <node id="34636">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
      </node>
      <node id="34600">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="34601" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34603" relation="include">
        </childnode>
        <childnode refid="34605" relation="include">
        </childnode>
        <childnode refid="34606" relation="include">
        </childnode>
      </node>
      <node id="34622">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34600" relation="include">
        </childnode>
        <childnode refid="34607" relation="include">
        </childnode>
      </node>
      <node id="34628">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="34629" relation="include">
        </childnode>
        <childnode refid="34635" relation="include">
        </childnode>
      </node>
      <node id="34651">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="34619" relation="include">
        </childnode>
        <childnode refid="34642" relation="include">
        </childnode>
        <childnode refid="34610" relation="include">
        </childnode>
      </node>
      <node id="34620">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="34621" relation="include">
        </childnode>
        <childnode refid="34622" relation="include">
        </childnode>
        <childnode refid="34610" relation="include">
        </childnode>
        <childnode refid="34623" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
        <childnode refid="34624" relation="include">
        </childnode>
      </node>
      <node id="34604">
        <label>stddef.h</label>
      </node>
      <node id="34616">
        <label>memory.h</label>
      </node>
      <node id="34605">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="34597" relation="include">
        </childnode>
      </node>
      <node id="34599">
        <label>limits.h</label>
      </node>
      <node id="34594">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="34595" relation="include">
        </childnode>
        <childnode refid="34619" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34640" relation="include">
        </childnode>
        <childnode refid="34641" relation="include">
        </childnode>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34649" relation="include">
        </childnode>
        <childnode refid="34651" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
        <childnode refid="34652" relation="include">
        </childnode>
      </node>
      <node id="34633">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="34632" relation="include">
        </childnode>
      </node>
      <node id="34634">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="34631" relation="include">
        </childnode>
      </node>
      <node id="34626">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34600" relation="include">
        </childnode>
        <childnode refid="34607" relation="include">
        </childnode>
      </node>
      <node id="34646">
        <label>pthread.h</label>
      </node>
      <node id="34602">
        <label>string.h</label>
      </node>
      <node id="34618">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="34615" relation="include">
        </childnode>
      </node>
      <node id="34615">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="34616" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
      </node>
      <node id="34642">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34601" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
        <childnode refid="34643" relation="include">
        </childnode>
      </node>
      <node id="34635">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="34632" relation="include">
        </childnode>
        <childnode refid="34631" relation="include">
        </childnode>
        <childnode refid="34613" relation="include">
        </childnode>
        <childnode refid="34636" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
      </node>
      <node id="34625">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="34597" relation="include">
        </childnode>
      </node>
      <node id="34611">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="34597" relation="include">
        </childnode>
      </node>
      <node id="34647">
        <label>semaphore.h</label>
      </node>
      <node id="34629">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="34630" relation="include">
        </childnode>
        <childnode refid="34634" relation="include">
        </childnode>
        <childnode refid="34625" relation="include">
        </childnode>
        <childnode refid="34635" relation="include">
        </childnode>
        <childnode refid="34627" relation="include">
        </childnode>
        <childnode refid="34636" relation="include">
        </childnode>
      </node>
      <node id="34624">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="34609" relation="include">
        </childnode>
        <childnode refid="34625" relation="include">
        </childnode>
        <childnode refid="34626" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34627" relation="include">
        </childnode>
        <childnode refid="34628" relation="include">
        </childnode>
        <childnode refid="34637" relation="include">
        </childnode>
      </node>
      <node id="34637">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34638" relation="include">
        </childnode>
        <childnode refid="34624" relation="include">
        </childnode>
      </node>
      <node id="34606">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="34605" relation="include">
        </childnode>
      </node>
      <node id="34595">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="34596" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
        <childnode refid="34610" relation="include">
        </childnode>
      </node>
      <node id="34632">
        <label>math.h</label>
      </node>
      <node id="34630">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="34631" relation="include">
        </childnode>
        <childnode refid="34634" relation="include">
        </childnode>
      </node>
      <node id="34607">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="34605" relation="include">
        </childnode>
      </node>
      <node id="34639">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="34631" relation="include">
        </childnode>
      </node>
      <node id="34641">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="34642" relation="include">
        </childnode>
        <childnode refid="34611" relation="include">
        </childnode>
      </node>
      <node id="34609">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34610" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
      </node>
      <node id="34610">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34601" relation="include">
        </childnode>
        <childnode refid="34611" relation="include">
        </childnode>
        <childnode refid="34605" relation="include">
        </childnode>
        <childnode refid="34612" relation="include">
        </childnode>
        <childnode refid="34613" relation="include">
        </childnode>
      </node>
      <node id="34649">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="34610" relation="include">
        </childnode>
        <childnode refid="34609" relation="include">
        </childnode>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34650" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
      </node>
      <node id="34603">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="34604" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
      </node>
      <node id="34596">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34600" relation="include">
        </childnode>
        <childnode refid="34607" relation="include">
        </childnode>
      </node>
      <node id="34617">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="34605" relation="include">
        </childnode>
        <childnode refid="34612" relation="include">
        </childnode>
        <childnode refid="34614" relation="include">
        </childnode>
        <childnode refid="34611" relation="include">
        </childnode>
        <childnode refid="34615" relation="include">
        </childnode>
        <childnode refid="34618" relation="include">
        </childnode>
      </node>
      <node id="34592">
        <label>dict/dict.cpp</label>
        <link refid="dict.cpp"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34594" relation="include">
        </childnode>
        <childnode refid="34653" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
      </node>
      <node id="34619">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="34596" relation="include">
        </childnode>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34609" relation="include">
        </childnode>
        <childnode refid="34611" relation="include">
        </childnode>
      </node>
      <node id="34631">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34632" relation="include">
        </childnode>
        <childnode refid="34596" relation="include">
        </childnode>
        <childnode refid="34633" relation="include">
        </childnode>
      </node>
      <node id="34623">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="34608">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="34609" relation="include">
        </childnode>
      </node>
      <node id="34597">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="34598" relation="include">
        </childnode>
      </node>
      <node id="34593">
        <label>stdio.h</label>
      </node>
      <node id="34645">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34597" relation="include">
        </childnode>
        <childnode refid="34608" relation="include">
        </childnode>
      </node>
      <node id="34614">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
        <childnode refid="34598" relation="include">
        </childnode>
        <childnode refid="34603" relation="include">
        </childnode>
      </node>
      <node id="34612">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="34593" relation="include">
        </childnode>
        <childnode refid="34602" relation="include">
        </childnode>
      </node>
      <node id="34652">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="34620" relation="include">
        </childnode>
        <childnode refid="34609" relation="include">
        </childnode>
        <childnode refid="34617" relation="include">
        </childnode>
      </node>
      <node id="34638">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="34639" relation="include">
        </childnode>
        <childnode refid="34600" relation="include">
        </childnode>
        <childnode refid="34603" relation="include">
        </childnode>
        <childnode refid="34635" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>dict<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Samuel<sp/>Charron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2006,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicodes_8h" kindref="compound">unicodes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Image;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classtesseract_1_1_dict_1ac11f84cc25bbf53314c0acda453949df" kindref="member">Dict::Dict</ref>(Image*<sp/>image_ptr)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>letter_is_okay_(&amp;<ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::Dict::def_letter_is_okay),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probability_in_context_(&amp;<ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::Dict::def_probability_in_context),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>image_ptr_(image_ptr),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a425d80a737f7f70a19c15d58b7edda20" kindref="member">STRING_INIT_MEMBER</ref>(user_words_suffix,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A<sp/>list<sp/>of<sp/>user-provided<sp/>words.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a425d80a737f7f70a19c15d58b7edda20" kindref="member">STRING_INIT_MEMBER</ref>(user_patterns_suffix,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A<sp/>list<sp/>of<sp/>user-provided<sp/>patterns.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_system_dawg,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>system<sp/>word<sp/>dawg.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_freq_dawg,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>frequent<sp/>word<sp/>dawg.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_unambig_dawg,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>unambiguous<sp/>word<sp/>dawg.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_punc_dawg,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>dawg<sp/>with<sp/>punctuation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>patterns.&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_number_dawg,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>dawg<sp/>with<sp/>number&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>patterns.&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_fixed_length_dawgs,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>fixed<sp/>length<sp/>dawgs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(e.g.<sp/>for<sp/>non-space<sp/>delimited<sp/>languages)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(load_bigram_dawg,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>dawg<sp/>with<sp/>special<sp/>word<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bigrams.&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_dict_frequent_word,<sp/>1.0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multiplier<sp/>for<sp/>word<sp/>matches<sp/>which<sp/>have<sp/>good<sp/>case<sp/>and&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;are<sp/>frequent<sp/>in<sp/>the<sp/>given<sp/>language<sp/>(lower<sp/>is<sp/>better).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_dict_case_ok,<sp/>1.1,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multiplier<sp/>for<sp/>word<sp/>matches<sp/>that<sp/>have<sp/>good<sp/>case<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(lower<sp/>is<sp/>better).&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_dict_case_bad,<sp/>1.3125,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>score<sp/>multiplier<sp/>for<sp/>word<sp/>matches,<sp/>which<sp/>may<sp/>have<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;case<sp/>issues<sp/>(lower<sp/>is<sp/>better).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_ngram_best_choice,<sp/>1.24,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multipler<sp/>to<sp/>for<sp/>the<sp/>best<sp/>choice<sp/>from<sp/>the<sp/>ngram<sp/>model.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_dict_nonword,<sp/>1.25,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multiplier<sp/>for<sp/>glyph<sp/>fragment<sp/>segmentations<sp/>which<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;do<sp/>not<sp/>match<sp/>a<sp/>dictionary<sp/>word<sp/>(lower<sp/>is<sp/>better).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_penalty_garbage,<sp/>1.50,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multiplier<sp/>for<sp/>poorly<sp/>cased<sp/>strings<sp/>that<sp/>are<sp/>not<sp/>in&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>the<sp/>dictionary<sp/>and<sp/>generally<sp/>look<sp/>like<sp/>garbage<sp/>(lower<sp/>is&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>better).&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1adbed450b87e900f7ee35bc5c6fc8f619" kindref="member">STRING_MEMBER</ref>(output_ambig_words_file,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>file<sp/>for<sp/>ambiguities<sp/>found<sp/>in<sp/>the<sp/>dictionary&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(dawg_debug_level,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>to<sp/>1<sp/>for<sp/>general<sp/>debug<sp/>info&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>to<sp/>2<sp/>for<sp/>more<sp/>details,<sp/>to<sp/>3<sp/>to<sp/>see<sp/>all<sp/>the<sp/>debug<sp/>messages&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(hyphen_debug_level,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>level<sp/>for<sp/>hyphenated<sp/>words.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(max_viterbi_list_size,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>size<sp/>of<sp/>viterbi<sp/>list.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(use_only_first_uft8_step,<sp/>false,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>only<sp/>the<sp/>first<sp/>UTF8<sp/>step<sp/>of<sp/>the<sp/>given<sp/>string&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>when<sp/>computing<sp/>log<sp/>probabilities.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(certainty_scale,<sp/>20.0,<sp/></highlight><highlight class="stringliteral">&quot;Certainty<sp/>scaling<sp/>factor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_nondict_certainty_base,<sp/>-2.50,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Certainty<sp/>threshold<sp/>for<sp/>non-dict<sp/>words&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_phase2_certainty_rejection_offset,<sp/>1.0,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Reject<sp/>certainty<sp/>offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(stopper_smallword_size,<sp/>2,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>dict<sp/>word<sp/>to<sp/>be<sp/>treated<sp/>as<sp/>non-dict<sp/>word&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_certainty_per_char,<sp/>-0.50,<sp/></highlight><highlight class="stringliteral">&quot;Certainty<sp/>to<sp/>add&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>each<sp/>dict<sp/>char<sp/>above<sp/>small<sp/>word<sp/>size.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_allowable_character_badness,<sp/>3.0,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>certaintly<sp/>variation<sp/>allowed<sp/>in<sp/>a<sp/>word<sp/>(in<sp/>sigma)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(stopper_debug_level,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Stopper<sp/>debug<sp/>level&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(stopper_no_acceptable_choices,<sp/>false,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Make<sp/>AcceptableChoice()<sp/>always<sp/>return<sp/>false.<sp/>Useful&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>when<sp/>there<sp/>is<sp/>a<sp/>need<sp/>to<sp/>explore<sp/>all<sp/>segmentations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_ambiguity_threshold_gain,<sp/>8.0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Gain<sp/>factor<sp/>for<sp/>ambiguity<sp/>threshold.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(stopper_ambiguity_threshold_offset,<sp/>1.5,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Certainty<sp/>offset<sp/>for<sp/>ambiguity<sp/>threshold.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(save_raw_choices,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>all<sp/>explored<sp/>raw<sp/>choices&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(tessedit_truncate_wordchoice_log,<sp/>10,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>words<sp/>to<sp/>keep<sp/>in<sp/>list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1adbed450b87e900f7ee35bc5c6fc8f619" kindref="member">STRING_MEMBER</ref>(word_to_debug,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Word<sp/>for<sp/>which<sp/>stopper<sp/>debug&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>information<sp/>should<sp/>be<sp/>printed<sp/>to<sp/>stdout&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1adbed450b87e900f7ee35bc5c6fc8f619" kindref="member">STRING_MEMBER</ref>(word_to_debug_lengths,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Lengths<sp/>of<sp/>unichars<sp/>in<sp/>word_to_debug&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(fragments_debug,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>character<sp/>fragments&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(segment_debug,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>the<sp/>whole<sp/>segmentation<sp/>process&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(permute_debug,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>char<sp/>permutation<sp/>process&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(bestrate_pruning_factor,<sp/>2.0,<sp/></highlight><highlight class="stringliteral">&quot;Multiplying<sp/>factor<sp/>of&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>current<sp/>best<sp/>rate<sp/>to<sp/>prune<sp/>other<sp/>hypotheses&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(permute_script_word,<sp/>0,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Turn<sp/>on<sp/>word<sp/>script<sp/>consistency<sp/>permuter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(segment_segcost_rating,<sp/>0,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;incorporate<sp/>segmentation<sp/>cost<sp/>in<sp/>word<sp/>rating?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(segment_nonalphabetic_script,<sp/>false,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Don&apos;t<sp/>use<sp/>any<sp/>alphabetic-specific<sp/>tricks.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>to<sp/>true<sp/>in<sp/>the<sp/>traineddata<sp/>config<sp/>file<sp/>for&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>scripts<sp/>that<sp/>are<sp/>cursive<sp/>or<sp/>inherently<sp/>fixed-pitch&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_reward_script,<sp/>0.95,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multipler<sp/>for<sp/>script<sp/>consistency<sp/>within<sp/>a<sp/>word.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Being<sp/>a<sp/>&apos;reward&apos;<sp/>factor,<sp/>it<sp/>should<sp/>be<sp/>&lt;=<sp/>1.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Smaller<sp/>value<sp/>implies<sp/>bigger<sp/>reward.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(permute_fixed_length_dawg,<sp/>0,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Turn<sp/>on<sp/>fixed-length<sp/>phrasebook<sp/>search<sp/>permuter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(permute_chartype_word,<sp/>0,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Turn<sp/>on<sp/>character<sp/>type<sp/>(property)<sp/>consistency<sp/>permuter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_reward_chartype,<sp/>0.97,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multipler<sp/>for<sp/>char<sp/>type<sp/>consistency<sp/>within<sp/>a<sp/>word.<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(segment_reward_ngram_best_choice,<sp/>0.99,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Score<sp/>multipler<sp/>for<sp/>ngram<sp/>permuter&apos;s<sp/>best<sp/>choice&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(only<sp/>used<sp/>in<sp/>the<sp/>Han<sp/>script<sp/>path).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(save_doc_words,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>Document<sp/>Words&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(doc_dict_enable,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Enable<sp/>Document<sp/>Dictionary<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(doc_dict_pending_threshold,<sp/>0.0,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Worst<sp/>certainty<sp/>for<sp/>using<sp/>pending<sp/>dictionary&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(doc_dict_certainty_threshold,<sp/>-2.25,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Worst<sp/>certainty<sp/>for<sp/>words<sp/>that<sp/>can<sp/>be<sp/>inserted<sp/>into<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;document<sp/>dictionary&quot;</highlight><highlight class="normal">,<sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(ngram_permuter_activated,<sp/>false,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Activate<sp/>character-level<sp/>n-gram-based<sp/>permuter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(max_permuter_attempts,<sp/>10000,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>number<sp/>of<sp/>different&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>character<sp/>choices<sp/>to<sp/>consider<sp/>during<sp/>permutation.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>This<sp/>limit<sp/>is<sp/>especially<sp/>useful<sp/>when<sp/>user<sp/>patterns&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>are<sp/>specified,<sp/>since<sp/>overly<sp/>generic<sp/>patterns<sp/>can<sp/>result<sp/>in&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>dawg<sp/>search<sp/>exploring<sp/>an<sp/>overly<sp/>large<sp/>number<sp/>of<sp/>options.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(<ref refid="permute_8h_1a2ffffb529286008eb08e2cafac1e35ce" kindref="member">permute_only_top</ref>,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Run<sp/>only<sp/>the<sp/>top<sp/>choice<sp/>permuter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getImage()-&gt;getCCUtil()-&gt;params())<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>dang_ambigs_table_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>replace_ambigs_table_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>keep_word_choices_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>reject_offset_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>best_raw_choice_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>best_choices_<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>raw_choices_<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>go_deeper_fxn_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>hyphen_word_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>last_word_on_line_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>hyphen_unichar_id_<sp/>=<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>document_words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>pending_words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>bigram_dawg_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>freq_dawg_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>punc_dawg_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>max_fixed_length_dawgs_wdlen_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>wordseg_rating_adjust_factor_<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>output_ambig_words_file_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="classtesseract_1_1_dict_1ab471fe748aa77118175b04caaa4283df" kindref="member">Dict::~Dict</ref>()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyphen_word_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hyphen_word_;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_ambig_words_file_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>fclose(output_ambig_words_file_);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a1cb09562db2f2c8951f8dc21cf7bc279" kindref="member">Dict::Load</ref>()<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>name;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref><sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" kindref="member">getImage</ref>()-&gt;<ref refid="classtesseract_1_1_image_1a70f25dbbb805a9ffe518d48794cfca95" kindref="member">getCCUtil</ref>()-&gt;<ref refid="classtesseract_1_1_c_c_util_1ae453cbd7e4899ebfc5cc3831e5a8dd66" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>!=<sp/>0)<sp/>this-&gt;<ref refid="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>hyphen_unichar_id_<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(kHyphenSymbol);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1ae92c303dc7451b3836cc9669e80090c0" kindref="member">LoadEquivalenceList</ref>(<ref refid="namespacetesseract_1aa1505ec49e73744b09f67e0a8390a103" kindref="member">kHyphenLikeUTF8</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1ae92c303dc7451b3836cc9669e80090c0" kindref="member">LoadEquivalenceList</ref>(<ref refid="namespacetesseract_1a0e977b84de723eee3cf551283b1d1ed1" kindref="member">kApostropheLikeUTF8</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>TessdataManager<sp/>&amp;tessdata_manager<sp/>=</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" kindref="member">getImage</ref>()-&gt;<ref refid="classtesseract_1_1_image_1a70f25dbbb805a9ffe518d48794cfca95" kindref="member">getCCUtil</ref>()-&gt;<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>dawgs_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_punc_dawg<sp/>&amp;&amp;<sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a041eff587bbc58c4c93e76facd593b56" kindref="member">TESSDATA_PUNC_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>punc_dawg_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151aa8e8b65bf32d2884c0bab5fb8223c6eb" kindref="member">DAWG_TYPE_PUNCTUATION</ref>,<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/>PUNC_PERM,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/>punc_dawg_;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_system_dawg<sp/>&amp;&amp;<sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899af89fe7138ea14ba1a31e8ddf53f2089f" kindref="member">TESSDATA_SYSTEM_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/>SYSTEM_DAWG_PERM,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_number_dawg<sp/>&amp;&amp;<sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a7bad9e33542e38f498f9c6672626ee04" kindref="member">TESSDATA_NUMBER_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a16f2414a05db0ec4b7e1b266052a966f" kindref="member">DAWG_TYPE_NUMBER</ref>,<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/>NUMBER_PERM,<sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_bigram_dawg<sp/>&amp;&amp;<sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899aa59c96914537bb9958be8fb3a96b2a85" kindref="member">TESSDATA_BIGRAM_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>bigram_dawg_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>actually<sp/>matter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPOUND_PERM,<sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>actually<sp/>matter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_freq_dawg<sp/>&amp;&amp;<sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a041f1b2804fb7a000090908c979739ff" kindref="member">TESSDATA_FREQ_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>freq_dawg_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/>FREQ_DAWG_PERM,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/>freq_dawg_;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_unambig_dawg<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a0f153618328153c350638138d2807d97" kindref="member">TESSDATA_UNAMBIG_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>unambig_dawg_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/>SYSTEM_DAWG_PERM,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/>unambig_dawg_;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;)user_words_suffix).length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Trie<sp/>*trie_ptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trie(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/>lang,<sp/>USER_DAWG_PERM,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMaxUserDawgEdges,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().size(),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" kindref="member">getImage</ref>()-&gt;<ref refid="classtesseract_1_1_image_1a70f25dbbb805a9ffe518d48794cfca95" kindref="member">getCCUtil</ref>()-&gt;<ref refid="classtesseract_1_1_c_c_util_1a259fbb37f1e940892938c71496c4d6ba" kindref="member">language_data_path_prefix</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>+=<sp/>user_words_suffix;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trie_ptr-&gt;read_word_list(name.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>(),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80aebb1e29c59c60c902106a61853e183e3" kindref="member">Trie::RRP_REVERSE_IF_HAS_RTL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>failed<sp/>to<sp/>load<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/>trie_ptr;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;)user_patterns_suffix).length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>Trie<sp/>*trie_ptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trie(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a4e994eccb48eec56bb31bccd8bbb3cef" kindref="member">DAWG_TYPE_PATTERN</ref>,<sp/>lang,<sp/>USER_PATTERN_PERM,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMaxUserDawgEdges,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().size(),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>trie_ptr-&gt;initialize_patterns(&amp;(<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>()));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" kindref="member">getImage</ref>()-&gt;<ref refid="classtesseract_1_1_image_1a70f25dbbb805a9ffe518d48794cfca95" kindref="member">getCCUtil</ref>()-&gt;<ref refid="classtesseract_1_1_c_c_util_1a259fbb37f1e940892938c71496c4d6ba" kindref="member">language_data_path_prefix</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>+=<sp/>user_patterns_suffix;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trie_ptr-&gt;read_pattern_list(name.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>failed<sp/>to<sp/>load<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>dawgs_<sp/>+=<sp/>trie_ptr;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>document_words_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trie(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/>lang,<sp/>DOC_DAWG_PERM,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMaxDocDawgEdges,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().size(),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>dawgs_<sp/>+=<sp/>document_words_;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>dawg<sp/>is<sp/>temporary<sp/>and<sp/>should<sp/>not<sp/>be<sp/>searched<sp/>by<sp/>letter_is_ok.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>pending_words_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trie(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/>lang,<sp/>NO_PERM,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMaxDocDawgEdges,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().size(),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>fixed<sp/>length<sp/>dawgs<sp/>if<sp/>necessary<sp/>(used<sp/>for<sp/>phrase<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>non-space<sp/>delimited<sp/>languages).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_fixed_length_dawgs<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tessdata_manager.SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899ae57ec423406725deceddd071fefb367c" kindref="member">TESSDATA_FIXED_LENGTH_DAWGS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a741bbc38aa86c057b2b431c716519cc8" kindref="member">ReadFixedLengthDawgs</ref>(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,<sp/>lang,<sp/>SYSTEM_DAWG_PERM,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_debug_level,<sp/>tessdata_manager.GetDataFilePtr(),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dawgs_,<sp/>&amp;max_fixed_length_dawgs_wdlen_);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>list<sp/>of<sp/>corresponding<sp/>successors<sp/>for<sp/>each<sp/>dawg.<sp/>Each<sp/>entry<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>successors_<sp/>vector<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>integers<sp/>that<sp/>represent<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>indices<sp/>into<sp/>the<sp/>dawgs_<sp/>vector<sp/>of<sp/>the<sp/>successors<sp/>for<sp/>dawg<sp/>i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>successors_.<ref refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" kindref="member">reserve</ref>(dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*dawg<sp/>=<sp/>dawgs_[i];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a2da5d0a635bfbb70a26ab0844903bed3" kindref="member">SuccessorList</ref><sp/>*lst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2da5d0a635bfbb70a26ab0844903bed3" kindref="member">SuccessorList</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*other<sp/>=<sp/>dawgs_[j];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>other<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dawg-&gt;lang()<sp/>==<sp/>other-&gt;lang())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDawgSuccessors[dawg-&gt;type()][other-&gt;type()])<sp/>*lst<sp/>+=<sp/>j;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>successors_<sp/>+=<sp/>lst;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" kindref="member">Dict::End</ref>()<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>safe<sp/>to<sp/>call<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>dawgs_.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>successors_.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>dawgs_.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bigram_dawg_;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>successors_.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>document_words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>max_fixed_length_dawgs_wdlen_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pending_words_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pending_words_;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>pending_words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>unicharset<sp/>adaptations<sp/>of<sp/>known,<sp/>short<sp/>lists<sp/>of<sp/>UTF-8<sp/>equivalent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters<sp/>(think<sp/>all<sp/>hyphen-like<sp/>symbols).<sp/><sp/>The<sp/>first<sp/>version<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>list<sp/>is<sp/>taken<sp/>as<sp/>equivalent<sp/>for<sp/>matching<sp/>against<sp/>the<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ae92c303dc7451b3836cc9669e80090c0" kindref="member">Dict::LoadEquivalenceList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar_strings[])<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>equivalent_symbols_.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;UNICHAR_ID&gt;</ref>());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;UNICHAR_ID&gt;</ref><sp/>*equiv_list<sp/>=<sp/>&amp;equivalent_symbols_.<ref refid="class_generic_vector_1a6e6d6497a6f7dd999b6d591c15354167" kindref="member">back</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>unichar_strings[i]<sp/>!=<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(unichar_strings[i]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichar_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>equiv_list-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(unichar_id);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>all<sp/>hyphen<sp/>and<sp/>apostrophes<sp/>to<sp/>the<sp/>canonicalized<sp/>one<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matching;<sp/>pass<sp/>everything<sp/>else<sp/>through<sp/>as<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_dict_1a57be0143dbad3201d0d2ce002ae9bce8" kindref="member">Dict::NormalizeUnicharIdForMatch</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>equivalent_symbols_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equivalent_symbols_[i].contains(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equivalent_symbols_[i][0];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichar_id;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>in<sp/>light<sp/>of<sp/>the<sp/>current<sp/>state<sp/>unichar_id<sp/>is<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>according<sp/>to<sp/>at<sp/>least<sp/>one<sp/>of<sp/>the<sp/>dawgs<sp/>in<sp/>the<sp/>dawgs_<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>more<sp/>extensive<sp/>comments<sp/>in<sp/>dict.h<sp/>where<sp/>this<sp/>function<sp/>is<sp/>declared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1acd45e378f915e3dd4bb18a8930e928c9" kindref="member">Dict::def_letter_is_okay</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>void_dawg_args,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>DawgArgs<sp/>*dawg_args<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">DawgArgs*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(void_dawg_args);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;def_letter_is_okay:<sp/>current<sp/>unichar=%s<sp/>word_end=%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>num<sp/>active<sp/>dawgs=%d<sp/>num<sp/>constraints=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().debug_str(unichar_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),<sp/>word_end,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;active_dawgs-&gt;length(),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;constraints-&gt;length());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>accept<sp/>words<sp/>that<sp/>contain<sp/>kPatternUnicharID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(otherwise<sp/>pattern<sp/>dawgs<sp/>would<sp/>not<sp/>function<sp/>correctly).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>accept<sp/>words<sp/>containing<sp/>INVALID_UNICHAR_IDs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichar_id<sp/>==<sp/><ref refid="classtesseract_1_1_dawg_1af6a39872b9a20f3b02020f237731af87" kindref="member">Dawg::kPatternUnicharID</ref><sp/>||</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id<sp/>==<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args-&gt;permuter<sp/>=<sp/>NO_PERM;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_PERM;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>PermuterType<sp/>curr_perm<sp/>=<sp/>NO_PERM;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>dawg_args-&gt;updated_active_dawgs-&gt;clear();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfoVector<sp/>&amp;constraints<sp/>=<sp/>*(dawg_args-&gt;constraints);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>*dawg_args-&gt;updated_constraints<sp/>=<sp/>constraints;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>over<sp/>the<sp/>active_dawgs<sp/>vector<sp/>and<sp/>insert<sp/>DawgInfo<sp/>records<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>updated<sp/>ref<sp/>(an<sp/>edge<sp/>with<sp/>the<sp/>corresponding<sp/>unichar<sp/>id)<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dawg_args-&gt;updated_active_dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>0;<sp/>a<sp/>&lt;<sp/>dawg_args-&gt;active_dawgs-&gt;length();<sp/>++a)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfo<sp/>&amp;info<sp/>=<sp/>(*dawg_args-&gt;active_dawgs)[a];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*dawg<sp/>=<sp/>dawgs_[info.dawg_index];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dawg_unichar_id<sp/>will<sp/>contain<sp/>the<sp/>literal<sp/>unichar_id<sp/>to<sp/>be<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dawgs<sp/>(e.g.<sp/>didgit<sp/>pattern<sp/>if<sp/>unichar_id<sp/>is<sp/>a<sp/>digit<sp/>and<sp/>dawg<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>patterns,<sp/>word<sp/>pattern<sp/>if<sp/>dawg<sp/>is<sp/>a<sp/>puncutation<sp/>dawg<sp/>and<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reached<sp/>an<sp/>end<sp/>of<sp/>beginning<sp/>puntuation<sp/>pattern,<sp/>etc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>dawg_unichar_id<sp/>=<sp/>unichar_id;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>dealing<sp/>with<sp/>the<sp/>pattern<sp/>dawg,<sp/>look<sp/>up<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>edges,<sp/>not<sp/>only<sp/>for<sp/>the<sp/>exact<sp/>unichar_id,<sp/>but<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>its<sp/>character<sp/>classes<sp/>(alpha,<sp/>digit,<sp/>etc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a4e994eccb48eec56bb31bccd8bbb3cef" kindref="member">DAWG_TYPE_PATTERN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a9e46362693e817dcc2f8265854679c80" kindref="member">ProcessPatternEdges</ref>(dawg,<sp/>info,<sp/>dawg_unichar_id,<sp/>word_end,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args,<sp/>&amp;curr_perm);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>can&apos;t<sp/>be<sp/>any<sp/>successors<sp/>to<sp/>dawg<sp/>that<sp/>is<sp/>of<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DAWG_TYPE_PATTERN,<sp/>so<sp/>we<sp/>are<sp/>done<sp/>examining<sp/>this<sp/>DawgInfo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>dawg<sp/>generalizes<sp/>all<sp/>digits<sp/>to<sp/>be<sp/>kPatternUnicharID,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>try<sp/>to<sp/>match<sp/>kPatternUnicharID<sp/>if<sp/>the<sp/>current<sp/>unichar<sp/>is<sp/>a<sp/>digit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a16f2414a05db0ec4b7e1b266052a966f" kindref="member">DAWG_TYPE_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(dawg_unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1af6a39872b9a20f3b02020f237731af87" kindref="member">Dawg::kPatternUnicharID</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>edge<sp/>out<sp/>of<sp/>the<sp/>node<sp/>for<sp/>the<sp/>dawg_unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1aa98baea7a97174cb256643c407c81993" kindref="member" tooltip="Returns the appropriate next node given the EDGE_REF. ">GetStartingNode</ref>(dawg,<sp/>info.ref);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge<sp/>=<sp/>(node<sp/>!=<sp/>NO_EDGE)<sp/>?</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg-&gt;edge_char_of(node,<sp/>dawg_unichar_id,<sp/>word_end)<sp/>:<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Active<sp/>dawg:<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]<sp/>edge=&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.dawg_index,<sp/>node,<sp/>edge);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unichar<sp/>was<sp/>found<sp/>in<sp/>the<sp/>current<sp/>dawg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a5de64b7d07afaeb33408ee296db75f5d" kindref="member">ConstraintsOk</ref>(*(dawg_args-&gt;updated_constraints),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end,<sp/>dawg-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Letter<sp/>found<sp/>in<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>info.dawg_index);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg-&gt;permuter()<sp/>&gt;<sp/>curr_perm)<sp/>curr_perm<sp/>=<sp/>dawg-&gt;permuter();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;updated_active_dawgs-&gt;add_unique(</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgInfo(info.dawg_index,<sp/>edge),<sp/>dawg_debug_level<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Append<sp/>current<sp/>dawg<sp/>to<sp/>updated<sp/>active<sp/>dawgs:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_args-&gt;sought_word_length<sp/>==<sp/>kAnyWordLength)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>unichar<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>current<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explore<sp/>the<sp/>successor<sp/>dawgs<sp/>(but<sp/>only<sp/>if<sp/>we<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>searching<sp/>one<sp/>dawg<sp/>with<sp/>a<sp/>fixed<sp/>word<sp/>length).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>leading/trailing<sp/>punctuation<sp/>dawgs<sp/>that<sp/>denote<sp/>a<sp/>word<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>edge<sp/>with<sp/>kPatternUnicharID.<sp/>If<sp/>such<sp/>an<sp/>edge<sp/>is<sp/>found<sp/>we<sp/>add<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constraint<sp/>denoting<sp/>the<sp/>state<sp/>of<sp/>the<sp/>dawg<sp/>before<sp/>the<sp/>word<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constraint<sp/>will<sp/>be<sp/>applied<sp/>later<sp/>when<sp/>this<sp/>dawg<sp/>is<sp/>found<sp/>among</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successor<sp/>dawgs<sp/>as<sp/>well<sp/>potentially<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151aa8e8b65bf32d2884c0bab5fb8223c6eb" kindref="member">DAWG_TYPE_PUNCTUATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>=<sp/>dawg-&gt;edge_char_of(node,<sp/><ref refid="classtesseract_1_1_dawg_1af6a39872b9a20f3b02020f237731af87" kindref="member">Dawg::kPatternUnicharID</ref>,<sp/>word_end);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;updated_constraints-&gt;add_unique(</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgInfo(info.dawg_index,<sp/>edge),<sp/>dawg_debug_level<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recording<sp/>constraint:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>explore<sp/>successors<sp/>of<sp/>this<sp/>dawg,<sp/>since<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>invalid<sp/>leading<sp/>or<sp/>trailing<sp/>punctuation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>punctuation<sp/>from<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>info.dawg_index);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.ref<sp/>==<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>letters<sp/>matched<sp/>in<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>info.dawg_index);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>the<sp/>dawg<sp/>if<sp/>the<sp/>pattern<sp/>can<sp/>not<sp/>end<sp/>at<sp/>previous<sp/>letter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>NO_EDGE<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>part<sp/>is<sp/>not<sp/>leading<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!dawg-&gt;end_of_word(info.ref))<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>valid<sp/>pattern<sp/>end<sp/>in<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>info.dawg_index);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>unichar<sp/>in<sp/>each<sp/>of<sp/>this<sp/>dawg&apos;s<sp/>successors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>append<sp/>those<sp/>in<sp/>which<sp/>it<sp/>is<sp/>found<sp/>to<sp/>active_dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2da5d0a635bfbb70a26ab0844903bed3" kindref="member">SuccessorList</ref><sp/>&amp;slist<sp/>=<sp/>*(successors_[info.dawg_index]);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>slist.length();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sdawg_index<sp/>=<sp/>slist[s];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*sdawg<sp/>=<sp/>dawgs_[sdawg_index];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>snode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>constraints<sp/>to<sp/>the<sp/>successor<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>constraints.length();<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>successor<sp/>dawg<sp/>is<sp/>described<sp/>in<sp/>the<sp/>constraints<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>start<sp/>ref<sp/>from<sp/>0<sp/>to<sp/>the<sp/>one<sp/>recorded<sp/>as<sp/>the<sp/>constraint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfo<sp/>&amp;cinfo<sp/>=<sp/>constraints[c];</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo.dawg_index<sp/>==<sp/>sdawg_index)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snode<sp/>=<sp/>sdawg-&gt;next_node(cinfo.ref);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>do<sp/>not<sp/>search<sp/>the<sp/>successor<sp/>dawg<sp/>if<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>applying<sp/>the<sp/>saved<sp/>constraint<sp/>we<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snode<sp/>==<sp/>0)<sp/>snode<sp/>=<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Applying<sp/>constraint<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdawg_index,<sp/>snode);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>letter<sp/>in<sp/>this<sp/>successor<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>sedge<sp/>=<sp/>sdawg-&gt;edge_char_of(snode,<sp/>unichar_id,<sp/>word_end);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>found<sp/>the<sp/>letter<sp/>append<sp/>sdawg<sp/>to<sp/>the<sp/>active_dawgs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sedge<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a5de64b7d07afaeb33408ee296db75f5d" kindref="member">ConstraintsOk</ref>(*(dawg_args-&gt;updated_constraints),<sp/>word_end,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawgs_[sdawg_index]-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Letter<sp/>found<sp/>in<sp/>the<sp/>successor<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sdawg_index);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdawg-&gt;permuter()<sp/>&gt;<sp/>curr_perm)<sp/>curr_perm<sp/>=<sp/>sdawg-&gt;permuter();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdawg-&gt;next_node(sedge)<sp/>!=<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>word<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;updated_active_dawgs-&gt;add_unique(</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgInfo(sdawg_index,<sp/>sedge),<sp/>dawg_debug_level<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Append<sp/>successor<sp/>to<sp/>updated<sp/>active<sp/>dawgs:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>successors<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>if/else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>dawg_args-&gt;permuter<sp/>if<sp/>it<sp/>used<sp/>to<sp/>be<sp/>NO_PERM<sp/>or<sp/>became<sp/>NO_PERM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>we<sp/>found<sp/>the<sp/>current<sp/>letter<sp/>in<sp/>a<sp/>non-punctuation<sp/>dawg.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allows<sp/>preserving<sp/>information<sp/>on<sp/>which<sp/>dawg<sp/>the<sp/>&quot;core&quot;<sp/>word<sp/>came<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>old<sp/>value<sp/>of<sp/>dawg_args-&gt;permuter<sp/>if<sp/>it<sp/>is<sp/>COMPOUND_PERM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_args-&gt;permuter<sp/>==<sp/>NO_PERM<sp/>||<sp/>curr_perm<sp/>==<sp/>NO_PERM<sp/>||</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(curr_perm<sp/>!=<sp/>PUNC_PERM<sp/>&amp;&amp;<sp/>dawg_args-&gt;permuter<sp/>!=<sp/>COMPOUND_PERM))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args-&gt;permuter<sp/>=<sp/>curr_perm;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dawg_args-&gt;permuter;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a9e46362693e817dcc2f8265854679c80" kindref="member">Dict::ProcessPatternEdges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*dawg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfo<sp/>&amp;info,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgArgs<sp/>*dawg_args,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PermuterType<sp/>*curr_perm)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1aa98baea7a97174cb256643c407c81993" kindref="member" tooltip="Returns the appropriate next node given the EDGE_REF. ">GetStartingNode</ref>(dawg,<sp/>info.ref);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>edge<sp/>corresponding<sp/>to<sp/>the<sp/>exact<sp/>unichar_id<sp/>and<sp/>to<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>edges<sp/>corresponding<sp/>to<sp/>the<sp/>character<sp/>class<sp/>of<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref><sp/>unichar_id_patterns;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>unichar_id_patterns.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(unichar_id);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>dawg-&gt;unichar_id_to_patterns(unichar_id,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>(),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;unichar_id_patterns);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>unichar_id_patterns.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>first<sp/>iteration<sp/>check<sp/>all<sp/>the<sp/>outgoing<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>second<sp/>iteration<sp/>check<sp/>all<sp/>self-loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>2;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge<sp/>=<sp/>(k<sp/>==<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg-&gt;edge_char_of(node,<sp/>unichar_id_patterns[i],<sp/>word_end)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>dawg-&gt;pattern_loop_edge(info.ref,<sp/>unichar_id_patterns[i],<sp/>word_end);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Pattern<sp/>dawg:<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]<sp/>edge=&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.dawg_index,<sp/>node,<sp/>edge);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a5de64b7d07afaeb33408ee296db75f5d" kindref="member">ConstraintsOk</ref>(*(dawg_args-&gt;updated_constraints),</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end,<sp/>dawg-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Letter<sp/>found<sp/>in<sp/>pattern<sp/>dawg<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>info.dawg_index);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg-&gt;permuter()<sp/>&gt;<sp/>*curr_perm)<sp/>*curr_perm<sp/>=<sp/>dawg-&gt;permuter();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args-&gt;updated_active_dawgs-&gt;add_unique(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgInfo(info.dawg_index,<sp/>edge),<sp/>dawg_debug_level<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Append<sp/>current<sp/>dawg<sp/>to<sp/>updated<sp/>active<sp/>dawgs:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a741bbc38aa86c057b2b431c716519cc8" kindref="member">Dict::ReadFixedLengthDawgs</ref>(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;lang,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PermuterType<sp/>perm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*file,<sp/><ref refid="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" kindref="member">DawgVector</ref><sp/>*dawg_vec,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*max_wdlen)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" kindref="member">DawgVector</ref><sp/>dawg_vec_copy;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>dawg_vec_copy.<ref refid="class_generic_vector_1abae057ce589be25aae9b80958f84e34c" kindref="member">move</ref>(dawg_vec);<sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>input<sp/>dawg_vec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>num_dawgs;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>fread(&amp;num_dawgs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap<sp/>=<sp/>(num_dawgs<sp/>&gt;<sp/><ref refid="dict_8h_1a8f209bc21153a4b65514af438fc46957" kindref="member">MAX_WERD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>num_dawgs<sp/>=<sp/><ref refid="serialis_8cpp_1a7cd6b269b716bfc29f8cca05e60c473f" kindref="member">reverse32</ref>(num_dawgs);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>word_length;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_word_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>and<sp/>record<sp/>pointers<sp/>to<sp/>fixed-length<sp/>dawgs<sp/>such<sp/>that:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dawg_vec[word_length]<sp/>=<sp/>pointer<sp/>to<sp/>dawg<sp/>with<sp/>word<sp/>length<sp/>of<sp/>word_length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>if<sp/>such<sp/>fixed-length<sp/>dawg<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_dawgs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;word_length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>word_length<sp/>=<sp/><ref refid="serialis_8cpp_1a7cd6b269b716bfc29f8cca05e60c473f" kindref="member">reverse32</ref>(word_length);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(word_length<sp/>&gt;<sp/><sp/>0<sp/>&amp;&amp;<sp/>word_length<sp/>&lt;=<sp/><ref refid="dict_8h_1a8f209bc21153a4b65514af438fc46957" kindref="member">MAX_WERD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(word_length<sp/>&gt;=<sp/>dawg_vec-&gt;size())<sp/>dawg_vec-&gt;push_back(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>(*dawg_vec)[word_length]<sp/>=</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(file,<sp/>type,<sp/>lang,<sp/>perm,<sp/>debug_level);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_length<sp/>&gt;<sp/>max_word_length)<sp/>max_word_length<sp/>=<sp/>word_length;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>*max_wdlen<sp/>=<sp/>max_word_length;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Entries<sp/>dawg_vec[0]<sp/>to<sp/>dawg_vec[max_word_length]<sp/>now<sp/>hold<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>fixed-length<sp/>dawgs.<sp/>The<sp/>rest<sp/>of<sp/>the<sp/>vector<sp/>will<sp/>contain<sp/>the<sp/>dawg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>from<sp/>the<sp/>original<sp/>input<sp/>dawg_vec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dawg_vec_copy.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_vec-&gt;push_back(dawg_vec_copy[i]);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a21f1ab419db2b1bb8f375bd9b5935ade" kindref="member">Dict::WriteFixedLengthDawgs</ref>(</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;SquishedDawg *&gt;</ref><sp/>&amp;dawg_vec,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_dawgs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level,<sp/>FILE<sp/>*output_file)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>fwrite(&amp;num_dawgs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>output_file);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_level)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Writing<sp/>%d<sp/>split<sp/>length<sp/>dawgs\n&quot;</highlight><highlight class="normal">,<sp/>num_dawgs);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>dawg_vec.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dawg_vec)[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;i,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>output_file);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_vec[i]-&gt;write_squished_dawg(output_file);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_level)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>Dawg<sp/>with<sp/>word<sp/>length<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>given<sp/>active_dawgs<sp/>vector<sp/>with<sp/>dawgs<sp/>that<sp/>could<sp/>contain<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>the<sp/>word.<sp/>If<sp/>hyphenated()<sp/>returns<sp/>true,<sp/>copy<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>hyphen_active_dawgs_<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1aeb0ba1d301def04d0ca191582f032c78" kindref="member">Dict::init_active_dawgs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sought_word_length,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DawgInfoVector<sp/>*active_dawgs,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ambigs_mode)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sought_word_length<sp/>!=<sp/>kAnyWordLength)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>search<sp/>one<sp/>fixed<sp/>word<sp/>length<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sought_word_length<sp/>&lt;=<sp/>max_fixed_length_dawgs_wdlen_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawgs_[sought_word_length]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*active_dawgs<sp/>+=<sp/>DawgInfo(sought_word_length,<sp/>NO_EDGE);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member" tooltip="Returns true if we&amp;#39;ve recorded the beginning of a hyphenated word. ">hyphenated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>*active_dawgs<sp/>=<sp/>hyphen_active_dawgs_;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hyphen_active_dawgs_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>hyphen<sp/>beginning<sp/>dawg<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyphen_active_dawgs_[i].dawg_index,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyphen_active_dawgs_[i].ref);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dawgs_.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawgs_[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>kBeginningDawgsType[(dawgs_[i])-&gt;type()]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(ambigs_mode<sp/>&amp;&amp;<sp/>(dawgs_[i])-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a4e994eccb48eec56bb31bccd8bbb3cef" kindref="member">DAWG_TYPE_PATTERN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*active_dawgs<sp/>+=<sp/>DawgInfo(i,<sp/>NO_EDGE);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>beginning<sp/>dawg<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>NO_EDGE);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>hyphenated()<sp/>returns<sp/>true,<sp/>copy<sp/>the<sp/>entries<sp/>from<sp/>hyphen_constraints_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>given<sp/>constraints<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a7e44bdc5e2fe0dbb861dfd1522ef1cec" kindref="member">Dict::init_constraints</ref>(DawgInfoVector<sp/>*constraints)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member" tooltip="Returns true if we&amp;#39;ve recorded the beginning of a hyphenated word. ">hyphenated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>*constraints<sp/>=<sp/>hyphen_constraints_;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_debug_level<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hyphen_constraints_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>hyphen<sp/>constraint<sp/>[%d,<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyphen_constraints_[i].dawg_index,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hyphen_constraints_[i].ref);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ad59baa4e54f780a492cebd8f8dc0b025" kindref="member" tooltip="Adds a word found on this document to the document specific dictionary. ">Dict::add_document_word</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;best_choice)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>add<sp/>hyphenated<sp/>word<sp/>parts<sp/>to<sp/>the<sp/>document<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hyphen_word_<sp/>will<sp/>be<sp/>non-NULL<sp/>after<sp/>the<sp/>set_hyphen_word()<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>when<sp/>the<sp/>first<sp/>part<sp/>of<sp/>the<sp/>hyphenated<sp/>word<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>discovered<sp/>and<sp/>while<sp/>the<sp/>second<sp/>part<sp/>of<sp/>the<sp/>word<sp/>is<sp/>recognized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hyphen_word_<sp/>is<sp/>cleared<sp/>in<sp/>cc_recg()<sp/>before<sp/>the<sp/>next<sp/>word<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>line<sp/>is<sp/>recognized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyphen_word_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>FILE<sp/>*doc_word_file;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringlen<sp/>=<sp/>best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!doc_dict_enable<sp/>||<sp/><ref refid="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" kindref="member">valid_word</ref>(best_choice)<sp/>||</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a0bec277d6338bed058f010f7be969d1e" kindref="member" tooltip="Returns true if there are multiple good choices for the current word. ">CurrentWordAmbig</ref>()<sp/>||<sp/>stringlen<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>words<sp/>that<sp/>contain<sp/>&gt;=<sp/>kDocDictMaxRepChars<sp/>repeating<sp/>unichars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&gt;=<sp/>kDocDictMaxRepChars)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rep_chars<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>uch_id<sp/>=<sp/>best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(0);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i)<sp/>!=<sp/>uch_id)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rep_chars<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uch_id<sp/>=<sp/>best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_rep_chars;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_rep_chars<sp/>==<sp/>kDocDictMaxRepChars)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>&lt;<sp/>doc_dict_certainty_threshold<sp/>||</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stringlen<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>&lt;<sp/>doc_dict_pending_threshold)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pending_words_-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(best_choice))<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringlen<sp/>&gt;<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stringlen<sp/>==<sp/>2<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().get_isupper(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(0))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(1))))<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending_words_-&gt;<ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(best_choice);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(save_doc_words)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(filename,<sp/><ref refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" kindref="member">getImage</ref>()-&gt;getCCUtil()-&gt;<ref refid="blobclass_8cpp_1a8bd6cf4621eb08136622a2ebb03aa7b2" kindref="member">imagefile</ref>.string());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(filename,<sp/></highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>doc_word_file<sp/>=<sp/><ref refid="cutil_8cpp_1ae3226f9d05617de0b7174bc7b7fce5b6" kindref="member">open_file</ref><sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(doc_word_file,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(doc_word_file);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>document_words_-&gt;<ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(best_choice);</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a61963914ca2d287fea0db951104d6eac" kindref="member" tooltip="Adjusts the rating of the given word. ">Dict::adjust_word</ref>(<ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*word,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*certainty_array,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*char_choices,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nonword,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>additional_adjust,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_han<sp/>=<sp/>(char_choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af6459dc0dd8e46d86504c861bdf3b89a" kindref="member">han_sid</ref>()<sp/>!=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a268a065cccec5814d412d7bde583cc3e" kindref="member">get_top_word_script</ref>(*char_choices,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>())<sp/>==</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af6459dc0dd8e46d86504c861bdf3b89a" kindref="member">han_sid</ref>());</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>case_is_ok<sp/>=<sp/>(is_han<sp/>||<sp/><ref refid="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" kindref="member" tooltip="Check a string to see if it matches a set of lexical rules. ">case_ok</ref>(*word,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>()));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>punc_is_ok<sp/>=<sp/>(is_han<sp/>||<sp/>!nonword<sp/>||<sp/><ref refid="classtesseract_1_1_dict_1aaed3895d9553f4110c693593c89650fa" kindref="member">valid_punctuation</ref>(*word));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adjust_factor<sp/>=<sp/>additional_adjust;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_rating<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%sWord:<sp/>%s<sp/>%4.2f<sp/>&quot;</highlight><highlight class="normal">,<sp/>nonword<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Non-&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>());</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>new_rating<sp/>+=<sp/>kRatingPad;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nonword)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>non-dictionary<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_is_ok<sp/>&amp;&amp;<sp/>punc_is_ok)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjust_factor<sp/>+=<sp/>segment_penalty_dict_nonword;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_rating<sp/>*=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>W&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjust_factor<sp/>+=<sp/>segment_penalty_garbage;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_rating<sp/>*=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!case_is_ok)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!punc_is_ok)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>P&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_is_ok)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_han<sp/>&amp;&amp;<sp/>freq_dawg_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>freq_dawg_-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(*word))<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(FREQ_DAWG_PERM);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_factor<sp/>+=<sp/>segment_penalty_dict_frequent_word;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_rating<sp/>*=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_factor<sp/>+=<sp/>segment_penalty_dict_case_ok;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_rating<sp/>*=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjust_factor<sp/>+=<sp/>segment_penalty_dict_case_bad;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_rating<sp/>*=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>new_rating<sp/>-=<sp/>kRatingPad;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8536420fe62adffbfda94a08796db533" kindref="member">set_rating</ref>(new_rating);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%4.2f<sp/>--&gt;<sp/>%4.2f\n&quot;</highlight><highlight class="normal">,<sp/>adjust_factor,<sp/>new_rating);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1a5d0400dc126a0dc472c3c28545da65a8" kindref="member">LogNewChoice</ref>(adjust_factor,<sp/>certainty_array,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>word,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*char_choices);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" kindref="member">Dict::valid_word</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>numbers_ok)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*word_ptr<sp/>=<sp/>&amp;word;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>temp_word(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a5431f457a3617528f3f1aa6ddc7f34bc" kindref="member">unicharset</ref>());</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member" tooltip="Returns true if we&amp;#39;ve recorded the beginning of a hyphenated word. ">hyphenated</ref>())<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a673dcd602bce4530c4cc2fe875cbc2a9" kindref="member">copy_hyphen_info</ref>(&amp;temp_word);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_word<sp/>+=<sp/>word;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>word_ptr<sp/>=<sp/>&amp;temp_word;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_ptr-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_PERM;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>vectors<sp/>for<sp/>holding<sp/>current<sp/>and<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>active_dawgs<sp/>and<sp/>constraints<sp/>and<sp/>initialize<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>DawgInfoVector<sp/>*active_dawgs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector[2];</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>DawgInfoVector<sp/>*constraints<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector[2];</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1aeb0ba1d301def04d0ca191582f032c78" kindref="member">init_active_dawgs</ref>(kAnyWordLength,<sp/>&amp;(active_dawgs[0]),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1a7e44bdc5e2fe0dbb861dfd1522ef1cec" kindref="member">init_constraints</ref>(&amp;(constraints[0]));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>DawgArgs<sp/>dawg_args(&amp;(active_dawgs[0]),<sp/>&amp;(constraints[0]),</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(active_dawgs[1]),<sp/>&amp;(constraints[1]),</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>NO_PERM,<sp/>kAnyWordLength,<sp/>0);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_index<sp/>=<sp/>word_ptr-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>leter_is_okay<sp/>for<sp/>each<sp/>letter<sp/>in<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a8431d26ec0e13f6d2a77d7ba3b1823ce" kindref="member" tooltip="Size of the base word (the part on the line before) of a hyphenated word. ">hyphen_base_size</ref>();<sp/>i<sp/>&lt;=<sp/>last_index;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((this-&gt;*<ref refid="classtesseract_1_1_dict_1a802de385e07531ace182d16653e35f71" kindref="member">letter_is_okay_</ref>)(&amp;dawg_args,<sp/>word_ptr-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i),</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>==<sp/>last_index)))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>active_dawgs,<sp/>constraints<sp/>with<sp/>the<sp/>corresponding<sp/>updated<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_args.updated_active_dawgs<sp/>==<sp/>&amp;(active_dawgs[1]))<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args.updated_active_dawgs<sp/>=<sp/>&amp;(active_dawgs[0]);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args.updated_constraints<sp/>=<sp/>&amp;(constraints[0]);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(dawg_args.active_dawgs);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(dawg_args.constraints);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(dawg_args.updated_active_dawgs);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(dawg_args.updated_constraints);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args.active_dawgs<sp/>=<sp/>&amp;(active_dawgs[0]);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args.constraints<sp/>=<sp/>&amp;(constraints[0]);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>active_dawgs;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>constraints;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1af873650961191c2a844eed47c0829421" kindref="member" tooltip="Check all the DAWGs to see if this word is in any of them. ">valid_word_permuter</ref>(dawg_args.permuter,<sp/>numbers_ok)<sp/>?</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args.permuter<sp/>:<sp/>NO_PERM;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a562ac7b572107d301b4730dca4d89a57" kindref="member">Dict::valid_bigram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word1,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bigram_dawg_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>core<sp/>word<sp/>from<sp/>the<sp/>middle<sp/>of<sp/>each<sp/>word<sp/>with<sp/>any<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replaced<sp/>with<sp/>question<sp/>marks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w1start,<sp/>w1end,<sp/>w2start,<sp/>w2end;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>word1.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a34205ac439b74d2b65e23a885852be3f" kindref="member">punct_stripped</ref>(&amp;w1start,<sp/>&amp;w1end);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>word2.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a34205ac439b74d2b65e23a885852be3f" kindref="member">punct_stripped</ref>(&amp;w2start,<sp/>&amp;w2end);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>penalize<sp/>a<sp/>single<sp/>guillemet,<sp/>hyphen,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>our<sp/>bigram<sp/>list<sp/>doesn&apos;t<sp/>have<sp/>any<sp/>information<sp/>about<sp/>punctuation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w1start<sp/>&gt;=<sp/>w1end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word1.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&lt;<sp/>3;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w2start<sp/>&gt;=<sp/>w2end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word2.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&lt;<sp/>3;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>uchset<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>bigram_string;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>w1start;<sp/>i<sp/>&lt;<sp/>w1end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>ch<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a57be0143dbad3201d0d2ce002ae9bce8" kindref="member">NormalizeUnicharIdForMatch</ref>(word1.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>bigram_string<sp/>+=<sp/>uchset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(ch)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal"><sp/>:<sp/>uchset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ch);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>bigram_string<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>w2start;<sp/>i<sp/>&lt;<sp/>w2end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>ch<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a57be0143dbad3201d0d2ce002ae9bce8" kindref="member">NormalizeUnicharIdForMatch</ref>(word2.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>bigram_string<sp/>+=<sp/>uchset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(ch)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal"><sp/>:<sp/>uchset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ch);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>normalized_word(bigram_string.string(),<sp/>uchset);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_dawg_-&gt;<ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">word_in_dawg</ref>(normalized_word);</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1aaed3895d9553f4110c693593c89650fa" kindref="member">Dict::valid_punctuation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_PERM;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>new_word(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a5431f457a3617528f3f1aa6ddc7f34bc" kindref="member">unicharset</ref>());</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_index<sp/>=<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>last_index;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=<sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_word.append_unichar_id(unichar_id,<sp/>1,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().get_isalpha(unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().get_isdigit(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>neither<sp/>punc,<sp/>nor<sp/>alpha,<sp/>nor<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((new_len<sp/>=<sp/>new_word.length())<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_word.unichar_id(new_len-1)<sp/>!=<sp/><ref refid="classtesseract_1_1_dawg_1af6a39872b9a20f3b02020f237731af87" kindref="member">Dawg::kPatternUnicharID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_word.append_unichar_id(<ref refid="classtesseract_1_1_dawg_1af6a39872b9a20f3b02020f237731af87" kindref="member">Dawg::kPatternUnicharID</ref>,<sp/>1,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dawgs_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawgs_[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawgs_[i]-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151aa8e8b65bf32d2884c0bab5fb8223c6eb" kindref="member">DAWG_TYPE_PUNCTUATION</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawgs_[i]-&gt;word_in_dawg(new_word))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>&quot;dominant&quot;<sp/>script<sp/>ID<sp/>for<sp/>the<sp/>word.<sp/><sp/>By<sp/>&quot;dominant&quot;,<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>account<sp/>for<sp/>at<sp/>least<sp/>half<sp/>the<sp/>characters.<sp/><sp/>Otherwise,<sp/>it<sp/>returns<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>for<sp/>Japanese,<sp/>Hiragana<sp/>and<sp/>Katakana<sp/>are<sp/>simply<sp/>treated<sp/>as<sp/>Han.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a268a065cccec5814d412d7bde583cc3e" kindref="member">Dict::get_top_word_script</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>&amp;char_choices,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_script<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a0135deaa943171c17951190c4cba43f8" kindref="member">get_script_table_size</ref>();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[max_script];</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>max_script;<sp/>x++)<sp/>sid[x]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>char_choices.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>blob_choice_it(char_choices.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(x));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>sid[blob_choice_it.data()-&gt;script_id()]++;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af6459dc0dd8e46d86504c861bdf3b89a" kindref="member">han_sid</ref>()<sp/>!=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>Hiragana<sp/>&amp;<sp/>Katakana<sp/>counts<sp/>to<sp/>Han<sp/>and<sp/>zero<sp/>them<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1acb42b72a86cd0c1285a2a769b54eebbd" kindref="member">hiragana_sid</ref>()<sp/>!=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af6459dc0dd8e46d86504c861bdf3b89a" kindref="member">han_sid</ref>()]<sp/>+=<sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1acb42b72a86cd0c1285a2a769b54eebbd" kindref="member">hiragana_sid</ref>()];</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1acb42b72a86cd0c1285a2a769b54eebbd" kindref="member">hiragana_sid</ref>()]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1adc40797ac6843aeef70069b051266226" kindref="member">katakana_sid</ref>()<sp/>!=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af6459dc0dd8e46d86504c861bdf3b89a" kindref="member">han_sid</ref>()]<sp/>+=<sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1adc40797ac6843aeef70069b051266226" kindref="member">katakana_sid</ref>()];</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sid[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1adc40797ac6843aeef70069b051266226" kindref="member">katakana_sid</ref>()]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>high<sp/>script<sp/>ID<sp/>overrides<sp/>lower<sp/>one<sp/>on<sp/>a<sp/>tie,<sp/>thus<sp/>biasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>towards<sp/>non-Common<sp/>script<sp/>(if<sp/>sorted<sp/>that<sp/>way<sp/>in<sp/>unicharset<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>1;<sp/>x<sp/>&lt;<sp/>max_script;<sp/>x++)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sid[x]<sp/>&gt;=<sp/>sid[max_sid])<sp/>max_sid<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sid[max_sid]<sp/>&lt;<sp/>char_choices.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>max_sid<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>sid;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_sid;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/dict/dict.cpp"/>
  </compounddef>
</doxygen>
