<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="boxread_8cpp" kind="file">
    <compoundname>boxread.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes refid="boxread_8h" local="yes">boxread.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="rect_8h" local="yes">rect.h</includes>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <includes refid="unichar_8h" local="yes">unichar.h</includes>
    <incdepgraph>
      <node id="6508">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="6528">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="6523">
        <label>stdlib.h</label>
      </node>
      <node id="6513">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="6514" relation="include">
        </childnode>
      </node>
      <node id="6529">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
      </node>
      <node id="6522">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="6523" relation="include">
        </childnode>
        <childnode refid="6512" relation="include">
        </childnode>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6515" relation="include">
        </childnode>
        <childnode refid="6524" relation="include">
        </childnode>
        <childnode refid="6525" relation="include">
        </childnode>
      </node>
      <node id="6516">
        <label>stddef.h</label>
      </node>
      <node id="6536">
        <label>memory.h</label>
      </node>
      <node id="6524">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="6517" relation="include">
        </childnode>
      </node>
      <node id="6514">
        <label>limits.h</label>
      </node>
      <node id="6527">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="6519" relation="include">
        </childnode>
      </node>
      <node id="6512">
        <label>string.h</label>
      </node>
      <node id="6535">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="6536" relation="include">
        </childnode>
        <childnode refid="6512" relation="include">
        </childnode>
      </node>
      <node id="6518">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="6519" relation="include">
        </childnode>
        <childnode refid="6520" relation="include">
        </childnode>
        <childnode refid="6528" relation="include">
        </childnode>
        <childnode refid="6529" relation="include">
        </childnode>
        <childnode refid="6530" relation="include">
        </childnode>
      </node>
      <node id="6533">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="6517" relation="include">
        </childnode>
      </node>
      <node id="6507">
        <label>ccstruct/boxread.cpp</label>
        <link refid="boxread.cpp"/>
        <childnode refid="6508" relation="include">
        </childnode>
        <childnode refid="6509" relation="include">
        </childnode>
        <childnode refid="6512" relation="include">
        </childnode>
        <childnode refid="6518" relation="include">
        </childnode>
        <childnode refid="6511" relation="include">
        </childnode>
        <childnode refid="6530" relation="include">
        </childnode>
        <childnode refid="6535" relation="include">
        </childnode>
      </node>
      <node id="6509">
        <label>boxread.h</label>
        <link refid="boxread_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6511" relation="include">
        </childnode>
      </node>
      <node id="6525">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="6524" relation="include">
        </childnode>
      </node>
      <node id="6519">
        <label>math.h</label>
      </node>
      <node id="6526">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="6524" relation="include">
        </childnode>
      </node>
      <node id="6531">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6532" relation="include">
        </childnode>
        <childnode refid="6511" relation="include">
        </childnode>
      </node>
      <node id="6532">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6523" relation="include">
        </childnode>
        <childnode refid="6533" relation="include">
        </childnode>
        <childnode refid="6524" relation="include">
        </childnode>
        <childnode refid="6534" relation="include">
        </childnode>
        <childnode refid="6528" relation="include">
        </childnode>
      </node>
      <node id="6515">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="6516" relation="include">
        </childnode>
        <childnode refid="6517" relation="include">
        </childnode>
      </node>
      <node id="6521">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6517" relation="include">
        </childnode>
        <childnode refid="6522" relation="include">
        </childnode>
        <childnode refid="6526" relation="include">
        </childnode>
      </node>
      <node id="6520">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6519" relation="include">
        </childnode>
        <childnode refid="6521" relation="include">
        </childnode>
        <childnode refid="6527" relation="include">
        </childnode>
      </node>
      <node id="6530">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="6531" relation="include">
        </childnode>
      </node>
      <node id="6517">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="6513" relation="include">
        </childnode>
      </node>
      <node id="6510">
        <label>stdio.h</label>
      </node>
      <node id="6511">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6512" relation="include">
        </childnode>
        <childnode refid="6513" relation="include">
        </childnode>
        <childnode refid="6515" relation="include">
        </childnode>
      </node>
      <node id="6534">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="6510" relation="include">
        </childnode>
        <childnode refid="6512" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boxread_8cpp_1ad258914f0f4b66417117bec6e6090bd4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* kMultiBlobLabelCode</definition>
        <argsstring></argsstring>
        <name>kMultiBlobLabelCode</name>
        <initializer>= &quot;WordStr&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="boxread_8cpp_1af8f00c0aa1951fff65cff5802879a91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenBoxFile</definition>
        <argsstring>(const STRING &amp;fname)</argsstring>
        <name>OpenBoxFile</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="33" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8cpp_1a8236e051549f8174e263196602edadc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadNextBox</definition>
        <argsstring>(int *line_number, FILE *box_file, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ReadNextBox</name>
        <param>
          <type>int *</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>box_file</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8cpp_1a566c682100d2b5f0a20f39bf99ad2d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadNextBox</definition>
        <argsstring>(int target_page, int *line_number, FILE *box_file, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ReadNextBox</name>
        <param>
          <type>int</type>
          <declname>target_page</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>box_file</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="67" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8cpp_1acd464bb54397318c2f6fb8db9e644fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseBoxFileStr</definition>
        <argsstring>(const char *boxfile_str, int *page_number, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ParseBoxFileStr</name>
        <param>
          <type>const char *</type>
          <declname>boxfile_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>page_number</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="105" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="105" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8cpp_1a12d56f93e661ff006a382fb8d7314898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MakeBoxFileStr</definition>
        <argsstring>(const char *unichar_str, const TBOX &amp;box, int page_num, STRING *box_str)</argsstring>
        <name>MakeBoxFileStr</name>
        <param>
          <type>const char *</type>
          <declname>unichar_str</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>page_num</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>box_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" line="155" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="155" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxread.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Read<sp/>data<sp/>from<sp/>a<sp/>box<sp/>file.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Aug<sp/>24<sp/>17:47:23<sp/>PDT<sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boxread_8h" kindref="compound">boxread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rect_8h" kindref="compound">rect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unichar_8h" kindref="compound">unichar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>char<sp/>code<sp/>used<sp/>to<sp/>identify<sp/>multi-blob<sp/>labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>kMultiBlobLabelCode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WordStr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>boxfile<sp/>based<sp/>on<sp/>the<sp/>given<sp/>image<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">FILE*<sp/><ref refid="boxread_8cpp_1af8f00c0aa1951fff65cff5802879a91d" kindref="member">OpenBoxFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>fname)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref><sp/>=<sp/>fname;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lastdot<sp/>=<sp/>strrchr(filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastdot<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>filename[lastdot<sp/>-<sp/>filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>()]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>filename<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.box&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>FILE*<sp/>box_file<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(box_file<sp/>=<sp/>fopen(filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fileerr_8h_1a33ffba120713106d14f1e425559ac571" kindref="member">CANTOPENFILE</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;read_next_box&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a5e74e236a50519c41cbbcecea29add63" kindref="member">TESSEXIT</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cant<sp/>open<sp/>box<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box_file;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Box<sp/>files<sp/>are<sp/>used<sp/>ONLY<sp/>DURING<sp/>TRAINING,<sp/>but<sp/>by<sp/>both<sp/>processes<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>creating<sp/>tr<sp/>files<sp/>with<sp/>tesseract,<sp/>and<sp/>unicharset_extractor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ReadNextBox<sp/>factors<sp/>out<sp/>the<sp/>code<sp/>to<sp/>interpret<sp/>a<sp/>line<sp/>of<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>so<sp/>that<sp/>applybox<sp/>and<sp/>unicharset_extractor<sp/>interpret<sp/>the<sp/>same<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>next<sp/>valid<sp/>box<sp/>file<sp/>utf8<sp/>string<sp/>and<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>returns<sp/>true,<sp/>or<sp/>false<sp/>on<sp/>eof<sp/>(and<sp/>closes<sp/>the<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>ignores<sp/>the<sp/>utf8<sp/>file<sp/>signature<sp/>ByteOrderMark<sp/>(U+FEFF=EF<sp/>BB<sp/>BF),<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>valid<sp/>utf-8<sp/>and<sp/>allows<sp/>space<sp/>or<sp/>tab<sp/>between<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utf8_str<sp/>is<sp/>set<sp/>with<sp/>the<sp/>unichar<sp/>string,<sp/>and<sp/>bounding<sp/>box<sp/>with<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>page<sp/>numbers<sp/>in<sp/>the<sp/>file,<sp/>it<sp/>reads<sp/>them<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*line_number,<sp/>FILE*<sp/>box_file,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(-1,<sp/>line_number,<sp/>box_file,<sp/>utf8_str,<sp/>bounding_box);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>ReadNextBox<sp/>above,<sp/>but<sp/>get<sp/>a<sp/>specific<sp/>page<sp/>number.<sp/>(0-based)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>-1<sp/>to<sp/>read<sp/>any<sp/>page<sp/>number.<sp/>Files<sp/>without<sp/>page<sp/>number<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read<sp/>as<sp/>if<sp/>they<sp/>are<sp/>page<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_page,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*line_number,<sp/>FILE*<sp/>box_file,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buff[<ref refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" kindref="member">kBoxReadBufSize</ref>];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boxfile<sp/>read<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffptr<sp/>=<sp/>buff;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buff,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buff)<sp/>-<sp/>1,<sp/>box_file))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(*line_number)++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>buffptr<sp/>=<sp/>buff;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ubuf<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buffptr);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ubuf[0]<sp/>==<sp/>0xef<sp/>&amp;&amp;<sp/>ubuf[1]<sp/>==<sp/>0xbb<sp/>&amp;&amp;<sp/>ubuf[2]<sp/>==<sp/>0xbf)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffptr<sp/>+=<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>unicode<sp/>file<sp/>designation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>blank<sp/>lines<sp/>in<sp/>box<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*buffptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*buffptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffptr++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*buffptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="boxread_8cpp_1acd464bb54397318c2f6fb8db9e644fd0" kindref="member">ParseBoxFileStr</ref>(buffptr,<sp/>&amp;page,<sp/>utf8_str,<sp/>bounding_box))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>file<sp/>format<sp/>error<sp/>on<sp/>line<sp/>%i;<sp/>ignored\n&quot;</highlight><highlight class="normal">,<sp/>*line_number);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target_page<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>target_page<sp/>!=<sp/>page)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>on<sp/>the<sp/>appropriate<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Successfully<sp/>read<sp/>a<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>fclose(box_file);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>EOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>the<sp/>given<sp/>box<sp/>file<sp/>string<sp/>into<sp/>a<sp/>page_number,<sp/>utf8_str,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding_box.<sp/>Returns<sp/>true<sp/>on<sp/>a<sp/>successful<sp/>parse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>box<sp/>file<sp/>is<sp/>assumed<sp/>to<sp/>contain<sp/>box<sp/>definitions,<sp/>one<sp/>per<sp/>line,<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>following<sp/>format<sp/>for<sp/>blob-level<sp/>boxes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;UTF8<sp/>str&gt;<sp/>&lt;left&gt;<sp/>&lt;bottom&gt;<sp/>&lt;right&gt;<sp/>&lt;top&gt;<sp/>&lt;page<sp/>id&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>for<sp/>word/line-level<sp/>boxes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>WordStr<sp/>&lt;left&gt;<sp/>&lt;bottom&gt;<sp/>&lt;right&gt;<sp/>&lt;top&gt;<sp/>&lt;page<sp/>id&gt;<sp/>#&lt;space-delimited<sp/>word<sp/>str&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>applyybox.cpp<sp/>for<sp/>more<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1acd464bb54397318c2f6fb8db9e644fd0" kindref="member">ParseBoxFileStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>boxfile_str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>page_number,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>*bounding_box<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>it<sp/>to<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>*utf8_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uch[<ref refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" kindref="member">kBoxReadBufSize</ref>];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffptr<sp/>=<sp/>boxfile_str;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>unichar<sp/>without<sp/>messing<sp/>up<sp/>on<sp/>Tibetan.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>issue<sp/>253<sp/>the<sp/>utf-8<sp/>surrogates<sp/>85<sp/>and<sp/>A0<sp/>are<sp/>treated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>whitespace<sp/>by<sp/>sscanf,<sp/>so<sp/>it<sp/>is<sp/>more<sp/>reliable<sp/>to<sp/>just<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ascii<sp/>space<sp/>and<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uch_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*buffptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*buffptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*buffptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uch_len<sp/>&lt;<sp/><ref refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" kindref="member">kBoxReadBufSize</ref><sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>uch[uch_len++]<sp/>=<sp/>*buffptr++;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>uch[uch_len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*buffptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>++buffptr;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_min,<sp/>y_min,<sp/>x_max,<sp/>y_max;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>*page_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>sscanf(buffptr,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x_min,<sp/>&amp;y_min,<sp/>&amp;x_max,<sp/>&amp;y_max,<sp/>page_number);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>5<sp/>&amp;&amp;<sp/>count<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>box<sp/>coordinates<sp/>in<sp/>boxfile<sp/>string!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>long<sp/>space-delimited<sp/>string<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(uch,<sp/>kMultiBlobLabelCode)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(buffptr<sp/>=<sp/>strchr(buffptr,<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(uch,<sp/>buffptr<sp/>+<sp/>1,<sp/><ref refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" kindref="member">kBoxReadBufSize</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a31bec0ef73dd383e256fa462e9fa7e1f" kindref="member">chomp_string</ref>(uch);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>uch_len<sp/>=<sp/>strlen(uch);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>UTF8<sp/>by<sp/>making<sp/>unichars<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>used<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(used<sp/>&lt;<sp/>uch_len)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r" kindref="compound">UNICHAR</ref><sp/>ch(uch<sp/>+<sp/>used,<sp/>uch_len<sp/>-<sp/>used);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_used<sp/>=<sp/>ch.utf8_len();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_used<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>UTF-8<sp/>str<sp/>%s<sp/>starts<sp/>with<sp/>0x%02x<sp/>at<sp/>col<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uch<sp/>+<sp/>used,<sp/>uch[used],<sp/>used<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>+=<sp/>new_used;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>*utf8_str<sp/>=<sp/>uch;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>bounding_box-&gt;<ref refid="class_t_b_o_x_1ad61db4030d2a99fb107bb9679a055bed" kindref="member">set_to_given_coords</ref>(x_min,<sp/>y_min,<sp/>x_max,<sp/>y_max);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Successfully<sp/>read<sp/>a<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>box<sp/>file<sp/>string<sp/>from<sp/>a<sp/>unichar<sp/>string,<sp/>TBOX<sp/>and<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a12d56f93e661ff006a382fb8d7314898" kindref="member">MakeBoxFileStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unichar_str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_num,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>box_str)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>*box_str<sp/>=<sp/>unichar_str;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>box_str-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>box_str-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>box_str-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>box_str-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>box_str-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>page_num);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp"/>
  </compounddef>
</doxygen>
