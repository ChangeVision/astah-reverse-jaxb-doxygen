<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="stopper_8cpp" kind="file">
    <compoundname>stopper.cpp</compoundname>
    <includes refid="stopper_8h" local="yes">stopper.h</includes>
    <includes refid="matchdefs_8h" local="yes">matchdefs.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="permute_8h" local="yes">permute.h</includes>
    <includes refid="danerror_8h" local="yes">danerror.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="efio_8h" local="yes">efio.h</includes>
    <includes refid="scanutils_8h" local="yes">scanutils.h</includes>
    <includes refid="unichar_8h" local="yes">unichar.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="image_8h" local="yes">image.h</includes>
    <includes refid="ccutil_8h" local="yes">ccutil.h</includes>
    <includes refid="ratngs_8h" local="yes">ratngs.h</includes>
    <includes refid="ambigs_8h" local="yes">ambigs.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="35452">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="35453" relation="include">
        </childnode>
        <childnode refid="35443" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
      </node>
      <node id="35449">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="35438">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
      </node>
      <node id="35410">
        <label>assert.h</label>
      </node>
      <node id="35404">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="35443">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="35396">
        <label>stdlib.h</label>
      </node>
      <node id="35399">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="35400" relation="include">
        </childnode>
      </node>
      <node id="35445">
        <label>scanutils.h</label>
        <link refid="scanutils_8h"/>
      </node>
      <node id="35423">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="35401" relation="include">
        </childnode>
      </node>
      <node id="35453">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35401" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
        <childnode refid="35454" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35418" relation="include">
        </childnode>
        <childnode refid="35455" relation="include">
        </childnode>
        <childnode refid="35456" relation="include">
        </childnode>
      </node>
      <node id="35433">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
      </node>
      <node id="35412">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="35396" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35407" relation="include">
        </childnode>
        <childnode refid="35401" relation="include">
        </childnode>
        <childnode refid="35413" relation="include">
        </childnode>
      </node>
      <node id="35411">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35412" relation="include">
        </childnode>
        <childnode refid="35414" relation="include">
        </childnode>
      </node>
      <node id="35424">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="35425" relation="include">
        </childnode>
        <childnode refid="35432" relation="include">
        </childnode>
      </node>
      <node id="35457">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="35448" relation="include">
        </childnode>
        <childnode refid="35451" relation="include">
        </childnode>
        <childnode refid="35394" relation="include">
        </childnode>
      </node>
      <node id="35409">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="35410" relation="include">
        </childnode>
        <childnode refid="35411" relation="include">
        </childnode>
        <childnode refid="35394" relation="include">
        </childnode>
        <childnode refid="35415" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
        <childnode refid="35418" relation="include">
        </childnode>
        <childnode refid="35420" relation="include">
        </childnode>
      </node>
      <node id="35408">
        <label>stddef.h</label>
      </node>
      <node id="35417">
        <label>memory.h</label>
      </node>
      <node id="35440">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="35410" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
      </node>
      <node id="35401">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="35398" relation="include">
        </childnode>
      </node>
      <node id="35439">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
      </node>
      <node id="35400">
        <label>limits.h</label>
      </node>
      <node id="35444">
        <label>efio.h</label>
        <link refid="efio_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
      </node>
      <node id="35446">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35448" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35449" relation="include">
        </childnode>
        <childnode refid="35450" relation="include">
        </childnode>
        <childnode refid="35409" relation="include">
        </childnode>
        <childnode refid="35393" relation="include">
        </childnode>
        <childnode refid="35457" relation="include">
        </childnode>
        <childnode refid="35418" relation="include">
        </childnode>
        <childnode refid="35441" relation="include">
        </childnode>
      </node>
      <node id="35430">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="35428" relation="include">
        </childnode>
      </node>
      <node id="35431">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="35427" relation="include">
        </childnode>
      </node>
      <node id="35422">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35412" relation="include">
        </childnode>
        <childnode refid="35414" relation="include">
        </childnode>
      </node>
      <node id="35455">
        <label>pthread.h</label>
      </node>
      <node id="35403">
        <label>string.h</label>
      </node>
      <node id="35419">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="35416" relation="include">
        </childnode>
      </node>
      <node id="35416">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="35417" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
      </node>
      <node id="35451">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
        <childnode refid="35396" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35434" relation="include">
        </childnode>
        <childnode refid="35452" relation="include">
        </childnode>
      </node>
      <node id="35432">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="35428" relation="include">
        </childnode>
        <childnode refid="35427" relation="include">
        </childnode>
        <childnode refid="35404" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35434" relation="include">
        </childnode>
      </node>
      <node id="35421">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="35398" relation="include">
        </childnode>
      </node>
      <node id="35397">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="35398" relation="include">
        </childnode>
      </node>
      <node id="35456">
        <label>semaphore.h</label>
      </node>
      <node id="35425">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="35426" relation="include">
        </childnode>
        <childnode refid="35431" relation="include">
        </childnode>
        <childnode refid="35421" relation="include">
        </childnode>
        <childnode refid="35432" relation="include">
        </childnode>
        <childnode refid="35423" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
      </node>
      <node id="35420">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35421" relation="include">
        </childnode>
        <childnode refid="35422" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
        <childnode refid="35423" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35435" relation="include">
        </childnode>
      </node>
      <node id="35442">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="35435">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35420" relation="include">
        </childnode>
      </node>
      <node id="35413">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="35401" relation="include">
        </childnode>
      </node>
      <node id="35447">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35434" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
        <childnode refid="35418" relation="include">
        </childnode>
        <childnode refid="35394" relation="include">
        </childnode>
      </node>
      <node id="35428">
        <label>math.h</label>
      </node>
      <node id="35426">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="35427" relation="include">
        </childnode>
        <childnode refid="35431" relation="include">
        </childnode>
      </node>
      <node id="35392">
        <label>dict/stopper.cpp</label>
        <link refid="stopper.cpp"/>
        <childnode refid="35393" relation="include">
        </childnode>
        <childnode refid="35439" relation="include">
        </childnode>
        <childnode refid="35440" relation="include">
        </childnode>
        <childnode refid="35441" relation="include">
        </childnode>
        <childnode refid="35442" relation="include">
        </childnode>
        <childnode refid="35443" relation="include">
        </childnode>
        <childnode refid="35444" relation="include">
        </childnode>
        <childnode refid="35445" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35446" relation="include">
        </childnode>
        <childnode refid="35449" relation="include">
        </childnode>
        <childnode refid="35453" relation="include">
        </childnode>
        <childnode refid="35409" relation="include">
        </childnode>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
        <childnode refid="35458" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
      </node>
      <node id="35414">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="35401" relation="include">
        </childnode>
      </node>
      <node id="35437">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="35427" relation="include">
        </childnode>
      </node>
      <node id="35450">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="35451" relation="include">
        </childnode>
        <childnode refid="35397" relation="include">
        </childnode>
      </node>
      <node id="35458">
        <label>ctype.h</label>
      </node>
      <node id="35405">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35394" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
      </node>
      <node id="35394">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35396" relation="include">
        </childnode>
        <childnode refid="35397" relation="include">
        </childnode>
        <childnode refid="35401" relation="include">
        </childnode>
        <childnode refid="35402" relation="include">
        </childnode>
        <childnode refid="35404" relation="include">
        </childnode>
      </node>
      <node id="35407">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="35408" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
      </node>
      <node id="35393">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="35394" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35409" relation="include">
        </childnode>
        <childnode refid="35438" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
      </node>
      <node id="35429">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35412" relation="include">
        </childnode>
        <childnode refid="35414" relation="include">
        </childnode>
      </node>
      <node id="35418">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="35401" relation="include">
        </childnode>
        <childnode refid="35402" relation="include">
        </childnode>
        <childnode refid="35406" relation="include">
        </childnode>
        <childnode refid="35397" relation="include">
        </childnode>
        <childnode refid="35416" relation="include">
        </childnode>
        <childnode refid="35419" relation="include">
        </childnode>
      </node>
      <node id="35448">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35409" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35397" relation="include">
        </childnode>
      </node>
      <node id="35427">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35430" relation="include">
        </childnode>
      </node>
      <node id="35415">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="35434">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="35405" relation="include">
        </childnode>
      </node>
      <node id="35398">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="35399" relation="include">
        </childnode>
      </node>
      <node id="35395">
        <label>stdio.h</label>
      </node>
      <node id="35454">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35398" relation="include">
        </childnode>
        <childnode refid="35434" relation="include">
        </childnode>
      </node>
      <node id="35406">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
        <childnode refid="35399" relation="include">
        </childnode>
        <childnode refid="35407" relation="include">
        </childnode>
      </node>
      <node id="35402">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="35395" relation="include">
        </childnode>
        <childnode refid="35403" relation="include">
        </childnode>
      </node>
      <node id="35441">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="35409" relation="include">
        </childnode>
        <childnode refid="35405" relation="include">
        </childnode>
        <childnode refid="35418" relation="include">
        </childnode>
      </node>
      <node id="35436">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="35437" relation="include">
        </childnode>
        <childnode refid="35412" relation="include">
        </childnode>
        <childnode refid="35407" relation="include">
        </childnode>
        <childnode refid="35432" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" prot="public">EXPANDED_CHOICE</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="stopper_8cpp_1afa07532f0376e8d8b3bf14a52999a7a7" prot="public" static="no">
        <name>MAX_WERD_SIZE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="50" column="9" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stopper_8cpp_1aa97c69d1b6042b59fa1742e16e6996cd" prot="public" static="no">
        <name>BestCertainty</name>
        <param><defname>Choices</defname></param>
        <initializer>(((<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>) <ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref> (Choices))-&gt;Certainty)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="63" column="9" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stopper_8cpp_1a7e33f17883db2e7e3230812dfd3d7f0c" prot="public" static="no">
        <name>BestRating</name>
        <param><defname>Choices</defname></param>
        <initializer>(((<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>) <ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref> (Choices))-&gt;Rating)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="66" column="9" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stopper_8cpp_1a3b589454f3e422c1144ae8390770262e" prot="public" static="no">
        <name>BestFactor</name>
        <param><defname>Choices</defname></param>
        <initializer>(((<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>) <ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref> (Choices))-&gt;AdjustFactor)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="68" column="9" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DeleteViableChoiceStruct</definition>
        <argsstring>(void *vcs)</argsstring>
        <name>DeleteViableChoiceStruct</name>
        <param>
          <type>void *</type>
          <declname>vcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="stopper_8cpp_1afffe3c2fac1ae71f9acfc11d32473826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int CmpChoiceRatings</definition>
        <argsstring>(void *arg1, void *arg2)</argsstring>
        <name>CmpChoiceRatings</name>
        <param>
          <type>void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Private Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="stopper_8cpp_1aad27308b337ce06db6208c936a20f5e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ExpandChoice</definition>
        <argsstring>(VIABLE_CHOICE Choice, EXPANDED_CHOICE *ExpandedChoice)</argsstring>
        <name>ExpandChoice</name>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>Choice</declname>
        </param>
        <param>
          <type><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref> *</type>
          <declname>ExpandedChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="90" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>stopper.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Stopping<sp/>criteria<sp/>for<sp/>word<sp/>classifier.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Apr<sp/>29<sp/>14:56:49<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stopper_8h" kindref="compound">stopper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matchdefs_8h" kindref="compound">matchdefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="permute_8h" kindref="compound">permute.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="danerror_8h" kindref="compound">danerror.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="efio_8h" kindref="compound">efio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanutils_8h" kindref="compound">scanutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unichar_8h" kindref="compound">unichar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image_8h" kindref="compound">image.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ccutil_8h" kindref="compound">ccutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ratngs_8h" kindref="compound">ratngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ambigs_8h" kindref="compound">ambigs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4800)<sp/><sp/>//<sp/>int/bool<sp/>warnings</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>kludges<sp/>-<sp/>add<sp/>appropriate<sp/>.h<sp/>file<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>from<sp/>adaptmatch.cpp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_WERD_SIZE<sp/><sp/><sp/>100</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ChunkCertainty[<ref refid="states_8h_1a2f47d18aa9ea116103da072b110cf09d" kindref="member">MAX_NUM_CHUNKS</ref>];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>ChunkClass[<ref refid="states_8h_1a2f47d18aa9ea116103da072b110cf09d" kindref="member">MAX_NUM_CHUNKS</ref>];</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" kindref="member">DeleteViableChoiceStruct</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*vcs)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE_STRUCT</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vcs));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BestCertainty(Choices)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>(((VIABLE_CHOICE)<sp/>first_node<sp/>(Choices))-&gt;Certainty)</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BestRating(Choices)<sp/>(((VIABLE_CHOICE)<sp/>first_node<sp/>(Choices))-&gt;Rating)</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BestFactor(Choices)<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>(((VIABLE_CHOICE)<sp/>first_node<sp/>(Choices))-&gt;AdjustFactor)</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">//<sp/>Returns<sp/>-1<sp/>if<sp/>the<sp/>rating<sp/>for<sp/>Choice1<sp/>is<sp/>less<sp/>than<sp/>the<sp/>rating<sp/>for<sp/>Choice2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise<sp/>returns<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CmpChoiceRatings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VIABLE_CHOICE<sp/>Choice1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>VIABLE_CHOICE<sp/>Choice2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R1,<sp/>R2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice1<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/>arg1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice2<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/>arg2;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>R1<sp/>=<sp/>Choice1-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>R2<sp/>=<sp/>Choice2-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(R1<sp/>&lt;<sp/>R2)<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expands<sp/>Choice<sp/>and<sp/>places<sp/>the<sp/>results<sp/>in<sp/>ExpandedChoice.<sp/>The<sp/>primary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>of<sp/>expansion<sp/>is<sp/>to<sp/>create<sp/>an<sp/>two<sp/>arrays,<sp/>one<sp/>which<sp/>holds<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corresponding<sp/>certainty<sp/>for<sp/>each<sp/>chunk<sp/>in<sp/>Choice,<sp/>and<sp/>one<sp/>which<sp/>holds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>class<sp/>for<sp/>each<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpandChoice(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref><sp/>*ExpandedChoice)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>Chunk;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>ExpandedChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a9eed624f89a5edc423a95b43f4bb92e1" kindref="member">Choice</ref><sp/>=<sp/>Choice;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>Chunk<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;<sp/>j++,<sp/>Chunk++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ExpandedChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a6e5468f197c465ccb81475dc00249f27" kindref="member">ChunkCertainty</ref>[Chunk]<sp/>=<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1a507a1c58c2bd055d3b3e944327a61b1d" kindref="member">Certainty</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ExpandedChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a7efbd2f8430be5fcf66c913583c8ce3b" kindref="member">ChunkClass</ref>[Chunk]<sp/>=<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1aea1cff869a14e40a9fced9c229ccc31b" kindref="member">VIABLE_CHOICE_STRUCT::VIABLE_CHOICE_STRUCT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Length(length)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>Blob<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_h_a_r___c_h_o_i_c_e" kindref="compound">CHAR_CHOICE</ref>[length];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>blob_choices<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1aea1cff869a14e40a9fced9c229ccc31b" kindref="member">VIABLE_CHOICE_STRUCT::VIABLE_CHOICE_STRUCT</ref>()<sp/>:<sp/>Length(0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>Blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>blob_choices<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a35bd9b922dfc140970c3eefcf0fc981b" kindref="member">VIABLE_CHOICE_STRUCT::~VIABLE_CHOICE_STRUCT</ref>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref>-&gt;deep_clear();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5c826e0dfb1ae9fff772735294f38f91" kindref="member">VIABLE_CHOICE_STRUCT::Init</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word_choice,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="states_8h_1a0839f350416466cdb1b5d7df4c5f99d4" kindref="member">PIECES_STATE</ref><sp/>&amp;pieces_state,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>certainties[],</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>adjust_factor)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref><sp/>=<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a88c4c888e5f46a1c56b3fc934726514f" kindref="member">Certainty</ref><sp/>=<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref><sp/>=<sp/>adjust_factor;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5b91c9de772bbeca40909bd3a30d0115" kindref="member">ComposedFromCharFragments</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref><sp/>==<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>bw_idx<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>i++,<sp/>bw_idx++)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_width<sp/>=<sp/>pieces_state[bw_idx];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_a_r___c_h_o_i_c_e" kindref="compound">CHAR_CHOICE</ref><sp/>*blob_choice<sp/>=<sp/>&amp;this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_choice-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref><sp/>=<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_choice-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref><sp/>=<sp/>blob_width;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_choice-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1a507a1c58c2bd055d3b3e944327a61b1d" kindref="member">Certainty</ref><sp/>=<sp/>certainties[i];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>1;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>word_choice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i);<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_width<sp/>=<sp/>pieces_state[++bw_idx];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(blob_width<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_choice-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref><sp/>+=<sp/>blob_width;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5b91c9de772bbeca40909bd3a30d0115" kindref="member">ComposedFromCharFragments</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a05362772a259446b5a04e995a48493b5" kindref="member">VIABLE_CHOICE_STRUCT::SetBlobChoices</ref>(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>&amp;src_choices)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref>-&gt;deep_clear();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST_CLIST();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_LIST_C_IT<sp/>list_it(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a1b15ee8f1ed55db843a85144a602e57e" kindref="member">blob_choices</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src_choices.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*cc_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>cc_list-&gt;deep_copy(src_choices[i],<sp/>&amp;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af3f12ffe754a76bf2abbb82a001336f9" kindref="member">BLOB_CHOICE::deep_copy</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>list_it.add_after_then_move(cc_list);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>certainty<sp/>of<sp/>any<sp/>chunk<sp/>in<sp/>Choice<sp/>(item1)<sp/>is<sp/>not<sp/>ambiguous<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corresponding<sp/>chunk<sp/>in<sp/>the<sp/>best<sp/>choice<sp/>(item2),<sp/>frees<sp/>Choice<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ac6b70920a4f5f5e33bfd4be2600d3192" kindref="member">Dict::FreeBadChoice</ref>(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VIABLE_CHOICE<sp/>Choice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>EXPANDED_CHOICE<sp/>*BestChoice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>Chunk;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(item1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref><sp/>*BestChoice<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(item2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Threshold<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a863f4f02d43f02f85d051d9e632c0c4e" kindref="member">StopperAmbigThreshold</ref>(BestChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a9eed624f89a5edc423a95b43f4bb92e1" kindref="member">Choice</ref>-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>Chunk<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;<sp/>j++,<sp/>Chunk++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref><sp/>!=<sp/>BestChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a7efbd2f8430be5fcf66c913583c8ce3b" kindref="member">ChunkClass</ref>[Chunk]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1a507a1c58c2bd055d3b3e944327a61b1d" kindref="member">Certainty</ref><sp/>-<sp/>BestChoice-&gt;<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a6e5468f197c465ccb81475dc00249f27" kindref="member">ChunkCertainty</ref>[Chunk]<sp/>&lt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">PrintViableChoice</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\nDiscarding<sp/>bad<sp/>choice:<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>Choice);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Choice;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a45c6cdeae33daa4ca52a83ad5a59f2f9" kindref="member" tooltip="Returns true if the given best_choice is good enough to stop. ">Dict::AcceptableChoice</ref>(<ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*Choices,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*BestChoice,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref><sp/>*fixpt,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stopper_8h_1a1902ef46a46c64df98f9a99f6368e4f6" kindref="member">ACCEPTABLE_CHOICE_CALLER</ref><sp/>caller,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*modified_blobs)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CertaintyThreshold<sp/>=<sp/>stopper_nondict_certainty_base;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WordSize;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modified_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*modified_blobs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_no_acceptable_choices)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixpt<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>fixpt-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caller<sp/>==<sp/><ref refid="stopper_8h_1a1902ef46a46c64df98f9a99f6368e4f6a84325e771bcf9b3b1187d3e91455ca26" kindref="member">CHOPPER_CALLER</ref><sp/>&amp;&amp;<sp/>BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8947564d0c2d01763958e633999e3c50" kindref="member">fragment_mark</ref>())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;AcceptableChoice():<sp/>a<sp/>choice<sp/>with<sp/>fragments<sp/>beats<sp/>BestChoice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_dang_ambigs<sp/>=<sp/>(<ref refid="classtesseract_1_1_dict_1a44c62a7904145157e4aa303fcf6ef923" kindref="member">GetMaxFixedLengthDawgIndex</ref>()<sp/>&gt;=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1aef746918c09040cf417f831d07c97072" kindref="member">NoDangerousAmbig</ref>(BestChoice,<sp/>fixpt,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Choices,<sp/>modified_blobs));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid_word<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1af873650961191c2a844eed47c0829421" kindref="member" tooltip="Check all the DAWGs to see if this word is in any of them. ">valid_word_permuter</ref>(BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a161ac137df2d063a6421728e6aa08fcb" kindref="member">permuter</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_case_ok<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" kindref="member" tooltip="Check a string to see if it matches a set of lexical rules. ">case_ok</ref>(*BestChoice,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nStopper:<sp/><sp/>%s<sp/>(word=%c,<sp/>case=%c)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_valid_word<sp/>?<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_case_ok<sp/>?<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>accept<sp/>invalid<sp/>words<sp/>in<sp/>PASS1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reject_offset_<sp/>&lt;=<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&amp;&amp;<sp/>!is_valid_word)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_valid_word<sp/>&amp;&amp;<sp/>is_case_ok)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>WordSize<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a0e3e3f5f2bf54b5b2a0aec103c816cd6" kindref="member" tooltip="Returns the length of the shortest alpha run in WordChoice. ">LengthOfShortestAlphaRun</ref>(*BestChoice);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>WordSize<sp/>-=<sp/>stopper_smallword_size;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordSize<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WordSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>CertaintyThreshold<sp/>+=<sp/>WordSize<sp/>*<sp/>stopper_certainty_per_char;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Stopper:<sp/><sp/>Certainty<sp/>=<sp/>%4.1f,<sp/>Threshold<sp/>=<sp/>%4.1f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>(),<sp/>CertaintyThreshold);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(no_dang_ambigs<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>&gt;<sp/>CertaintyThreshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a2e14dd61f93ad13fafe4c2e2dae88631" kindref="member">UniformCertainties</ref>(*Choices,<sp/>*BestChoice))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;AcceptableChoice()<sp/>returned<sp/>false&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(no_dang_ambig:%d<sp/>cert:%g<sp/>thresh:%g<sp/>uniform:%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_dang_ambigs,<sp/>BestChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>(),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CertaintyThreshold,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a2e14dd61f93ad13fafe4c2e2dae88631" kindref="member">UniformCertainties</ref>(*Choices,<sp/>*BestChoice));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1acb222399feb6d3dba3f9c1ac50df1e96" kindref="member">Dict::AcceptableResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;BestChoice)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CertaintyThreshold<sp/>=<sp/>stopper_nondict_certainty_base<sp/>-<sp/>reject_offset_;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WordSize;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nRejecter:<sp/>%s<sp/>(word=%c,<sp/>case=%c,<sp/>unambig=%c)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" kindref="member">valid_word</ref>(BestChoice)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" kindref="member" tooltip="Check a string to see if it matches a set of lexical rules. ">case_ok</ref>(BestChoice,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>())<sp/>?<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref><sp/>(best_choices_)<sp/>!=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>==<sp/>0<sp/>||<sp/><ref refid="classtesseract_1_1_dict_1a0bec277d6338bed058f010f7be969d1e" kindref="member" tooltip="Returns true if there are multiple good choices for the current word. ">CurrentWordAmbig</ref>())</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8947564d0c2d01763958e633999e3c50" kindref="member">fragment_mark</ref>())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;AcceptableResult():<sp/>a<sp/>choice<sp/>with<sp/>fragments<sp/>beats<sp/>BestChoice\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" kindref="member">valid_word</ref>(BestChoice)<sp/>&amp;&amp;<sp/><ref refid="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" kindref="member" tooltip="Check a string to see if it matches a set of lexical rules. ">case_ok</ref>(BestChoice,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>WordSize<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a0e3e3f5f2bf54b5b2a0aec103c816cd6" kindref="member" tooltip="Returns the length of the shortest alpha run in WordChoice. ">LengthOfShortestAlphaRun</ref>(BestChoice);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>WordSize<sp/>-=<sp/>stopper_smallword_size;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordSize<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WordSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>CertaintyThreshold<sp/>+=<sp/>WordSize<sp/>*<sp/>stopper_certainty_per_char;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Rejecter:<sp/>Certainty<sp/>=<sp/>%4.1f,<sp/>Threshold<sp/>=<sp/>%4.1f<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>(),<sp/>CertaintyThreshold);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>&gt;<sp/>CertaintyThreshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!stopper_no_acceptable_choices)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;ACCEPTED\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;REJECTED\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a1f4a0951c1960208fab7c511c90e5477" kindref="member">Dict::AlternativeChoicesWorseThan</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Alternatives;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>Alternatives<sp/>=<sp/><ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref><sp/>(best_choices_);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Alternatives)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>Choice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Alternatives);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref><sp/>&lt;=<sp/>Threshold)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a2a0b6b5be811b039c04dd0cc09436f25" kindref="member" tooltip="Returns true if WordChoice is the same as the current best choice. ">Dict::CurrentBestChoiceIs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(best_choices_<sp/>!=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" kindref="member">StringSameAs</ref>(WordChoice,<sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref>)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(best_choices_)));</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="classtesseract_1_1_dict_1a5de1b4b567459f520ce3b82b68c2c618" kindref="member" tooltip="Returns the adjustment factor for the best choice for the current word. ">Dict::CurrentBestChoiceAdjustFactor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>BestChoice;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choices_<sp/>==<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a9adcee815220ec9db98062213806ed04" kindref="member">MAX_FLOAT32</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>BestChoice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(best_choices_);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(BestChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a0bec277d6338bed058f010f7be969d1e" kindref="member" tooltip="Returns true if there are multiple good choices for the current word. ">Dict::CurrentWordAmbig</ref>()<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref><sp/>(best_choices_)<sp/>!=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ac3fda452853da426de36eecfe03d00bc" kindref="member" tooltip="Prints the current choices for this word to stdout. ">Dict::DebugWordChoices</ref>()<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Choices;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>LabelString[80];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>VChoice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(best_choices_);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_debug<sp/>=</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>fragments_debug<sp/>&amp;&amp;<sp/>VChoice<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>VChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5b91c9de772bbeca40909bd3a30d0115" kindref="member">ComposedFromCharFragments</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1<sp/>||<sp/>force_debug<sp/>||</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>(((<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>)word_to_debug).length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>best_choices_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" kindref="member">StringSameAs</ref>(word_to_debug.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>word_to_debug_lengths.string(),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(best_choices_))))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_raw_choice_)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">PrintViableChoice</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\nBest<sp/>Raw<sp/>Choice:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>best_raw_choice_);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>Choices<sp/>=<sp/>best_choices_;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choices)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nBest<sp/>Cooked<sp/>Choices:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Choices)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(LabelString,<sp/></highlight><highlight class="stringliteral">&quot;Cooked<sp/>Choice<sp/>#%d:<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">PrintViableChoice</ref>(stderr,<sp/>LabelString,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref>)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(Choices));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1af8cbb8ac0beba656f8614f3e01efb601" kindref="member" tooltip="Print all the choices in raw_choices_ list for non 1-1 ambiguities. ">Dict::PrintAmbigAlternatives</ref>(FILE<sp/>*file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label_num_unichars)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(raw_choices_)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(raw_choices_);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(label_num_unichars<sp/>&gt;<sp/>1<sp/>||<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref><sp/>&gt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().id_to_unichar(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fflush(file);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;\t%s\t%.4f\t%.4f\n&quot;</highlight><highlight class="normal">,<sp/>label,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref>,<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a88c4c888e5f46a1c56b3fc934726514f" kindref="member">Certainty</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a9ac3719475ad0a39d464307e1bd74ae3" kindref="member">Dict::FilterWordChoices</ref>()<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref><sp/>BestChoice;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choices_<sp/>==<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref><sp/>||<sp/><ref refid="oldlist_8h_1a19193ca85a67521a062bccea79e8efcc" kindref="member">second_node</ref><sp/>(best_choices_)<sp/>==<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>certainties<sp/>and<sp/>class<sp/>for<sp/>each<sp/>chunk<sp/>in<sp/>best<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE_STRUCT</ref><sp/>*best_choice<sp/>=</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE_STRUCT</ref><sp/>*)<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(best_choices_);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>ExpandChoice(best_choice,<sp/>&amp;BestChoice);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">PrintViableChoice</ref>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\nFiltering<sp/>against<sp/>best<sp/>choice:<sp/>&quot;</highlight><highlight class="normal">,<sp/>best_choice);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;int, void*, void*&gt;</ref>*<sp/>is_bad<sp/>=</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtesseract_1_1_dict_1ac6b70920a4f5f5e33bfd4be2600d3192" kindref="member">Dict::FreeBadChoice</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a42cc2d9c5eabb2193e2e64df41adedf4" kindref="member">set_rest</ref>(best_choices_,<sp/><ref refid="oldlist_8cpp_1a1fa3ecce52a0563f595b8f1428cc1211" kindref="member">delete_d</ref>(<ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref>(best_choices_),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;BestChoice,<sp/>is_bad));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>is_bad;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1af564403205ca1603825a3a2f59727089" kindref="member">Dict::FindClassifierErrors</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MinRating,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MaxRating,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>RatingMargin,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Thresholds[])<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e" kindref="compound">EXPANDED_CHOICE</ref><sp/>BestRaw;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>Chunk;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AvgRating;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumErrorChunks;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>assert<sp/>(best_choices_<sp/>!=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>assert<sp/>(best_raw_choice_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>ExpandChoice(best_raw_choice_,<sp/>&amp;BestRaw);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>Choice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(best_choices_);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>Chunk<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++,<sp/>Thresholds++)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>AvgRating<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>NumErrorChunks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;<sp/>j++,<sp/>Chunk++)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref><sp/>!=<sp/>BestRaw.<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a7efbd2f8430be5fcf66c913583c8ce3b" kindref="member">ChunkClass</ref>[Chunk])<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AvgRating<sp/>+=<sp/>BestRaw.<ref refid="struct_e_x_p_a_n_d_e_d___c_h_o_i_c_e_1a6e5468f197c465ccb81475dc00249f27" kindref="member">ChunkCertainty</ref>[Chunk];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumErrorChunks++;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumErrorChunks<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AvgRating<sp/>/=<sp/>NumErrorChunks;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*Thresholds<sp/>=<sp/>(AvgRating<sp/>/<sp/>-certainty_scale)<sp/>*<sp/>(1.0<sp/>-<sp/>RatingMargin);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*Thresholds<sp/>=<sp/>MaxRating;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*Thresholds<sp/>&gt;<sp/>MaxRating)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*Thresholds<sp/>=<sp/>MaxRating;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*Thresholds<sp/>&lt;<sp/>MinRating)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*Thresholds<sp/>=<sp/>MinRating;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a13fed9e3e317b901d4728a77f3396907" kindref="member">Dict::InitChoiceAccum</ref>()<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="stopper_8h_1a4d7126e47543723f816f1194475215e6" kindref="member">BLOB_WIDTH</ref><sp/>*BlobWidth,<sp/>*<ref refid="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" kindref="member">End</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_raw_choice_)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>best_raw_choice_;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>best_raw_choice_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choices_)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref>(best_choices_,<sp/><ref refid="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" kindref="member">DeleteViableChoiceStruct</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>best_choices_<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_choices_)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref>(raw_choices_,<sp/><ref refid="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" kindref="member">DeleteViableChoiceStruct</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>raw_choices_<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1a4edfbbb412d84258cc1ef255dfd527aa" kindref="member">EnableChoiceAccum</ref>();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BlobWidth<sp/>=<sp/>current_segmentation_,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>End<sp/>=<sp/>current_segmentation_<sp/>+<sp/><ref refid="states_8h_1a2f47d18aa9ea116103da072b110cf09d" kindref="member">MAX_NUM_CHUNKS</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>BlobWidth<sp/>&lt;<sp/><ref refid="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" kindref="member">End</ref>;<sp/>*BlobWidth++<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a4fc10a65be799fa59c39cae57379dc17" kindref="member" tooltip="Clears best_choices_ list accumulated by the stopper. ">Dict::ClearBestChoiceAccum</ref>()<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_choices_)<sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref>(best_choices_,<sp/><ref refid="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" kindref="member">DeleteViableChoiceStruct</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>best_choices_<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a767d9d6e0095d70f2905dac7d48c32c5" kindref="member">Dict::LogNewSegmentation</ref>(<ref refid="states_8h_1a0839f350416466cdb1b5d7df4c5f99d4" kindref="member">PIECES_STATE</ref><sp/>BlobWidth)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="stopper_8h_1a4d7126e47543723f816f1194475215e6" kindref="member">BLOB_WIDTH</ref><sp/>*Segmentation;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Segmentation<sp/>=<sp/>current_segmentation_;<sp/>*BlobWidth<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>BlobWidth++,<sp/>Segmentation++)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>*Segmentation<sp/>=<sp/>*BlobWidth;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>*Segmentation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1aa5ce917212da08cba99df7966c9e84cc" kindref="member">Dict::LogNewSplit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Blob)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Choices;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_raw_choice_)<sp/><ref refid="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" kindref="member">AddNewChunk</ref>(best_raw_choice_,<sp/>Blob);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>Choices<sp/>=<sp/>best_choices_;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Choices)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" kindref="member">AddNewChunk</ref><sp/>((<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Choices),<sp/>Blob);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>Choices<sp/>=<sp/>raw_choices_;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Choices)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" kindref="member">AddNewChunk</ref><sp/>((<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Choices),<sp/>Blob);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a5d0400dc126a0dc472c3c28545da65a8" kindref="member">Dict::LogNewChoice</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AdjustFactor,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Certainties[],</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>raw_choice,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*WordChoice,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>&amp;blob_choices)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ChoicesList;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Choices;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keep_word_choices_)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_choice)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!best_raw_choice_)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_raw_choice_<sp/>=</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" kindref="member">NewViableChoice</ref>(*WordChoice,<sp/>AdjustFactor,<sp/>Certainties);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>best_raw_choice_-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref>)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1ace0e51938995068fdb1b115f6be61470" kindref="member">ChoiceSameAs</ref>(*WordChoice,<sp/>best_raw_choice_))<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" kindref="member">FillViableChoice</ref>(*WordChoice,<sp/>AdjustFactor,<sp/>Certainties,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_raw_choice_);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>best_raw_choice_;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_raw_choice_<sp/>=</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" kindref="member">NewViableChoice</ref>(*WordChoice,<sp/>AdjustFactor,<sp/>Certainties);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!save_raw_choices)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ChoicesList<sp/>=<sp/>raw_choices_;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>ChoicesList<sp/>=<sp/>best_choices_;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Throw<sp/>out<sp/>obviously<sp/>bad<sp/>choices<sp/>to<sp/>save<sp/>some<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ChoicesList<sp/>!=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>Threshold<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a863f4f02d43f02f85d051d9e632c0c4e" kindref="member">StopperAmbigThreshold</ref>(<ref refid="stopper_8cpp_1a3b589454f3e422c1144ae8390770262e" kindref="member">BestFactor</ref>(ChoicesList),<sp/>AdjustFactor);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Threshold<sp/>&gt;<sp/>-stopper_ambiguity_threshold_offset)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/>=<sp/>-stopper_ambiguity_threshold_offset;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>-<sp/><ref refid="stopper_8cpp_1aa97c69d1b6042b59fa1742e16e6996cd" kindref="member">BestCertainty</ref><sp/>(ChoicesList)<sp/>&lt;<sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>rating<sp/>of<sp/>the<sp/>word<sp/>to<sp/>be<sp/>terrible,<sp/>so<sp/>that<sp/>it<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>chosen<sp/>as<sp/>the<sp/>best<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>bad_string;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1acea958562bc7123b36f0089be7b8388e" kindref="member">string_and_lengths</ref>(&amp;bad_string,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Discarding<sp/>choice<sp/>\&quot;%s\&quot;<sp/>with<sp/>an<sp/>overly<sp/>low<sp/>certainty&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>%.4f<sp/>vs<sp/>best<sp/>choice<sp/>certainty<sp/>%.4f<sp/>(Threshold:<sp/>%.4f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad_string.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>(),</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stopper_8cpp_1aa97c69d1b6042b59fa1742e16e6996cd" kindref="member">BestCertainty</ref>(ChoicesList),</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/>+<sp/><ref refid="stopper_8cpp_1aa97c69d1b6042b59fa1742e16e6996cd" kindref="member">BestCertainty</ref>(ChoicesList));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8536420fe62adffbfda94a08796db533" kindref="member">set_rating</ref>(<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa831918b1d217afd4dc547033f642990" kindref="member">WERD_CHOICE::kBadRating</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>a<sp/>choice<sp/>with<sp/>the<sp/>same<sp/>text<sp/>string<sp/>has<sp/>already<sp/>been<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>NewChoice<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>Choices<sp/>=<sp/>ChoicesList;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Choices)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1ace0e51938995068fdb1b115f6be61470" kindref="member">ChoiceSameAs</ref><sp/>(*WordChoice,<sp/>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Choices)))<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordChoice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/><ref refid="stopper_8cpp_1a7e33f17883db2e7e3230812dfd3d7f0c" kindref="member">BestRating</ref><sp/>(Choices))<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewChoice<sp/>=<sp/>(<ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Choices);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewChoice)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" kindref="member">FillViableChoice</ref>(*WordChoice,<sp/>AdjustFactor,<sp/>Certainties,<sp/>NewChoice);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>ChoicesList<sp/>=<sp/><ref refid="oldlist_8cpp_1a1fa3ecce52a0563f595b8f1428cc1211" kindref="member">delete_d</ref>(ChoicesList,<sp/>NewChoice,<sp/><ref refid="oldlist_8cpp_1a741b51b53773baf5cc5597d6926b83e4" kindref="member">is_same_node</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>NewChoice<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" kindref="member">NewViableChoice</ref>(*WordChoice,<sp/>AdjustFactor,<sp/>Certainties);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>know<sp/>we&apos;re<sp/>gonna<sp/>save<sp/>it,<sp/>so<sp/>add<sp/>the<sp/>expensive<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>NewChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a05362772a259446b5a04e995a48493b5" kindref="member">SetBlobChoices</ref>(blob_choices);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>ChoicesList<sp/>=<sp/><ref refid="oldlist_8cpp_1aff044482629d5faed80f830b0fcf7513" kindref="member">s_adjoin</ref><sp/>(ChoicesList,<sp/>NewChoice,<sp/>CmpChoiceRatings);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_choice<sp/>?<sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">PrintViableChoice</ref><sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>Raw<sp/>Choice:<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>NewChoice)<sp/>:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintViableChoice<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>Word<sp/>Choice:<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>NewChoice);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>(ChoicesList)<sp/>&gt;<sp/>tessedit_truncate_wordchoice_log)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>Choices<sp/>=</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref>)<sp/><ref refid="oldlist_8cpp_1ae770a79e91f79e9bc159267eaf9a9a86" kindref="member">nth_cell</ref><sp/>(ChoicesList,<sp/>tessedit_truncate_wordchoice_log);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref>(<ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref><sp/>(Choices),<sp/><ref refid="stopper_8cpp_1a1ffdeffb9a38b2a9c556babf48984e28" kindref="member">DeleteViableChoiceStruct</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a42cc2d9c5eabb2193e2e64df41adedf4" kindref="member">set_rest</ref>(Choices,<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>raw_choices_/best_choices_<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_choice)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_choices_<sp/>=<sp/>ChoicesList;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>best_choices_<sp/>=<sp/>ChoicesList;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1aef746918c09040cf417f831d07c97072" kindref="member">Dict::NoDangerousAmbig</ref>(<ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*best_choice,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref><sp/>*fixpt,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fix_replaceable,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*blob_choices,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*modified_blobs)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nRunning<sp/>NoDangerousAmbig()<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>BLOB_CHOICE_LIST_VECTOR<sp/>with<sp/>ambiguities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>unichar<sp/>id<sp/>in<sp/>BestChoice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>ambig_blob_choices;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>modified_best_choice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ambigs_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>position<sp/>in<sp/>best_choice:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>choose<sp/>AMBIG_SPEC_LIST<sp/>that<sp/>corresponds<sp/>to<sp/>unichar_id<sp/>at<sp/>best_choice[i]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>initialize<sp/>wrong_ngram<sp/>with<sp/>a<sp/>single<sp/>unichar_id<sp/>at<sp/>best_choice[i]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>look<sp/>for<sp/>ambiguities<sp/>corresponding<sp/>to<sp/>wrong_ngram<sp/>in<sp/>the<sp/>list<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>adding<sp/>the<sp/>following<sp/>unichar_ids<sp/>from<sp/>best_choice<sp/>to<sp/>wrong_ngram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>the<sp/>above<sp/>procedure<sp/>twice:<sp/>first<sp/>time<sp/>look<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ambigs<sp/>to<sp/>be<sp/>replaced<sp/>and<sp/>replace<sp/>all<sp/>the<sp/>ambiguities<sp/>found;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>time<sp/>look<sp/>through<sp/>dangerous<sp/>ambiguities<sp/>and<sp/>construct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ambig_blob_choices<sp/>with<sp/>fake<sp/>a<sp/>blob<sp/>choice<sp/>for<sp/>each<sp/>ambiguity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>pass<sp/>them<sp/>to<sp/>dawg_permute_and_select()<sp/>to<sp/>search<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ambiguous<sp/>words<sp/>in<sp/>the<sp/>dictionaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>during<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>for<sp/>loop<sp/>(on<sp/>the<sp/>first<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>replacements<sp/>are<sp/>made<sp/>the<sp/>length<sp/>of<sp/>best_choice<sp/>might<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>0;<sp/>pass<sp/>&lt;<sp/>(fix_replaceable<sp/>?<sp/>2<sp/>:<sp/>1);<sp/>++pass)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>replace<sp/>=<sp/>(fix_replaceable<sp/>&amp;&amp;<sp/>pass<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa63fceec9a01c185fac83c0e7d04fe08" kindref="member">UnicharAmbigsVector</ref><sp/>&amp;table<sp/>=<sp/>replace<sp/>?</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a4a886a86bc5d0d4405dd9da165b3e1fd" kindref="member">getUnicharAmbigs</ref>().<ref refid="classtesseract_1_1_unichar_ambigs_1a60150fd403b100937f42a9c24be35523" kindref="member">replace_ambigs</ref>()<sp/>:<sp/><ref refid="classtesseract_1_1_dict_1a4a886a86bc5d0d4405dd9da165b3e1fd" kindref="member">getUnicharAmbigs</ref>().<ref refid="classtesseract_1_1_unichar_ambigs_1a9726c0e6bec2390404360c51c9bbfbbb" kindref="member">dang_ambigs</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!replace)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>ambig_blob_choices<sp/>with<sp/>lists<sp/>containing<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unichar<sp/>id<sp/>for<sp/>the<sp/>correspoding<sp/>position<sp/>in<sp/>best_choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best_choice<sp/>consisting<sp/>from<sp/>only<sp/>the<sp/>original<sp/>letters<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>rating<sp/>of<sp/>0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*lst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>lst_it(lst);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays/antonova)<sp/>Should<sp/>these<sp/>BLOB_CHOICEs<sp/>use<sp/>real<sp/>xheights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>are<sp/>these<sp/>fake<sp/>ones<sp/>good<sp/>enough?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst_it.add_to_end(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>(best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i),</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>0,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_blob_choices.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(lst);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>wrong_ngram[<ref refid="ambigs_8h_1a66b35d22667233a1566433c6dd864463" kindref="member">MAX_AMBIG_SIZE</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrong_ngram_index;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_index;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>blob_index<sp/>+=<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i-1);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>curr_unichar_id<sp/>=<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Looking<sp/>for<sp/>%s<sp/>ngrams<sp/>starting<sp/>with<sp/>%s:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;replaceable&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;ambiguous&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().debug_str(curr_unichar_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wrong_ngram_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wrong_ngram[wrong_ngram_index]<sp/>=<sp/>curr_unichar_id;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_unichar_id<sp/>==<sp/>INVALID_UNICHAR_ID<sp/>||</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_unichar_id<sp/>&gt;=<sp/>table.size()<sp/>||</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[curr_unichar_id]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>ambig<sp/>spec<sp/>for<sp/>this<sp/>unichar<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AmbigSpec_IT<sp/>spec_it(table[curr_unichar_id]);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(spec_it.mark_cycle_pt();<sp/>!spec_it.cycled_list();)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AmbigSpec<sp/>*ambig_spec<sp/>=<sp/>spec_it.data();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrong_ngram[wrong_ngram_index+1]<sp/>=<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare<sp/>=<sp/><ref refid="classtesseract_1_1_unichar_id_array_utils_1a2fd19f82c1c81f57dd766bded5ae8904" kindref="member">UnicharIdArrayUtils::compare</ref>(wrong_ngram,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;wrong_ngram);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;candidate<sp/>ngram:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_unichar_id_array_utils_1a555621fcd9c34b946ed7235cdd8653e6" kindref="member">UnicharIdArrayUtils::print</ref>(wrong_ngram,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;current<sp/>ngram<sp/>from<sp/>spec:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_unichar_id_array_utils_1a555621fcd9c34b946ed7235cdd8653e6" kindref="member">UnicharIdArrayUtils::print</ref>(ambig_spec-&gt;wrong_ngram,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;comparison<sp/>result:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>compare);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>place<sp/>where<sp/>we<sp/>found<sp/>an<sp/>ambiguity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixpt<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixpt-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o" kindref="compound">DANGERR_INFO</ref>(</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_index,<sp/>blob_index+wrong_ngram_index,<sp/>replace,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().get_isngram(ambig_spec-&gt;correct_ngram_id)));</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;fixpt+=(%d<sp/>%d<sp/>%d<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>blob_index,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_index+wrong_ngram_index,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().get_isngram(</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_ngram_id));</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replace)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;replace<sp/>ambiguity<sp/>with:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_unichar_id_array_utils_1a555621fcd9c34b946ed7235cdd8653e6" kindref="member">UnicharIdArrayUtils::print</ref>(</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_fragments,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a8309e93ec65d12110e6f8a1c9b00d7d4" kindref="member">ReplaceAmbig</ref>(i,<sp/>ambig_spec-&gt;wrong_ngram_size,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_ngram_id,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice,<sp/>blob_choices,<sp/>modified_blobs);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_best_choice<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>||<sp/>ambig_spec-&gt;type<sp/>!=<sp/><ref refid="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222a29c650e9672a75e50491fc10c0f07ec5" kindref="member">CASE_AMBIG</ref>)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>dang<sp/>ambig<sp/>-<sp/>update<sp/>ambig_blob_choices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;found<sp/>ambiguity:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_unichar_id_array_utils_1a555621fcd9c34b946ed7235cdd8653e6" kindref="member">UnicharIdArrayUtils::print</ref>(</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_fragments,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambigs_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp_index<sp/>=<sp/>0;<sp/>tmp_index<sp/>&lt;=<sp/>wrong_ngram_index;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tmp_index)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>blob<sp/>choice<sp/>for<sp/>the<sp/>corresponding<sp/>fragment<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ambiguity.<sp/>These<sp/>fake<sp/>blob<sp/>choices<sp/>are<sp/>initialized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>ratings<sp/>(which<sp/>are<sp/>not<sp/>possible<sp/>for<sp/>real<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choices),<sp/>so<sp/>that<sp/>dawg_permute_and_select()<sp/>considers<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>not<sp/>consisting<sp/>of<sp/>only<sp/>the<sp/>original<sp/>letters<sp/>a<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choice<sp/>and<sp/>stops<sp/>searching<sp/>for<sp/>alternatives<sp/>once<sp/>such<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choice<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>bc_it(ambig_blob_choices[i+tmp_index]);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_it.add_to_end(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>(</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_fragments[tmp_index],<sp/>-1.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>-1,<sp/>0,<sp/>1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_it.forward();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrong_ngram_index+1<sp/>&lt;<sp/>ambig_spec-&gt;wrong_ngram_size<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((next_index<sp/>=<sp/>wrong_ngram_index+1+i)<sp/>&lt;<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>next<sp/>unichar<sp/>id<sp/>to<sp/>wrong_ngram<sp/>and<sp/>keep<sp/>looking<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>ambigs<sp/>starting<sp/>with<sp/>curr_unichar_id<sp/>in<sp/>AMBIG_SPEC_LIST.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrong_ngram[++wrong_ngram_index]<sp/>=</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(next_index);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>matching<sp/>ambigs<sp/>in<sp/>this<sp/>AMBIG_SPEC_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_it.forward();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>searching<sp/>AmbigSpec_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>searching<sp/>best_choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>searching<sp/>replace<sp/>and<sp/>dangerous<sp/>ambigs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>ambiguities<sp/>were<sp/>found<sp/>permute<sp/>the<sp/>constructed<sp/>ambig_blob_choices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>see<sp/>if<sp/>an<sp/>alternative<sp/>dictionary<sp/>word<sp/>can<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ambigs_found)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nResulting<sp/>ambig_blob_choices:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ambig_blob_choices.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ratngs_8cpp_1a2de5b7d5a020bb9823091dbece4ea36e" kindref="member">print_ratings_list</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>ambig_blob_choices.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(i),<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*alt_word<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1ac787e92f677e96a926d0c79e46a15461" kindref="member">dawg_permute_and_select</ref>(ambig_blob_choices,<sp/>0.0);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>ambigs_found<sp/>=<sp/>(alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>0.0);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ambigs_found)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Stopper:<sp/>Possible<sp/>ambiguous<sp/>word<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixpt<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Currently<sp/>character<sp/>choices<sp/>combined<sp/>from<sp/>fragments<sp/>can<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>generated<sp/>by<sp/>NoDangrousAmbigs().<sp/>This<sp/>code<sp/>should<sp/>be<sp/>updated<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>capability<sp/>to<sp/>produce<sp/>classifications<sp/>combined<sp/>from<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fragments<sp/>is<sp/>added<sp/>to<sp/>other<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>replacement_is_ngram<sp/>=</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5c4c10b49cde94f3c12cd74996faad07" kindref="member">get_isngram</ref>(alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_i<sp/>=<sp/>orig_i<sp/>+<sp/>alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i)<sp/>&gt;<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(orig_i<sp/>==<sp/>end_i<sp/>&amp;&amp;<sp/>replacement_is_ngram))<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixpt-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o" kindref="compound">DANGERR_INFO</ref>(orig_i,<sp/>end_i,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement_is_ngram));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;fixpt-&gt;dangerous+=(%d<sp/>%d<sp/>%d<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>orig_i,<sp/>end_i,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>replacement_is_ngram);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orig_i<sp/>+=<sp/>alt_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>alt_word;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_ambig_words_file_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(output_ambig_words_file_,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>ambig_blob_choices.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!ambigs_found;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ace7f6baf4e425e1d50aac0d1383eb023" kindref="member">Dict::EndDangerousAmbigs</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1aec7160ce69f6f7d478110b95b729d523" kindref="member" tooltip="Sets up stopper variables in preparation for the first pass. ">Dict::SettupStopperPass1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>reject_offset_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a29f0c2e6c8a7b5fb44bb39ce47ceef84" kindref="member" tooltip="Sets up stopper variables in preparation for the second pass. ">Dict::SettupStopperPass2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>reject_offset_<sp/>=<sp/>stopper_phase2_certainty_rejection_offset;</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" kindref="member">Dict::AddNewChunk</ref>(<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Blob)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>LastChunk;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>LastChunk<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>LastChunk<sp/>+=<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Blob<sp/>&lt;<sp/>LastChunk)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>)++;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;AddNewChunk<sp/>failed:Choice-&gt;Length=%d,<sp/>LastChunk=%d,<sp/>Blob=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>,<sp/>LastChunk,<sp/>Blob);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>never<sp/>get<sp/>executed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a8309e93ec65d12110e6f8a1c9b00d7d4" kindref="member">Dict::ReplaceAmbig</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrong_ngram_begin_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrong_ngram_size,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>correct_ngram_id,<sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*werd_choice,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*blob_choices,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*modified_blobs)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_blobs_to_replace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin_blob_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wrong_ngram_begin_index<sp/>+<sp/>wrong_ngram_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>wrong_ngram_begin_index)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_blobs_to_replace<sp/>+=<sp/><sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>begin_blob_index<sp/>+=<sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(i);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>bit;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_blob_index<sp/>=<sp/>begin_blob_index;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp_uch<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*correct_ngram_str<sp/>=</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(correct_ngram_id);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>replaced_count<sp/>=<sp/>0;<sp/>replaced_count<sp/>&lt;<sp/>wrong_ngram_size;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++replaced_count)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>uch_id<sp/>=<sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(wrong_ngram_begin_index);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fraglen<sp/>=<sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6f319ff5e8b21bf4698c6a5863cec27e" kindref="member">fragment_length</ref>(wrong_ngram_begin_index);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fraglen<sp/>&gt;<sp/>1)<sp/>temp_uch<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(uch_id);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fraglen;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fraglen<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>frag_str<sp/>=</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ab7a7a173907f187f44677d2ad2679e09" kindref="member">CHAR_FRAGMENT::to_string</ref>(temp_uch,<sp/>i,<sp/>fraglen,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(frag_str.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uch_id<sp/>=<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(frag_str.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit.set_to_list(blob_choices-&gt;<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(temp_blob_index));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>correct_frag_uch<sp/>=</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ab7a7a173907f187f44677d2ad2679e09" kindref="member">CHAR_FRAGMENT::to_string</ref>(correct_ngram_str,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_blob_index<sp/>-<sp/>begin_blob_index,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_blobs_to_replace,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(correct_frag_uch.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>correct_frag_uch_id<sp/>=</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(correct_frag_uch.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>WERD_CHOICE<sp/>corresponding<sp/>to<sp/>the<sp/>original<sp/>unichar<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>list<sp/>of<sp/>blob<sp/>choices,<sp/>add<sp/>the<sp/>derived<sp/>character<sp/>fragment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>it<sp/>with<sp/>the<sp/>same<sp/>rating<sp/>and<sp/>certainty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit.mark_cycle_pt();<sp/>!bit.cycled_list();<sp/>bit.forward())<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit.data()-&gt;unichar_id()<sp/>==<sp/>correct_frag_uch_id)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unichar<sp/>we<sp/>want<sp/>to<sp/>insert<sp/>is<sp/>already<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit.data()-&gt;unichar_id()<sp/>==<sp/>uch_id)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit.add_before_then_move(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>(*(bit.data())));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit.data()-&gt;set_unichar_id(correct_frag_uch_id);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modified_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*modified_blobs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_blob_index++;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>current<sp/>unichar<sp/>from<sp/>werd_choice.<sp/>On<sp/>the<sp/>last<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>correct<sp/>replacement<sp/>unichar<sp/>instead<sp/>of<sp/>removing<sp/>a<sp/>unichar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replaced_count<sp/>+<sp/>1<sp/>==<sp/>wrong_ngram_size)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8238d436806c40b2e01b9659dfab5eb3" kindref="member">set_unichar_id</ref>(correct_ngram_id,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_blobs_to_replace,<sp/>0.0,<sp/>0.0,<sp/>wrong_ngram_begin_index);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a30ec4e48a346a379ab6900e69f8b12fa" kindref="member">remove_unichar_id</ref>(wrong_ngram_begin_index);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>modified_blobs<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*modified_blobs<sp/>&amp;&amp;<sp/>blob_choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>werd_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa27589343655d5843a6482dbb3731d5a" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;ReplaceAmbig()<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Modified<sp/>blob_choices:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blob_choices-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ratngs_8cpp_1a2de5b7d5a020bb9823091dbece4ea36e" kindref="member">print_ratings_list</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>blob_choices-&gt;<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(i),<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>());</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ace0e51938995068fdb1b115f6be61470" kindref="member">Dict::ChoiceSameAs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>ViableChoice)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" kindref="member">StringSameAs</ref>(WordChoice,<sp/>ViableChoice));</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a0e3e3f5f2bf54b5b2a0aec103c816cd6" kindref="member" tooltip="Returns the length of the shortest alpha run in WordChoice. ">Dict::LengthOfShortestAlphaRun</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shortest<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>WordChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();<sp/>++w)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(WordChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(w)))<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curr_len++;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_len<sp/>&lt;<sp/>shortest)<sp/>shortest<sp/>=<sp/>curr_len;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curr_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>curr_len<sp/>&lt;<sp/>shortest)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>shortest<sp/>=<sp/>curr_len;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shortest<sp/>==<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>shortest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shortest;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/><ref refid="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" kindref="member">Dict::NewViableChoice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AdjustFactor,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Certainties[])<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length<sp/>=<sp/>WordChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>assert<sp/>(Length<sp/>&lt;=<sp/>MAX_NUM_CHUNKS<sp/>&amp;&amp;<sp/>Length<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>NewChoice<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE_STRUCT</ref>(Length);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" kindref="member">FillViableChoice</ref>(WordChoice,<sp/>AdjustFactor,<sp/>Certainties,<sp/>NewChoice);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewChoice;</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" kindref="member" tooltip="Dumps a text representation of the specified Choice to File. ">Dict::PrintViableChoice</ref>(FILE<sp/>*File,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Label,<sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>Choice)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>Label);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;(R=%5.1f,<sp/>C=%4.1f,<sp/>F=%4.2f,<sp/>Frag=%d)<sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a651bc1b5ad4d2a7ce33c0f564c13ecb7" kindref="member">Rating</ref>,<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a88c4c888e5f46a1c56b3fc934726514f" kindref="member">Certainty</ref>,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a0f0a2441140b16e144665ecc0f8beb66" kindref="member">AdjustFactor</ref>,<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5b91c9de772bbeca40909bd3a30d0115" kindref="member">ComposedFromCharFragments</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().id_to_unichar(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>));</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().id_to_unichar(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref><sp/>-<sp/>1;<sp/>j++)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;%3d<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1a507a1c58c2bd055d3b3e944327a61b1d" kindref="member">Certainty</ref><sp/>*<sp/>-10.0));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;%3d<sp/>&quot;</highlight><highlight class="normal">,<sp/>Choice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[i].<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1ac928eaafcdc57fcd44d82ab9a56e9da3" kindref="member">NumChunks</ref>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>fprintf(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" kindref="member">Dict::FillViableChoice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AdjustFactor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Certainties[],</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>ViableChoice)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>ViableChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a5c826e0dfb1ae9fff772735294f38f91" kindref="member">Init</ref>(WordChoice,<sp/>current_segmentation_,<sp/>Certainties,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustFactor);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" kindref="member">Dict::StringSameAs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;WordChoice,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>ViableChoice)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>!=<sp/>ViableChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="struct_c_h_a_r___c_h_o_i_c_e" kindref="compound">CHAR_CHOICE</ref><sp/>*CharChoice;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>CharChoice<sp/>=<sp/>&amp;(ViableChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[0]);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>ViableChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1a094ecf960979babf7ff7d1ca74b99c61" kindref="member">Length</ref>;<sp/>CharChoice++,<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CharChoice-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref><sp/>!=<sp/>WordChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" kindref="member">Dict::StringSameAs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*String,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*String_lengths,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t" kindref="compound">VIABLE_CHOICE</ref><sp/>ViableChoice)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><ref refid="struct_c_h_a_r___c_h_o_i_c_e" kindref="compound">CHAR_CHOICE</ref><sp/>*Char;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_unichar_length;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Char<sp/>=<sp/>&amp;(ViableChoice-&gt;<ref refid="class_v_i_a_b_l_e___c_h_o_i_c_e___s_t_r_u_c_t_1ac8d4e0d1f5355092b5cb33f541aa54c2" kindref="member">Blob</ref>[0]),<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>ViableChoice-&gt;Length;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>+=<sp/>*(String_lengths++),<sp/>Char++,<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>current_unichar_length<sp/>=<sp/>strlen(<ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().id_to_unichar(Char-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_unichar_length<sp/>!=<sp/>*String_lengths<sp/>||</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncmp(String,<sp/><ref refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" kindref="member">getUnicharset</ref>().id_to_unichar(Char-&gt;<ref refid="struct_c_h_a_r___c_h_o_i_c_e_1afae513ffd1d6fd0167baa1dce1b86c60" kindref="member">Class</ref>),</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_unichar_length)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*String<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dict_1a2e14dd61f93ad13fafe4c2e2dae88631" kindref="member">Dict::UniformCertainties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>&amp;Choices,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;BestChoice)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Certainty;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>WorstCertainty<sp/>=<sp/><ref refid="host_8h_1a9adcee815220ec9db98062213806ed04" kindref="member">MAX_FLOAT32</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CertaintyThreshold;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>TotalCertainty;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>TotalCertaintySquared;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>Variance;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="cluster_8cpp_1ad99e1235a4e63880ab2f72bfdff26e28" kindref="member">Mean</ref>,<sp/>StdDev;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WordLength;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>WordLength<sp/>=<sp/>Choices.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WordLength<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>TotalCertainty<sp/>=<sp/>TotalCertaintySquared<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>BlobChoiceIt;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Choices.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>BlobChoiceIt.set_to_list(Choices.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(i));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>Certainty<sp/>=<sp/>BlobChoiceIt.data()-&gt;certainty();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalCertainty<sp/>+=<sp/>Certainty;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalCertaintySquared<sp/>+=<sp/>Certainty<sp/>*<sp/>Certainty;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Certainty<sp/>&lt;<sp/>WorstCertainty)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WorstCertainty<sp/>=<sp/>Certainty;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subtract<sp/>off<sp/>worst<sp/>certainty<sp/>from<sp/>statistics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>WordLength--;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>TotalCertainty<sp/>-=<sp/>WorstCertainty;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>TotalCertaintySquared<sp/>-=<sp/>WorstCertainty<sp/>*<sp/>WorstCertainty;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>Mean<sp/>=<sp/>TotalCertainty<sp/>/<sp/>WordLength;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>Variance<sp/>=<sp/>((WordLength<sp/>*<sp/>TotalCertaintySquared<sp/>-</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalCertainty<sp/>*<sp/>TotalCertainty)<sp/>/</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>(WordLength<sp/>*<sp/>(WordLength<sp/>-<sp/>1)));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Variance<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>Variance<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>StdDev<sp/>=<sp/>sqrt<sp/>(Variance);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>CertaintyThreshold<sp/>=<sp/>Mean<sp/>-<sp/>stopper_allowable_character_badness<sp/>*<sp/>StdDev;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CertaintyThreshold<sp/>&gt;<sp/>stopper_nondict_certainty_base)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>CertaintyThreshold<sp/>=<sp/>stopper_nondict_certainty_base;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>()<sp/>&lt;<sp/>CertaintyThreshold)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stopper_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Stopper:<sp/>Non-uniform<sp/>certainty<sp/>=<sp/>%4.1f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(m=%4.1f,<sp/>s=%4.1f,<sp/>t=%4.1f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BestChoice.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a1b25ef2b44d21a7204483a7ca804f293" kindref="member">certainty</ref>(),<sp/><ref refid="cluster_8cpp_1ad99e1235a4e63880ab2f72bfdff26e28" kindref="member">Mean</ref>,<sp/>StdDev,<sp/>CertaintyThreshold);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/dict/stopper.cpp"/>
  </compounddef>
</doxygen>
