<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="errorcounter_8cpp" kind="file">
    <compoundname>errorcounter.cpp</compoundname>
    <includes local="no">ctime</includes>
    <includes refid="errorcounter_8h" local="yes">errorcounter.h</includes>
    <includes refid="fontinfo_8h" local="yes">fontinfo.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="sampleiterator_8h" local="yes">sampleiterator.h</includes>
    <includes refid="shapeclassifier_8h" local="yes">shapeclassifier.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="trainingsample_8h" local="yes">trainingsample.h</includes>
    <includes refid="trainingsampleset_8h" local="yes">trainingsampleset.h</includes>
    <includes refid="unicity__table_8h" local="yes">unicity_table.h</includes>
    <incdepgraph>
      <node id="24059">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="24060" relation="include">
        </childnode>
        <childnode refid="24065" relation="include">
        </childnode>
        <childnode refid="24028" relation="include">
        </childnode>
      </node>
      <node id="24051">
        <label>shapeclassifier.h</label>
        <link refid="shapeclassifier_8h"/>
      </node>
      <node id="24017">
        <label>assert.h</label>
      </node>
      <node id="24050">
        <label>sampleiterator.h</label>
        <link refid="sampleiterator_8h"/>
      </node>
      <node id="24014">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="24065">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="24006">
        <label>stdlib.h</label>
      </node>
      <node id="24009">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="24010" relation="include">
        </childnode>
      </node>
      <node id="24071">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24034">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="24011" relation="include">
        </childnode>
      </node>
      <node id="24060">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="24061" relation="include">
        </childnode>
        <childnode refid="24011" relation="include">
        </childnode>
        <childnode refid="24028" relation="include">
        </childnode>
        <childnode refid="24062" relation="include">
        </childnode>
        <childnode refid="24031" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
        <childnode refid="24063" relation="include">
        </childnode>
        <childnode refid="24064" relation="include">
        </childnode>
      </node>
      <node id="24044">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
      </node>
      <node id="24019">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="24006" relation="include">
        </childnode>
        <childnode refid="24013" relation="include">
        </childnode>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24020" relation="include">
        </childnode>
        <childnode refid="24011" relation="include">
        </childnode>
        <childnode refid="24022" relation="include">
        </childnode>
      </node>
      <node id="24018">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24019" relation="include">
        </childnode>
        <childnode refid="24023" relation="include">
        </childnode>
      </node>
      <node id="24082">
        <label>bitvector.h</label>
        <link refid="bitvector_8h"/>
        <childnode refid="24017" relation="include">
        </childnode>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24067">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24068" relation="include">
        </childnode>
        <childnode refid="24031" relation="include">
        </childnode>
      </node>
      <node id="24079">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="24076" relation="include">
        </childnode>
        <childnode refid="24068" relation="include">
        </childnode>
      </node>
      <node id="24001">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter.cpp"/>
        <childnode refid="24002" relation="include">
        </childnode>
        <childnode refid="24003" relation="include">
        </childnode>
        <childnode refid="24049" relation="include">
        </childnode>
        <childnode refid="24014" relation="include">
        </childnode>
        <childnode refid="24050" relation="include">
        </childnode>
        <childnode refid="24051" relation="include">
        </childnode>
        <childnode refid="24052" relation="include">
        </childnode>
        <childnode refid="24074" relation="include">
        </childnode>
        <childnode refid="24081" relation="include">
        </childnode>
        <childnode refid="24072" relation="include">
        </childnode>
      </node>
      <node id="24035">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="24036" relation="include">
        </childnode>
        <childnode refid="24043" relation="include">
        </childnode>
      </node>
      <node id="24016">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="24017" relation="include">
        </childnode>
        <childnode refid="24018" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24024" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
        <childnode refid="24030" relation="include">
        </childnode>
      </node>
      <node id="24021">
        <label>stddef.h</label>
      </node>
      <node id="24026">
        <label>memory.h</label>
      </node>
      <node id="24073">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="24055" relation="include">
        </childnode>
      </node>
      <node id="24066">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24039" relation="include">
        </childnode>
      </node>
      <node id="24011">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24055">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
      </node>
      <node id="24010">
        <label>limits.h</label>
      </node>
      <node id="24052">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24053" relation="include">
        </childnode>
      </node>
      <node id="24077">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="24068" relation="include">
        </childnode>
        <childnode refid="24054" relation="include">
        </childnode>
        <childnode refid="24078" relation="include">
        </childnode>
        <childnode refid="24039" relation="include">
        </childnode>
      </node>
      <node id="24041">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="24039" relation="include">
        </childnode>
      </node>
      <node id="24042">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="24038" relation="include">
        </childnode>
      </node>
      <node id="24033">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24019" relation="include">
        </childnode>
        <childnode refid="24023" relation="include">
        </childnode>
      </node>
      <node id="24063">
        <label>pthread.h</label>
      </node>
      <node id="24013">
        <label>string.h</label>
      </node>
      <node id="24003">
        <label>errorcounter.h</label>
        <link refid="errorcounter_8h"/>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24015" relation="include">
        </childnode>
      </node>
      <node id="24029">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="24025" relation="include">
        </childnode>
      </node>
      <node id="24025">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="24026" relation="include">
        </childnode>
        <childnode refid="24013" relation="include">
        </childnode>
      </node>
      <node id="24058">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24013" relation="include">
        </childnode>
        <childnode refid="24006" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24045" relation="include">
        </childnode>
        <childnode refid="24059" relation="include">
        </childnode>
      </node>
      <node id="24002">
        <label>ctime</label>
      </node>
      <node id="24043">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="24039" relation="include">
        </childnode>
        <childnode refid="24038" relation="include">
        </childnode>
        <childnode refid="24014" relation="include">
        </childnode>
        <childnode refid="24044" relation="include">
        </childnode>
        <childnode refid="24045" relation="include">
        </childnode>
      </node>
      <node id="24032">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24007">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24064">
        <label>semaphore.h</label>
      </node>
      <node id="24036">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="24037" relation="include">
        </childnode>
        <childnode refid="24042" relation="include">
        </childnode>
        <childnode refid="24032" relation="include">
        </childnode>
        <childnode refid="24043" relation="include">
        </childnode>
        <childnode refid="24034" relation="include">
        </childnode>
        <childnode refid="24044" relation="include">
        </childnode>
      </node>
      <node id="24030">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="24031" relation="include">
        </childnode>
        <childnode refid="24032" relation="include">
        </childnode>
        <childnode refid="24033" relation="include">
        </childnode>
        <childnode refid="24028" relation="include">
        </childnode>
        <childnode refid="24034" relation="include">
        </childnode>
        <childnode refid="24035" relation="include">
        </childnode>
        <childnode refid="24046" relation="include">
        </childnode>
      </node>
      <node id="24046">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24047" relation="include">
        </childnode>
        <childnode refid="24030" relation="include">
        </childnode>
      </node>
      <node id="24022">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="24011" relation="include">
        </childnode>
      </node>
      <node id="24056">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24057" relation="include">
        </childnode>
        <childnode refid="24066" relation="include">
        </childnode>
        <childnode refid="24067" relation="include">
        </childnode>
        <childnode refid="24031" relation="include">
        </childnode>
      </node>
      <node id="24061">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="24040" relation="include">
        </childnode>
        <childnode refid="24045" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
      </node>
      <node id="24072">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="24007" relation="include">
        </childnode>
        <childnode refid="24011" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
      </node>
      <node id="24039">
        <label>math.h</label>
      </node>
      <node id="24037">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="24038" relation="include">
        </childnode>
        <childnode refid="24042" relation="include">
        </childnode>
      </node>
      <node id="24023">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="24011" relation="include">
        </childnode>
      </node>
      <node id="24081">
        <label>trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="24082" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24083" relation="include">
        </childnode>
        <childnode refid="24015" relation="include">
        </childnode>
        <childnode refid="24052" relation="include">
        </childnode>
        <childnode refid="24074" relation="include">
        </childnode>
      </node>
      <node id="24080">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="24076" relation="include">
        </childnode>
        <childnode refid="24031" relation="include">
        </childnode>
      </node>
      <node id="24048">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="24038" relation="include">
        </childnode>
      </node>
      <node id="24069">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="24039" relation="include">
        </childnode>
        <childnode refid="24068" relation="include">
        </childnode>
      </node>
      <node id="24057">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="24058" relation="include">
        </childnode>
        <childnode refid="24007" relation="include">
        </childnode>
      </node>
      <node id="24076">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="24068" relation="include">
        </childnode>
        <childnode refid="24005" relation="include">
        </childnode>
      </node>
      <node id="24031">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24028" relation="include">
        </childnode>
      </node>
      <node id="24004">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24006" relation="include">
        </childnode>
        <childnode refid="24007" relation="include">
        </childnode>
        <childnode refid="24011" relation="include">
        </childnode>
        <childnode refid="24012" relation="include">
        </childnode>
        <childnode refid="24014" relation="include">
        </childnode>
      </node>
      <node id="24020">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="24021" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24070">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="24071" relation="include">
        </childnode>
        <childnode refid="24058" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
        <childnode refid="24072" relation="include">
        </childnode>
        <childnode refid="24031" relation="include">
        </childnode>
      </node>
      <node id="24074">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="24040" relation="include">
        </childnode>
        <childnode refid="24075" relation="include">
        </childnode>
        <childnode refid="24077" relation="include">
        </childnode>
        <childnode refid="24053" relation="include">
        </childnode>
        <childnode refid="24015" relation="include">
        </childnode>
        <childnode refid="24079" relation="include">
        </childnode>
        <childnode refid="24080" relation="include">
        </childnode>
        <childnode refid="24052" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
      </node>
      <node id="24075">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="24076" relation="include">
        </childnode>
      </node>
      <node id="24040">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24019" relation="include">
        </childnode>
        <childnode refid="24023" relation="include">
        </childnode>
      </node>
      <node id="24027">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="24011" relation="include">
        </childnode>
        <childnode refid="24012" relation="include">
        </childnode>
        <childnode refid="24028" relation="include">
        </childnode>
        <childnode refid="24007" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
        <childnode refid="24029" relation="include">
        </childnode>
      </node>
      <node id="24049">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24025" relation="include">
        </childnode>
      </node>
      <node id="24038">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24039" relation="include">
        </childnode>
        <childnode refid="24040" relation="include">
        </childnode>
        <childnode refid="24041" relation="include">
        </childnode>
      </node>
      <node id="24024">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="24045">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="24031" relation="include">
        </childnode>
      </node>
      <node id="24053">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="24031" relation="include">
        </childnode>
        <childnode refid="24054" relation="include">
        </childnode>
        <childnode refid="24073" relation="include">
        </childnode>
      </node>
      <node id="24008">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="24009" relation="include">
        </childnode>
      </node>
      <node id="24005">
        <label>stdio.h</label>
      </node>
      <node id="24083">
        <label>indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24004" relation="include">
        </childnode>
      </node>
      <node id="24015">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="24016" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
      </node>
      <node id="24054">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="24004" relation="include">
        </childnode>
        <childnode refid="24055" relation="include">
        </childnode>
        <childnode refid="24056" relation="include">
        </childnode>
        <childnode refid="24070" relation="include">
        </childnode>
        <childnode refid="24044" relation="include">
        </childnode>
        <childnode refid="24027" relation="include">
        </childnode>
      </node>
      <node id="24062">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
        <childnode refid="24045" relation="include">
        </childnode>
      </node>
      <node id="24078">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24008" relation="include">
        </childnode>
      </node>
      <node id="24028">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24013" relation="include">
        </childnode>
        <childnode refid="24009" relation="include">
        </childnode>
        <childnode refid="24020" relation="include">
        </childnode>
      </node>
      <node id="24068">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="24018" relation="include">
        </childnode>
        <childnode refid="24043" relation="include">
        </childnode>
        <childnode refid="24069" relation="include">
        </childnode>
      </node>
      <node id="24012">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="24005" relation="include">
        </childnode>
        <childnode refid="24013" relation="include">
        </childnode>
      </node>
      <node id="24047">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="24048" relation="include">
        </childnode>
        <childnode refid="24019" relation="include">
        </childnode>
        <childnode refid="24020" relation="include">
        </childnode>
        <childnode refid="24043" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="errorcounter_8h" kindref="compound">errorcounter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fontinfo_8h" kindref="compound">fontinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sampleiterator_8h" kindref="compound">sampleiterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapeclassifier_8h" kindref="compound">shapeclassifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsample_8h" kindref="compound">trainingsample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsampleset_8h" kindref="compound">trainingsampleset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicity__table_8h" kindref="compound">unicity_table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>a<sp/>classifier,<sp/>computing<sp/>its<sp/>error<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>errorcounter.h<sp/>for<sp/>description<sp/>of<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterates<sp/>over<sp/>the<sp/>samples,<sp/>calling<sp/>the<sp/>classifier<sp/>in<sp/>normal/silent<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>classifier<sp/>makes<sp/>a<sp/>CT_UNICHAR_TOPN_ERR<sp/>error,<sp/>and<sp/>the<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>report_level<sp/>is<sp/>set<sp/>(4<sp/>or<sp/>greater),<sp/>it<sp/>will<sp/>then<sp/>call<sp/>the<sp/>classifier<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>debug<sp/>flag<sp/>and<sp/>a<sp/>keep_this<sp/>argument<sp/>to<sp/>find<sp/>out<sp/>what<sp/>is<sp/>going<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_error_counter_1acb9b56ec04616c94320adaad8add95a8" kindref="member">ErrorCounter::ComputeErrorRate</ref>(ShapeClassifier*<sp/>classifier,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>report_level,<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fd" kindref="member">CountTypes</ref><sp/>boosting_mode,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>fontinfo_table,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;Pix*&gt;</ref>&amp;<sp/>page_images,<sp/>SampleIterator*<sp/>it,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>unichar_error,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>scaled_error,<sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>fonts_report)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsetsize<sp/>=<sp/>it-&gt;shape_table()-&gt;unicharset().size();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shapesize<sp/>=<sp/>it-&gt;CompactCharsetSize();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontsize<sp/>=<sp/>it-&gt;sample_set()-&gt;NumFonts();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ErrorCounter<sp/>counter(charsetsize,<sp/>shapesize,<sp/>fontsize);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ShapeRating&gt;</ref><sp/>results;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>clock_t<sp/>start<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unscaled_error<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>number<sp/>of<sp/>samples<sp/>on<sp/>which<sp/>to<sp/>run<sp/>the<sp/>classify<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_samples<sp/>=<sp/>report_level<sp/>&gt;<sp/>3<sp/>?<sp/>report_level<sp/>*<sp/>report_level<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>the<sp/>samples,<sp/>accumulating<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it-&gt;Begin();<sp/>!it-&gt;AtEnd();<sp/>it-&gt;Next())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>TrainingSample*<sp/>mutable_sample<sp/>=<sp/>it-&gt;MutableSample();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_index<sp/>=<sp/>mutable_sample-&gt;page_num();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>page_pix<sp/>=<sp/>0<sp/>&lt;=<sp/>page_index<sp/>&amp;&amp;<sp/>page_index<sp/>&lt;<sp/>page_images.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>page_images[page_index]<sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>debug,<sp/>no<sp/>keep<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>classifier-&gt;ClassifySample(*mutable_sample,<sp/>page_pix,<sp/>0,<sp/>INVALID_UNICHAR_ID,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;results);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mutable_sample-&gt;class_id()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>junk<sp/>so<sp/>use<sp/>the<sp/>special<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counter.AccumulateJunk(*it-&gt;shape_table(),<sp/>results,<sp/>mutable_sample);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter.AccumulateErrors(report_level<sp/>&gt;<sp/>3,<sp/>boosting_mode,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_table,<sp/>*it-&gt;shape_table(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results,<sp/>mutable_sample)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_samples<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Running<sp/>debug,<sp/>keep<sp/>the<sp/>correct<sp/>answer,<sp/>and<sp/>debug<sp/>the<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>sample<sp/>%d:<sp/>Classifier<sp/>debug<sp/>output:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;GlobalSampleIndex());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keep_this<sp/>=<sp/>it-&gt;GetSparseClassID();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classifier-&gt;ClassifySample(*mutable_sample,<sp/>page_pix,<sp/>1,<sp/>keep_this,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;results);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--error_samples;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>++total_samples;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_time<sp/>=<sp/>1.0<sp/>*<sp/>(clock()<sp/>-<sp/>start)<sp/>/<sp/>CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>appropriate<sp/>error<sp/>report.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>unscaled_error<sp/>=<sp/>counter.ReportErrors(report_level,<sp/>boosting_mode,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_table,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it,<sp/>unichar_error,<sp/>fonts_report);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaled_error<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*scaled_error<sp/>=<sp/>counter.scaled_error_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>useful<sp/>to<sp/>know<sp/>the<sp/>time<sp/>in<sp/>microseconds/char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Errors<sp/>computed<sp/>in<sp/>%.2fs<sp/>at<sp/>%.1f<sp/>μs/char\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_time,<sp/>1000000.0<sp/>*<sp/>total_time<sp/>/<sp/>total_samples);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unscaled_error;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor<sp/>is<sp/>private.<sp/>Only<sp/>anticipated<sp/>use<sp/>of<sp/>ErrorCounter<sp/>is<sp/>via</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>static<sp/>ComputeErrorRate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">ErrorCounter::ErrorCounter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsetsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shapesize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontsize)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>:<sp/>scaled_error_(0.0),<sp/>unichar_counts_(charsetsize,<sp/>shapesize,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Counts<sp/>empty_counts;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>font_counts_.init_to_size(fontsize,<sp/>empty_counts);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">ErrorCounter::~ErrorCounter()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accumulates<sp/>the<sp/>errors<sp/>from<sp/>the<sp/>classifier<sp/>results<sp/>on<sp/>a<sp/>single<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>debug<sp/>is<sp/>true<sp/>and<sp/>a<sp/>CT_UNICHAR_TOPN_ERR<sp/>error<sp/>occurred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boosting_mode<sp/>selects<sp/>the<sp/>type<sp/>of<sp/>error<sp/>to<sp/>be<sp/>used<sp/>for<sp/>boosting<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is_error_<sp/>member<sp/>of<sp/>sample<sp/>is<sp/>set<sp/>according<sp/>to<sp/>whether<sp/>the<sp/>required<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>error<sp/>occurred.<sp/>The<sp/>font_table<sp/>provides<sp/>access<sp/>to<sp/>font<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>error<sp/>counting<sp/>and<sp/>shape_table<sp/>is<sp/>used<sp/>to<sp/>understand<sp/>the<sp/>relationship</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>unichar_ids<sp/>and<sp/>shape_ids<sp/>in<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ErrorCounter::AccumulateErrors(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fd" kindref="member">CountTypes</ref><sp/>boosting_mode,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>font_table,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeTable&amp;<sp/>shape_table,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ShapeRating&gt;</ref>&amp;<sp/>results,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSample*<sp/><ref refid="structsample" kindref="compound">sample</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_results<sp/>=<sp/>results.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_it<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>sample-&gt;font_id();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id<sp/>=<sp/>sample-&gt;class_id();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_results<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reject.<sp/>We<sp/>count<sp/>rejects<sp/>as<sp/>a<sp/>separate<sp/>category,<sp/>but<sp/>still<sp/>mark<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>as<sp/>an<sp/>error<sp/>in<sp/>case<sp/>any<sp/>training<sp/>module<sp/>wants<sp/>to<sp/>use<sp/>that<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>improve<sp/>the<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda89ab4937a98054f1c525755ce6ae36c8" kindref="member">CT_REJECT</ref>];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table.GetShape(results[0].shape_id).</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContainsUnicharAndFont(unichar_id,<sp/>font_id))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8fb31a83f810e43940202a9dfb39952b" kindref="member">CT_SHAPE_TOP_CORRECT</ref>];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unichar<sp/>and<sp/>font<sp/>OK,<sp/>but<sp/>count<sp/>if<sp/>multiple<sp/>unichars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table.GetShape(results[0].shape_id).size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaab5d38d92964a3603dd577180571243b" kindref="member">CT_OK_MULTI_UNICHAR</ref>];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>top<sp/>shape<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaece404f7a03b3e062c4c2f9580019c13" kindref="member">CT_SHAPE_TOP_ERR</ref>];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>any<sp/>font<sp/>in<sp/>the<sp/>top<sp/>choice<sp/>has<sp/>attributes<sp/>that<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>attributes_match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>font_props<sp/>=<sp/>font_table.<ref refid="class_unicity_table_1a3b3107bc72d9edfe501eaba7404de7eb" kindref="member" tooltip="Return the object from an id. ">get</ref>(font_id).properties;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shape&amp;<sp/>shape<sp/>=<sp/>shape_table.GetShape(results[0].shape_id);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>shape.size()<sp/>&amp;&amp;<sp/>!attributes_match;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>shape[c].font_ids.size();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_table.<ref refid="class_unicity_table_1a3b3107bc72d9edfe501eaba7404de7eb" kindref="member" tooltip="Return the object from an id. ">get</ref>(shape[c].font_ids[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>]).properties<sp/>==<sp/>font_props)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes_match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>It<sp/>is<sp/>easy<sp/>to<sp/>add<sp/>counters<sp/>for<sp/>individual<sp/>font<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>if<sp/>we<sp/>want<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!attributes_match)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa1c74855ce10eb780dabadbf54eb7b8a" kindref="member">CT_FONT_ATTR_ERR</ref>];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boosting_mode<sp/>==<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaece404f7a03b3e062c4c2f9580019c13" kindref="member">CT_SHAPE_TOP_ERR</ref>)<sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>rank<sp/>of<sp/>correct<sp/>unichar<sp/>answer.<sp/>(Ignoring<sp/>the<sp/>font.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res_index<sp/>&lt;<sp/>num_results<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!shape_table.GetShape(results[res_index].shape_id).</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ContainsUnichar(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++res_index;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res_index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unichar<sp/>OK,<sp/>but<sp/>count<sp/>if<sp/>multiple<sp/>unichars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table.GetShape(results[res_index].shape_id).size()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaab5d38d92964a3603dd577180571243b" kindref="member">CT_OK_MULTI_UNICHAR</ref>];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>maps<sp/>from<sp/>unichar<sp/>id<sp/>to<sp/>shape<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_results<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++unichar_counts_(unichar_id,<sp/>results[0].shape_id);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>unichar<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boosting_mode<sp/>==<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>)<sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res_index<sp/>&gt;=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(2,<sp/>num_results))<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>also<sp/>a<sp/>2nd<sp/>choice<sp/>unichar<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda695227fd1cabdbcf6421beaee60e7e3c" kindref="member">CT_UNICHAR_TOP2_ERR</ref>];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boosting_mode<sp/>==<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda695227fd1cabdbcf6421beaee60e7e3c" kindref="member">CT_UNICHAR_TOP2_ERR</ref>)<sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res_index<sp/>&gt;=<sp/>num_results)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>also<sp/>a<sp/>top-n<sp/>choice<sp/>unichar<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4649b3e172660074d3255fd5f1f5c850" kindref="member">CT_UNICHAR_TOPN_ERR</ref>];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boosting_mode<sp/>==<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4649b3e172660074d3255fd5f1f5c850" kindref="member">CT_UNICHAR_TOPN_ERR</ref>)<sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_it<sp/>=<sp/>debug;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>mean<sp/>number<sp/>of<sp/>return<sp/>values<sp/>and<sp/>mean<sp/>rank<sp/>of<sp/>correct<sp/>answer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdafe639ee6eab2f5503df027e13dc3d776" kindref="member">CT_NUM_RESULTS</ref>]<sp/>+=<sp/>num_results;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdacf1cf7811b8c6938a7097cc30f56d991" kindref="member">CT_RANK</ref>]<sp/>+=<sp/>res_index;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>was<sp/>an<sp/>error<sp/>for<sp/>boosting<sp/>then<sp/>sum<sp/>the<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample-&gt;is_error())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>scaled_error_<sp/>+=<sp/>sample-&gt;weight();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_it)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>results<sp/>for<sp/>char<sp/>%s<sp/>font<sp/>%d<sp/>:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_results,<sp/>shape_table.unicharset().id_to_unichar(unichar_id),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_id);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_results;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%.3f/%.3f:%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[i].rating,<sp/>results[i].font,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table.DebugStr(results[i].shape_id).string());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accumulates<sp/>counts<sp/>for<sp/>junk.<sp/>Counts<sp/>only<sp/>whether<sp/>the<sp/>junk<sp/>was<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rejected<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErrorCounter::AccumulateJunk(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeTable&amp;<sp/>shape_table,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ShapeRating&gt;</ref>&amp;<sp/>results,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSample*<sp/>sample)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>junk<sp/>we<sp/>accept<sp/>no<sp/>answer,<sp/>or<sp/>an<sp/>explicit<sp/>shape<sp/>answer<sp/>matching<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>id<sp/>of<sp/>the<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_results<sp/>=<sp/>results.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>sample-&gt;font_id();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id<sp/>=<sp/>sample-&gt;class_id();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_results<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!shape_table.GetShape(results[0].shape_id).ContainsUnichar(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>junk<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa3bba775583d2acab58b3543043ab591" kindref="member">CT_ACCEPTED_JUNK</ref>];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>counts<sp/>as<sp/>an<sp/>error<sp/>for<sp/>boosting<sp/>too<sp/>so<sp/>sum<sp/>the<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>scaled_error_<sp/>+=<sp/>sample-&gt;weight();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correctly<sp/>rejected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts_[font_id].n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8b7c62ce93360d39e8a8204c0cd77f45" kindref="member">CT_REJECTED_JUNK</ref>];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;set_is_error(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>report<sp/>of<sp/>the<sp/>error<sp/>rate.<sp/>The<sp/>report_level<sp/>controls<sp/>the<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>reported<sp/>to<sp/>stderr<sp/>via<sp/>tprintf:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0<sp/><sp/><sp/>-&gt;<sp/>no<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&gt;=1<sp/>-&gt;<sp/>bottom-line<sp/>error<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&gt;=3<sp/>-&gt;<sp/>font-level<sp/>error<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boosting_mode<sp/>determines<sp/>the<sp/>return<sp/>value.<sp/>It<sp/>selects<sp/>which<sp/>(un-weighted)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>error<sp/>rate<sp/>to<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>fontinfo_table<sp/>from<sp/>MasterTrainer<sp/>provides<sp/>the<sp/>names<sp/>of<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>it<sp/>determines<sp/>the<sp/>current<sp/>subset<sp/>of<sp/>the<sp/>training<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>NULL,<sp/>the<sp/>top-choice<sp/>unichar<sp/>error<sp/>rate<sp/>is<sp/>saved<sp/>in<sp/>unichar_error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>NULL,<sp/>the<sp/>report<sp/>string<sp/>is<sp/>saved<sp/>in<sp/>fonts_report.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Ignoring<sp/>report_level).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ErrorCounter::ReportErrors(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>report_level,<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fd" kindref="member">CountTypes</ref><sp/>boosting_mode,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>fontinfo_table,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SampleIterator&amp;<sp/>it,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>unichar_error,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>fonts_report)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>totals<sp/>over<sp/>all<sp/>the<sp/>fonts<sp/>and<sp/>report<sp/>individual<sp/>font<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>Counts<sp/>totals;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontsize<sp/>=<sp/>font_counts_.size();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>fontsize;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>counts<sp/>over<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>totals<sp/>+=<sp/>font_counts_[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>font_report;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReportString(font_counts_[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>],<sp/>&amp;font_report))<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fonts_report<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fonts_report<sp/>+=<sp/>fontinfo_table.<ref refid="class_unicity_table_1a3b3107bc72d9edfe501eaba7404de7eb" kindref="member" tooltip="Return the object from an id. ">get</ref>(f).name;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fonts_report<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fonts_report<sp/>+=<sp/>font_report;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fonts_report<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>individual<sp/>font<sp/>error<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fontinfo_table.<ref refid="class_unicity_table_1a3b3107bc72d9edfe501eaba7404de7eb" kindref="member" tooltip="Return the object from an id. ">get</ref>(f).name,<sp/>font_report.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>totals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>total_report;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReportString(totals,<sp/>&amp;total_report))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;TOTAL<sp/>Scaled<sp/>Err=%.4g%%,<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaled_error_<sp/>*<sp/>100.0,<sp/>total_report.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>worst<sp/>substitution<sp/>error<sp/>only<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totals.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset<sp/>=<sp/>it.shape_table()-&gt;unicharset();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsetsize<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shapesize<sp/>=<sp/>it.CompactCharsetSize();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_uni_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_shape_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>0;<sp/>u<sp/>&lt;<sp/>charsetsize;<sp/>++u)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>shapesize;<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichar_counts_(u,<sp/>s)<sp/>&gt;<sp/>worst_err)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_err<sp/>=<sp/>unichar_counts_(u,<sp/>s);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_uni_id<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_shape_id<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worst_err<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Worst<sp/>error<sp/>=<sp/>%d:%s<sp/>-&gt;<sp/>%s<sp/>with<sp/>%d/%d=%.2f%%<sp/>errors\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_uni_id,<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(worst_uni_id),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.shape_table()-&gt;DebugStr(worst_shape_id).string(),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_err,<sp/>totals.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>],</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>worst_err<sp/>/<sp/>totals.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>]);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref>];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ComputeRates(totals,<sp/>rates))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output<sp/>values<sp/>if<sp/>asked<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichar_error<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>*unichar_error<sp/>=<sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rates[boosting_mode];</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>report<sp/>string<sp/>to<sp/>a<sp/>combined<sp/>human<sp/>and<sp/>machine-readable<sp/>report</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string<sp/>of<sp/>the<sp/>error<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>there<sp/>is<sp/>no<sp/>data,<sp/>leaving<sp/>report<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ErrorCounter::ReportString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Counts&amp;<sp/>counts,<sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>report)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>error<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref>];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ComputeRates(counts,<sp/>rates))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>%.4g%%,<sp/>the<sp/>length<sp/>of<sp/>the<sp/>output<sp/>string<sp/>should<sp/>exactly<sp/>match<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>the<sp/>format<sp/>string,<sp/>but<sp/>in<sp/>case<sp/>of<sp/>overflow,<sp/>allow<sp/>for<sp/>+eddd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>each<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMaxExtraLength<sp/>=<sp/>5;<sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>+eddd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>this<sp/>format<sp/>string<sp/>and<sp/>the<sp/>snprintf<sp/>in<sp/>sync<sp/>with<sp/>the<sp/>CountTypes<sp/>enum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ShapeErr=%.4g%%,<sp/>FontAttr=%.4g%%,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unichar=%.4g%%[1],<sp/>%.4g%%[2],<sp/>%.4g%%[n],<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multi=%.4g%%,<sp/>Rej=%.4g%%,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Answers=%.3g,<sp/>Rank=%.3g,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OKjunk=%.4g%%,<sp/>Badjunk=%.4g%%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_str_len<sp/>=<sp/>strlen(format_str)<sp/>+<sp/>kMaxExtraLength<sp/>*<sp/>(<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref><sp/>-<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>formatted_str<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[max_str_len];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>snprintf(formatted_str,<sp/>max_str_len,<sp/>format_str,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaece404f7a03b3e062c4c2f9580019c13" kindref="member">CT_SHAPE_TOP_ERR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa1c74855ce10eb780dabadbf54eb7b8a" kindref="member">CT_FONT_ATTR_ERR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" kindref="member">CT_UNICHAR_TOP1_ERR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda695227fd1cabdbcf6421beaee60e7e3c" kindref="member">CT_UNICHAR_TOP2_ERR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4649b3e172660074d3255fd5f1f5c850" kindref="member">CT_UNICHAR_TOPN_ERR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaab5d38d92964a3603dd577180571243b" kindref="member">CT_OK_MULTI_UNICHAR</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda89ab4937a98054f1c525755ce6ae36c8" kindref="member">CT_REJECT</ref>]<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdafe639ee6eab2f5503df027e13dc3d776" kindref="member">CT_NUM_RESULTS</ref>],</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdacf1cf7811b8c6938a7097cc30f56d991" kindref="member">CT_RANK</ref>],</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8b7c62ce93360d39e8a8204c0cd77f45" kindref="member">CT_REJECTED_JUNK</ref>],</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100.0<sp/>*<sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa3bba775583d2acab58b3543043ab591" kindref="member">CT_ACCEPTED_JUNK</ref>]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>*report<sp/>=<sp/>formatted_str;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>formatted_str;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>append<sp/>each<sp/>field<sp/>of<sp/>counts<sp/>with<sp/>a<sp/>tab<sp/>in<sp/>front<sp/>so<sp/>the<sp/>result<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>loaded<sp/>into<sp/>a<sp/>spreadsheet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct<sp/>=<sp/>0;<sp/>ct<sp/>&lt;<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref>;<sp/>++ct)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>report-&gt;<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>counts.n[ct]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>error<sp/>rates<sp/>and<sp/>returns<sp/>in<sp/>rates<sp/>which<sp/>is<sp/>an<sp/>array<sp/>of<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CT_SIZE.<sp/>Returns<sp/>false<sp/>if<sp/>there<sp/>is<sp/>no<sp/>data,<sp/>leaving<sp/>rates<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ErrorCounter::ComputeRates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Counts&amp;<sp/>counts,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rates[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref>])<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_samples<sp/>=<sp/>counts.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8fb31a83f810e43940202a9dfb39952b" kindref="member">CT_SHAPE_TOP_CORRECT</ref>]<sp/>+<sp/>counts.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaece404f7a03b3e062c4c2f9580019c13" kindref="member">CT_SHAPE_TOP_ERR</ref>]<sp/>+</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counts.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda89ab4937a98054f1c525755ce6ae36c8" kindref="member">CT_REJECT</ref>];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>junk_samples<sp/>=<sp/>counts.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8b7c62ce93360d39e8a8204c0cd77f45" kindref="member">CT_REJECTED_JUNK</ref>]<sp/>+<sp/>counts.n[<ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa3bba775583d2acab58b3543043ab591" kindref="member">CT_ACCEPTED_JUNK</ref>];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_samples<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>junk_samples<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>rates<sp/>for<sp/>normal<sp/>chars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(ok_samples,<sp/>1));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct<sp/>=<sp/>0;<sp/>ct<sp/>&lt;=<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdacf1cf7811b8c6938a7097cc30f56d991" kindref="member">CT_RANK</ref>;<sp/>++ct)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>rates[ct]<sp/>=<sp/>counts.n[ct]<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>rates<sp/>for<sp/>junk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>denominator<sp/>=<sp/>static_cast&lt;double&gt;(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(junk_samples,<sp/>1));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct<sp/>=<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8b7c62ce93360d39e8a8204c0cd77f45" kindref="member">CT_REJECTED_JUNK</ref>;<sp/>ct<sp/>&lt;=<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa3bba775583d2acab58b3543043ab591" kindref="member">CT_ACCEPTED_JUNK</ref>;<sp/>++ct)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>rates[ct]<sp/>=<sp/>counts.n[ct]<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">ErrorCounter::Counts::Counts()<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>memset(n,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(n[0])<sp/>*<sp/>CT_SIZE);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>other<sp/>into<sp/>this<sp/>for<sp/>computing<sp/>totals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ipoints_8h_1a7bdc2726e11ac29db02c5152d33ed9bd" kindref="member">ErrorCounter::Counts::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Counts&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct<sp/>=<sp/>0;<sp/>ct<sp/>&lt;<sp/><ref refid="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" kindref="member">CT_SIZE</ref>;<sp/>++ct)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>n[ct]<sp/>+=<sp/>other.n[ct];</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/errorcounter.cpp"/>
  </compounddef>
</doxygen>
