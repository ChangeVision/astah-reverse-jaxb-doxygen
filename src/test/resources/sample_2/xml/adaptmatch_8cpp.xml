<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="adaptmatch_8cpp" kind="file">
    <compoundname>adaptmatch.cpp</compoundname>
    <includes local="no">ctype.h</includes>
    <includes refid="ambigs_8h" local="yes">ambigs.h</includes>
    <includes refid="blobclass_8h" local="yes">blobclass.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="normfeat_8h" local="yes">normfeat.h</includes>
    <includes refid="mfoutline_8h" local="yes">mfoutline.h</includes>
    <includes refid="picofeat_8h" local="yes">picofeat.h</includes>
    <includes refid="float2int_8h" local="yes">float2int.h</includes>
    <includes refid="outfeat_8h" local="yes">outfeat.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="intfx_8h" local="yes">intfx.h</includes>
    <includes refid="speckle_8h" local="yes">speckle.h</includes>
    <includes refid="efio_8h" local="yes">efio.h</includes>
    <includes refid="normmatch_8h" local="yes">normmatch.h</includes>
    <includes refid="permute_8h" local="yes">permute.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="intproto_8h" local="yes">intproto.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="werd_8h" local="yes">werd.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="pageres_8h" local="yes">pageres.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="tessclassifier_8h" local="yes">tessclassifier.h</includes>
    <includes refid="trainingsample_8h" local="yes">trainingsample.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="featdefs_8h" local="yes">featdefs.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="23039">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="23040" relation="include">
        </childnode>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23108">
        <label>shapeclassifier.h</label>
        <link refid="shapeclassifier_8h"/>
      </node>
      <node id="23081">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23099">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="23103">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23061">
        <label>assert.h</label>
      </node>
      <node id="23096">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="23097" relation="include">
        </childnode>
        <childnode refid="23098" relation="include">
        </childnode>
        <childnode refid="23096" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23105" relation="include">
        </childnode>
        <childnode refid="23062" relation="include">
        </childnode>
        <childnode refid="23051" relation="include">
        </childnode>
        <childnode refid="23063" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23056" relation="include">
        </childnode>
      </node>
      <node id="23020">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="23092">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23068" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
      </node>
      <node id="23044">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="23064">
        <label>speckle.h</label>
        <link refid="speckle_8h"/>
        <childnode refid="23048" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
      </node>
      <node id="23008">
        <label>stdlib.h</label>
      </node>
      <node id="23005">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23055">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23070">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="23012" relation="include">
        </childnode>
      </node>
      <node id="23040">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23041" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23042" relation="include">
        </childnode>
        <childnode refid="23043" relation="include">
        </childnode>
      </node>
      <node id="23035">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23007">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23013" relation="include">
        </childnode>
      </node>
      <node id="23095">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23030">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
      </node>
      <node id="23048">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23045">
        <label>normfeat.h</label>
        <link refid="normfeat_8h"/>
        <childnode refid="23028" relation="include">
        </childnode>
      </node>
      <node id="23111">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
      </node>
      <node id="23098">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="23038" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
      </node>
      <node id="23071">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="23072" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
      </node>
      <node id="23104">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23038" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
      </node>
      <node id="23065">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="23061" relation="include">
        </childnode>
        <childnode refid="23030" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23066" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23067" relation="include">
        </childnode>
      </node>
      <node id="23011">
        <label>stddef.h</label>
      </node>
      <node id="23023">
        <label>memory.h</label>
      </node>
      <node id="23057">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="23053" relation="include">
        </childnode>
      </node>
      <node id="23047">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23032" relation="include">
        </childnode>
      </node>
      <node id="23060">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="23061" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
      </node>
      <node id="23107">
        <label>tessclassifier.h</label>
        <link refid="tessclassifier_8h"/>
        <childnode refid="23108" relation="include">
        </childnode>
      </node>
      <node id="23012">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23053">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
      </node>
      <node id="23089">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23033" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
      </node>
      <node id="23079">
        <label>normmatch.h</label>
        <link refid="normmatch_8h"/>
        <childnode refid="23053" relation="include">
        </childnode>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23006">
        <label>limits.h</label>
      </node>
      <node id="23106">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23051" relation="include">
        </childnode>
      </node>
      <node id="23062">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
        <childnode refid="23063" relation="include">
        </childnode>
        <childnode refid="23032" relation="include">
        </childnode>
      </node>
      <node id="23091">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23078">
        <label>efio.h</label>
        <link refid="efio_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23100">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23099" relation="include">
        </childnode>
        <childnode refid="23037" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23102" relation="include">
        </childnode>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
      </node>
      <node id="23034">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="23032" relation="include">
        </childnode>
      </node>
      <node id="23074">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="23033" relation="include">
        </childnode>
      </node>
      <node id="23069">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
      </node>
      <node id="23042">
        <label>pthread.h</label>
      </node>
      <node id="23009">
        <label>string.h</label>
      </node>
      <node id="23025">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="23022" relation="include">
        </childnode>
      </node>
      <node id="23083">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
      </node>
      <node id="23022">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="23023" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
      </node>
      <node id="23038">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23039" relation="include">
        </childnode>
      </node>
      <node id="23031">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="23032" relation="include">
        </childnode>
        <childnode refid="23033" relation="include">
        </childnode>
        <childnode refid="23020" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
      </node>
      <node id="23068">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23018">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23043">
        <label>semaphore.h</label>
      </node>
      <node id="23072">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="23073" relation="include">
        </childnode>
        <childnode refid="23074" relation="include">
        </childnode>
        <childnode refid="23068" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
        <childnode refid="23070" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
      </node>
      <node id="23067">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23068" relation="include">
        </childnode>
        <childnode refid="23069" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23070" relation="include">
        </childnode>
        <childnode refid="23071" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
      </node>
      <node id="23050">
        <label>float2int.h</label>
        <link refid="float2int_8h"/>
        <childnode refid="23051" relation="include">
        </childnode>
        <childnode refid="23028" relation="include">
        </childnode>
      </node>
      <node id="23075">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23076" relation="include">
        </childnode>
        <childnode refid="23067" relation="include">
        </childnode>
      </node>
      <node id="23013">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="23012" relation="include">
        </childnode>
      </node>
      <node id="23046">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23037" relation="include">
        </childnode>
        <childnode refid="23047" relation="include">
        </childnode>
        <childnode refid="23048" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23001">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
      </node>
      <node id="22999">
        <label>classify/adaptmatch.cpp</label>
        <link refid="adaptmatch.cpp"/>
        <childnode refid="23000" relation="include">
        </childnode>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23026" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23019" relation="include">
        </childnode>
        <childnode refid="23045" relation="include">
        </childnode>
        <childnode refid="23046" relation="include">
        </childnode>
        <childnode refid="23049" relation="include">
        </childnode>
        <childnode refid="23050" relation="include">
        </childnode>
        <childnode refid="23058" relation="include">
        </childnode>
        <childnode refid="23059" relation="include">
        </childnode>
        <childnode refid="23062" relation="include">
        </childnode>
        <childnode refid="23064" relation="include">
        </childnode>
        <childnode refid="23078" relation="include">
        </childnode>
        <childnode refid="23079" relation="include">
        </childnode>
        <childnode refid="23080" relation="include">
        </childnode>
        <childnode refid="23020" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23081" relation="include">
        </childnode>
        <childnode refid="23067" relation="include">
        </childnode>
        <childnode refid="23060" relation="include">
        </childnode>
        <childnode refid="23082" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23096" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23109" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23100" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23032" relation="include">
        </childnode>
      </node>
      <node id="23056">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="23018" relation="include">
        </childnode>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
      </node>
      <node id="23073">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="23033" relation="include">
        </childnode>
        <childnode refid="23074" relation="include">
        </childnode>
      </node>
      <node id="23032">
        <label>math.h</label>
      </node>
      <node id="23094">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23037" relation="include">
        </childnode>
      </node>
      <node id="23014">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="23012" relation="include">
        </childnode>
      </node>
      <node id="23049">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23077">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="23033" relation="include">
        </childnode>
      </node>
      <node id="23059">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23060" relation="include">
        </childnode>
      </node>
      <node id="23036">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="23032" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
      </node>
      <node id="23087">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="23037">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="23038" relation="include">
        </childnode>
        <childnode refid="23018" relation="include">
        </childnode>
      </node>
      <node id="23028">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23000">
        <label>ctype.h</label>
      </node>
      <node id="23084">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="23085" relation="include">
        </childnode>
        <childnode refid="23086" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23088" relation="include">
        </childnode>
      </node>
      <node id="23016">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23017">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23018" relation="include">
        </childnode>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23019" relation="include">
        </childnode>
        <childnode refid="23020" relation="include">
        </childnode>
      </node>
      <node id="23102">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23103" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
      </node>
      <node id="23010">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="23011" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23054">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="23055" relation="include">
        </childnode>
        <childnode refid="23038" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23056" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23082">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23083" relation="include">
        </childnode>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23063" relation="include">
        </childnode>
        <childnode refid="23084" relation="include">
        </childnode>
        <childnode refid="23075" relation="include">
        </childnode>
        <childnode refid="23091" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23092" relation="include">
        </childnode>
        <childnode refid="23093" relation="include">
        </childnode>
        <childnode refid="23067" relation="include">
        </childnode>
      </node>
      <node id="23109">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23062" relation="include">
        </childnode>
        <childnode refid="23051" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
        <childnode refid="23111" relation="include">
        </childnode>
        <childnode refid="23049" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23027">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="23028" relation="include">
        </childnode>
      </node>
      <node id="23086">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="23087" relation="include">
        </childnode>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23002">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
      </node>
      <node id="23024">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23019" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23018" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23025" relation="include">
        </childnode>
      </node>
      <node id="23093">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23094" relation="include">
        </childnode>
        <childnode refid="23095" relation="include">
        </childnode>
      </node>
      <node id="23101">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23018" relation="include">
        </childnode>
      </node>
      <node id="23105">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
      </node>
      <node id="23033">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23032" relation="include">
        </childnode>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23034" relation="include">
        </childnode>
      </node>
      <node id="23097">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="23037" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
      </node>
      <node id="23066">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="23085">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="23010" relation="include">
        </childnode>
      </node>
      <node id="23015">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23051">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
        <childnode refid="23057" relation="include">
        </childnode>
      </node>
      <node id="23090">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="23004">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="23005" relation="include">
        </childnode>
      </node>
      <node id="23088">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="23030" relation="include">
        </childnode>
        <childnode refid="23085" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23089" relation="include">
        </childnode>
        <childnode refid="23090" relation="include">
        </childnode>
      </node>
      <node id="23003">
        <label>stdio.h</label>
      </node>
      <node id="23110">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23052">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23053" relation="include">
        </childnode>
        <childnode refid="23046" relation="include">
        </childnode>
        <childnode refid="23054" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23041">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
      </node>
      <node id="23063">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23004" relation="include">
        </childnode>
      </node>
      <node id="23021">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23005" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
      </node>
      <node id="23058">
        <label>outfeat.h</label>
        <link refid="outfeat_8h"/>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23047" relation="include">
        </childnode>
        <childnode refid="23046" relation="include">
        </childnode>
      </node>
      <node id="23026">
        <label>blobclass.h</label>
        <link refid="blobclass_8h"/>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23037" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
      </node>
      <node id="23029">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="23030" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
        <childnode refid="23036" relation="include">
        </childnode>
      </node>
      <node id="23019">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
      </node>
      <node id="23080">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="23065" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23076">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="23077" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_scored_class" prot="public">ScoredClass</innerclass>
    <innerclass refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" prot="public">ADAPT_RESULTS</innerclass>
    <innerclass refid="struct_p_r_o_t_o___k_e_y" prot="public">PROTO_KEY</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="adaptmatch_8cpp_1a788df8e37c3d6f36e3d18a7bb7a603f0" prot="public" static="no">
        <name>ADAPT_TEMPLATE_SUFFIX</name>
        <initializer>&quot;.a&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="68" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1ae731492acc3b2e54043c2dfbf1338be6" prot="public" static="no">
        <name>MAX_MATCHES</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="70" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a17b4f36c5132ab55beb280e0cc233228" prot="public" static="no">
        <name>UNLIKELY_NUM_FEAT</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="71" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" prot="public" static="no">
        <name>NO_DEBUG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="72" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a1243706f4507cae308afd38f4481e919" prot="public" static="no">
        <name>MAX_ADAPTABLE_WERD_SIZE</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="73" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a60c940a7a2c296b84d3cc915267c83c1" prot="public" static="no">
        <name>ADAPTABLE_WERD_ADJUSTMENT</name>
        <initializer>(0.05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="75" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1ac5fe456fd5a30097c95a104b29c45cc3" prot="public" static="no">
        <name>Y_DIM_OFFSET</name>
        <initializer>(<ref refid="intproto_8h_1abd4c49783ccd23c297ef5650ccce9c9c" kindref="member">Y_SHIFT</ref> - <ref refid="float2int_8h_1a0cd5a36a70bcf28d6727fe56e419b5a2" kindref="member">BASELINE_Y_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="77" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a93902888a2216c8e4a03ddc10aed7f41" prot="public" static="no">
        <name>WORST_POSSIBLE_RATING</name>
        <initializer>(1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="79" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1a212c1ba628a1cd30b51a902c35fb23eb" prot="public" static="no">
        <name>MarginalMatch</name>
        <param><defname>Rating</defname></param>
        <initializer>((Rating) &gt; matcher_great_threshold)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="124" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="adaptmatch_8cpp_1aca8523f0becfd3cca333fd48d103735d" prot="public" static="no">
        <name>InitIntFX</name>
        <param></param>
        <initializer>(FeaturesHaveBeenExtracted = <ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="127" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="adaptmatch_8cpp_1a82aaab0580160422d3587ca9cc533e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CompareByRating</definition>
        <argsstring>(const void *arg1, const void *arg2)</argsstring>
        <name>CompareByRating</name>
        <param>
          <type>const void *</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="132" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="1650" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="adaptmatch_8cpp_1a3cedbdc7ad221f31895c55506410fd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref> *</type>
        <definition>ScoredClass * FindScoredUnichar</definition>
        <argsstring>(ADAPT_RESULTS *results, UNICHAR_ID id)</argsstring>
        <name>FindScoredUnichar</name>
        <param>
          <type><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref> *</type>
          <declname>results</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="134" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="1630" bodyend="1636"/>
      </memberdef>
      <memberdef kind="function" id="adaptmatch_8cpp_1ab41bdc1f072e458bb14d644c1106b56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref></type>
        <definition>ScoredClass ScoredUnichar</definition>
        <argsstring>(ADAPT_RESULTS *results, UNICHAR_ID id)</argsstring>
        <name>ScoredUnichar</name>
        <param>
          <type><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref> *</type>
          <declname>results</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="1640" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="adaptmatch_8cpp_1af1f03ffe26b93db83b553de0d0be54f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitMatcherRatings</definition>
        <argsstring>(register FLOAT32 *Rating)</argsstring>
        <name>InitMatcherRatings</name>
        <param>
          <type>register <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>Rating</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="adaptmatch_8cpp_1aeb798d8e9e1be9d25261b8a604910d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MakeTempProtoPerm</definition>
        <argsstring>(void *item1, void *item2)</argsstring>
        <name>MakeTempProtoPerm</name>
        <param>
          <type>void *</type>
          <declname>item1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>item2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine converts TempProto to be permanent if its proto id is used by the configuration specified in ProtoKey.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item1</parametername>
</parameternamelist>
<parameterdescription>
<para>(TEMP_PROTO) temporary proto to compare to key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item2</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="struct_p_r_o_t_o___k_e_y" kindref="compound">PROTO_KEY</ref>) defines which protos to make permanent</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="return"><para>TRUE if TempProto is converted, FALSE otherwise </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Thu Mar 14 18:49:54 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" bodystart="2387" bodyend="2409"/>
      </memberdef>
      <memberdef kind="function" id="adaptmatch_8cpp_1af465486d57190cd17155ecc52186dadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAdaptiveThreshold</definition>
        <argsstring>(FLOAT32 Threshold)</argsstring>
        <name>SetAdaptiveThreshold</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>adaptmatch.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>High<sp/>level<sp/>adaptive<sp/>matcher.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Mar<sp/>11<sp/>10:00:10<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="21"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ambigs_8h" kindref="compound">ambigs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobclass_8h" kindref="compound">blobclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normfeat_8h" kindref="compound">normfeat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfoutline_8h" kindref="compound">mfoutline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="picofeat_8h" kindref="compound">picofeat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="float2int_8h" kindref="compound">float2int.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outfeat_8h" kindref="compound">outfeat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intfx_8h" kindref="compound">intfx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="speckle_8h" kindref="compound">speckle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="efio_8h" kindref="compound">efio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normmatch_8h" kindref="compound">normmatch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="permute_8h" kindref="compound">permute.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intproto_8h" kindref="compound">intproto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="werd_8h" kindref="compound">werd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pageres_8h" kindref="compound">pageres.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tessclassifier_8h" kindref="compound">tessclassifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsample_8h" kindref="compound">trainingsample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="featdefs_8h" kindref="compound">featdefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADAPT_TEMPLATE_SUFFIX<sp/>&quot;.a&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MATCHES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UNLIKELY_NUM_FEAT<sp/>200</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NO_DEBUG<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX_ADAPTABLE_WERD_SIZE<sp/>40</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADAPTABLE_WERD_ADJUSTMENT<sp/><sp/><sp/><sp/>(0.05)</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Y_DIM_OFFSET<sp/><sp/><sp/><sp/>(Y_SHIFT<sp/>-<sp/>BASELINE_Y_SHIFT)</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WORST_POSSIBLE_RATING<sp/>(1.0)</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_scored_class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/><ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class_1ab3db24ffe2690f52d86053ba1f631520" kindref="member">shape_id</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class_1a090f44ac2eedadd72c93fb628dfaf167" kindref="member">adapted</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/><ref refid="struct_scored_class_1aa8ff624b603b87dd4cc41304e1e72b05" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/><ref refid="struct_scored_class_1aef50f14f803115ac96f57bf3d7e519f9" kindref="member">fontinfo_id</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/><ref refid="struct_scored_class_1ac30be99b1e1ac98855c624896f9f0389" kindref="member">fontinfo_id2</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1ab6a520c3c59a1f1a3f4d1c27bf5d3000" kindref="member">HasNonfragment</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[<ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="intmatcher_8h_1aad58739a624ab51ab180aac3342c6efc" kindref="member">CLASS_PRUNER_RESULTS</ref><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a450c3b1b225dfa0771edd50732e5d288" kindref="member">Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref><sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1ab6a520c3c59a1f1a3f4d1c27bf5d3000" kindref="member">HasNonfragment</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref><sp/>=<sp/><ref refid="matchdefs_8h_1a6ce548e51895ce0226ee145753a9c815" kindref="member">NO_CLASS</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ab3db24ffe2690f52d86053ba1f631520" kindref="member">shape_id</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>=<sp/><ref refid="adaptmatch_8cpp_1a93902888a2216c8e4a03ddc10aed7f41" kindref="member">WORST_POSSIBLE_RATING</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1a090f44ac2eedadd72c93fb628dfaf167" kindref="member">adapted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa8ff624b603b87dd4cc41304e1e72b05" kindref="member">config</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aef50f14f803115ac96f57bf3d7e519f9" kindref="member">fontinfo_id</ref><sp/>=<sp/>kBlankFontinfoId;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ac30be99b1e1ac98855c624896f9f0389" kindref="member">fontinfo_id2</ref><sp/>=<sp/>kBlankFontinfoId;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct_p_r_o_t_o___k_e_y" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_p_r_o_t_o___k_e_y" kindref="compound">PROTO_KEY</ref><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/><ref refid="struct_p_r_o_t_o___k_e_y_1a88e8ec3116b1ca5e8c0a57a2236f83ed" kindref="member">Templates</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/><ref refid="struct_p_r_o_t_o___k_e_y_1a45ade2ad8d07fe98968e6a6795680f0a" kindref="member">ClassId</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_p_r_o_t_o___k_e_y_1ab4a673ae9bd6272302ea460d336bc80e" kindref="member">ConfigId</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>Macros</highlight></codeline>
<codeline lineno="123"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MarginalMatch(Rating)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor">((Rating)<sp/>&gt;<sp/>matcher_great_threshold)</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>InitIntFX()<sp/>(FeaturesHaveBeenExtracted<sp/>=<sp/>FALSE)</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="131"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1a82aaab0580160422d3587ca9cc533e60" kindref="member">CompareByRating</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*<ref refid="adaptmatch_8cpp_1a3cedbdc7ad221f31895c55506410fd98" kindref="member">FindScoredUnichar</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*results,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/><ref refid="adaptmatch_8cpp_1ab41bdc1f072e458bb14d644c1106b56a" kindref="member">ScoredUnichar</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*results,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1af1f03ffe26b93db83b553de0d0be54f1" kindref="member">InitMatcherRatings</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*Rating);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1aeb798d8e9e1be9d25261b8a604910d0d" kindref="member">MakeTempProtoPerm</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1af465486d57190cd17155ecc52186dadc" kindref="member">SetAdaptiveThreshold</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="147"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a1f058451e32538b4dc2c853b82bc6600" kindref="member">Classify::AdaptiveClassifier</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*Choices,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intmatcher_8h_1aad58739a624ab51ab180aac3342c6efc" kindref="member">CLASS_PRUNER_RESULTS</ref><sp/>CPResults)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>assert(Choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a450c3b1b225dfa0771edd50732e5d288" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a28ddc270cb5d2613f5f0f24ad53a5a21" kindref="member">NewAdaptedTemplates</ref><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a8575af5f97d4037d4fdd2e21b477dd38" kindref="member">DoAdaptiveMatch</ref>(Blob,<sp/>denorm,<sp/>Results);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CPResults<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(CPResults,<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(CPResults[0])<sp/>*<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a0e35029ac0c77ad18d35f08c27c99d15" kindref="member">RemoveBadMatches</ref>(Results);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>qsort((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>,<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_scored_class" kindref="compound">ScoredClass</ref>),<sp/><ref refid="adaptmatch_8cpp_1a82aaab0580160422d3587ca9cc533e60" kindref="member">CompareByRating</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1af15e83a02b369b820d40c8920b4275e8" kindref="member">RemoveExtraPuncs</ref>(Results);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1af1f1f794092ce44dff7c242822b6cf68" kindref="member">ConvertMatchesToChoices</ref>(denorm,<sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>(),<sp/>Results,<sp/>Choices);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matcher_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;AD<sp/>Matches<sp/>=<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aad46f714847619694546e9ea2784402c" kindref="member">PrintAdaptiveMatchResults</ref>(stdout,<sp/>Results);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="speckle_8cpp_1a23f46ca3d2ee91db4490641e9268a172" kindref="member">LargeSpeckle</ref>(Blob))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="speckle_8cpp_1a39cee874b396f85d17da4ee6cedf4944" kindref="member">AddLargeSpeckleTo</ref>(Choices);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_enable_adaptive_debugger)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1af9a9def4a6b3bb1a2e36bceff2976c2c" kindref="member">DebugAdaptiveClassifier</ref>(Blob,<sp/>denorm,<sp/>Results);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>NumClassesOutput<sp/>+=<sp/>Choices-&gt;length();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Choices-&gt;length()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!classify_bln_numeric_mode)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Empty<sp/>classification!\n&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>never<sp/>normally<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>Choices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>temp_it;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_it.set_to_list(Choices);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_it.add_to_end(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>(0,<sp/>50.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>-20.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>-1,<sp/>-1,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Results;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AdaptiveClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>*win<sp/>is<sp/>NULL,<sp/>sets<sp/>it<sp/>to<sp/>a<sp/>new<sp/>ScrollView()<sp/>object<sp/>with<sp/>title<sp/>msg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clears<sp/>the<sp/>window<sp/>and<sp/>draws<sp/>baselines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a6e36e01c8147d95bbd64c6609e1b8f45" kindref="member">Classify::RefreshDebugWindow</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>**win,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;wbox)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kSampleSpaceWidth<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*win<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>*win<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>(msg,<sp/>100,<sp/>y_offset,<sp/>kSampleSpaceWidth<sp/>*<sp/>2,<sp/>200,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kSampleSpaceWidth<sp/>*<sp/>2,<sp/>200,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>(*win)-&gt;Clear();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>(*win)-&gt;Pen(64,<sp/>64,<sp/>64);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>(*win)-&gt;Line(-kSampleSpaceWidth,<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kSampleSpaceWidth,<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>(*win)-&gt;Line(-kSampleSpaceWidth,<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>+<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kSampleSpaceWidth,<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>+<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>(*win)-&gt;ZoomToRectangle(wbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>wbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>wbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Learns<sp/>the<sp/>given<sp/>word<sp/>using<sp/>its<sp/>chopped_word,<sp/>seam_array,<sp/>denorm,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box_word,<sp/>best_state,<sp/>and<sp/>correct_text<sp/>to<sp/>learn<sp/>both<sp/>correctly<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>incorrectly<sp/>segmented<sp/>blobs.<sp/>If<sp/>filename<sp/>is<sp/>not<sp/>NULL,<sp/>then<sp/>LearnBlob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>called<sp/>and<sp/>the<sp/>data<sp/>will<sp/>be<sp/>written<sp/>to<sp/>a<sp/>file<sp/>for<sp/>static<sp/>training.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Otherwise<sp/>AdaptToBlob<sp/>is<sp/>called<sp/>for<sp/>adaption<sp/>within<sp/>a<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>rejmap<sp/>is<sp/>not<sp/>NULL,<sp/>then<sp/>only<sp/>chars<sp/>with<sp/>a<sp/>rejmap<sp/>entry<sp/>of<sp/>&apos;1&apos;<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>learned,<sp/>otherwise<sp/>all<sp/>chars<sp/>with<sp/>good<sp/>correct_text<sp/>are<sp/>learned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1abbbd86871758c036d7ba2af682abb45f" kindref="member">Classify::LearnWord</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rejmap,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref><sp/>*word)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_len<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_len<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>thresholds<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adaption<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_classify_1a7d0ccfd06421346d8cda0f1b76fd8516" kindref="member">EnableLearning</ref><sp/>||<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>word-&gt;best_choice<sp/>is<sp/>not<sp/>recorded<sp/>at<sp/>the<sp/>top<sp/>of<sp/>accumulator&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>choices<sp/>(which<sp/>could<sp/>happen<sp/>for<sp/>choices<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>altered<sp/>with<sp/>ReplaceAmbig())<sp/>we<sp/>skip<sp/>the<sp/>adaption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().CurrentBestChoiceIs(*(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>)))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>or<sp/>won&apos;t<sp/>adapt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>NumWordsAdaptedTo++;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n\nAdapting<sp/>to<sp/>word<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a9f084172bbfc8604af49788aad12da36" kindref="member">debug_string</ref>().<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[word_len];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a57d34f380d093913f3c3e74f7a7a9840" kindref="member">GetAdaptThresholds</ref>(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a211ab5c5a13123ee7bdc7459d3363f9d" kindref="member">rebuild_word</ref>,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a202d9d5d2a462d84012011c689e16605" kindref="member">denorm</ref>,<sp/>*word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab4d02a7548dab0a4522f02ed90e48100" kindref="member">raw_choice</ref>,<sp/>thresholds);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_blob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>prev_map_char<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_character_fragments)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(learn_fragmented_word_debug_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a51dc37eb580fe7f758275685e5ce0d59" kindref="member">window_wait</ref>(learn_fragmented_word_debug_win_);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a6e36e01c8147d95bbd64c6609e1b8f45" kindref="member">RefreshDebugWindow</ref>(&amp;learn_fragments_debug_win_,<sp/></highlight><highlight class="stringliteral">&quot;LearnPieces&quot;</highlight><highlight class="normal">,<sp/>400,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1a8278c9db39975f181ad074bf343ea402" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a6e36e01c8147d95bbd64c6609e1b8f45" kindref="member">RefreshDebugWindow</ref>(&amp;learn_fragmented_word_debug_win_,<sp/></highlight><highlight class="stringliteral">&quot;LearnWord&quot;</highlight><highlight class="normal">,<sp/>200,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1a8278c9db39975f181ad074bf343ea402" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1afe89f2f31b48fa578028f2527b55e144" kindref="member">plot</ref>(learn_fragmented_word_debug_win_);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">ScrollView::Update</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>word_len;<sp/>++ch)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_character_fragments)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nLearning<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[ch].string());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rej_map_char<sp/>=<sp/>rejmap<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>*rejmap++<sp/>:<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[ch].<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>rej_map_char<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>thresholds<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>thresholds[ch]<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a0a6455e61097b98b01d180cd0b2748c9" kindref="member">LearnPieces</ref>(filename,<sp/>start_blob,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch],</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240ab74e41d8efe1a9beae832eb1652096f5" kindref="member">CST_WHOLE</ref>,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[ch].string(),<sp/>word);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch]<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>!disable_character_fragments)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>character<sp/>breaks<sp/>into<sp/>meaningful<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>each<sp/>match<sp/>a<sp/>whole<sp/>character<sp/>with<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>classify_character_fragments_garbage_certainty_threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>garbage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>frag_blob<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>start_blob;<sp/>++i)<sp/>frag_blob<sp/>=<sp/>frag_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frag;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(frag<sp/>=<sp/>0;<sp/>frag<sp/>&lt;<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch];<sp/>++frag)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_character_fragments_garbage_certainty_threshold<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>garbage<sp/>|=<sp/><ref refid="classtesseract_1_1_classify_1ab72f687048a2e1eba44b8ae2cfb07fa9" kindref="member">LooksLikeGarbage</ref>(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a202d9d5d2a462d84012011c689e16605" kindref="member">denorm</ref>,<sp/>frag_blob);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frag_blob<sp/>=<sp/>frag_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Learn<sp/>the<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!garbage)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pieces_all_natural<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a96ed4fc2d1583d0e35e088432ab00a21" kindref="member">PiecesAllNatural</ref>(start_blob,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pieces_all_natural<sp/>||<sp/>!prioritize_division)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(frag<sp/>=<sp/>0;<sp/>frag<sp/>&lt;<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch];<sp/>++frag)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>tokens;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[ch].split(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;tokens);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[0]<sp/>=<sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ab7a7a173907f187f44677d2ad2679e09" kindref="member">CHAR_FRAGMENT::to_string</ref>(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[0].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),<sp/>frag,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch],</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pieces_all_natural);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>full_string;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tokens.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_string<sp/>+=<sp/>tokens[i];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>tokens.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_string<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a0a6455e61097b98b01d180cd0b2748c9" kindref="member">LearnPieces</ref>(filename,<sp/>start_blob<sp/>+<sp/>frag,<sp/>1,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240af7f038dab34772b9ddb631d46aa4126a" kindref="member">CST_FRAGMENT</ref>,<sp/>full_string.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>word);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays):<sp/>re-enable<sp/>this<sp/>part<sp/>of<sp/>the<sp/>code<sp/>when<sp/>we<sp/>switch<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>classifier<sp/>that<sp/>needs<sp/>to<sp/>see<sp/>examples<sp/>of<sp/>garbage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>next_map_char<sp/>=<sp/>ch<sp/>+<sp/>1<sp/>&lt;<sp/>word_len</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(rejmap<sp/>!=<sp/>NULL<sp/>?<sp/>*rejmap<sp/>:<sp/>&apos;1&apos;)</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&apos;0&apos;;</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(word-&gt;best_state[ch]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>the<sp/>next<sp/>blob<sp/>is<sp/>good,<sp/>make<sp/>junk<sp/>with<sp/>the<sp/>rightmost<sp/>fragment.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ch<sp/>+<sp/>1<sp/>&lt;<sp/>word_len<sp/>&amp;&amp;<sp/>word-&gt;correct_text[ch<sp/>+<sp/>1].length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_map_char<sp/>==<sp/>&apos;1&apos;)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LearnPieces(filename,<sp/>start_blob<sp/>+<sp/>word-&gt;best_state[ch]<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;best_state[ch<sp/>+<sp/>1]<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/>CST_IMPROPER,<sp/>INVALID_UNICHAR,<sp/>word);</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>the<sp/>previous<sp/>blob<sp/>is<sp/>good,<sp/>make<sp/>junk<sp/>with<sp/>the<sp/>leftmost<sp/>fragment.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ch<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>word-&gt;correct_text[ch<sp/>-<sp/>1].length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_map_char<sp/>==<sp/>&apos;1&apos;)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LearnPieces(filename,<sp/>start_blob<sp/>-<sp/>word-&gt;best_state[ch<sp/>-<sp/>1],</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;best_state[ch<sp/>-<sp/>1]<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/>CST_IMPROPER,<sp/>INVALID_UNICHAR,<sp/>word);</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>the<sp/>next<sp/>blob<sp/>is<sp/>good,<sp/>make<sp/>a<sp/>join<sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ch<sp/>+<sp/>1<sp/>&lt;<sp/>word_len<sp/>&amp;&amp;<sp/>word-&gt;correct_text[ch<sp/>+<sp/>1].length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_map_char<sp/>==<sp/>&apos;1&apos;)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STRING<sp/>joined_text<sp/>=<sp/>word-&gt;correct_text[ch];</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joined_text<sp/>+=<sp/>word-&gt;correct_text[ch<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LearnPieces(filename,<sp/>start_blob,</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;best_state[ch]<sp/>+<sp/>word-&gt;best_state[ch<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/>CST_NGRAM,<sp/>joined_text.string(),<sp/>word);</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>start_blob<sp/>+=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[ch];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_map_char<sp/>=<sp/>rej_map_char;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>thresholds;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>LearnWord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builds<sp/>a<sp/>blob<sp/>of<sp/>length<sp/>fragments,<sp/>from<sp/>the<sp/>word,<sp/>starting<sp/>at<sp/>start,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>learns<sp/>it,<sp/>as<sp/>having<sp/>the<sp/>given<sp/>correct_text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>filename<sp/>is<sp/>not<sp/>NULL,<sp/>then<sp/>LearnBlob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>called<sp/>and<sp/>the<sp/>data<sp/>will<sp/>be<sp/>written<sp/>to<sp/>a<sp/>file<sp/>for<sp/>static<sp/>training.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Otherwise<sp/>AdaptToBlob<sp/>is<sp/>called<sp/>for<sp/>adaption<sp/>within<sp/>a<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>threshold<sp/>is<sp/>a<sp/>magic<sp/>number<sp/>required<sp/>by<sp/>AdaptToChar<sp/>and<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetAdaptThresholds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Although<sp/>it<sp/>can<sp/>be<sp/>partly<sp/>inferred<sp/>from<sp/>the<sp/>string,<sp/>segmentation<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provided<sp/>to<sp/>explicitly<sp/>clarify<sp/>the<sp/>character<sp/>segmentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a0a6455e61097b98b01d180cd0b2748c9" kindref="member">Classify::LearnPieces</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold,<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240" kindref="member">CharSegmentationType</ref><sp/>segmentation,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>correct_text,<sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref><sp/>*word)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria)<sp/>Remove/modify<sp/>this<sp/>if/when<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>train<sp/>and/or<sp/>adapt<sp/>to<sp/>n-grams.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentation<sp/>!=<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240ab74e41d8efe1a9beae832eb1652096f5" kindref="member">CST_WHOLE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(segmentation<sp/>!=<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240af7f038dab34772b9ddb631d46aa4126a" kindref="member">CST_FRAGMENT</ref><sp/>||<sp/>disable_character_fragments))</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a919dc51833c934e6738e5e18d2dd43f6" kindref="member">join_pieces</ref>(word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,<sp/>start<sp/>+<sp/>length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>start;<sp/>++i)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>blob<sp/>if<sp/>needed<sp/>for<sp/>classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm<sp/>=<sp/>&amp;word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a202d9d5d2a462d84012011c689e16605" kindref="member">denorm</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>rotated_blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a01a7a878b92170eaa04d65435b0ef4cc" kindref="member">ClassifyNormalizeIfNeeded</ref>(&amp;denorm);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotated_blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>rotated_blob<sp/>=<sp/>blob;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>debug<sp/>windows<sp/>showing<sp/>the<sp/>blob<sp/>that<sp/>is<sp/>being<sp/>learned<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(classify_learn_debug_str.string(),<sp/>correct_text)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a6e36e01c8147d95bbd64c6609e1b8f45" kindref="member">RefreshDebugWindow</ref>(&amp;learn_debug_win_,<sp/></highlight><highlight class="stringliteral">&quot;LearnPieces&quot;</highlight><highlight class="normal">,<sp/>600,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1a8278c9db39975f181ad074bf343ea402" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>rotated_blob-&gt;plot(learn_debug_win_,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9d8c87be486dead41d198d6b97a22174" kindref="member">ScrollView::GREEN</ref>,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a3147083bcb68eb690858099c736e6857" kindref="member">ScrollView::BROWN</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>learn_debug_win_-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a51dc37eb580fe7f758275685e5ce0d59" kindref="member">window_wait</ref>(learn_debug_win_);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_character_fragments<sp/>&amp;&amp;<sp/>segmentation<sp/>==<sp/><ref refid="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240af7f038dab34772b9ddb631d46aa4126a" kindref="member">CST_FRAGMENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(learn_fragments_debug_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>in<sp/>LearnWord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1aea2abdf5701d97f2aece1a5fbabaf77e" kindref="member">plot</ref>(learn_fragments_debug_win_,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref>,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a3147083bcb68eb690858099c736e6857" kindref="member">ScrollView::BROWN</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>learn_fragments_debug_win_-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>classify_norm_method.set_value(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>char<sp/>norm<sp/>spc<sp/>30/11/93</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>tess_bn_matching.set_value(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>it<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>tess_cn_matching.set_value(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobclass_8cpp_1aa38d9ea697967c87442bc9a97a64f7e5" kindref="member">LearnBlob</ref>(<ref refid="classtesseract_1_1_classify_1a6ebcfd2968c704f99efd40075ecdb138" kindref="member">feature_defs_</ref>,<sp/>filename,<sp/>rotated_blob,<sp/>*denorm,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correct_text);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(correct_text))<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>class_id<sp/>=<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(correct_text);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a37a6c598c67dcbcce6af7fbd6e2c595f" kindref="member">fontinfo</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" kindref="member">fontinfo_table_</ref>.get_id(*word-&gt;<ref refid="class_w_e_r_d___r_e_s_1a37a6c598c67dcbcce6af7fbd6e2c595f" kindref="member">fontinfo</ref>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adapting<sp/>to<sp/>char<sp/>=<sp/>%s,<sp/>thr=<sp/>%g<sp/>font_id=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(class_id),<sp/>threshold,<sp/>font_id);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>filename<sp/>is<sp/>not<sp/>NULL<sp/>we<sp/>are<sp/>doing<sp/>recognition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(as<sp/>opposed<sp/>to<sp/>training),<sp/>so<sp/>we<sp/>must<sp/>have<sp/>already<sp/>set<sp/>word<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a53629ef3f5562677ae096bbce864e5ab" kindref="member">AdaptToChar</ref>(rotated_blob,<sp/>*denorm,<sp/>class_id,<sp/>font_id,<sp/>threshold);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>adapt<sp/>to<sp/>%s<sp/>not<sp/>in<sp/>unicharset\n&quot;</highlight><highlight class="normal">,<sp/>correct_text);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotated_blob<sp/>!=<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rotated_blob;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>denorm;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1ac76b2d230d4c44cb0346f516b8a7134a" kindref="member">break_pieces</ref>(blob,<sp/>word-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>,<sp/>start,<sp/>start<sp/>+<sp/>length<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>LearnPieces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="476"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1ae5e4880c5acc91b77308fbd6ab706b13" kindref="member">Classify::EndAdaptiveClassifier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>Filename;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>FILE<sp/>*File;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>SECURE_NAMES</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classify_enable_adaptive_matcher<sp/>&amp;&amp;<sp/>classify_save_adapted_templates)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>Filename<sp/>=<sp/><ref refid="classtesseract_1_1_c_c_util_1a5eea0d996032e28207d801a1ee92d388" kindref="member">imagefile</ref><sp/>+<sp/><ref refid="adaptmatch_8cpp_1a788df8e37c3d6f36e3d18a7bb7a603f0" kindref="member">ADAPT_TEMPLATE_SUFFIX</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>=<sp/>fopen<sp/>(Filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(File<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>save<sp/>adapted<sp/>templates<sp/>to<sp/>%s!\n&quot;</highlight><highlight class="normal">,<sp/>Filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\nSaving<sp/>adapted<sp/>templates<sp/>to<sp/>%s<sp/>...&quot;</highlight><highlight class="normal">,<sp/>Filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a1718afe45a09c6631f11ae224e6d5db6" kindref="member">WriteAdaptedTemplates</ref>(File,<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(File);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1accee3ce0fad02a088149b714621dc21d" kindref="member">free_adapted_templates</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a64383806f917e682c4a644efdd71d530" kindref="member">PreTrainedTemplates</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1aed61c96f41cad7c9871e809124987ca8" kindref="member">free_int_templates</ref>(<ref refid="classtesseract_1_1_classify_1a64383806f917e682c4a644efdd71d530" kindref="member">PreTrainedTemplates</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a64383806f917e682c4a644efdd71d530" kindref="member">PreTrainedTemplates</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1ace7f6baf4e425e1d50aac0d1383eb023" kindref="member">EndDangerousAmbigs</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1ab6e270cecf7e7c62e1319e7889caf716" kindref="member">FreeNormProtos</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1a3306f7dc2f0df8c08a9933493262a2c9" kindref="member">PrunedProtos</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1a04608dab39f896c0358b42c228a7ef32" kindref="member">AllProtosOff</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1a974e5b3b4ee8b184a3af4ba782750dd7" kindref="member">AllConfigsOff</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(<ref refid="classtesseract_1_1_classify_1a26b1c76382f418bf5a78bad15b23b8ad" kindref="member">TempProtoMask</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a3306f7dc2f0df8c08a9933493262a2c9" kindref="member">PrunedProtos</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a04608dab39f896c0358b42c228a7ef32" kindref="member">AllProtosOff</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a974e5b3b4ee8b184a3af4ba782750dd7" kindref="member">AllConfigsOff</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a26b1c76382f418bf5a78bad15b23b8ad" kindref="member">TempProtoMask</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EndAdaptiveClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="545"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a2f9389a2d855d2a59e7892d3ba884887" kindref="member">Classify::InitAdaptiveClassifier</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load_pre_trained_templates)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!classify_enable_adaptive_matcher)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1ae5e4880c5acc91b77308fbd6ab706b13" kindref="member">EndAdaptiveClassifier</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>leak<sp/>with<sp/>multiple<sp/>inits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>language_data_path_prefix,<sp/>the<sp/>classifier<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>adaptive<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a259fbb37f1e940892938c71496c4d6ba" kindref="member">language_data_path_prefix</ref>.<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>load_pre_trained_templates)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a303e0f9733b2a55796b0178ba184f6b2" kindref="member">SeekToStart</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899adfd87e838c95bfbdab3d08399e36b362" kindref="member">TESSDATA_INTTEMP</ref>));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a64383806f917e682c4a644efdd71d530" kindref="member">PreTrainedTemplates</ref><sp/>=</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a98459996e5e6ab1dc1de71411fd32b89" kindref="member">ReadIntTemplates</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1ad5be8f7fcf884390b22f02788330d82f" kindref="member">GetDataFilePtr</ref>());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a4c1d7ef19d7917740f1034980d0876fc" kindref="member">DebugLevel</ref>()<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>inttemp\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a303e0f9733b2a55796b0178ba184f6b2" kindref="member">SeekToStart</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899ae3c25bcbffa5055814464c04388a8035" kindref="member">TESSDATA_SHAPE_TABLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ShapeTable(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1adfba8cbf1c85a12b6b826d332614072f" kindref="member">DeSerialize</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a47ec55378864d4e0a97793c08aea75c0" kindref="member">swap</ref>(),</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1ad5be8f7fcf884390b22f02788330d82f" kindref="member">GetDataFilePtr</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>shape<sp/>table!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a4c1d7ef19d7917740f1034980d0876fc" kindref="member">DebugLevel</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>loaded<sp/>shape<sp/>table!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a303e0f9733b2a55796b0178ba184f6b2" kindref="member">SeekToStart</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899afe6ffc645055800e632965abcbc9c501" kindref="member">TESSDATA_PFFMTABLE</ref>));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49a37c1ce02f5e114f0d57e49871b802" kindref="member">ReadNewCutoffs</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1ad5be8f7fcf884390b22f02788330d82f" kindref="member">GetDataFilePtr</ref>(),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a47ec55378864d4e0a97793c08aea75c0" kindref="member">swap</ref>(),</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a89a94291dc1a6bb20fd28c04bfc0c1c4" kindref="member">GetEndOffset</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899afe6ffc645055800e632965abcbc9c501" kindref="member">TESSDATA_PFFMTABLE</ref>),</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharNormCutoffs);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a4c1d7ef19d7917740f1034980d0876fc" kindref="member">DebugLevel</ref>()<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>pffmtable\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a303e0f9733b2a55796b0178ba184f6b2" kindref="member">SeekToStart</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a54f23d768a3b4d9d8cfd2513f5101d66" kindref="member">TESSDATA_NORMPROTO</ref>));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1ad4c94be5d5738afb4115a12cad2e3efa" kindref="member">NormProtos</ref><sp/>=</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aabd742c09ff530922005e015a9e8bc2b" kindref="member">ReadNormProtos</ref>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1ad5be8f7fcf884390b22f02788330d82f" kindref="member">GetDataFilePtr</ref>(),</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a89a94291dc1a6bb20fd28c04bfc0c1c4" kindref="member">GetEndOffset</ref>(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a54f23d768a3b4d9d8cfd2513f5101d66" kindref="member">TESSDATA_NORMPROTO</ref>));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" kindref="member">tessdata_manager</ref>.<ref refid="classtesseract_1_1_tessdata_manager_1a4c1d7ef19d7917740f1034980d0876fc" kindref="member">DebugLevel</ref>()<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>normproto\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1ac248b864f3f5effc9225c6f68d4b9e5b" kindref="member">Init</ref>(&amp;classify_debug_level,<sp/>classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="intfx_8cpp_1a1281b17b87e56c99d53fe6bb1f7c2d55" kindref="member">InitIntegerFX</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a3306f7dc2f0df8c08a9933493262a2c9" kindref="member">PrunedProtos</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a04608dab39f896c0358b42c228a7ef32" kindref="member">AllProtosOff</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a974e5b3b4ee8b184a3af4ba782750dd7" kindref="member">AllConfigsOff</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a26b1c76382f418bf5a78bad15b23b8ad" kindref="member">TempProtoMask</ref><sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a137dcf6c3453d2a2b5cbfa7d369c754f" kindref="member">set_all_bits</ref>(<ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a137dcf6c3453d2a2b5cbfa7d369c754f" kindref="member">set_all_bits</ref>(<ref refid="classtesseract_1_1_classify_1a3306f7dc2f0df8c08a9933493262a2c9" kindref="member">PrunedProtos</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a137dcf6c3453d2a2b5cbfa7d369c754f" kindref="member">set_all_bits</ref>(<ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref>(<ref refid="classtesseract_1_1_classify_1a04608dab39f896c0358b42c228a7ef32" kindref="member">AllProtosOff</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref>(<ref refid="classtesseract_1_1_classify_1a974e5b3b4ee8b184a3af4ba782750dd7" kindref="member">AllConfigsOff</ref>,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>BaselineCutoffs[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_use_pre_adapted_templates)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*File;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>Filename;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>Filename<sp/>=<sp/><ref refid="classtesseract_1_1_c_c_util_1a5eea0d996032e28207d801a1ee92d388" kindref="member">imagefile</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>Filename<sp/>+=<sp/><ref refid="adaptmatch_8cpp_1a788df8e37c3d6f36e3d18a7bb7a603f0" kindref="member">ADAPT_TEMPLATE_SUFFIX</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>=<sp/>fopen(Filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(File<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a28ddc270cb5d2613f5f0f24ad53a5a21" kindref="member">NewAdaptedTemplates</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>SECURE_NAMES</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nReading<sp/>pre-adapted<sp/>templates<sp/>from<sp/>%s<sp/>...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="classtesseract_1_1_classify_1aa74ebd96d85efc39d71c37985e50c8aa" kindref="member">ReadAdaptedTemplates</ref>(File);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(File);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a15d6951abc586793270de0825bdb7dd7" kindref="member">PrintAdaptedTemplates</ref>(stdout,<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaselineCutoffs[i]<sp/>=<sp/>CharNormCutoffs[i];</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8cpp_1accee3ce0fad02a088149b714621dc21d" kindref="member">free_adapted_templates</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a28ddc270cb5d2613f5f0f24ad53a5a21" kindref="member">NewAdaptedTemplates</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>InitAdaptiveClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a350f6cb6e7ce9f53ae468908a91c6148" kindref="member">Classify::ResetAdaptiveClassifierInternal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Resetting<sp/>adaptive<sp/>classifier<sp/>(NumAdaptationsFailed=%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumAdaptationsFailed);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8cpp_1accee3ce0fad02a088149b714621dc21d" kindref="member">free_adapted_templates</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>NumAdaptationsFailed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="659"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a8c350afec3f633660d20eb98226a40d1" kindref="member">Classify::PrintAdaptiveStatistics</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>SECURE_NAMES</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\nADAPTIVE<sp/>MATCHER<sp/>STATISTICS:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\tNum<sp/>blobs<sp/>classified<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>AdaptiveMatcherCalls);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\tNum<sp/>classes<sp/>output<sp/><sp/><sp/>=<sp/>%d<sp/>(Avg<sp/>=<sp/>%4.2f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>NumClassesOutput,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>((AdaptiveMatcherCalls<sp/>==<sp/>0)<sp/>?<sp/>(0.0)<sp/>:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>NumClassesOutput<sp/>/<sp/>AdaptiveMatcherCalls)));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\t\tBaseline<sp/>Classifier:<sp/>%4d<sp/>calls<sp/>(%4.2f<sp/>classes/call)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>BaselineClassifierCalls,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>((BaselineClassifierCalls<sp/>==<sp/>0)<sp/>?<sp/>(0.0)<sp/>:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>NumBaselineClassesTried<sp/>/<sp/>BaselineClassifierCalls)));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\t\tCharNorm<sp/>Classifier:<sp/>%4d<sp/>calls<sp/>(%4.2f<sp/>classes/call)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>CharNormClassifierCalls,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>((CharNormClassifierCalls<sp/>==<sp/>0)<sp/>?<sp/>(0.0)<sp/>:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>NumCharNormClassesTried<sp/>/<sp/>CharNormClassifierCalls)));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\t\tAmbig<sp/><sp/><sp/><sp/>Classifier:<sp/>%4d<sp/>calls<sp/>(%4.2f<sp/>classes/call)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>AmbigClassifierCalls,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>((AmbigClassifierCalls<sp/>==<sp/>0)<sp/>?<sp/>(0.0)<sp/>:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>NumAmbigClassesTried<sp/>/<sp/>AmbigClassifierCalls)));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\nADAPTIVE<sp/>LEARNER<sp/>STATISTICS:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\tNumber<sp/>of<sp/>words<sp/>adapted<sp/>to:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>NumWordsAdaptedTo);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\tNumber<sp/>of<sp/>chars<sp/>adapted<sp/>to:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>NumCharsAdaptedTo);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a15d6951abc586793270de0825bdb7dd7" kindref="member">PrintAdaptedTemplates</ref>(File,<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PrintAdaptiveStatistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="710"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1ae66827073cdeea6a59dd16fd7cf5d297" kindref="member">Classify::SettupPass1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a7d0ccfd06421346d8cda0f1b76fd8516" kindref="member">EnableLearning</ref><sp/>=<sp/>classify_enable_learning;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1aec7160ce69f6f7d478110b95b729d523" kindref="member" tooltip="Sets up stopper variables in preparation for the first pass. ">SettupStopperPass1</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SettupPass1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="730"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a5ad207ab75e8a69c35c225313268788b" kindref="member">Classify::SettupPass2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a7d0ccfd06421346d8cda0f1b76fd8516" kindref="member">EnableLearning</ref><sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a29f0c2e6c8a7b5fb44bb39ce47ceef84" kindref="member" tooltip="Sets up stopper variables in preparation for the second pass. ">SettupStopperPass2</ref>();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SettupPass2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="758"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1aee9e5bd336bf1a37a7a1f3b712eb045d" kindref="member">Classify::InitAdaptedClass</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FontinfoId,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>Features;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Fid,<sp/>Pid;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE</ref><sp/>Feature;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref><sp/>TempProto;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>classify_norm_method.set_value(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>Features<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1af1ef43f77139dc879d27a510adcb4bb3" kindref="member">ExtractOutlineFeatures</ref>(Blob);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>NumFeatures<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a154a6ca419f3f16fccf11b7217351570" kindref="member">NumFeatures</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&gt;<sp/><ref refid="adaptmatch_8cpp_1a17b4f36c5132ab55beb280e0cc233228" kindref="member">UNLIKELY_NUM_FEAT</ref><sp/>||<sp/>NumFeatures<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(Features);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>Config<sp/>=<sp/><ref refid="adaptive_8cpp_1af29bddcf8cc7f50548382c9594716559" kindref="member">NewTempConfig</ref>(NumFeatures<sp/>-<sp/>1,<sp/>FontinfoId);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>0)<sp/>=<sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>kludge<sp/>to<sp/>construct<sp/>cutoffs<sp/>for<sp/>adapted<sp/>templates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Templates<sp/>==<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>BaselineCutoffs[ClassId]<sp/>=<sp/>CharNormCutoffs[ClassId];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>IClass<sp/>=<sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>ClassId);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Fid<sp/>=<sp/>0;<sp/>Fid<sp/>&lt;<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a154a6ca419f3f16fccf11b7217351570" kindref="member">NumFeatures</ref>;<sp/>Fid++)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>Pid<sp/>=<sp/><ref refid="intproto_8cpp_1a4c27266652a51cf8aaa866d299f57301" kindref="member">AddIntProto</ref><sp/>(IClass);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(Pid<sp/>!=<sp/><ref refid="matchdefs_8h_1a4d2ae3978d57e3b05f984a0fedc51812" kindref="member">NO_PROTO</ref>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>Feature<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[Fid];</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>TempProto<sp/>=<sp/><ref refid="adaptive_8cpp_1a5dec565ee3ad1656d02860db322e4448" kindref="member">NewTempProto</ref><sp/>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>&amp;(TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1acf720eb61d4a91e84d949a6f772ea7c5" kindref="member">Proto</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>proto<sp/>params<sp/>-<sp/>NOTE<sp/>that<sp/>Y_DIM_OFFSET<sp/>must<sp/>be<sp/>used<sp/>because</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertProto<sp/>assumes<sp/>that<sp/>the<sp/>Y<sp/>dimension<sp/>varies<sp/>from<sp/>-0.5<sp/>to<sp/>0.5</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instead<sp/>of<sp/>the<sp/>-0.25<sp/>to<sp/>0.75<sp/>used<sp/>in<sp/>baseline<sp/>normalization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>=<sp/>Feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="outfeat_8h_1ab73697b859e4921472c6cf1de43267a1a0bb02f3ddb0f407e51cbf8967c3d78cb" kindref="member">OutlineFeatDir</ref>];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref><sp/>=<sp/>Feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="outfeat_8h_1ab73697b859e4921472c6cf1de43267a1ab72d959dbf0e92bfdb6f3ebf9d0b35e6" kindref="member">OutlineFeatX</ref>];</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>=<sp/>Feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="outfeat_8h_1ab73697b859e4921472c6cf1de43267a1ae64bdd03ed6e7dd59482f7e2d8054379" kindref="member">OutlineFeatY</ref>]<sp/>-<sp/><ref refid="adaptmatch_8cpp_1ac5fe456fd5a30097c95a104b29c45cc3" kindref="member">Y_DIM_OFFSET</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>=<sp/>Feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="outfeat_8h_1ab73697b859e4921472c6cf1de43267a1afc77106ded4ebd69ae6c596a2536e741" kindref="member">OutlineFeatLength</ref>];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1ac0d58978bbcf0c732ae94fb554bccd3b" kindref="member">FillABC</ref>(Proto);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1a93992200ebfddd13e25d0e9122af9b5b" kindref="member">ProtoId</ref><sp/>=<sp/>Pid;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>Pid);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1af27d604585502bd447d52bf5daf15d0d" kindref="member">ConvertProto</ref>(Proto,<sp/>Pid,<sp/>IClass);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1aec09adc2735bb4caaf226df7124e4ed7" kindref="member">AddProtoToProtoPruner</ref>(Proto,<sp/>Pid,<sp/>IClass,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_learning_debug_level<sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>,<sp/>TempProto);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(Features);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a569488473772d42004fec43399e6d5a9" kindref="member">AddIntConfig</ref>(IClass);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a57b07752bea2110e2503cf78747228c5" kindref="member">ConvertConfig</ref><sp/>(<ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/>0,<sp/>IClass);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Added<sp/>new<sp/>class<sp/>&apos;%s&apos;<sp/>with<sp/>class<sp/>id<sp/>%d<sp/>and<sp/>%d<sp/>protos.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId),<sp/>ClassId,<sp/>NumFeatures);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aaa7b4a01a6f9bd1f088982a4011274e5" kindref="member">DisplayAdaptedChar</ref>(Blob,<sp/>denorm,<sp/>IClass);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a1d2aa2b696e73525cb57373fcc5a83ae" kindref="member">IsEmptyAdaptedClass</ref>(Class))</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1aa644a299b7046916ce731566866df325" kindref="member">NumNonEmptyClasses</ref>)++;</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>InitAdaptedClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="854"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a1f21b989c93ff1d297b5bde442fc430c" kindref="member">Classify::GetAdaptiveFeatures</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>*FloatFeatures)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>Features;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>classify_norm_method.set_value(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>Features<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1ad6d1f9f29655ffe18fab3832b113e00b" kindref="member">ExtractPicoFeatures</ref>(Blob);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>NumFeatures<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a154a6ca419f3f16fccf11b7217351570" kindref="member">NumFeatures</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&gt;<sp/><ref refid="adaptmatch_8cpp_1a17b4f36c5132ab55beb280e0cc233228" kindref="member">UNLIKELY_NUM_FEAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(Features);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1ae1f3fc88bf28a4a169273bcf2515610e" kindref="member">ComputeIntFeatures</ref>(Features,<sp/>IntFeatures);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>*FloatFeatures<sp/>=<sp/>Features;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetAdaptiveFeatures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>Code</highlight></codeline>
<codeline lineno="878"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="894"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1ac1f369f9a59739a588a4d84f60bac6c1" kindref="member">Classify::AdaptableWord</ref>(<ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref><sp/>*Word,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;BestChoiceWord,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;RawChoiceWord)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BestChoiceLength<sp/>=<sp/>BestChoiceWord.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adaptable_score<sp/>=</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().segment_penalty_dict_case_ok<sp/>+<sp/><ref refid="adaptmatch_8cpp_1a60c940a7a2c296b84d3cc915267c83c1" kindref="member">ADAPTABLE_WERD_ADJUSTMENT</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rules<sp/>that<sp/>apply<sp/>in<sp/>general<sp/>-<sp/>simplest<sp/>to<sp/>compute<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestChoiceLength<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestChoiceLength<sp/>==<sp/>Word-&gt;<ref refid="struct_t_w_e_r_d_1adfdef9868e61650e076775011382ec70" kindref="member">NumBlobs</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BestChoiceLength<sp/>&lt;=<sp/><ref refid="adaptmatch_8cpp_1a1243706f4507cae308afd38f4481e919" kindref="member">MAX_ADAPTABLE_WERD_SIZE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>basically<sp/>ensures<sp/>that<sp/>the<sp/>word<sp/>is<sp/>at<sp/>least<sp/>a<sp/>dictionary<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(freq<sp/>word,<sp/>user<sp/>word,<sp/>system<sp/>dawg<sp/>word,<sp/>etc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>all<sp/>the<sp/>other<sp/>adjustments<sp/>will<sp/>make<sp/>adjust<sp/>factor<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>higher<sp/>than<sp/>adaptable_score=1.1+0.05=1.15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>these<sp/>are<sp/>other<sp/>flags<sp/>that<sp/>ensure<sp/>that<sp/>the<sp/>word<sp/>is<sp/>dict<sp/>word,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>check<sp/>could<sp/>be<sp/>at<sp/>times<sp/>redundant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a5de1b4b567459f520ce3b82b68c2c618" kindref="member" tooltip="Returns the adjustment factor for the best choice for the current word. ">CurrentBestChoiceAdjustFactor</ref>()<sp/>&lt;=<sp/>adaptable_score<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>alternative<sp/>choices<sp/>are<sp/>not<sp/>dictionary<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a1f4a0951c1960208fab7c511c90e5477" kindref="member">AlternativeChoicesWorseThan</ref>(adaptable_score)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a2a0b6b5be811b039c04dd0cc09436f25" kindref="member" tooltip="Returns true if WordChoice is the same as the current best choice. ">CurrentBestChoiceIs</ref>(BestChoiceWord);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="933"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a53629ef3f5562677ae096bbce864e5ab" kindref="member">Classify::AdaptToChar</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FontinfoId,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref><sp/>IntResult;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/>TempConfig;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>FloatFeatures;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewTempConfigId;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a62ffff7932680b25784bfca5079ce347" kindref="member">ResetFeaturesHaveBeenExtracted</ref>();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>NumCharsAdaptedTo++;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="intproto_8h_1a6edc7e9d060a50cd3617bb509a061eb5" kindref="member">LegalClassId</ref><sp/>(ClassId))</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId];</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>assert(Class<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a1d2aa2b696e73525cb57373fcc5a83ae" kindref="member">IsEmptyAdaptedClass</ref>(Class))<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aee9e5bd336bf1a37a7a1f3b712eb045d" kindref="member">InitAdaptedClass</ref>(Blob,<sp/>denorm,<sp/>ClassId,<sp/>FontinfoId,<sp/>Class,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>IClass<sp/>=<sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>ClassId);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>NumFeatures<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1f21b989c93ff1d297b5bde442fc430c" kindref="member">GetAdaptiveFeatures</ref>(Blob,<sp/>IntFeatures,<sp/>&amp;FloatFeatures);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1a30a627213fe38d7ae508cf6eaa946b41" kindref="member">SetBaseLineMatch</ref>();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>match<sp/>configs<sp/>with<sp/>the<sp/>matching<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>MatchingFontConfigs<sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>0;<sp/>cfg<sp/>&lt;<sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>++cfg)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1afae8a55c28ee68de92ab1b1dd37c6905" kindref="member">GetFontinfoId</ref>(Class,<sp/>cfg)<sp/>==<sp/>FontinfoId)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref>(MatchingFontConfigs,<sp/>cfg);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a1209b8bb0fa7e6e7323cdb48b4165f0d" kindref="member">reset_bit</ref>(MatchingFontConfigs,<sp/>cfg);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">Match</ref>(IClass,<sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/>MatchingFontConfigs,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;IntResult,<sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>,<sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref>(MatchingFontConfigs);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a5a3045639a3db979a8d1eb6dc4343e3b" kindref="member">SetAdaptiveThreshold</ref>(Threshold);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>&lt;=<sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a45d630ce43777ee1ab16048b0a846813" kindref="member">ConfigIsPermanent</ref><sp/>(Class,<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>))<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Found<sp/>good<sp/>match<sp/>to<sp/>perm<sp/>config<sp/>%d<sp/>=<sp/>%4.1f%%.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,<sp/>(1.0<sp/>-<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>)<sp/>*<sp/>100.0);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(FloatFeatures);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TempConfig<sp/>=<sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref><sp/>(Class,<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1ac59a542b45e0a63d6b99ef48a189e1e0" kindref="member">IncreaseConfidence</ref>(TempConfig);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TempConfig-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref><sp/>&gt;<sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a88d1300e6657fc7c98af721983018b36" kindref="member">MaxNumTimesSeen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a88d1300e6657fc7c98af721983018b36" kindref="member">MaxNumTimesSeen</ref><sp/>=<sp/>TempConfig-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Increasing<sp/>reliability<sp/>of<sp/>temp<sp/>config<sp/>%d<sp/>to<sp/>%d.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,<sp/>TempConfig-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a786c5f6e2a5cd8aac2ed4dd89af84fea" kindref="member">TempConfigReliable</ref>(ClassId,<sp/>TempConfig))<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aefb0cfe284dd67601798f7ae510b787f" kindref="member">MakePermanent</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>,<sp/>ClassId,<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,<sp/>denorm,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a954c9085f840572567462c9e0ff3551a" kindref="member">UpdateAmbigsGroup</ref>(ClassId,<sp/>denorm,<sp/>Blob);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Found<sp/>poor<sp/>match<sp/>to<sp/>temp<sp/>config<sp/>%d<sp/>=<sp/>%4.1f%%.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,<sp/>(1.0<sp/>-<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>)<sp/>*<sp/>100.0);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aaa7b4a01a6f9bd1f088982a4011274e5" kindref="member">DisplayAdaptedChar</ref>(Blob,<sp/>denorm,<sp/>IClass);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewTempConfigId<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a59900939784eac1e2e6ebfec1f82bb58" kindref="member">MakeNewTemporaryConfig</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassId,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontinfoId,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatFeatures);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NewTempConfigId<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a786c5f6e2a5cd8aac2ed4dd89af84fea" kindref="member">TempConfigReliable</ref>(ClassId,<sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>NewTempConfigId)))<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aefb0cfe284dd67601798f7ae510b787f" kindref="member">MakePermanent</ref>(<ref refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" kindref="member">AdaptedTemplates</ref>,<sp/>ClassId,<sp/>NewTempConfigId,<sp/>denorm,<sp/>Blob);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a954c9085f840572567462c9e0ff3551a" kindref="member">UpdateAmbigsGroup</ref>(ClassId,<sp/>denorm,<sp/>Blob);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1027"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1aaa7b4a01a6f9bd1f088982a4011274e5" kindref="member">DisplayAdaptedChar</ref>(Blob,<sp/>denorm,<sp/>IClass);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1031"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(FloatFeatures);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AdaptToChar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1aaa7b4a01a6f9bd1f088982a4011274e5" kindref="member">Classify::DisplayAdaptedChar</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS_STRUCT</ref>*<sp/>int_class)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1039"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bloblength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>features;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>norm_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a4bf0e47e0ae00a0cec215a887cef8c65" kindref="member">GetBaselineFeatures</ref>(blob,<sp/>denorm,<sp/>PreTrainedTemplates,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm_array,<sp/>&amp;bloblength);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>norm_array;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref><sp/>IntResult;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">Match</ref>(int_class,<sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/><ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref>,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_features,<sp/>features,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;IntResult,<sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>,<sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Best<sp/>match<sp/>to<sp/>temp<sp/>config<sp/>%d<sp/>=<sp/>%4.1f%%.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,<sp/>(1.0<sp/>-<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>)<sp/>*<sp/>100.0);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigMask;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>ConfigMask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>IntResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a44e1b8840fb841e621b902f3abdd8522" kindref="member">ShowMatchDisplay</ref>();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">Match</ref>(int_class,<sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)&amp;ConfigMask,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_features,<sp/>features,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;IntResult,<sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/>|<sp/>0x19,<sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a3827f6daeeb1efd88fa0bf418c83d984" kindref="member">UpdateMatchDisplay</ref>();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1065"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1082"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a7d9076164677e7e5a863a8a5d265b957" kindref="member">Classify::AdaptToPunc</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FontinfoId,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a450c3b1b225dfa0771edd50732e5d288" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a0e552819a03cc6f169e18a58b16696a6" kindref="member">CharNormClassifier</ref>(Blob,<sp/>denorm,<sp/>PreTrainedTemplates,<sp/>Results);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a0e35029ac0c77ad18d35f08c27c99d15" kindref="member">RemoveBadMatches</ref>(Results);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Rejecting<sp/>punc<sp/>=<sp/>%s<sp/>(Alternatives<sp/>=<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId));</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>));</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>SECURE_NAMES</highlight></codeline>
<codeline lineno="1105"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Adapting<sp/>to<sp/>punc<sp/>=<sp/>%s,<sp/>thr=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId),<sp/>Threshold);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="1109"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a53629ef3f5562677ae096bbce864e5ab" kindref="member">AdaptToChar</ref>(Blob,<sp/>denorm,<sp/>ClassId,<sp/>FontinfoId,<sp/>Threshold);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Results;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AdaptToPunc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1142"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a3681915077046082b4d99532a3f3da61" kindref="member">Classify::AddNewResult</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*results,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>class_id,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>rating,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adapted,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id2)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*old_match<sp/>=<sp/><ref refid="adaptmatch_8cpp_1a3cedbdc7ad221f31895c55506410fd98" kindref="member">FindScoredUnichar</ref>(results,<sp/>class_id);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>match<sp/>=</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>class_id,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_id,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rating,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapted,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config),</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;(fontinfo_id),</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(fontinfo_id2)<sp/>};</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rating<sp/>&gt;<sp/>results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>+<sp/>matcher_bad_match_pad<sp/>||</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(old_match<sp/>&amp;&amp;<sp/>rating<sp/>&gt;=<sp/>old_match-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>))</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(class_id))</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1ab6a520c3c59a1f1a3f4d1c27bf5d3000" kindref="member">HasNonfragment</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>if<sp/>(old_match)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>old_match-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>=<sp/>rating;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>++]<sp/>=<sp/>match;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rating<sp/>&lt;<sp/>results-&gt;best_match.rating<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>fragments<sp/>do<sp/>not<sp/>affect<sp/>best<sp/>rating,<sp/>class<sp/>and<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>needed<sp/>so<sp/>that<sp/>at<sp/>least<sp/>one<sp/>non-fragmented<sp/>character<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>present<sp/>in<sp/>the<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>verify<sp/>that<sp/>this<sp/>helps<sp/>accuracy<sp/>and<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hurt<sp/>performance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(class_id))<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref><sp/>=<sp/>match;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddNewResult<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1ac7501f294525f6dd7fca4a3512ae0dcf" kindref="member">Classify::AmbigClassifier</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>*Classes,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*Ambiguities,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>CharNormArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref><sp/>IntResult;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>AmbigClassifierCalls++;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>NumFeatures<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1076d5d08686e48d39ef3eb07e711fb6" kindref="member">GetCharNormFeatures</ref>(Blob,<sp/>denorm,<sp/>Templates,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>),<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>matcher_debug_level<sp/>&gt;=<sp/>2<sp/>||<sp/>classify_debug_level<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;AM<sp/>Matches<sp/>=<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*Ambiguities<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>ClassId<sp/>=<sp/>*Ambiguities;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" kindref="member">SetCharNormMatch</ref>(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">Match</ref>(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(Templates,<sp/>ClassId),</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>,<sp/><ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref>,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumFeatures,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;IntResult,</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,<sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>,</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a7d663f1e02d6e7b2d1783fdca6154a4d" kindref="member">ExpandShapesAndApplyCorrections</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>debug,<sp/>ClassId,<sp/>bottom,<sp/>top,<sp/>0,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntResult,<sp/>Results);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>Ambiguities++;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>NumAmbigClassesTried++;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AmbigClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1257"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a9df3ff8623acd0ab30286ace7362045c" kindref="member">Classify::MasterMatcher</ref>(<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>templates,</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>num_features,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>features,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>norm_factors,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref>*<sp/>classes,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_classes,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>blob_box,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intmatcher_8h_1aad58739a624ab51ab180aac3342c6efc" kindref="member">CLASS_PRUNER_RESULTS</ref><sp/>results,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>*<sp/>final_results)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>num_classes;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>class_id<sp/>=<sp/>results[c].Class;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref>&amp;<sp/>int_result<sp/>=<sp/>results[c].IMResult;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>protos<sp/>=<sp/>classes<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>classes[class_id]-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a0dd8b01d8c5cc59c77098cdb268ce1ea" kindref="member">PermProtos</ref></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" kindref="member">AllProtosOn</ref>;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>configs<sp/>=<sp/>classes<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>classes[class_id]-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1ad19f8e0d6520b447871c5d958b367bf4" kindref="member">PermConfigs</ref></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" kindref="member">AllConfigsOn</ref>;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" kindref="member">Match</ref>(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(templates,<sp/>class_id),</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protos,<sp/>configs,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_features,<sp/>features,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;int_result,<sp/>classify_adapt_feature_threshold,<sp/>debug,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>matcher_debug_level<sp/>&gt;=<sp/>2<sp/>||<sp/>classify_debug_level<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a7d663f1e02d6e7b2d1783fdca6154a4d" kindref="member">ExpandShapesAndApplyCorrections</ref>(classes,<sp/>debug,<sp/>class_id,<sp/>bottom,<sp/>top,</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[c].Rating,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>,<sp/>norm_factors,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result,<sp/>final_results);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>configs<sp/>to<sp/>fonts,<sp/>and<sp/>if<sp/>the<sp/>result<sp/>is<sp/>not<sp/>adapted,<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shape_table_<sp/>is<sp/>present,<sp/>the<sp/>shape<sp/>is<sp/>expanded<sp/>to<sp/>include<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unichar_ids<sp/>represented,<sp/>before<sp/>applying<sp/>a<sp/>set<sp/>of<sp/>corrections<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>rating<sp/>in<sp/>int_result,<sp/>(see<sp/>ComputeCorrectedRating.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>results<sp/>are<sp/>added<sp/>to<sp/>the<sp/>final_results<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a7d663f1e02d6e7b2d1783fdca6154a4d" kindref="member">Classify::ExpandShapesAndApplyCorrections</ref>(</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref>*<sp/>classes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cp_rating,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>cn_factors,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref>&amp;<sp/>int_result,<sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>*<sp/>final_results)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>fontinfo_ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id<sp/>=<sp/>kBlankFontinfoId;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id2<sp/>=<sp/>kBlankFontinfoId;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classes<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adapted<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>fontinfo_id<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1afae8a55c28ee68de92ab1b1dd37c6905" kindref="member">GetFontinfoId</ref>(classes[class_id],<sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id2<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1afae8a55c28ee68de92ab1b1dd37c6905" kindref="member">GetFontinfoId</ref>(classes[class_id],<sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pre-trained<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>fontinfo_id<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1002c7f80352c6ceac4af82ee35e5e06" kindref="member">ClassAndConfigIDToFontOrShapeID</ref>(class_id,<sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id2<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1002c7f80352c6ceac4af82ee35e5e06" kindref="member">ClassAndConfigIDToFontOrShapeID</ref>(class_id,</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a836e323aea6abcaa3f1a758f569fe0c9" kindref="member">Config2</ref>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>fontinfo_id<sp/>is<sp/>an<sp/>index<sp/>into<sp/>the<sp/>shape_table_<sp/>and<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>unchar_id/font_id<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id<sp/>=<sp/>fontinfo_id;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shape&amp;<sp/>shape<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1a9334161c64756c591ff7d4fca22277f5" kindref="member">GetShape</ref>(fontinfo_id);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_rating<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>shape.size();<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id<sp/>=<sp/>shape[c].unichar_id;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id<sp/>=<sp/>shape[c].font_ids[0];</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape[c].font_ids.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id2<sp/>=<sp/>shape[c].font_ids[1];</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fontinfo_id2<sp/>!=<sp/>kBlankFontinfoId)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id2<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1a9334161c64756c591ff7d4fca22277f5" kindref="member">GetShape</ref>(fontinfo_id2)[0].font_ids[0];</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rating<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a7c6031863d4dafb400551cc4f151f3b5" kindref="member">ComputeCorrectedRating</ref>(debug,<sp/>unichar_id,<sp/>cp_rating,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a7b679d879f68fc70f4af3d983cea4036" kindref="member">FeatureMisses</ref>,</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom,<sp/>top,<sp/>blob_length,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn_factors);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0<sp/>||<sp/>rating<sp/>&lt;<sp/>min_rating)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_rating<sp/>=<sp/>rating;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa5f5f5b010151daf76255777aebeea18" kindref="member">get_enabled</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a3681915077046082b4d99532a3f3da61" kindref="member">AddNewResult</ref>(final_results,<sp/>unichar_id,<sp/>shape_id,<sp/>rating,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id,<sp/>fontinfo_id2);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>=<sp/>min_rating;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rating<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a7c6031863d4dafb400551cc4f151f3b5" kindref="member">ComputeCorrectedRating</ref>(debug,<sp/>class_id,<sp/>cp_rating,</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1a7b679d879f68fc70f4af3d983cea4036" kindref="member">FeatureMisses</ref>,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom,<sp/>top,<sp/>blob_length,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn_factors);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa5f5f5b010151daf76255777aebeea18" kindref="member">get_enabled</ref>(class_id))<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a3681915077046082b4d99532a3f3da61" kindref="member">AddNewResult</ref>(final_results,<sp/>class_id,<sp/>-1,<sp/>rating,</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id,<sp/>fontinfo_id2);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>int_result.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>=<sp/>rating;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applies<sp/>a<sp/>set<sp/>of<sp/>corrections<sp/>to<sp/>the<sp/>distance<sp/>im_rating,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>the<sp/>cn_correction,<sp/>miss<sp/>penalty<sp/>and<sp/>additional<sp/>penalty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>non-alnums<sp/>being<sp/>vertical<sp/>misfits.<sp/>Returns<sp/>the<sp/>corrected<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a7c6031863d4dafb400551cc4f151f3b5" kindref="member">Classify::ComputeCorrectedRating</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp_rating,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>im_rating,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature_misses,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_length,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>cn_factors)<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>class<sp/>feature<sp/>corrections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cn_corrected<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1ab943619d1ec5d510c5fd9a2ba7bbb55d" kindref="member">ApplyCNCorrection</ref>(im_rating,<sp/>blob_length,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn_factors[unichar_id]);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>miss_penalty<sp/>=<sp/>tessedit_class_miss_scale<sp/>*<sp/>feature_misses;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vertical_penalty<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Penalize<sp/>non-alnums<sp/>for<sp/>being<sp/>vertical<sp/>misfits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cn_factors[unichar_id]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>classify_misfit_junk_penalty<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af2e0d12e80aa3aa985652d73eaf1e95f" kindref="member">get_top_bottom</ref>(unichar_id,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;top=%d,<sp/>vs<sp/>[%d,<sp/>%d],<sp/>bottom=%d,<sp/>vs<sp/>[%d,<sp/>%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top,<sp/>min_top,<sp/>max_top,<sp/>bottom,<sp/>min_bottom,<sp/>max_bottom);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top<sp/>&lt;<sp/>min_top<sp/>||<sp/>top<sp/>&gt;<sp/>max_top<sp/>||</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>&lt;<sp/>min_bottom<sp/>||<sp/>bottom<sp/>&gt;<sp/>max_bottom)<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertical_penalty<sp/>=<sp/>classify_misfit_junk_penalty;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=cn_corrected<sp/>+<sp/>miss_penalty<sp/>+<sp/>vertical_penalty;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/><ref refid="adaptmatch_8cpp_1a93902888a2216c8e4a03ddc10aed7f41" kindref="member">WORST_POSSIBLE_RATING</ref>)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="adaptmatch_8cpp_1a93902888a2216c8e4a03ddc10aed7f41" kindref="member">WORST_POSSIBLE_RATING</ref>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%2.1f(CP%2.1f,<sp/>IM%2.1f<sp/>+<sp/>CN%.2f(%d)<sp/>+<sp/>MP%2.1f<sp/>+<sp/>VP%2.1f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(unichar_id),</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp_rating<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_rating<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cn_corrected<sp/>-<sp/>im_rating)<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn_factors[unichar_id],</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miss_penalty<sp/>*<sp/>100.0,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical_penalty<sp/>*<sp/>100.0);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*<ref refid="classtesseract_1_1_classify_1ab7022031939236cac2fe6b661e6f657b" kindref="member">Classify::BaselineClassifier</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumClasses;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>CharNormArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>BaselineClassifierCalls++;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>NumFeatures<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a4bf0e47e0ae00a0cec215a887cef8c65" kindref="member">GetBaselineFeatures</ref>(</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Blob,<sp/>denorm,<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>IntFeatures,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>));</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>NumClasses<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1af60b52006bbea0cc1727d543c3fcd1ad" kindref="member">PruneClasses</ref>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>NumFeatures,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharNormArray,<sp/>BaselineCutoffs,<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>NumBaselineClassesTried<sp/>+=<sp/>NumClasses;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matcher_debug_level<sp/>&gt;=<sp/>2<sp/>||<sp/>classify_debug_level<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;BL<sp/>Matches<sp/>=<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1a30a627213fe38d7ae508cf6eaa946b41" kindref="member">SetBaseLineMatch</ref>();</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a9df3ff8623acd0ab30286ace7362045c" kindref="member">MasterMatcher</ref>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>NumFeatures,<sp/>IntFeatures,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>,<sp/>matcher_debug_flags,<sp/>NumClasses,</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>(),<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>,<sp/>Results);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>ClassId<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClassId<sp/>==<sp/><ref refid="matchdefs_8h_1a6ce548e51895ce0226ee145753a9c815" kindref="member">NO_CLASS</ref>)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>bug<sp/>-<sp/>maybe<sp/>should<sp/>return<sp/>&quot;&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId]-&gt;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Config[Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa8ff624b603b87dd4cc41304e1e72b05" kindref="member">config</ref>].Perm-&gt;Ambigs;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BaselineClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1487"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a0e552819a03cc6f169e18a58b16696a6" kindref="member">Classify::CharNormClassifier</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumClasses;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>CharNormClassifierCalls++;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>CharNormArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pruner_classes<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreTrainedTemplates-&gt;NumClasses);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>PrunerNormArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[num_pruner_classes];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>NumFeatures<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1076d5d08686e48d39ef3eb07e711fb6" kindref="member">GetCharNormFeatures</ref>(Blob,<sp/>denorm,<sp/>Templates,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrunerNormArray,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>),<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumFeatures<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>PrunerNormArray;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>NumClasses<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1af60b52006bbea0cc1727d543c3fcd1ad" kindref="member">PruneClasses</ref>(Templates,<sp/>NumFeatures,<sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrunerNormArray,</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>&amp;shapetable_cutoffs_[0]</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>CharNormCutoffs,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tessedit_single_match<sp/>&amp;&amp;<sp/>NumClasses<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>NumClasses<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>NumCharNormClassesTried<sp/>+=<sp/>NumClasses;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" kindref="member">SetCharNormMatch</ref>(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a9df3ff8623acd0ab30286ace7362045c" kindref="member">MasterMatcher</ref>(Templates,<sp/>NumFeatures,<sp/>IntFeatures,<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>matcher_debug_flags,<sp/>NumClasses,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>(),<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>,<sp/>Results);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>CharNormArray;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>PrunerNormArray;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumFeatures;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CharNormClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>CharNormClassifier,<sp/>but<sp/>operates<sp/>on<sp/>a<sp/>TrainingSample<sp/>and<sp/>outputs<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>GenericVector<sp/>of<sp/>ShapeRating<sp/>without<sp/>conversion<sp/>to<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1aa3907b770bdeb45e652e0ab122568cf4" kindref="member">Classify::CharNormTrainingSample</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pruner_only,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample&amp;<sp/><ref refid="structsample" kindref="compound">sample</ref>,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ShapeRating&gt;</ref>*<sp/>results)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>results-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>*<sp/>adapt_results<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a450c3b1b225dfa0771edd50732e5d288" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>sample.num_features();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>num_features;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref><sp/>feature<sp/>=<sp/>sample.features()[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>];</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>fbox(feature.<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref>,<sp/>feature.<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref>,<sp/>feature.<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref>,<sp/>feature.<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_box<sp/>+=<sp/>fbox;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>char_norm_array<sp/>from<sp/>the<sp/>saved<sp/>cn_feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE</ref><sp/>norm_feature<sp/>=<sp/><ref refid="ocrfeatures_8cpp_1a32a08c42617c8dd6a156c1c8d7fb2cbb" kindref="member">NewFeature</ref>(&amp;<ref refid="featdefs_8cpp_1aeaae0c3ba332fe6addd19ed202a3ecb7" kindref="member">CharNormDesc</ref>);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>norm_feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a9309b18966f93d05a857e8ee0f81c557" kindref="member">CharNormY</ref>]<sp/>=<sp/>sample.cn_feature(<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a9309b18966f93d05a857e8ee0f81c557" kindref="member">CharNormY</ref>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>norm_feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506af859d8f455da531fb41201c80187dccf" kindref="member">CharNormLength</ref>]<sp/>=<sp/>sample.cn_feature(<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506af859d8f455da531fb41201c80187dccf" kindref="member">CharNormLength</ref>);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>norm_feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a5a6745d4958b44c8c3481742021428f9" kindref="member">CharNormRx</ref>]<sp/>=<sp/>sample.cn_feature(<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a5a6745d4958b44c8c3481742021428f9" kindref="member">CharNormRx</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>norm_feature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506ac21a54078a6ec6e1470a21d65feb58d5" kindref="member">CharNormRy</ref>]<sp/>=<sp/>sample.cn_feature(<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506ac21a54078a6ec6e1470a21d65feb58d5" kindref="member">CharNormRy</ref>);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>char_norm_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pruner_classes<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreTrainedTemplates-&gt;NumClasses);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>pruner_norm_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[num_pruner_classes];</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref><sp/>=</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="normfeat_8cpp_1a42d064127b80043f5af5a4e77305d412" kindref="member">ActualOutlineLength</ref>(norm_feature)<sp/>*<sp/>20<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a8f49de2f8da7b066bd8ece0641edcca1" kindref="member">ComputeCharNormArrays</ref>(norm_feature,<sp/>PreTrainedTemplates,<sp/>char_norm_array,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_norm_array);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_classes<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1af60b52006bbea0cc1727d543c3fcd1ad" kindref="member">PruneClasses</ref>(PreTrainedTemplates,<sp/>num_features,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample.features(),</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_norm_array,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>&amp;shapetable_cutoffs_[0]</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>CharNormCutoffs,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>pruner_norm_array;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pruner_only)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>pruner<sp/>results<sp/>to<sp/>output<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_classes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>[i].Class;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id<sp/>=<sp/>class_id;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>shapes<sp/>in<sp/>a<sp/>class<sp/>have<sp/>the<sp/>same<sp/>combination<sp/>of<sp/>unichars,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>doesn&apos;t<sp/>really<sp/>matter<sp/>which<sp/>config<sp/>we<sp/>give<sp/>it,<sp/>as<sp/>we<sp/>aren&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>get<sp/>the<sp/>font<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_id<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a1002c7f80352c6ceac4af82ee35e5e06" kindref="member">ClassAndConfigIDToFontOrShapeID</ref>(class_id,<sp/>0);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShapeRating(shape_id,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>-<sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>[i].Rating));</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" kindref="member">im_</ref>.<ref refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" kindref="member">SetCharNormMatch</ref>(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a9df3ff8623acd0ab30286ace7362045c" kindref="member">MasterMatcher</ref>(PreTrainedTemplates,<sp/>num_features,<sp/>sample.features(),</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_norm_array,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>matcher_debug_flags,<sp/>num_classes,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box,<sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a66adcc458cd1f9b662e9e2ef5b88b74f" kindref="member">CPResults</ref>,<sp/>adapt_results);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>master<sp/>matcher<sp/>results<sp/>to<sp/>output<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>next<sp/>=<sp/>adapt_results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(ShapeRating(next.<ref refid="struct_scored_class_1ab3db24ffe2690f52d86053ba1f631520" kindref="member">shape_id</ref>,<sp/>1.0f<sp/>-<sp/>next.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>));</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>results-&gt;<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>(&amp;<ref refid="structtesseract_1_1_shape_rating_1a2e3c1c3af03514c4dc2faef9b99c1eb1" kindref="member">ShapeRating::SortDescendingRating</ref>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>char_norm_array;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>adapt_results;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_features;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CharNormTrainingSample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1615"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a8a68035cfc5ee866f2d39360072ab77c" kindref="member">Classify::ClassifyAsNoise</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Rating;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>Rating<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref><sp/>/<sp/>matcher_avg_noise_size;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>Rating<sp/>*=<sp/>Rating;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>Rating<sp/>/=<sp/>1.0<sp/>+<sp/>Rating;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_classify_1a3681915077046082b4d99532a3f3da61" kindref="member">AddNewResult</ref>(Results,<sp/><ref refid="matchdefs_8h_1a6ce548e51895ce0226ee145753a9c815" kindref="member">NO_CLASS</ref>,<sp/>-1,<sp/>Rating,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1,</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBlankFontinfoId,<sp/>kBlankFontinfoId);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ClassifyAsNoise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>scored<sp/>unichar<sp/>in<sp/>results,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*<ref refid="adaptmatch_8cpp_1a3cedbdc7ad221f31895c55506410fd98" kindref="member">FindScoredUnichar</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*results,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref><sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i];</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>current<sp/>rating<sp/>for<sp/>a<sp/>unichar<sp/>id<sp/>if<sp/>we<sp/>have<sp/>rated<sp/>it,<sp/>defaulting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>WORST_POSSIBLE_RATING.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/><ref refid="adaptmatch_8cpp_1ab41bdc1f072e458bb14d644c1106b56a" kindref="member">ScoredUnichar</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*results,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>poor_result<sp/>=</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{id,<sp/>-1,<sp/><ref refid="adaptmatch_8cpp_1a93902888a2216c8e4a03ddc10aed7f41" kindref="member">WORST_POSSIBLE_RATING</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBlankFontinfoId,<sp/>kBlankFontinfoId};</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*entry<sp/>=<sp/><ref refid="adaptmatch_8cpp_1a3cedbdc7ad221f31895c55506410fd98" kindref="member">FindScoredUnichar</ref>(results,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(entry<sp/>==<sp/>NULL)<sp/>?<sp/>poor_result<sp/>:<sp/>*entry;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compare<sp/>character<sp/>classes<sp/>by<sp/>rating<sp/>as<sp/>for<sp/>qsort(3).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>repeatability,<sp/>use<sp/>character<sp/>class<sp/>id<sp/>as<sp/>a<sp/>tie-breaker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1a82aaab0580160422d3587ca9cc533e60" kindref="member">CompareByRating</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ScoredClass<sp/>*class1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>ScoredClass<sp/>*class2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*class1<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*)arg1;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*class2<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>*)arg2;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class1-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&lt;<sp/>class2-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class1-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&gt;<sp/>class2-&gt;<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class1-&gt;<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref><sp/>&lt;<sp/>class2-&gt;<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class1-&gt;<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref><sp/>&gt;<sp/>class2-&gt;<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1af1f1f794092ce44dff7c242822b6cf68" kindref="member">Classify::ConvertMatchesToChoices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*Choices)<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>assert(Choices<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Rating;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Certainty;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>temp_it;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains_nonfrag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>temp_it.set_to_list(Choices);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choices_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>no<sp/>shape_table_<sp/>maintain<sp/>the<sp/>previous<sp/>MAX_MATCHES<sp/>as<sp/>the<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>returned<sp/>results,<sp/>but<sp/>with<sp/>a<sp/>shape_table_<sp/>we<sp/>want<sp/>to<sp/>have<sp/>room</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>at<sp/>least<sp/>the<sp/>biggest<sp/>shape<sp/>(which<sp/>might<sp/>contain<sp/>hundreds<sp/>of<sp/>Indic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>grapheme<sp/>fragments)<sp/>and<sp/>more,<sp/>so<sp/>use<sp/>double<sp/>the<sp/>size<sp/>of<sp/>the<sp/>biggest<sp/>shape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>that<sp/>is<sp/>more<sp/>than<sp/>the<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_matches<sp/>=<sp/><ref refid="adaptmatch_8cpp_1ae731492acc3b2e54043c2dfbf1338be6" kindref="member">MAX_MATCHES</ref>;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>max_matches<sp/>=<sp/>shape_table_-&gt;MaxNumUnichars()<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_matches<sp/>&lt;<sp/><ref refid="adaptmatch_8cpp_1ae731492acc3b2e54043c2dfbf1338be6" kindref="member">MAX_MATCHES</ref>)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_matches<sp/>=<sp/><ref refid="adaptmatch_8cpp_1ae731492acc3b2e54043c2dfbf1338be6" kindref="member">MAX_MATCHES</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>next<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i];</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id<sp/>=<sp/>next.<ref refid="struct_scored_class_1aef50f14f803115ac96f57bf3d7e519f9" kindref="member">fontinfo_id</ref>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id2<sp/>=<sp/>next.<ref refid="struct_scored_class_1ac30be99b1e1ac98855c624896f9f0389" kindref="member">fontinfo_id2</ref>;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adapted<sp/>=<sp/>next.<ref refid="struct_scored_class_1a090f44ac2eedadd72c93fb628dfaf167" kindref="member">adapted</ref>;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>current_is_frag<sp/>=<sp/>(unicharset.get_fragment(next.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_it.length()+1<sp/>==<sp/>max_matches<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!contains_nonfrag<sp/>&amp;&amp;<sp/>current_is_frag)<sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>a<sp/>non-fragmented<sp/>character<sp/>to<sp/>fill<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>spot<sp/>in<sp/>Choices<sp/>if<sp/>only<sp/>fragments<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlobLength<sp/>can<sp/>never<sp/>be<sp/>legally<sp/>0,<sp/>this<sp/>means<sp/>recognition<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>must<sp/>return<sp/>a<sp/>classification<sp/>result<sp/>because<sp/>some<sp/>invoking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions<sp/>(chopper/permuter)<sp/>do<sp/>not<sp/>anticipate<sp/>a<sp/>null<sp/>blob<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>need<sp/>to<sp/>assign<sp/>a<sp/>poor,<sp/>but<sp/>not<sp/>infinitely<sp/>bad<sp/>score.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Certainty<sp/>=<sp/>-20;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rating<sp/>=<sp/>100;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>-certainty<sp/>*<sp/>real_blob_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rating<sp/>=<sp/>Certainty<sp/>=<sp/>next.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rating<sp/>*=<sp/>rating_scale<sp/>*<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a96c25b6f847b7f8ebc3817ee73f73236" kindref="member">BlobLength</ref>;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Certainty<sp/>*=<sp/>-(getDict().certainty_scale);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>min_xheight,<sp/>max_xheight;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm.<ref refid="class_d_e_n_o_r_m_1a5b886acd9e1220ff409268e007adffe1" kindref="member">XHeightRange</ref>(next.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>,<sp/>unicharset,<sp/>box,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_xheight,<sp/>&amp;max_xheight);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_it.add_to_end(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>(next.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>,<sp/>Rating,<sp/>Certainty,</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id,<sp/>fontinfo_id2,</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.get_script(next.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>),</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_xheight,<sp/>max_xheight,<sp/>adapted));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>contains_nonfrag<sp/>|=<sp/>!current_is_frag;<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>contains_nonfrag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>choices_length++;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choices_length<sp/>&gt;=<sp/>max_matches)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>=<sp/>choices_length;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>ConvertMatchesToChoices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1737"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1748"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1af9a9def4a6b3bb1a2e36bceff2976c2c" kindref="member">Classify::DebugAdaptiveClassifier</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref><sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i];</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Prompt<sp/>=</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Left-click<sp/>in<sp/>IntegerMatch<sp/>Window<sp/>to<sp/>continue<sp/>or<sp/>right<sp/>click<sp/>to<sp/>debug...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>unichar_id<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1ab3db24ffe2690f52d86053ba1f631520" kindref="member">shape_id</ref>;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adaptive_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pretrained_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>debug_mode;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pretrained_on)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Adaptive<sp/>Templates<sp/>Only&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adaptive_on)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PreTrained<sp/>Templates<sp/>Only&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>Templates&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a8fd5d70d9cc150151e6cf7071f5c0614" kindref="member">ShowMatchDisplay</ref>();</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Debugging<sp/>class<sp/>%d<sp/>=<sp/>%s<sp/>in<sp/>mode<sp/>%s<sp/>...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>unicharset.id_to_unichar(unichar_id),<sp/>debug_mode);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_id<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>shape_table_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>shape<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>shape_table_-&gt;DebugStr(shape_id).string());</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>ShowBestMatchFor(Blob,<sp/>denorm,<sp/>unichar_id,<sp/>shape_id,<sp/>adaptive_on,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pretrained_on,<sp/>Results);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a3827f6daeeb1efd88fa0bf418c83d984" kindref="member">UpdateMatchDisplay</ref>();</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((unichar_id<sp/>=<sp/>GetClassToDebug(Prompt,<sp/>&amp;adaptive_on,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pretrained_on,<sp/>&amp;shape_id))<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DebugAdaptiveClassifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1783"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1808"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a8575af5f97d4037d4fdd2e21b477dd38" kindref="member">Classify::DoAdaptiveMatch</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*Ambiguities;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>AdaptiveMatcherCalls++;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><ref refid="adaptmatch_8cpp_1aca8523f0becfd3cca333fd48d103735d" kindref="member">InitIntFX</ref>();</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AdaptedTemplates-&gt;NumPermClasses<sp/>&lt;<sp/>matcher_permanent_classes_min<sp/>||</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tess_cn_matching)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>CharNormClassifier(Blob,<sp/>denorm,<sp/>PreTrainedTemplates,<sp/>Results);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>Ambiguities<sp/>=<sp/>BaselineClassifier(Blob,<sp/>denorm,<sp/>AdaptedTemplates,<sp/>Results);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptmatch_8cpp_1a212c1ba628a1cd30b51a902c35fb23eb" kindref="member">MarginalMatch</ref><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!tess_bn_matching)<sp/>||</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CharNormClassifier(Blob,<sp/>denorm,<sp/>PreTrainedTemplates,<sp/>Results);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ambiguities<sp/>&amp;&amp;<sp/>*Ambiguities<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!tess_bn_matching)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AmbigClassifier(Blob,<sp/>denorm,</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreTrainedTemplates,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptedTemplates-&gt;Class,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ambiguities,</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>the<sp/>blob<sp/>to<sp/>be<sp/>classified<sp/>as<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>results<sp/>contain<sp/>only<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>verify<sp/>that<sp/>this<sp/>is<sp/>better<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>adding<sp/>a<sp/>NULL<sp/>classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1ab6a520c3c59a1f1a3f4d1c27bf5d3000" kindref="member">HasNonfragment</ref><sp/>||<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>ClassifyAsNoise(Results);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DoAdaptiveMatch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1869"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a57d34f380d093913f3c3e74f7a7a9840" kindref="member">Classify::GetAdaptThresholds</ref>(<ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref><sp/>*<sp/>Word,</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>&amp;<sp/>BestChoice,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>&amp;<sp/>BestRawChoice,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Thresholds[])<sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>getDict().FindClassifierErrors(matcher_perfect_threshold,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_good_threshold,</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_rating_margin,</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thresholds);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetAdaptThresholds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*<ref refid="classtesseract_1_1_classify_1af4c186f6ec1019d17912d2cf36326f1f" kindref="member">Classify::GetAmbiguities</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>CorrectClass)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref>();</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*Ambiguities;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a450c3b1b225dfa0771edd50732e5d288" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>CharNormClassifier(Blob,<sp/>denorm,<sp/>PreTrainedTemplates,<sp/>Results);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>RemoveBadMatches(Results);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/>qsort((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>,<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>,</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_scored_class" kindref="compound">ScoredClass</ref>),<sp/><ref refid="adaptmatch_8cpp_1a82aaab0580160422d3587ca9cc533e60" kindref="member">CompareByRating</ref>);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>class<sp/>id&apos;s<sp/>into<sp/>an<sp/>string<sp/>of<sp/>ambiguities<sp/>-<sp/>don&apos;t<sp/>copy<sp/>if</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>correct<sp/>class<sp/>is<sp/>the<sp/>only<sp/>class<sp/>id<sp/>matched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>Ambiguities<sp/>=<sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref>)<sp/>*</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>&gt;<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[0].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref><sp/>!=<sp/>CorrectClass))<sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ambiguities[i]<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>Ambiguities[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>Ambiguities[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Results;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Ambiguities;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetAmbiguities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1957"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a4bf0e47e0ae00a0cec215a887cef8c65" kindref="member">Classify::GetBaselineFeatures</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures,</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>*BlobLength)<sp/>{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE</ref><sp/>Src,<sp/>Dest,<sp/>End;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FeaturesHaveBeenExtracted)<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>FeaturesOK<sp/>=<sp/><ref refid="intfx_8cpp_1a508a06732c67c00efc9db362bd8b970e" kindref="member">ExtractIntFeat</ref>(Blob,<sp/>denorm,<sp/>BaselineFeatures,</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharNormFeatures,<sp/>&amp;FXInfo,<sp/>NULL);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>FeaturesHaveBeenExtracted<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FeaturesOK)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>*BlobLength<sp/>=<sp/>FXInfo.NumBL;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Src<sp/>=<sp/>BaselineFeatures,<sp/>End<sp/>=<sp/>Src<sp/>+<sp/>FXInfo.NumBL,<sp/>Dest<sp/>=<sp/>IntFeatures;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Src<sp/>&lt;<sp/>End;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Dest++<sp/>=<sp/>*Src++);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/>ClearCharNormArray(CharNormArray);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/>*BlobLength<sp/>=<sp/>FXInfo.NumBL;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FXInfo.NumBL;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetBaselineFeatures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a62ffff7932680b25784bfca5079ce347" kindref="member">Classify::ResetFeaturesHaveBeenExtracted</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/>FeaturesHaveBeenExtracted<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>blob<sp/>looks<sp/>too<sp/>dissimilar<sp/>to<sp/>any<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>present<sp/>in<sp/>the<sp/>classifier<sp/>templates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1ab72f687048a2e1eba44b8ae2cfb07fa9" kindref="member">Classify::LooksLikeGarbage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob)<sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_LIST<sp/>*ratings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST();</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>AdaptiveClassifier(blob,<sp/>denorm,<sp/>ratings,<sp/>NULL);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>ratings_it(ratings);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset<sp/>=<sp/>getDict().getUnicharset();</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_debug_character_fragments)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ratngs_8cpp_1a2de5b7d5a020bb9823091dbece4ea36e" kindref="member">print_ratings_list</ref>(</highlight><highlight class="stringliteral">&quot;======================\nLooksLikeGarbage()<sp/>got<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratings,<sp/>unicharset);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ratings_it.mark_cycle_pt();<sp/>!ratings_it.cycled_list();</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratings_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(ratings_it.data()-&gt;unichar_id())<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ratings;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ratings_it.data()-&gt;certainty()<sp/>&lt;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_character_fragments_garbage_certainty_threshold);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ratings;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>whole<sp/>characters<sp/>in<sp/>ratings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2045"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a1076d5d08686e48d39ef3eb07e711fb6" kindref="member">Classify::GetCharNormFeatures</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>IntFeatures,</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>PrunerNormArray,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>CharNormArray,</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>*BlobLength,</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>*FeatureOutlineArray)<sp/>{</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE</ref><sp/>Src,<sp/>Dest,<sp/>End;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE</ref><sp/>NormFeature;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Baseline,<sp/>Scale;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>FeatureOutlineIndex[<ref refid="baseapi_8h_1a4f7caedc4bed99355cae19efa51ade51" kindref="member">MAX_NUM_INT_FEATURES</ref>];</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FeaturesHaveBeenExtracted)<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>FeaturesOK<sp/>=<sp/><ref refid="intfx_8cpp_1a508a06732c67c00efc9db362bd8b970e" kindref="member">ExtractIntFeat</ref>(Blob,<sp/>denorm,<sp/>BaselineFeatures,</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharNormFeatures,<sp/>&amp;FXInfo,</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FeatureOutlineIndex);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>FeaturesHaveBeenExtracted<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FeaturesOK)<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>*BlobLength<sp/>=<sp/>FXInfo.NumBL;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Src<sp/>=<sp/>CharNormFeatures,<sp/>End<sp/>=<sp/>Src<sp/>+<sp/>FXInfo.NumCN,<sp/>Dest<sp/>=<sp/>IntFeatures;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Src<sp/>&lt;<sp/>End;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Dest++<sp/>=<sp/>*Src++);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><sp/>FeatureOutlineArray<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>FXInfo.NumCN;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureOutlineArray[i]<sp/>=<sp/>FeatureOutlineIndex[i];</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>NormFeature<sp/>=<sp/><ref refid="ocrfeatures_8cpp_1a32a08c42617c8dd6a156c1c8d7fb2cbb" kindref="member">NewFeature</ref>(&amp;<ref refid="featdefs_8cpp_1aeaae0c3ba332fe6addd19ed202a3ecb7" kindref="member">CharNormDesc</ref>);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>Baseline<sp/>=<sp/><ref refid="baseline_8h_1a011c4f289bef07581a2aed5570f1918c" kindref="member">BASELINE_OFFSET</ref>;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>Scale<sp/>=<sp/><ref refid="mfoutline_8h_1a91645597f620e8307a65e8ab35d963b8" kindref="member">MF_SCALE_FACTOR</ref>;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/>NormFeature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a9309b18966f93d05a857e8ee0f81c557" kindref="member">CharNormY</ref>]<sp/>=<sp/>(FXInfo.Ymean<sp/>-<sp/>Baseline)<sp/>*<sp/>Scale;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>NormFeature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506af859d8f455da531fb41201c80187dccf" kindref="member">CharNormLength</ref>]<sp/>=</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>FXInfo.Length<sp/>*<sp/>Scale<sp/>/<sp/><ref refid="normfeat_8h_1a528f356e3cb082911b33645da06ccf04" kindref="member">LENGTH_COMPRESSION</ref>;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/>NormFeature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506a5a6745d4958b44c8c3481742021428f9" kindref="member">CharNormRx</ref>]<sp/>=<sp/>FXInfo.Rx<sp/>*<sp/>Scale;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/>NormFeature-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="normfeat_8h_1ab5ff0a2380362fa488e17c0c1b858506ac21a54078a6ec6e1470a21d65feb58d5" kindref="member">CharNormRy</ref>]<sp/>=<sp/>FXInfo.Ry<sp/>*<sp/>Scale;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>ComputeCharNormArrays(NormFeature,<sp/>Templates,<sp/>CharNormArray,<sp/>PrunerNormArray);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>*BlobLength<sp/>=<sp/>FXInfo.NumBL;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FXInfo.NumCN);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetCharNormFeatures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>char_norm_array<sp/>for<sp/>the<sp/>unicharset<sp/>and,<sp/>if<sp/>not<sp/>NULL,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pruner_array<sp/>as<sp/>appropriate<sp/>according<sp/>to<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>shape_table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a8f49de2f8da7b066bd8ece0641edcca1" kindref="member">Classify::ComputeCharNormArrays</ref>(<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE_STRUCT</ref>*<sp/>norm_feature,</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>templates,</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>char_norm_array,</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>*<sp/>pruner_array)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>ComputeIntCharNormArray(*norm_feature,<sp/>char_norm_array);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pruner_array<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ComputeIntCharNormArray(*norm_feature,<sp/>pruner_array);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(pruner_array,<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>,</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pruner_array[0]));</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>in<sp/>the<sp/>pruner<sp/>norm<sp/>array<sp/>is<sp/>the<sp/>MIN<sp/>of<sp/>all<sp/>the<sp/>entries<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>corresponding<sp/>unichars<sp/>in<sp/>the<sp/>CharNormArray.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_set_id<sp/>=<sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a2083307ebe623a6617ff38291a2f3614" kindref="member">Class</ref>[id]-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref>;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FontSet<sp/>&amp;fs<sp/>=<sp/>fontset_table_.get(font_set_id);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>0;<sp/>config<sp/>&lt;<sp/>fs.size;<sp/>++config)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shape&amp;<sp/>shape<sp/>=<sp/>shape_table_-&gt;GetShape(fs.configs[config]);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>shape.size();<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_norm_array[shape[c].unichar_id]<sp/>&lt;<sp/>pruner_array[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pruner_array[id]<sp/>=<sp/>char_norm_array[shape[c].unichar_id];</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><ref refid="ocrfeatures_8cpp_1acaf54a6410150ec74f66ec6621f1352f" kindref="member">FreeFeature</ref>(norm_feature);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2136"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a59900939784eac1e2e6ebfec1f82bb58" kindref="member">Classify::MakeNewTemporaryConfig</ref>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FontinfoId,</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumFeatures,</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>Features,</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>FloatFeatures)<sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>OldProtos[<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>];</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>BadFeatures[<ref refid="baseapi_8h_1a4f7caedc4bed99355cae19efa51ade51" kindref="member">MAX_NUM_INT_FEATURES</ref>];</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumOldProtos;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBadFeatures;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxProtoId,<sp/>OldMaxProtoId;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BlobLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaskSize;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigId;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level<sp/>=<sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_level<sp/>=</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1aa2ca7d346731ee98e1ef445c0313d0db" kindref="member">PRINT_MATCH_SUMMARY</ref><sp/>|<sp/><ref refid="intproto_8h_1af5131c6984c3afc47e8344ae4a440ccd" kindref="member">PRINT_FEATURE_MATCHES</ref><sp/>|<sp/><ref refid="intproto_8h_1aed2eae56505e79fb4ad49057437bd377" kindref="member">PRINT_PROTO_MATCHES</ref>;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>IClass<sp/>=<sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>,<sp/>ClassId);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId];</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>&gt;=<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>++NumAdaptationsFailed;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>make<sp/>new<sp/>temporary<sp/>config:<sp/>maximum<sp/>number<sp/>exceeded.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>OldMaxProtoId<sp/>=<sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>NumOldProtos<sp/>=<sp/>im_.FindGoodProtos(IClass,<sp/>AllProtosOn,<sp/>AllConfigsOff,</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobLength,<sp/>NumFeatures,<sp/>Features,</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OldProtos,<sp/>classify_adapt_proto_threshold,</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_level);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>MaskSize<sp/>=<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref>(TempProtoMask,<sp/>MaskSize);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumOldProtos;<sp/>i++)</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref>(TempProtoMask,<sp/>OldProtos[i]);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/>NumBadFeatures<sp/>=<sp/>im_.FindBadFeatures(IClass,<sp/>TempProtoMask,<sp/>AllConfigsOn,</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobLength,<sp/>NumFeatures,<sp/>Features,</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BadFeatures,</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_level);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/>MaxProtoId<sp/>=<sp/>MakeNewTempProtos(FloatFeatures,<sp/>NumBadFeatures,<sp/>BadFeatures,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IClass,<sp/>Class,<sp/>TempProtoMask);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MaxProtoId<sp/>==<sp/><ref refid="matchdefs_8h_1a4d2ae3978d57e3b05f984a0fedc51812" kindref="member">NO_PROTO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>++NumAdaptationsFailed;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>make<sp/>new<sp/>temp<sp/>protos:<sp/>maximum<sp/>number<sp/>exceeded.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>ConfigId<sp/>=<sp/><ref refid="intproto_8cpp_1a569488473772d42004fec43399e6d5a9" kindref="member">AddIntConfig</ref>(IClass);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a57b07752bea2110e2503cf78747228c5" kindref="member">ConvertConfig</ref>(TempProtoMask,<sp/>ConfigId,<sp/>IClass);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>Config<sp/>=<sp/><ref refid="adaptive_8cpp_1af29bddcf8cc7f50548382c9594716559" kindref="member">NewTempConfig</ref>(MaxProtoId,<sp/>FontinfoId);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>ConfigId)<sp/>=<sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1ae535f23da300bdf6ea284fc5e85ca14a" kindref="member">copy_all_bits</ref>(TempProtoMask,<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1ab21bd28ad8f7448dcdc327ac13dbe553" kindref="member">ProtoVectorSize</ref>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Making<sp/>new<sp/>temp<sp/>config<sp/>%d<sp/>fontinfo<sp/>id<sp/>%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>using<sp/>%d<sp/>old<sp/>and<sp/>%d<sp/>new<sp/>protos.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigId,<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a76b02dedaede2e6e34653155be6f8c7b" kindref="member">FontinfoId</ref>,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOldProtos,<sp/>MaxProtoId<sp/>-<sp/>OldMaxProtoId);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConfigId;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MakeNewTemporaryConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/><ref refid="classtesseract_1_1_classify_1adc0facdf672d23f65612b56b4a5f523a" kindref="member">Classify::MakeNewTempProtos</ref>(<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>Features,</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBadFeat,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>BadFeat[],</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass,</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class,</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>TempProtoMask)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>*ProtoStart;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>*ProtoEnd;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref><sp/>*LastBad;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref><sp/>TempProto;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE</ref><sp/>F1,<sp/>F2;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X1,<sp/>X2,<sp/>Y1,<sp/>Y2;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>A1,<sp/>A2,<sp/>AngleDelta;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>SegmentLength;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>Pid;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoStart<sp/>=<sp/>BadFeat,<sp/>LastBad<sp/>=<sp/>ProtoStart<sp/>+<sp/>NumBadFeat;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoStart<sp/>&lt;<sp/>LastBad;<sp/>ProtoStart<sp/>=<sp/>ProtoEnd)<sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>F1<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[*ProtoStart];</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>X1<sp/>=<sp/>F1-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aacaf28d56154a908256d7b3beb62977e2fc" kindref="member">PicoFeatX</ref>];</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>Y1<sp/>=<sp/>F1-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca43884de5e2e87be26f9642b50135f98a" kindref="member">PicoFeatY</ref>];</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>A1<sp/>=<sp/>F1-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca9895f2baa648985ab8ee5586c1563511" kindref="member">PicoFeatDir</ref>];</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoEnd<sp/>=<sp/>ProtoStart<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SegmentLength<sp/>=<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref>();</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoEnd<sp/>&lt;<sp/>LastBad;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoEnd++,<sp/>SegmentLength<sp/>+=<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>F2<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[*ProtoEnd];</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>X2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aacaf28d56154a908256d7b3beb62977e2fc" kindref="member">PicoFeatX</ref>];</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Y2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca43884de5e2e87be26f9642b50135f98a" kindref="member">PicoFeatY</ref>];</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca9895f2baa648985ab8ee5586c1563511" kindref="member">PicoFeatDir</ref>];</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AngleDelta<sp/>=<sp/>fabs(A1<sp/>-<sp/>A2);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AngleDelta<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AngleDelta<sp/>=<sp/>1.0<sp/>-<sp/>AngleDelta;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AngleDelta<sp/>&gt;<sp/>matcher_clustering_max_angle_delta<sp/>||</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(X1<sp/>-<sp/>X2)<sp/>&gt;<sp/>SegmentLength<sp/>||</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(Y1<sp/>-<sp/>Y2)<sp/>&gt;<sp/>SegmentLength)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>F2<sp/>=<sp/>Features-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[*(ProtoEnd<sp/>-<sp/>1)];</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>X2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aacaf28d56154a908256d7b3beb62977e2fc" kindref="member">PicoFeatX</ref>];</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>Y2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca43884de5e2e87be26f9642b50135f98a" kindref="member">PicoFeatY</ref>];</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>A2<sp/>=<sp/>F2-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[<ref refid="picofeat_8h_1ac00e1c5d2ac3096e0928e2186aee1aaca9895f2baa648985ab8ee5586c1563511" kindref="member">PicoFeatDir</ref>];</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>Pid<sp/>=<sp/><ref refid="intproto_8cpp_1a4c27266652a51cf8aaa866d299f57301" kindref="member">AddIntProto</ref>(IClass);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Pid<sp/>==<sp/><ref refid="matchdefs_8h_1a4d2ae3978d57e3b05f984a0fedc51812" kindref="member">NO_PROTO</ref>)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="matchdefs_8h_1a4d2ae3978d57e3b05f984a0fedc51812" kindref="member">NO_PROTO</ref>);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>TempProto<sp/>=<sp/><ref refid="adaptive_8cpp_1a5dec565ee3ad1656d02860db322e4448" kindref="member">NewTempProto</ref>();</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>&amp;(TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1acf720eb61d4a91e84d949a6f772ea7c5" kindref="member">Proto</ref>);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>proto<sp/>params<sp/>-<sp/>NOTE<sp/>that<sp/>Y_DIM_OFFSET<sp/>must<sp/>be<sp/>used<sp/>because</highlight></codeline>
<codeline lineno="2289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertProto<sp/>assumes<sp/>that<sp/>the<sp/>Y<sp/>dimension<sp/>varies<sp/>from<sp/>-0.5<sp/>to<sp/>0.5</highlight></codeline>
<codeline lineno="2290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instead<sp/>of<sp/>the<sp/>-0.25<sp/>to<sp/>0.75<sp/>used<sp/>in<sp/>baseline<sp/>normalization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>=<sp/>SegmentLength;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>=<sp/>A1;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref><sp/>=<sp/>(X1<sp/>+<sp/>X2)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>=<sp/>(Y1<sp/>+<sp/>Y2)<sp/>/<sp/>2.0<sp/>-<sp/><ref refid="adaptmatch_8cpp_1ac5fe456fd5a30097c95a104b29c45cc3" kindref="member">Y_DIM_OFFSET</ref>;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1ac0d58978bbcf0c732ae94fb554bccd3b" kindref="member">FillABC</ref>(Proto);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1a93992200ebfddd13e25d0e9122af9b5b" kindref="member">ProtoId</ref><sp/>=<sp/>Pid;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref>(TempProtoMask,<sp/>Pid);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>ConvertProto(Proto,<sp/>Pid,<sp/>IClass);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1aec09adc2735bb4caaf226df7124e4ed7" kindref="member">AddProtoToProtoPruner</ref>(Proto,<sp/>Pid,<sp/>IClass,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_learning_debug_level<sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>,<sp/>TempProto);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MakeNewTempProtos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2323"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1aefb0cfe284dd67601798f7ae510b787f" kindref="member">Classify::MakePermanent</ref>(<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">ADAPT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigId,</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob)<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*Ambigs;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___k_e_y" kindref="compound">PROTO_KEY</ref><sp/>ProtoKey;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ClassId];</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>Config<sp/>=<sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>ConfigId);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8h_1a43dd293941046156e425af5080c56228" kindref="member">MakeConfigPermanent</ref>(Class,<sp/>ConfigId);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac4e39261d76ebdd092eeb754fe1e15c3" kindref="member">NumPermClasses</ref>++;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref>++;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>permanent<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>Ambigs<sp/>=<sp/>GetAmbiguities(Blob,<sp/>denorm,<sp/>ClassId);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG</ref><sp/>Perm<sp/>=<sp/>(<ref refid="adaptive_8h_1a461ee34b392d9264f8ff553d28029c52" kindref="member">PERM_CONFIG</ref>)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">PERM_CONFIG_STRUCT</ref>),</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PERM_CONFIG_STRUCT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/>Perm-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1ad64b24b19468c44594a84a71f5515bf8" kindref="member">Ambigs</ref><sp/>=<sp/>Ambigs;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>Perm-&gt;<ref refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t_1a81ce1dd96fbaed7c30c47bc6a1d19d92" kindref="member">FontinfoId</ref><sp/>=<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a76b02dedaede2e6e34653155be6f8c7b" kindref="member">FontinfoId</ref>;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>memory<sp/>associated<sp/>with<sp/>temporary<sp/>config<sp/>(since<sp/>ADAPTED_CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>union<sp/>we<sp/>need<sp/>to<sp/>clean<sp/>up<sp/>before<sp/>we<sp/>record<sp/>permanent<sp/>config).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>ProtoKey.<ref refid="struct_p_r_o_t_o___k_e_y_1a88e8ec3116b1ca5e8c0a57a2236f83ed" kindref="member">Templates</ref><sp/>=<sp/>Templates;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/>ProtoKey.<ref refid="struct_p_r_o_t_o___k_e_y_1a45ade2ad8d07fe98968e6a6795680f0a" kindref="member">ClassId</ref><sp/>=<sp/>ClassId;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/>ProtoKey.<ref refid="struct_p_r_o_t_o___k_e_y_1ab4a673ae9bd6272302ea460d336bc80e" kindref="member">ConfigId</ref><sp/>=<sp/>ConfigId;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a1fa3ecce52a0563f595b8f1428cc1211" kindref="member">delete_d</ref>(Class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a879b5ee2f46335fe784fd4c266f8a37c" kindref="member">TempProtos</ref>,<sp/>&amp;ProtoKey,<sp/><ref refid="adaptmatch_8cpp_1aeb798d8e9e1be9d25261b8a604910d0d" kindref="member">MakeTempProtoPerm</ref>);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8cpp_1a69bbd5a22930a7f4cc2d85f49b468b67" kindref="member">FreeTempConfig</ref>(Config);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>permanent<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8h_1aea4d5dd0059c222f111f9537af74a325" kindref="member">PermConfigFor</ref>(Class,<sp/>ConfigId)<sp/>=<sp/>Perm;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Making<sp/>config<sp/>%d<sp/>for<sp/>%s<sp/>(ClassId<sp/>%d)<sp/>permanent:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>fontinfo<sp/>id<sp/>%d,<sp/>ambiguities<sp/>&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConfigId,<sp/>getDict().getUnicharset().debug_str(ClassId).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassId,<sp/><ref refid="adaptive_8h_1aea4d5dd0059c222f111f9537af74a325" kindref="member">PermConfigFor</ref>(Class,<sp/>ConfigId)-&gt;FontinfoId);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>*AmbigsPointer<sp/>=<sp/>Ambigs;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*AmbigsPointer<sp/>&gt;=<sp/>0;<sp/>++AmbigsPointer)</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(*AmbigsPointer));</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;&apos;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MakePermanent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2387"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="adaptmatch_8cpp_1aeb798d8e9e1be9d25261b8a604910d0d" kindref="member">MakeTempProtoPerm</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item2)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">TEMP_PROTO</ref><sp/>TempProto;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___k_e_y" kindref="compound">PROTO_KEY</ref><sp/>*ProtoKey;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/>TempProto<sp/>=<sp/>(<ref refid="adaptive_8h_1a03dc56d9af9a82277b248c3b58267c25" kindref="member">TEMP_PROTO</ref>)<sp/>item1;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/>ProtoKey<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o___k_e_y" kindref="compound">PROTO_KEY</ref><sp/>*)<sp/>item2;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>ProtoKey-&gt;<ref refid="struct_p_r_o_t_o___k_e_y_1a88e8ec3116b1ca5e8c0a57a2236f83ed" kindref="member">Templates</ref>-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a0256081fa31eb38b52b19788ca62e327" kindref="member">Class</ref>[ProtoKey-&gt;<ref refid="struct_p_r_o_t_o___k_e_y_1a45ade2ad8d07fe98968e6a6795680f0a" kindref="member">ClassId</ref>];</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>Config<sp/>=<sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(Class,<sp/>ProtoKey-&gt;<ref refid="struct_p_r_o_t_o___k_e_y_1ab4a673ae9bd6272302ea460d336bc80e" kindref="member">ConfigId</ref>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1a93992200ebfddd13e25d0e9122af9b5b" kindref="member">ProtoId</ref><sp/>&gt;<sp/>Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a973aee4e62bf2e6f6949b13020c984d8" kindref="member">MaxProtoId</ref><sp/>||</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a2ea5edb90b556766fce2105dcdfe3141" kindref="member">Protos</ref>,<sp/>TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1a93992200ebfddd13e25d0e9122af9b5b" kindref="member">ProtoId</ref>))</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8h_1a2fb3ad8812835e60ee6e429be4a7e949" kindref="member">MakeProtoPermanent</ref>(Class,<sp/>TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1a93992200ebfddd13e25d0e9122af9b5b" kindref="member">ProtoId</ref>);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a117c6df38172671a3f3fce9cdb4f3299" kindref="member">AddProtoToClassPruner</ref>(&amp;(TempProto-&gt;<ref refid="struct_t_e_m_p___p_r_o_t_o___s_t_r_u_c_t_1acf720eb61d4a91e84d949a6f772ea7c5" kindref="member">Proto</ref>),<sp/>ProtoKey-&gt;<ref refid="struct_p_r_o_t_o___k_e_y_1a45ade2ad8d07fe98968e6a6795680f0a" kindref="member">ClassId</ref>,</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoKey-&gt;<ref refid="struct_p_r_o_t_o___k_e_y_1a88e8ec3116b1ca5e8c0a57a2236f83ed" kindref="member">Templates</ref>-&gt;<ref refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a592229e83546c1b6840e7862b92a0629" kindref="member">Templates</ref>);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><ref refid="adaptive_8cpp_1a6dd6f2bb609ab699a22ea1df6a7f67cd" kindref="member">FreeTempProto</ref>(TempProto);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MakeTempProtoPerm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1aad46f714847619694546e9ea2784402c" kindref="member">Classify::PrintAdaptiveMatchResults</ref>(FILE<sp/>*File,<sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s(%d),<sp/>shape<sp/>%d,<sp/>%.2f<sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2543f3cb2b8da0160a87088940cc58d2" kindref="member">debug_str</ref>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>,<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1ab3db24ffe2690f52d86053ba1f631520" kindref="member">shape_id</ref>,</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[i].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>*<sp/>100.0);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PrintAdaptiveMatchResults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2450"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a0e35029ac0c77ad18d35f08c27c99d15" kindref="member">Classify::RemoveBadMatches</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Next,<sp/>NextGood;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>BadMatchThreshold;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>romans<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;i<sp/>v<sp/>x<sp/>I<sp/>V<sp/>X&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>BadMatchThreshold<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a7cfeae71a3b1fddd0e2dd1b369c6d15b" kindref="member">best_match</ref>.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>+<sp/>matcher_bad_match_pad;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_bln_numeric_mode)<sp/>{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id_one<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id_zero<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>scored_one<sp/>=<sp/><ref refid="adaptmatch_8cpp_1ab41bdc1f072e458bb14d644c1106b56a" kindref="member">ScoredUnichar</ref>(Results,<sp/>unichar_id_one);</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>scored_zero<sp/>=<sp/><ref refid="adaptmatch_8cpp_1ab41bdc1f072e458bb14d644c1106b56a" kindref="member">ScoredUnichar</ref>(Results,<sp/>unichar_id_zero);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Next<sp/>=<sp/>NextGood<sp/>=<sp/>0;<sp/>Next<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>Next++)<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&lt;=<sp/>BadMatchThreshold)<sp/>{</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>match<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next];</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(romans,</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood++]<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next];</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa0838c2b6fafdc34416794b6afe698f8" kindref="member">eq</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scored_one.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&gt;=<sp/>BadMatchThreshold)<sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood]<sp/>=<sp/>scored_one;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>=<sp/>match.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextGood++;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa0838c2b6fafdc34416794b6afe698f8" kindref="member">eq</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scored_zero.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&gt;=<sp/>BadMatchThreshold)<sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood]<sp/>=<sp/>scored_zero;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>=<sp/>match.<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref>;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextGood++;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Next<sp/>=<sp/>NextGood<sp/>=<sp/>0;<sp/>Next<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>Next++)<sp/>{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next].<ref refid="struct_scored_class_1aa410f972971cfb2df154972833783f72" kindref="member">rating</ref><sp/>&lt;=<sp/>BadMatchThreshold)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood++]<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next];</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>=<sp/>NextGood;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RemoveBadMatches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2503"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1af15e83a02b369b820d40c8920b4275e8" kindref="member">Classify::RemoveExtraPuncs</ref>(<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Next,<sp/>NextGood;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>punc_count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*no<sp/>of<sp/>garbage<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digit_count;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*garbage<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>punc_chars[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>,<sp/>;<sp/>:<sp/>/<sp/>`<sp/>~<sp/>&apos;<sp/>-<sp/>=<sp/>\\<sp/>|<sp/>\&quot;<sp/>!<sp/>_<sp/>^&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digit_chars[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>8<sp/>9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>punc_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>digit_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Next<sp/>=<sp/>NextGood<sp/>=<sp/>0;<sp/>Next<sp/>&lt;<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref>;<sp/>Next++)<sp/>{</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_scored_class" kindref="compound">ScoredClass</ref><sp/>match<sp/>=<sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[Next];</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(punc_chars,</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(punc_count<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood++]<sp/>=<sp/>match;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>punc_count++;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strstr(digit_chars,</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(match.<ref refid="struct_scored_class_1ac067f8f00b90b65e9e8348355a771736" kindref="member">unichar_id</ref>))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digit_count<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood++]<sp/>=<sp/>match;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit_count++;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a6ea8673cf9af04e0f0559ddcea630e61" kindref="member">match</ref>[NextGood++]<sp/>=<sp/>match;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/>Results-&gt;<ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s_1a5b86ffcce686898891300193f1998239" kindref="member">NumMatches</ref><sp/>=<sp/>NextGood;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RemoveExtraPuncs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2548"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a5a3045639a3db979a8d1eb6dc4343e3b" kindref="member">Classify::SetAdaptiveThreshold</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>Threshold<sp/>=<sp/>(Threshold<sp/>==<sp/>matcher_good_threshold)<sp/>?<sp/>0.9:<sp/>(1.0<sp/>-<sp/>Threshold);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/>classify_adapt_proto_threshold.set_value(</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClipToRange&lt;int&gt;(255<sp/>*<sp/>Threshold,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>classify_adapt_feature_threshold.set_value(</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClipToRange&lt;int&gt;(255<sp/>*<sp/>Threshold,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SetAdaptiveThreshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="2579"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1abf81bc54d31591d9da5f95529583b99d" kindref="member">Classify::ShowBestMatchFor</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob,</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id,</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>AdaptiveOn,</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>PreTrainedOn,</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___r_e_s_u_l_t_s" kindref="compound">ADAPT_RESULTS</ref><sp/>*Results)<sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumCNFeatures<sp/>=<sp/>0,<sp/>NumBLFeatures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><ref refid="baseapi_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref><sp/>CNFeatures,<sp/>BLFeatures;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t" kindref="compound">INT_RESULT_STRUCT</ref><sp/>CNResult,<sp/>BLResult;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>BlobLength;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ConfigMask;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_config<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PreTrainedOn)<sp/>next_config<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>CNResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>=<sp/>BLResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="intproto_8h_1a6edc7e9d060a50cd3617bb509a061eb5" kindref="member">LegalClassId</ref><sp/>(ClassId))<sp/>{</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%d<sp/>is<sp/>not<sp/>a<sp/>legal<sp/>class<sp/>id!!\n&quot;</highlight><highlight class="normal">,<sp/>ClassId);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*CNAdjust<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>];</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*BLAdjust<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>[<ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>];</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_id<sp/>=<sp/>ClassId;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_id<sp/>=<sp/>ShapeIDToClassID(shape_id);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PreTrainedOn<sp/>&amp;&amp;<sp/>shape_id<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a3e7ae3ffbac606326937a4c701aeeaf2" kindref="member">UnusedClassIdIn</ref>(PreTrainedTemplates,<sp/>shape_id))<sp/>{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>built-in<sp/>templates<sp/>for<sp/>class/shape<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>shape_id);</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumCNFeatures<sp/>=<sp/>GetCharNormFeatures(Blob,<sp/>denorm,<sp/>PreTrainedTemplates,</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CNFeatures,<sp/>NULL,<sp/>CNAdjust,</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;BlobLength,<sp/>NULL);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumCNFeatures<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>blob<sp/>(char<sp/>norm<sp/>features)!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_.SetCharNormMatch(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_.Match(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(PreTrainedTemplates,<sp/>shape_id),</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllProtosOn,<sp/>AllConfigsOn,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumCNFeatures,<sp/>CNFeatures,</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CNResult,</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,<sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>,</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExpandShapesAndApplyCorrections(NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>shape_id,</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>BlobLength,<sp/>CNAdjust,</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CNResult,<sp/>Results);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AdaptiveOn)<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClassId<sp/>&lt;<sp/>0<sp/>||<sp/>ClassId<sp/>&gt;=<sp/>AdaptedTemplates-&gt;Templates-&gt;NumClasses)<sp/>{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>adapted<sp/>class<sp/>id:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ClassId);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a3e7ae3ffbac606326937a4c701aeeaf2" kindref="member">UnusedClassIdIn</ref>(AdaptedTemplates-&gt;Templates,<sp/>ClassId)<sp/>||</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptedTemplates-&gt;Class[ClassId]<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1a1d2aa2b696e73525cb57373fcc5a83ae" kindref="member">IsEmptyAdaptedClass</ref>(AdaptedTemplates-&gt;Class[ClassId]))<sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>AD<sp/>templates<sp/>for<sp/>class<sp/>%d<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassId,<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId));</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumBLFeatures<sp/>=<sp/>GetBaselineFeatures(Blob,</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denorm,</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptedTemplates-&gt;Templates,</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLFeatures,<sp/>BLAdjust,</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;BlobLength);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumBLFeatures<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Illegal<sp/>blob<sp/>(baseline<sp/>features)!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_.SetBaseLineMatch();</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im_.Match(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(AdaptedTemplates-&gt;Templates,<sp/>ClassId),</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllProtosOn,<sp/>AllConfigsOn,</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumBLFeatures,<sp/>BLFeatures,</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;BLResult,</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,<sp/><ref refid="adaptmatch_8cpp_1a424f1b989129c5519f4df8f61ad6dcaf" kindref="member">NO_DEBUG</ref>,</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExpandShapesAndApplyCorrections(</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptedTemplates-&gt;Class,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassId,<sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>0,<sp/>BlobLength,<sp/>CNAdjust,</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLResult,<sp/>Results);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BLResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref><sp/>&lt;<sp/>CNResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1ac15af84ab870846f8be5b02ede056efb" kindref="member">Rating</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_config<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigMask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>BLResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_config<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigMask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>next_config;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++next_config;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/>classify_norm_method.set_value(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/>im_.SetBaseLineMatch();</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adaptive<sp/>Class<sp/>ID:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ClassId);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/>im_.Match(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref>(AdaptedTemplates-&gt;Templates,<sp/>ClassId),</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllProtosOn,<sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)<sp/>&amp;ConfigMask,</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumBLFeatures,<sp/>BLFeatures,</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;BLResult,</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_flags,</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>ExpandShapesAndApplyCorrections(</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptedTemplates-&gt;Class,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassId,<sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>0,<sp/>BlobLength,<sp/>CNAdjust,</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLResult,<sp/>Results);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_id<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>ConfigMask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>CNResult.<ref refid="struct_i_n_t___r_e_s_u_l_t___s_t_r_u_c_t_1af0b37da100132e296cb6d45c3f55c159" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>classify_norm_method.set_value(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref>);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Static<sp/>Shape<sp/>ID:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>shape_id);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>im_.SetCharNormMatch(classify_integer_matcher_multiplier);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>im_.Match(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(PreTrainedTemplates,<sp/>shape_id),</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllProtosOn,<sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)<sp/>&amp;<sp/>ConfigMask,</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumCNFeatures,<sp/>CNFeatures,</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CNResult,</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_adapt_feature_threshold,</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_flags,</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_debug_separate_windows);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/>ExpandShapesAndApplyCorrections(NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>shape_id,</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>BlobLength,<sp/>CNAdjust,</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CNResult,<sp/>Results);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>CNAdjust;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>BLAdjust;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ShowBestMatchFor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>string<sp/>for<sp/>the<sp/>classifier<sp/>class_id:<sp/>either<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unicharset<sp/>debug_str<sp/>or<sp/>the<sp/>shape_table_<sp/>debug<sp/>str.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="classtesseract_1_1_classify_1a6fc9e3752efb2fe0d74920e082a59bd7" kindref="member">Classify::ClassIDToDebugStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>*<sp/>templates,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>class_string;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(templates<sp/>==<sp/>PreTrainedTemplates<sp/>&amp;&amp;<sp/>shape_table_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id<sp/>=<sp/>ClassAndConfigIDToFontOrShapeID(class_id,<sp/>config_id);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>class_string<sp/>=<sp/>shape_table_-&gt;DebugStr(shape_id);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>class_string<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2543f3cb2b8da0160a87088940cc58d2" kindref="member">debug_str</ref>(class_id);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>class_string;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>classifier<sp/>class_id<sp/>index<sp/>to<sp/>a<sp/>shape_table_<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a1002c7f80352c6ceac4af82ee35e5e06" kindref="member">Classify::ClassAndConfigIDToFontOrShapeID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_result_config)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_set_id<sp/>=<sp/>PreTrainedTemplates-&gt;Class[class_id]-&gt;font_set_id;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Older<sp/>inttemps<sp/>have<sp/>no<sp/>font_ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_set_id<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kBlankFontinfoId;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FontSet<sp/>&amp;fs<sp/>=<sp/>fontset_table_.get(font_set_id);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(int_result_config<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>int_result_config<sp/>&lt;<sp/>fs.size);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs.configs[int_result_config];</highlight></codeline>
<codeline lineno="2742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>shape_table_<sp/>index<sp/>to<sp/>a<sp/>classifier<sp/>class_id<sp/>index<sp/>(not<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unichar-id!).<sp/>Uses<sp/>a<sp/>search,<sp/>so<sp/>not<sp/>fast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a319cfe59c8e82e697375a351e3c604b3" kindref="member">Classify::ShapeIDToClassID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>PreTrainedTemplates-&gt;NumClasses;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_set_id<sp/>=<sp/>PreTrainedTemplates-&gt;Class[id]-&gt;font_set_id;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_set_id<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FontSet<sp/>&amp;fs<sp/>=<sp/>fontset_table_.get(font_set_id);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>0;<sp/>config<sp/>&lt;<sp/>fs.size;<sp/>++config)<sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs.configs[config]<sp/>==<sp/>shape_id)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Shape<sp/>%d<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>shape_id);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>TEMP_CONFIG<sp/>is<sp/>good<sp/>enough<sp/>to<sp/>make<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>permanent<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a786c5f6e2a5cd8aac2ed4dd89af84fea" kindref="member">Classify::TempConfigReliable</ref>(<ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>class_id,</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/>&amp;config)<sp/>{</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NumTimesSeen<sp/>for<sp/>config<sp/>of<sp/>%s<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharset().debug_str(class_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref>);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref><sp/>&gt;=<sp/>matcher_sufficient_examples_for_prototyping)<sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t_1a441b843c3b024cd12b0ab4115a9fd159" kindref="member">NumTimesSeen</ref><sp/>&lt;<sp/>matcher_min_examples_for_prototyping)<sp/>{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_ambigs_for_adaption)<sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>through<sp/>the<sp/>ambigs<sp/>vector<sp/>and<sp/>see<sp/>whether<sp/>we<sp/>have<sp/>already<sp/>seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enough<sp/>times<sp/>all<sp/>the<sp/>characters<sp/>represented<sp/>by<sp/>the<sp/>ambigs<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3dad1b2dad5ed3069bdb4c971116b9c5" kindref="member">UnicharIdVector</ref><sp/>*ambigs<sp/>=</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharAmbigs().AmbigsForAdaption(class_id);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ambigs_size<sp/>=<sp/>(ambigs<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0<sp/>:<sp/>ambigs-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ambig<sp/>=<sp/>0;<sp/>ambig<sp/>&lt;<sp/>ambigs_size;<sp/>++ambig)<sp/>{</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>ambig_class<sp/>=<sp/>AdaptedTemplates-&gt;Class[(*ambigs)[ambig]];</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ambig_class<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ambig_class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1afe5769d3f67549e0938480aab2d2b1cd" kindref="member">NumPermConfigs</ref><sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_class-&gt;<ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t_1a88d1300e6657fc7c98af721983018b36" kindref="member">MaxNumTimesSeen</ref><sp/>&lt;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matcher_min_examples_for_prototyping)<sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Ambig<sp/>%s<sp/>has<sp/>not<sp/>been<sp/>seen<sp/>enough<sp/>times,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>making<sp/>config<sp/>for<sp/>%s<sp/>permanent\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharset().debug_str(</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ambigs)[ambig]).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharset().debug_str(class_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a954c9085f840572567462c9e0ff3551a" kindref="member">Classify::UpdateAmbigsGroup</ref>(<ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>class_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*Blob)<sp/>{</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a3dad1b2dad5ed3069bdb4c971116b9c5" kindref="member">UnicharIdVector</ref><sp/>*ambigs<sp/>=</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/>getDict().getUnicharAmbigs().ReverseAmbigsForAdaption(class_id);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ambigs_size<sp/>=<sp/>(ambigs<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0<sp/>:<sp/>ambigs-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Running<sp/>UpdateAmbigsGroup<sp/>for<sp/>%s<sp/>class_id=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharset().debug_str(class_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),<sp/>class_id);</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ambig<sp/>=<sp/>0;<sp/>ambig<sp/>&lt;<sp/>ambigs_size;<sp/>++ambig)<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ambig_class_id<sp/>=<sp/>(*ambigs)[ambig];</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">ADAPT_CLASS</ref><sp/>ambigs_class<sp/>=<sp/>AdaptedTemplates-&gt;Class[ambig_class_id];</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>0;<sp/>cfg<sp/>&lt;<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>;<sp/>++cfg)<sp/>{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="adaptive_8h_1a45d630ce43777ee1ab16048b0a846813" kindref="member">ConfigIsPermanent</ref>(ambigs_class,<sp/>cfg))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t" kindref="compound">TEMP_CONFIG</ref><sp/>config<sp/>=</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="adaptive_8h_1aebe34b43b3fd192fbde7130fa0c62933" kindref="member">TempConfigFor</ref>(AdaptedTemplates-&gt;Class[ambig_class_id],<sp/>cfg);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>TempConfigReliable(ambig_class_id,<sp/>config))<sp/>{</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Making<sp/>config<sp/>%d<sp/>of<sp/>%s<sp/>permanent\n&quot;</highlight><highlight class="normal">,<sp/>cfg,</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDict().getUnicharset().debug_str(</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_class_id).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakePermanent(AdaptedTemplates,<sp/>ambig_class_id,<sp/>cfg,<sp/>denorm,<sp/>Blob);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/adaptmatch.cpp"/>
  </compounddef>
</doxygen>
