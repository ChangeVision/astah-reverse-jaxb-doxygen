<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="dawg_8cpp" kind="file">
    <compoundname>dawg.cpp</compoundname>
    <includes refid="dawg_8h" local="yes">dawg.h</includes>
    <includes refid="cutil_8h" local="yes">cutil.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <incdepgraph>
      <node id="34434">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="34435" relation="include">
        </childnode>
        <childnode refid="34440" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
      </node>
      <node id="34442">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="34445">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
      </node>
      <node id="34403">
        <label>assert.h</label>
      </node>
      <node id="34408">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="34440">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="34395">
        <label>stdlib.h</label>
      </node>
      <node id="34392">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="34393" relation="include">
        </childnode>
      </node>
      <node id="34419">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="34399" relation="include">
        </childnode>
      </node>
      <node id="34435">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="34436" relation="include">
        </childnode>
        <childnode refid="34399" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
        <childnode refid="34437" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
        <childnode refid="34438" relation="include">
        </childnode>
        <childnode refid="34439" relation="include">
        </childnode>
      </node>
      <node id="34428">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
      </node>
      <node id="34394">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="34395" relation="include">
        </childnode>
        <childnode refid="34396" relation="include">
        </childnode>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34397" relation="include">
        </childnode>
        <childnode refid="34399" relation="include">
        </childnode>
        <childnode refid="34400" relation="include">
        </childnode>
      </node>
      <node id="34404">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34394" relation="include">
        </childnode>
        <childnode refid="34401" relation="include">
        </childnode>
      </node>
      <node id="34420">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="34421" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
      </node>
      <node id="34446">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="34388" relation="include">
        </childnode>
        <childnode refid="34433" relation="include">
        </childnode>
        <childnode refid="34405" relation="include">
        </childnode>
      </node>
      <node id="34402">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="34403" relation="include">
        </childnode>
        <childnode refid="34404" relation="include">
        </childnode>
        <childnode refid="34405" relation="include">
        </childnode>
        <childnode refid="34409" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
        <childnode refid="34415" relation="include">
        </childnode>
      </node>
      <node id="34398">
        <label>stddef.h</label>
      </node>
      <node id="34411">
        <label>memory.h</label>
      </node>
      <node id="34449">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="34403" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
      </node>
      <node id="34399">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="34391" relation="include">
        </childnode>
      </node>
      <node id="34387">
        <label>dict/dawg.cpp</label>
        <link refid="dawg.cpp"/>
        <childnode refid="34388" relation="include">
        </childnode>
        <childnode refid="34433" relation="include">
        </childnode>
        <childnode refid="34441" relation="include">
        </childnode>
        <childnode refid="34448" relation="include">
        </childnode>
        <childnode refid="34450" relation="include">
        </childnode>
        <childnode refid="34407" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
      </node>
      <node id="34393">
        <label>limits.h</label>
      </node>
      <node id="34441">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="34436" relation="include">
        </childnode>
        <childnode refid="34388" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34442" relation="include">
        </childnode>
        <childnode refid="34443" relation="include">
        </childnode>
        <childnode refid="34402" relation="include">
        </childnode>
        <childnode refid="34444" relation="include">
        </childnode>
        <childnode refid="34446" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
        <childnode refid="34447" relation="include">
        </childnode>
      </node>
      <node id="34425">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="34424" relation="include">
        </childnode>
      </node>
      <node id="34426">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="34423" relation="include">
        </childnode>
      </node>
      <node id="34418">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34394" relation="include">
        </childnode>
        <childnode refid="34401" relation="include">
        </childnode>
      </node>
      <node id="34438">
        <label>pthread.h</label>
      </node>
      <node id="34396">
        <label>string.h</label>
      </node>
      <node id="34414">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="34410" relation="include">
        </childnode>
      </node>
      <node id="34410">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="34411" relation="include">
        </childnode>
        <childnode refid="34396" relation="include">
        </childnode>
      </node>
      <node id="34433">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34396" relation="include">
        </childnode>
        <childnode refid="34395" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
        <childnode refid="34434" relation="include">
        </childnode>
      </node>
      <node id="34427">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="34424" relation="include">
        </childnode>
        <childnode refid="34423" relation="include">
        </childnode>
        <childnode refid="34408" relation="include">
        </childnode>
        <childnode refid="34428" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
      </node>
      <node id="34417">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="34391" relation="include">
        </childnode>
      </node>
      <node id="34406">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="34391" relation="include">
        </childnode>
      </node>
      <node id="34439">
        <label>semaphore.h</label>
      </node>
      <node id="34421">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="34422" relation="include">
        </childnode>
        <childnode refid="34426" relation="include">
        </childnode>
        <childnode refid="34417" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
        <childnode refid="34419" relation="include">
        </childnode>
        <childnode refid="34428" relation="include">
        </childnode>
      </node>
      <node id="34415">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34417" relation="include">
        </childnode>
        <childnode refid="34418" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
        <childnode refid="34419" relation="include">
        </childnode>
        <childnode refid="34420" relation="include">
        </childnode>
        <childnode refid="34430" relation="include">
        </childnode>
      </node>
      <node id="34430">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34431" relation="include">
        </childnode>
        <childnode refid="34415" relation="include">
        </childnode>
      </node>
      <node id="34400">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="34399" relation="include">
        </childnode>
      </node>
      <node id="34436">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="34389" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
        <childnode refid="34405" relation="include">
        </childnode>
      </node>
      <node id="34424">
        <label>math.h</label>
      </node>
      <node id="34422">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="34423" relation="include">
        </childnode>
        <childnode refid="34426" relation="include">
        </childnode>
      </node>
      <node id="34401">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="34399" relation="include">
        </childnode>
      </node>
      <node id="34432">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="34423" relation="include">
        </childnode>
      </node>
      <node id="34448">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34449" relation="include">
        </childnode>
      </node>
      <node id="34443">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="34433" relation="include">
        </childnode>
        <childnode refid="34406" relation="include">
        </childnode>
      </node>
      <node id="34416">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34405" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
      </node>
      <node id="34405">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34395" relation="include">
        </childnode>
        <childnode refid="34406" relation="include">
        </childnode>
        <childnode refid="34399" relation="include">
        </childnode>
        <childnode refid="34407" relation="include">
        </childnode>
        <childnode refid="34408" relation="include">
        </childnode>
      </node>
      <node id="34444">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="34405" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34402" relation="include">
        </childnode>
        <childnode refid="34445" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
      </node>
      <node id="34397">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="34398" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
      </node>
      <node id="34450">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
      </node>
      <node id="34389">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34394" relation="include">
        </childnode>
        <childnode refid="34401" relation="include">
        </childnode>
      </node>
      <node id="34412">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="34399" relation="include">
        </childnode>
        <childnode refid="34407" relation="include">
        </childnode>
        <childnode refid="34413" relation="include">
        </childnode>
        <childnode refid="34406" relation="include">
        </childnode>
        <childnode refid="34410" relation="include">
        </childnode>
        <childnode refid="34414" relation="include">
        </childnode>
      </node>
      <node id="34388">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="34389" relation="include">
        </childnode>
        <childnode refid="34402" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34406" relation="include">
        </childnode>
      </node>
      <node id="34423">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34424" relation="include">
        </childnode>
        <childnode refid="34389" relation="include">
        </childnode>
        <childnode refid="34425" relation="include">
        </childnode>
      </node>
      <node id="34409">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="34429">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="34416" relation="include">
        </childnode>
      </node>
      <node id="34391">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="34392" relation="include">
        </childnode>
      </node>
      <node id="34390">
        <label>stdio.h</label>
      </node>
      <node id="34437">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34391" relation="include">
        </childnode>
        <childnode refid="34429" relation="include">
        </childnode>
      </node>
      <node id="34413">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34396" relation="include">
        </childnode>
        <childnode refid="34392" relation="include">
        </childnode>
        <childnode refid="34397" relation="include">
        </childnode>
      </node>
      <node id="34407">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="34390" relation="include">
        </childnode>
        <childnode refid="34396" relation="include">
        </childnode>
      </node>
      <node id="34447">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="34402" relation="include">
        </childnode>
        <childnode refid="34416" relation="include">
        </childnode>
        <childnode refid="34412" relation="include">
        </childnode>
      </node>
      <node id="34431">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="34432" relation="include">
        </childnode>
        <childnode refid="34394" relation="include">
        </childnode>
        <childnode refid="34397" relation="include">
        </childnode>
        <childnode refid="34427" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg.c<sp/><sp/>(Formerly<sp/>dawg.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Use<sp/>a<sp/>Directed<sp/>Accyclic<sp/>Word<sp/>Graph</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Jul<sp/>24<sp/>16:59:16<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4800)<sp/><sp/>//<sp/>int/bool<sp/>warnings</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dawg_8h" kindref="compound">dawg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cutil_8h" kindref="compound">cutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s<sp/><sp/><sp/>f<sp/>o<sp/>r<sp/><sp/><sp/>D<sp/>a<sp/>w<sp/>g</highlight></codeline>
<codeline lineno="45"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a37e1a2a607ac12c92826247303ebb6d0" kindref="member" tooltip="Returns true if the given word is in the Dawg. ">Dawg::word_in_dawg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_index<sp/>=<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>end_index;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;word_in_dawg:<sp/>exploring<sp/>node<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;:\n&quot;</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1aa9e379edd04453122e805d9266f8f21c" kindref="member">print_node</ref>(node,<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1ad75874486a2a4d1f104df83ecb9fa321" kindref="member" tooltip="Returns the edge that corresponds to the letter out of this node. ">edge_char_of</ref>(node,<sp/>word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(i),<sp/>i<sp/>==<sp/>end_index);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1ae68706a55d86637dec1da9615effb659" kindref="member">next_node</ref>(edge);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>0)<sp/>node<sp/>=<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a15dc54d58a9d7383b64d678dcf3e2b70" kindref="member">Dawg::check_for_words</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_wildcard)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*word_file;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>misses<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>wildcard<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(kWildcard);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>word_file<sp/>=<sp/><ref refid="cutil_8cpp_1ae3226f9d05617de0b7174bc7b7fce5b6" kindref="member">open_file</ref><sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>word_file)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a31bec0ef73dd383e256fa462e9fa7e1f" kindref="member">chomp_string</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>word(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>unicharset);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!word.<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a2df106c6d2af21ca16bce3d943ee3303" kindref="member">contains_unichar_id</ref>(INVALID_UNICHAR_ID))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_dawg_1a90a78c5aab9e7d918867dfba1f0ebf09" kindref="member">match_words</ref>(&amp;word,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_wildcard<sp/>?<sp/>wildcard<sp/>:<sp/>INVALID_UNICHAR_ID))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Missing<sp/>word:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++misses;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>a<sp/>valid<sp/>word<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>fclose<sp/>(word_file);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>user<sp/>sees<sp/>this<sp/>with<sp/>fprintf<sp/>instead<sp/>of<sp/>tprintf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>lost<sp/>words=%d\n&quot;</highlight><highlight class="normal">,<sp/>misses);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>misses;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1afa7a4af08c1110868e5b278a704dfec3" kindref="member">Dawg::iterate_words</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;const char *&gt;</ref><sp/>*cb)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>word(&amp;unicharset);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a21d62c34f51dc4c123e559a3780b2d15" kindref="member">iterate_words_rec</ref>(word,<sp/>0,<sp/>cb);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a21d62c34f51dc4c123e559a3780b2d15" kindref="member">Dawg::iterate_words_rec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word_so_far,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>to_explore,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;const char *&gt;</ref><sp/>*cb)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a5084886f7cd9adefa73d03111d92f593" kindref="member">NodeChildVector</ref><sp/>children;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_dawg_1ac4b22fb6918a0f9e9b98eb4721cbba33" kindref="member">unichar_ids_of</ref>(to_explore,<sp/>&amp;children);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>next_word(word_so_far);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>next_word.append_unichar_id(children[i].unichar_id,<sp/>1,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classtesseract_1_1_dawg_1a4b81cd795923fc21e8a0f9ea9a1f8626" kindref="member">end_of_word</ref>(children[i].edge_ref))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>s;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_word.string_and_lengths(&amp;s,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="class_tess_callback1_1a88dffeb940aea354ff6e4783ae33c260" kindref="member">Run</ref>(s.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1ae68706a55d86637dec1da9615effb659" kindref="member">next_node</ref>(children[i].edge_ref);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a21d62c34f51dc4c123e559a3780b2d15" kindref="member">iterate_words_rec</ref>(next_word,<sp/>next,<sp/>cb);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a90a78c5aab9e7d918867dfba1f0ebf09" kindref="member">Dawg::match_words</ref>(<ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*word,<sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>index,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>wildcard)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>word_end;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wildcard<sp/>!=<sp/>INVALID_UNICHAR_ID<sp/>&amp;&amp;<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(index)<sp/>==<sp/>wildcard)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5084886f7cd9adefa73d03111d92f593" kindref="member">NodeChildVector</ref><sp/>vec;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_dawg_1ac4b22fb6918a0f9e9b98eb4721cbba33" kindref="member">unichar_ids_of</ref>(node,<sp/>&amp;vec);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8238d436806c40b2e01b9659dfab5eb3" kindref="member">set_unichar_id</ref>(vec[i].unichar_id,<sp/>index);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a90a78c5aab9e7d918867dfba1f0ebf09" kindref="member">match_words</ref>(word,<sp/>index,<sp/>node,<sp/>wildcard))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_matched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8238d436806c40b2e01b9659dfab5eb3" kindref="member">set_unichar_id</ref>(wildcard,<sp/>index);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_matched;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>word_end<sp/>=<sp/>index<sp/>==<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a7be59abe97b052dd3aaa324aea8c4a6c" kindref="member">length</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>edge<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1ad75874486a2a4d1f104df83ecb9fa321" kindref="member" tooltip="Returns the edge that corresponds to the letter out of this node. ">edge_char_of</ref>(node,<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(index),<sp/>word_end);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>edge<sp/>in<sp/>DAWG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1ae68706a55d86637dec1da9615effb659" kindref="member">next_node</ref>(edge);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_end)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>&gt;<sp/>1)<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa27589343655d5843a6482dbb3731d5a" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;match_words()<sp/>found:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a90a78c5aab9e7d918867dfba1f0ebf09" kindref="member">match_words</ref>(word,<sp/>index+1,<sp/>node,<sp/>wildcard);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a6b415183039524d69b370b4e93acdf56" kindref="member">Dawg::init</ref>(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PermuterType<sp/>perm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a8f628fef1da0ff7323958362f8286695" kindref="member">type_</ref><sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a746cceae242993f4945f454e9752d4a5" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1ac03a89c4ecb3dc5b99ca0500f7f5db41" kindref="member">lang_</ref><sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a317802599bebeb7a6939c5b2bc1669ad" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1ad33dc7881a2f933e801f0d5fd4ccbe41" kindref="member" tooltip="Permuter code that should be used if the word is found in this Dawg. ">perm_</ref><sp/>=<sp/>perm;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(unicharset_size<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref><sp/>=<sp/>unicharset_size;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>masks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref><sp/>=<sp/>ceil(log(static_cast&lt;double&gt;(<ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref>))<sp/>/<sp/>log(2.0));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a8a140175a0051a3691084942da99dfb0" kindref="member">next_node_start_bit_</ref><sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref><sp/>+<sp/><ref refid="dawg_8h_1af4e00364d8957bd37d5f641879ecc37a" kindref="member">NUM_FLAG_BITS</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1ad67c4d32f31869f9a592d01fc65a3a73" kindref="member">letter_mask_</ref><sp/>=<sp/>~(~0<sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a35d2c5deb0a9bf3bc9452187aec40410" kindref="member">next_node_mask_</ref><sp/>=<sp/>~0<sp/>&lt;&lt;<sp/>(<ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref><sp/>+<sp/><ref refid="dawg_8h_1af4e00364d8957bd37d5f641879ecc37a" kindref="member">NUM_FLAG_BITS</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1ad60ae15e5b48287343657d9ea9f20f15" kindref="member">flags_mask_</ref><sp/>=<sp/>~(<ref refid="classtesseract_1_1_dawg_1ad67c4d32f31869f9a592d01fc65a3a73" kindref="member">letter_mask_</ref><sp/>|<sp/><ref refid="classtesseract_1_1_dawg_1a35d2c5deb0a9bf3bc9452187aec40410" kindref="member">next_node_mask_</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref><sp/>=<sp/>debug_level;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s<sp/><sp/><sp/>f<sp/>o<sp/>r<sp/><sp/><sp/>S<sp/>q<sp/>u<sp/>i<sp/>s<sp/>h<sp/>e<sp/>d<sp/><sp/><sp/><sp/>D<sp/>a<sp/>w<sp/>g</highlight></codeline>
<codeline lineno="179"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="classtesseract_1_1_squished_dawg_1a6fda4e74006c7510c36f323cd29b724d" kindref="member">SquishedDawg::~SquishedDawg</ref>()<sp/>{<sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>(edges_);<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><ref refid="classtesseract_1_1_squished_dawg_1a8f6eed53e405fe95816d7632a180f7b2" kindref="member" tooltip="Returns the edge that corresponds to the letter out of this node. ">SquishedDawg::edge_char_of</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>end<sp/>=<sp/>num_forward_edges_in_node0<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>=<sp/>(start<sp/>+<sp/>end)<sp/>&gt;&gt;<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>(start<sp/>+<sp/>end)<sp/>/<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compare<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a51413c471a98611d2d46a8685ff1eb40" kindref="member">given_greater_than_edge_rec</ref>(NO_EDGE,<sp/>word_end,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>edges_[edge]);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>==<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>&gt;<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>edge<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>&lt;<sp/>vec[k]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>edge<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>linear<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;<sp/>edge_occupied(edge))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(edges_[edge])<sp/>==<sp/>unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!word_end<sp/>||<sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(edges_[edge])))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(edge);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NO_EDGE);<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>SquishedDawg::num_forward_edges(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><sp/><sp/>edge<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forward_edge<sp/>(edge))<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(num);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_squished_dawg_1ae592b65dc4b4861d440ff460ad8b5afc" kindref="member">SquishedDawg::print_node</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_edges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NO_EDGE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><sp/><sp/>edge<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*forward_string<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FORWARD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*backward_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*last_string<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LAST&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*not_last_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*eow_string<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EOW&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*not_eow_string<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*is_last;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*eow;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_occupied(edge))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_edge(edge)<sp/>?<sp/>forward_string<sp/>:<sp/>backward_string;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_last<sp/>=<sp/>last_edge(edge)<sp/>?<sp/>last_string<sp/>:<sp/>not_last_string;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eow<sp/>=<sp/><ref refid="classtesseract_1_1_squished_dawg_1a0b1e601dd82d9d09d90f8d22d5094042" kindref="member">end_of_word</ref>(edge)<sp/>?<sp/>eow_string<sp/>:<sp/>not_eow_string;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_squished_dawg_1a548e8dae185f57541f43a35a07fb84fc" kindref="member" tooltip="Returns UNICHAR_ID stored in the edge indicated by the given EDGE_REF. ">edge_letter</ref>(edge);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(<ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>next<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>unichar_id<sp/>=<sp/>%d,<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge,<sp/><ref refid="classtesseract_1_1_squished_dawg_1a7770bbc4e5423ee2c5492144488db6d1" kindref="member">next_node</ref>(edge),<sp/>unichar_id,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction,<sp/>is_last,<sp/>eow);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>-<sp/>node<sp/>&gt;<sp/>max_num_edges)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>&lt;<sp/>num_edges_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_occupied(edge)<sp/>&amp;&amp;<sp/>backward_edge(edge))<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_edge(edge)<sp/>?<sp/>forward_string<sp/>:<sp/>backward_string;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_last<sp/>=<sp/>last_edge(edge)<sp/>?<sp/>last_string<sp/>:<sp/>not_last_string;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eow<sp/>=<sp/><ref refid="classtesseract_1_1_squished_dawg_1a0b1e601dd82d9d09d90f8d22d5094042" kindref="member">end_of_word</ref>(edge)<sp/>?<sp/>eow_string<sp/>:<sp/>not_eow_string;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_squished_dawg_1a548e8dae185f57541f43a35a07fb84fc" kindref="member" tooltip="Returns UNICHAR_ID stored in the edge indicated by the given EDGE_REF. ">edge_letter</ref>(edge);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(REFFORMAT<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>next<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>REFFORMAT</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>unichar_id<sp/>=<sp/>%d,<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge,<sp/><ref refid="classtesseract_1_1_squished_dawg_1a7770bbc4e5423ee2c5492144488db6d1" kindref="member">next_node</ref>(edge),<sp/>unichar_id,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction,<sp/>is_last,<sp/>eow);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>-<sp/>node<sp/>&gt;<sp/><ref refid="dawg_8h_1a2d04619cb05b140c086f2ec13778d235" kindref="member">MAX_NODE_EDGES_DISPLAY</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(REFFORMAT<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>no<sp/>edges<sp/>in<sp/>this<sp/>node\n&quot;</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SquishedDawg::print_edge(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>==<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NO_EDGE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(REFFORMAT<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>next<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>REFFORMAT</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>unichar_id<sp/>=<sp/>&apos;%d&apos;,<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>edge,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_squished_dawg_1a7770bbc4e5423ee2c5492144488db6d1" kindref="member">next_node</ref>(edge),<sp/><ref refid="classtesseract_1_1_squished_dawg_1a548e8dae185f57541f43a35a07fb84fc" kindref="member" tooltip="Returns UNICHAR_ID stored in the edge indicated by the given EDGE_REF. ">edge_letter</ref>(edge),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(forward_edge(edge)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;FORWARD&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(last_edge(edge)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;LAST&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_squished_dawg_1a0b1e601dd82d9d09d90f8d22d5094042" kindref="member">end_of_word</ref>(edge)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;EOW&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SquishedDawg::read_squished_dawg(FILE<sp/>*file,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref><sp/>type,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;lang,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PermuterType<sp/>perm,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_level)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>squished<sp/>dawg\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>magic<sp/>number<sp/>and<sp/>if<sp/>it<sp/>does<sp/>not<sp/>match<sp/>kDawgMagicNumber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>swap<sp/>to<sp/>true<sp/>to<sp/>indicate<sp/>that<sp/>we<sp/>need<sp/>to<sp/>switch<sp/>endianness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>magic;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>fread(&amp;magic,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap<sp/>=<sp/>(magic<sp/>!=<sp/><ref refid="classtesseract_1_1_dawg_1a6f2b9b30147a54ee156dcb2aa49b110d" kindref="member" tooltip="Magic number to determine endianness when reading the Dawg from file. ">kDawgMagicNumber</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>fread(&amp;unicharset_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>fread(&amp;num_edges_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_size<sp/>=<sp/><ref refid="serialis_8cpp_1a7cd6b269b716bfc29f8cca05e60c473f" kindref="member">reverse32</ref>(unicharset_size);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>num_edges_<sp/>=<sp/><ref refid="serialis_8cpp_1a7cd6b269b716bfc29f8cca05e60c473f" kindref="member">reverse32</ref>(num_edges_);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(num_edges_<sp/>&gt;<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>DAWG<sp/>should<sp/>not<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a6b415183039524d69b370b4e93acdf56" kindref="member">Dawg::init</ref>(type,<sp/>lang,<sp/>perm,<sp/>unicharset_size,<sp/>debug_level);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>edges_<sp/>=<sp/>(<ref refid="dawg_8h_1a51438783ac73f19b33094c73c9d55ce7" kindref="member">EDGE_ARRAY</ref>)<sp/><ref refid="freelist_8cpp_1a5898fbe61f6ffe4c1be71a107193cdfd" kindref="member">memalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref>)<sp/>*<sp/>num_edges_);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>fread(&amp;edges_[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref>),<sp/>num_edges_,<sp/>file);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>++edge)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edges_[edge]<sp/>=<sp/><ref refid="serialis_8cpp_1ae4a578d0709e7fa4132ed59ce5c08897" kindref="member">reverse64</ref>(edges_[edge]);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;type:<sp/>%d<sp/>lang:<sp/>%s<sp/>perm:<sp/>%d<sp/>unicharset_size:<sp/>%d<sp/>num_edges:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a8f628fef1da0ff7323958362f8286695" kindref="member">type_</ref>,<sp/><ref refid="classtesseract_1_1_dawg_1ac03a89c4ecb3dc5b99ca0500f7f5db41" kindref="member">lang_</ref>.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="classtesseract_1_1_dawg_1ad33dc7881a2f933e801f0d5fd4ccbe41" kindref="member" tooltip="Permuter code that should be used if the word is found in this Dawg. ">perm_</ref>,<sp/><ref refid="classtesseract_1_1_dawg_1a96b429ef5449ad3cab057eb27d199c66" kindref="member">unicharset_size_</ref>,<sp/>num_edges_);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>++edge)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>print_edge(edge);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="dawg_8h_1a62f0e84ff219b74912d723e231fefd00" kindref="member">NODE_MAP</ref><sp/>SquishedDawg::build_node_map(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>*num_nodes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><sp/><sp/>edge;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a62f0e84ff219b74912d723e231fefd00" kindref="member">NODE_MAP</ref><sp/><sp/><sp/>node_map;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_counter;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_edges;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>node_map<sp/>=<sp/>(<ref refid="dawg_8h_1a62f0e84ff219b74912d723e231fefd00" kindref="member">NODE_MAP</ref>)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref>)<sp/>*<sp/>num_edges_);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>edge++)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>all<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>node_map<sp/>[edge]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>node_counter<sp/>=<sp/>num_forward_edges(0);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>*num_nodes<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>edge++)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>all<sp/>slots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forward_edge(edge))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*num_nodes)++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>nodes<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_map[edge]<sp/>=<sp/>(edge<sp/>?<sp/>node_counter<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_edges<sp/>=<sp/>num_forward_edges(edge);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>!=<sp/>0)<sp/>node_counter<sp/>+=<sp/>num_edges;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>+=<sp/>num_edges;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>&gt;=<sp/>num_edges_)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backward_edge(edge))<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge--;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node_map);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_squished_dawg_1a5b6d0a893b2a8e64c901d514a3da924e" kindref="member" tooltip="Writes the squished/reduced Dawg to a file. ">SquishedDawg::write_squished_dawg</ref>(FILE<sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><sp/><sp/><sp/>edge;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_edges;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a62f0e84ff219b74912d723e231fefd00" kindref="member">NODE_MAP</ref><sp/><sp/><sp/><sp/>node_map;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><sp/><sp/><sp/>old_index;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>temp_record;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;write_squished_dawg\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>node_map<sp/>=<sp/>build_node_map(&amp;node_count);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>magic<sp/>number<sp/>to<sp/>help<sp/>detecting<sp/>a<sp/>change<sp/>in<sp/>endianness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>magic<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a6f2b9b30147a54ee156dcb2aa49b110d" kindref="member" tooltip="Magic number to determine endianness when reading the Dawg from file. ">kDawgMagicNumber</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>fwrite(&amp;magic,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>fwrite(&amp;unicharset_size_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>edges<sp/>in<sp/>this<sp/>Dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>num_edges<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge=0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>edge++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forward_edge(edge))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_edges++;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>fwrite(&amp;num_edges,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>),<sp/>1,<sp/>file);<sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>edge<sp/>count<sp/>to<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1adc74b0871a5aafecd0daaf87b6cf4141" kindref="member">debug_level_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>nodes<sp/>in<sp/>DAWG\n&quot;</highlight><highlight class="normal">,<sp/>node_count);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>edges<sp/>in<sp/>DAWG\n&quot;</highlight><highlight class="normal">,<sp/>num_edges);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>num_edges_;<sp/>edge++)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forward_edge(edge))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>forward<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_index<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edges_[edge]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_next_node(edge,<sp/>node_map[old_index]);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_record<sp/>=<sp/>edges_[edge];</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;(temp_record),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref>),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_next_node(edge,<sp/>old_index);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge<sp/>&gt;=<sp/>num_edges_)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backward_edge(edge))<sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>back<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!last_edge(edge++));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge--;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>free(node_map);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/dict/dawg.cpp"/>
  </compounddef>
</doxygen>
