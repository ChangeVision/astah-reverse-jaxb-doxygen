<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="colpartition_8cpp" kind="file">
    <compoundname>colpartition.cpp</compoundname>
    <includes refid="colpartition_8h" local="yes">colpartition.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="detlinefit_8h" local="yes">detlinefit.h</includes>
    <includes refid="dppoint_8h" local="yes">dppoint.h</includes>
    <includes refid="imagefind_8h" local="yes">imagefind.h</includes>
    <includes refid="workingpartset_8h" local="yes">workingpartset.h</includes>
    <incdepgraph>
      <node id="37239">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="37207" relation="include">
        </childnode>
        <childnode refid="37240" relation="include">
        </childnode>
        <childnode refid="37241" relation="include">
        </childnode>
        <childnode refid="37246" relation="include">
        </childnode>
        <childnode refid="37253" relation="include">
        </childnode>
      </node>
      <node id="37256">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="37257" relation="include">
        </childnode>
        <childnode refid="37207" relation="include">
        </childnode>
        <childnode refid="37224" relation="include">
        </childnode>
        <childnode refid="37240" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37206" relation="include">
        </childnode>
      </node>
      <node id="37229">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="37206">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="37207" relation="include">
        </childnode>
        <childnode refid="37220" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
        <childnode refid="37238" relation="include">
        </childnode>
      </node>
      <node id="37253">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37209" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
      </node>
      <node id="37213">
        <label>stdlib.h</label>
      </node>
      <node id="37210">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="37211" relation="include">
        </childnode>
      </node>
      <node id="37261">
        <label>detlinefit.h</label>
        <link refid="detlinefit_8h"/>
        <childnode refid="37222" relation="include">
        </childnode>
      </node>
      <node id="37237">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="37217" relation="include">
        </childnode>
      </node>
      <node id="37238">
        <label>allheaders.h</label>
      </node>
      <node id="37230">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
      </node>
      <node id="37212">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="37213" relation="include">
        </childnode>
        <childnode refid="37214" relation="include">
        </childnode>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37215" relation="include">
        </childnode>
        <childnode refid="37217" relation="include">
        </childnode>
        <childnode refid="37218" relation="include">
        </childnode>
      </node>
      <node id="37207">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37209" relation="include">
        </childnode>
        <childnode refid="37212" relation="include">
        </childnode>
        <childnode refid="37219" relation="include">
        </childnode>
      </node>
      <node id="37242">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="37220" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
      </node>
      <node id="37216">
        <label>stddef.h</label>
      </node>
      <node id="37217">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37251">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="37249" relation="include">
        </childnode>
        <childnode refid="37224" relation="include">
        </childnode>
        <childnode refid="37222" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
        <childnode refid="37252" relation="include">
        </childnode>
      </node>
      <node id="37211">
        <label>limits.h</label>
      </node>
      <node id="37255">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="37206" relation="include">
        </childnode>
        <childnode refid="37239" relation="include">
        </childnode>
        <childnode refid="37236" relation="include">
        </childnode>
        <childnode refid="37256" relation="include">
        </childnode>
      </node>
      <node id="37225">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="37223" relation="include">
        </childnode>
      </node>
      <node id="37226">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="37222" relation="include">
        </childnode>
      </node>
      <node id="37240">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37209" relation="include">
        </childnode>
        <childnode refid="37212" relation="include">
        </childnode>
        <childnode refid="37219" relation="include">
        </childnode>
      </node>
      <node id="37214">
        <label>string.h</label>
      </node>
      <node id="37204">
        <label>textord/colpartition.cpp</label>
        <link refid="colpartition.cpp"/>
        <childnode refid="37205" relation="include">
        </childnode>
        <childnode refid="37259" relation="include">
        </childnode>
        <childnode refid="37260" relation="include">
        </childnode>
        <childnode refid="37261" relation="include">
        </childnode>
        <childnode refid="37262" relation="include">
        </childnode>
        <childnode refid="37263" relation="include">
        </childnode>
        <childnode refid="37264" relation="include">
        </childnode>
      </node>
      <node id="37228">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="37223" relation="include">
        </childnode>
        <childnode refid="37222" relation="include">
        </childnode>
        <childnode refid="37229" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
        <childnode refid="37231" relation="include">
        </childnode>
      </node>
      <node id="37227">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37258">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="37234">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37259">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="37206" relation="include">
        </childnode>
        <childnode refid="37205" relation="include">
        </childnode>
        <childnode refid="37260" relation="include">
        </childnode>
      </node>
      <node id="37264">
        <label>workingpartset.h</label>
        <link refid="workingpartset_8h"/>
        <childnode refid="37239" relation="include">
        </childnode>
        <childnode refid="37205" relation="include">
        </childnode>
      </node>
      <node id="37220">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="37221" relation="include">
        </childnode>
        <childnode refid="37226" relation="include">
        </childnode>
        <childnode refid="37227" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37237" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
      </node>
      <node id="37241">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="37232" relation="include">
        </childnode>
        <childnode refid="37227" relation="include">
        </childnode>
        <childnode refid="37240" relation="include">
        </childnode>
        <childnode refid="37236" relation="include">
        </childnode>
        <childnode refid="37237" relation="include">
        </childnode>
        <childnode refid="37242" relation="include">
        </childnode>
        <childnode refid="37243" relation="include">
        </childnode>
      </node>
      <node id="37243">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37244" relation="include">
        </childnode>
        <childnode refid="37241" relation="include">
        </childnode>
      </node>
      <node id="37218">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="37217" relation="include">
        </childnode>
      </node>
      <node id="37254">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="37255" relation="include">
        </childnode>
        <childnode refid="37234" relation="include">
        </childnode>
        <childnode refid="37256" relation="include">
        </childnode>
        <childnode refid="37258" relation="include">
        </childnode>
      </node>
      <node id="37262">
        <label>dppoint.h</label>
        <link refid="dppoint_8h"/>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37223">
        <label>math.h</label>
      </node>
      <node id="37221">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="37222" relation="include">
        </childnode>
        <childnode refid="37226" relation="include">
        </childnode>
      </node>
      <node id="37219">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="37217" relation="include">
        </childnode>
      </node>
      <node id="37245">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="37222" relation="include">
        </childnode>
      </node>
      <node id="37249">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="37246">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="37247" relation="include">
        </childnode>
        <childnode refid="37248" relation="include">
        </childnode>
        <childnode refid="37243" relation="include">
        </childnode>
        <childnode refid="37250" relation="include">
        </childnode>
      </node>
      <node id="37232">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37233" relation="include">
        </childnode>
        <childnode refid="37236" relation="include">
        </childnode>
      </node>
      <node id="37233">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37213" relation="include">
        </childnode>
        <childnode refid="37234" relation="include">
        </childnode>
        <childnode refid="37217" relation="include">
        </childnode>
        <childnode refid="37235" relation="include">
        </childnode>
        <childnode refid="37229" relation="include">
        </childnode>
      </node>
      <node id="37215">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="37216" relation="include">
        </childnode>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37257">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="37206" relation="include">
        </childnode>
        <childnode refid="37239" relation="include">
        </childnode>
      </node>
      <node id="37248">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="37249" relation="include">
        </childnode>
        <childnode refid="37224" relation="include">
        </childnode>
        <childnode refid="37236" relation="include">
        </childnode>
      </node>
      <node id="37224">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37209" relation="include">
        </childnode>
        <childnode refid="37212" relation="include">
        </childnode>
        <childnode refid="37219" relation="include">
        </childnode>
      </node>
      <node id="37205">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="37206" relation="include">
        </childnode>
        <childnode refid="37239" relation="include">
        </childnode>
        <childnode refid="37229" relation="include">
        </childnode>
        <childnode refid="37246" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37230" relation="include">
        </childnode>
        <childnode refid="37254" relation="include">
        </childnode>
        <childnode refid="37256" relation="include">
        </childnode>
      </node>
      <node id="37263">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="37209" relation="include">
        </childnode>
      </node>
      <node id="37222">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37223" relation="include">
        </childnode>
        <childnode refid="37224" relation="include">
        </childnode>
        <childnode refid="37225" relation="include">
        </childnode>
      </node>
      <node id="37247">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="37215" relation="include">
        </childnode>
      </node>
      <node id="37231">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="37232" relation="include">
        </childnode>
      </node>
      <node id="37252">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="37209">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="37210" relation="include">
        </childnode>
      </node>
      <node id="37250">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="37207" relation="include">
        </childnode>
        <childnode refid="37247" relation="include">
        </childnode>
        <childnode refid="37236" relation="include">
        </childnode>
        <childnode refid="37251" relation="include">
        </childnode>
        <childnode refid="37252" relation="include">
        </childnode>
      </node>
      <node id="37260">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="37205" relation="include">
        </childnode>
        <childnode refid="37233" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
        <childnode refid="37256" relation="include">
        </childnode>
      </node>
      <node id="37208">
        <label>stdio.h</label>
      </node>
      <node id="37236">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37214" relation="include">
        </childnode>
        <childnode refid="37210" relation="include">
        </childnode>
        <childnode refid="37215" relation="include">
        </childnode>
      </node>
      <node id="37235">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="37208" relation="include">
        </childnode>
        <childnode refid="37214" relation="include">
        </childnode>
      </node>
      <node id="37244">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="37245" relation="include">
        </childnode>
        <childnode refid="37212" relation="include">
        </childnode>
        <childnode refid="37215" relation="include">
        </childnode>
        <childnode refid="37228" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colpartition.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>hold<sp/>partitions<sp/>of<sp/>the<sp/>page<sp/>that<sp/>correspond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roughly<sp/>to<sp/>text<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Aug<sp/>14<sp/>10:54:01<sp/>PDT<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartition_8h" kindref="compound">colpartition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="detlinefit_8h" kindref="compound">detlinefit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dppoint_8h" kindref="compound">dppoint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagefind_8h" kindref="compound">imagefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workingpartset_8h" kindref="compound">workingpartset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="elst2_8h_1a574b9d080e6a413d915407cea6ac0243" kindref="member">ELIST2IZE</ref>(ColPartition)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="clst_8h_1a721c1e0acc4a882f9ea934613aee64be" kindref="member">CLISTIZE</ref>(ColPartition)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>multiple<sp/>partners<sp/>survive<sp/>the<sp/>partner<sp/>depth<sp/>test<sp/>beyond<sp/>this<sp/>level,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>arbitrarily<sp/>pick<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa442956755df972dd0aa8ab4d832e5bd" kindref="member">kMaxPartnerDepth</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>change<sp/>in<sp/>spacing<sp/>(in<sp/>inches)<sp/>to<sp/>ignore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae0a877f2f2010a2510e31be3d5cf9a46" kindref="member">kMaxSpacingDrift</ref><sp/>=<sp/>1.0<sp/>/<sp/>72;<sp/><sp/></highlight><highlight class="comment">//<sp/>1/72<sp/>is<sp/>one<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>fraction<sp/>of<sp/>line<sp/>height<sp/>used<sp/>as<sp/>an<sp/>additional<sp/>allowance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>top<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ab991108b48ad3c8977dc27b8b40697c4" kindref="member">kMaxTopSpacingFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>What<sp/>multiple<sp/>of<sp/>the<sp/>largest<sp/>line<sp/>height<sp/>should<sp/>be<sp/>used<sp/>as<sp/>an<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>whether<sp/>lines<sp/>are<sp/>in<sp/>the<sp/>same<sp/>text<sp/>block?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ab896bf3ee331c3dc994d6ca764d523b0" kindref="member">kMaxSameBlockLineSpacing</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>ratio<sp/>of<sp/>sizes<sp/>for<sp/>lines<sp/>to<sp/>be<sp/>considered<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a253deddf742f4040aa4cd65ec08808e0" kindref="member">kMaxSizeRatio</ref><sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>max<sp/>of<sp/>leader<sp/>width<sp/>and<sp/>gap<sp/>for<sp/>max<sp/>IQR<sp/>of<sp/>gaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afa8971bf35c601524286aeb419a061a2" kindref="member">kMaxLeaderGapFractionOfMax</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fraction<sp/>of<sp/>min<sp/>of<sp/>leader<sp/>width<sp/>and<sp/>gap<sp/>for<sp/>max<sp/>IQR<sp/>of<sp/>gaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a06d2e157a317d737547326b3a463326f" kindref="member">kMaxLeaderGapFractionOfMin</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>blobs<sp/>to<sp/>be<sp/>considered<sp/>a<sp/>leader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a97c300450ada83371da245cda0fdee0e" kindref="member">kMinLeaderCount</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cost<sp/>of<sp/>a<sp/>cut<sp/>through<sp/>a<sp/>leader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a75bf494eb463097bac2fe7c5d8d1d660" kindref="member">kLeaderCutCost</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>score<sp/>for<sp/>a<sp/>STRONG_CHAIN<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac940a7cfcc7b1a0ecab3e6c0af788175" kindref="member">kMinStrongTextValue</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>score<sp/>for<sp/>a<sp/>CHAIN<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a22d76064f02915e8be7a835f2ea05038" kindref="member">kMinChainTextValue</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>blobs<sp/>for<sp/>strong<sp/>horizontal<sp/>text<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a32f2825c55e218c93202c88eb0a9e9cd" kindref="member">kHorzStrongTextlineCount</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>height<sp/>(in<sp/>image<sp/>pixels)<sp/>for<sp/>strong<sp/>horizontal<sp/>text<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5f972eef50e9dbc6cf11d791a877ad6e" kindref="member">kHorzStrongTextlineHeight</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>aspect<sp/>ratio<sp/>for<sp/>strong<sp/>horizontal<sp/>text<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8bb43436a786b376902309db2f0b5699" kindref="member">kHorzStrongTextlineAspect</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>upper<sp/>quartile<sp/>error<sp/>allowed<sp/>on<sp/>a<sp/>baseline<sp/>fit<sp/>as<sp/>a<sp/>fraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8043339cb79428cd76d41f5432de9712" kindref="member">kMaxBaselineError</ref><sp/>=<sp/>0.4375;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>coverage<sp/>for<sp/>a<sp/>good<sp/>baseline<sp/>between<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a65472193d051a39743ef565bd34bcc64" kindref="member">kMinBaselineCoverage</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>RMS<sp/>color<sp/>noise<sp/>to<sp/>compare<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abf95c90bc0630ea9218c2eb0d70472dd" kindref="member">kMaxRMSColorNoise</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>distance<sp/>to<sp/>allow<sp/>a<sp/>partition<sp/>color<sp/>to<sp/>be<sp/>to<sp/>use<sp/>that<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>smoothing<sp/>neighbouring<sp/>types.<sp/>This<sp/>is<sp/>a<sp/>squared<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a4fb5be2b91cab225fc69bec75ccf96bc" kindref="member">kMaxColorDistance</ref><sp/>=<sp/>900;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blob_type<sp/>is<sp/>the<sp/>blob_region_type_<sp/>of<sp/>the<sp/>blobs<sp/>in<sp/>this<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vertical<sp/>is<sp/>the<sp/>direction<sp/>of<sp/>logical<sp/>vertical<sp/>on<sp/>the<sp/>possibly<sp/>skewed<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">ColPartition::ColPartition(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type,<sp/>const<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>:<sp/>left_margin_(-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>),<sp/>right_margin_(MAX_INT32),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>median_bottom_(MAX_INT32),<sp/>median_top_(-MAX_INT32),<sp/>median_size_(0),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>median_left_(MAX_INT32),<sp/>median_right_(-MAX_INT32),<sp/>median_width_(0),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_type_(blob_type),<sp/>flow_(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>),<sp/>good_blob_score_(0),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>good_width_(false),<sp/>good_column_(false),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_tab_(false),<sp/>right_key_tab_(false),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_(0),<sp/>right_key_(0),<sp/>type_(<ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fac0b3cd1b4592e1a3c609ff4273fb505b" kindref="member">PT_UNKNOWN</ref>),<sp/>vertical_(vertical),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>last_add_was_vertical_(false),<sp/>block_owned_(false),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>desperately_merged_(false),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>first_column_(-1),<sp/>last_column_(-1),<sp/>column_set_(NULL),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>side_step_(0),<sp/>top_spacing_(0),<sp/>bottom_spacing_(0),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>type_before_table_(PT_UNKNOWN),<sp/>inside_table_column_(false),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>nearest_neighbor_above_(NULL),<sp/>nearest_neighbor_below_(NULL),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>space_above_(0),<sp/>space_below_(0),<sp/>space_to_left_(0),<sp/>space_to_right_(0),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>owns_blobs_(true)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>memset(special_blobs_densities_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(special_blobs_densities_));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>fake<sp/>ColPartition<sp/>with<sp/>a<sp/>single<sp/>fake<sp/>BLOBNBOX,<sp/>all<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>a<sp/>single<sp/>TBOX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARNING:<sp/>Despite<sp/>being<sp/>on<sp/>C_LISTs,<sp/>the<sp/>BLOBNBOX<sp/>owns<sp/>the<sp/>C_BLOB<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>ColPartition<sp/>owns<sp/>the<sp/>BLOBNBOX!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>DeleteBoxes<sp/>before<sp/>deleting<sp/>the<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a1ed526e850e85fba36bd2dcf2168982a" kindref="member">ColPartition::FakePartition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>block_type,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>(blob_type,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>part-&gt;set_type(block_type);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>part-&gt;set_flow(flow);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>part-&gt;AddBox(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>(<ref refid="class_c___b_l_o_b_1a29479d1a44688cc2d277b9e8f3064ade" kindref="member">C_BLOB::FakeBlob</ref>(box)));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>part-&gt;set_left_margin(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>part-&gt;set_right_margin(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>part-&gt;ClaimBoxes();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>and<sp/>returns<sp/>a<sp/>ColPartition<sp/>with<sp/>the<sp/>given<sp/>real<sp/>BLOBNBOX,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>sets<sp/>it<sp/>up<sp/>to<sp/>be<sp/>a<sp/>&quot;big&quot;<sp/>partition<sp/>(single-blob<sp/>partition<sp/>bigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>surrounding<sp/>text<sp/>that<sp/>may<sp/>be<sp/>a<sp/>dropcap,<sp/>two<sp/>or<sp/>more<sp/>vertically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>touching<sp/>characters,<sp/>or<sp/>some<sp/>graphic<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>given<sp/>list<sp/>is<sp/>not<sp/>NULL,<sp/>the<sp/>partition<sp/>is<sp/>also<sp/>added<sp/>to<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a2baab68bca77728c6b50521131dc9b1a" kindref="member">ColPartition::MakeBigPartition</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>box,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_part_list)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>box-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>single<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>single-&gt;set_flow(BTFT_NONE);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>single-&gt;AddBox(box);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>single-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>single-&gt;ClaimBoxes();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>single-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>single-&gt;set_block_owned(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(big_part_list<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>part_it(big_part_list);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_to_end(single);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>single;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="classtesseract_1_1_col_partition_1aaf6b839117d261e594cc3418117cf64c" kindref="member">ColPartition::~ColPartition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>this<sp/>as<sp/>a<sp/>partner<sp/>of<sp/>all<sp/>partners,<sp/>as<sp/>we<sp/>don&apos;t<sp/>want<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>a<sp/>deleted<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(&amp;upper_partners_);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;RemovePartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>it.set_to_list(&amp;lower_partners_);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;RemovePartner(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>fake<sp/>ColPartition<sp/>with<sp/>no<sp/>BLOBNBOXes<sp/>to<sp/>represent<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>or<sp/>vertical<sp/>line,<sp/>given<sp/>a<sp/>type<sp/>and<sp/>a<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a446ed1c0731f3fb8d7199b45750c6c5c" kindref="member">ColPartition::MakeLinePartition</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>(blob_type,<sp/>vertical);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>part-&gt;bounding_box_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(left,<sp/>bottom,<sp/>right,<sp/>top);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>part-&gt;median_bottom_<sp/>=<sp/>bottom;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>part-&gt;median_top_<sp/>=<sp/>top;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>part-&gt;median_size_<sp/>=<sp/>top<sp/>-<sp/>bottom;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>part-&gt;median_width_<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>part-&gt;left_key_<sp/>=<sp/>part-&gt;BoxLeftKey();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>part-&gt;right_key_<sp/>=<sp/>part-&gt;BoxRightKey();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>the<sp/>given<sp/>box<sp/>to<sp/>the<sp/>partition,<sp/>updating<sp/>the<sp/>partition<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>boxes<sp/>in<sp/>the<sp/>partition<sp/>is<sp/>updated,<sp/>ensuring<sp/>that<sp/>no<sp/>box<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recorded<sp/>twice,<sp/>and<sp/>the<sp/>boxes<sp/>are<sp/>kept<sp/>in<sp/>increasing<sp/>left<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a636e7965ba55518f4e54a75a4a6ee1fd" kindref="member">ColPartition::AddBox</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>partition<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes_.length()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_<sp/>+=<sp/>box;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!last_add_was_vertical_)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxes_.sort(SortByBoxBottom&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_add_was_vertical_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.add_sorted(SortByBoxBottom&lt;BLOBNBOX&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bbox);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_add_was_vertical_)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxes_.sort(SortByBoxLeft&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_add_was_vertical_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.add_sorted(SortByBoxLeft&lt;BLOBNBOX&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bbox);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_key_tab_)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!right_key_tab_)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>box<sp/>(%d,%d)-&gt;(%d,%d)<sp/>left_blob_x_=%d,<sp/>right_blob_x_<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>the<sp/>given<sp/>box<sp/>from<sp/>the<sp/>partition,<sp/>updating<sp/>the<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aef96e5e328fbc0a20e267f820b6376c0" kindref="member">ColPartition::RemoveBox</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box<sp/>==<sp/>bb_it.data())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb_it.extract();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ComputeLimits</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>tallest<sp/>box<sp/>in<sp/>the<sp/>partition,<sp/>as<sp/>measured<sp/>perpendicular<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>presumed<sp/>flow<sp/>of<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/><ref refid="classtesseract_1_1_col_partition_1a0c2b7eaa5daff22412a5931534e8c804" kindref="member">ColPartition::BiggestBox</ref>()<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>biggest<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>bb_it.data();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(biggest<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>biggest-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biggest<sp/>=<sp/>bbox;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(biggest<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>biggest-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>())</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biggest<sp/>=<sp/>bbox;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>biggest;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>bounding<sp/>box<sp/>excluding<sp/>the<sp/>given<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/><ref refid="classtesseract_1_1_col_partition_1a27b24bf50ade80dcd1b25f6630f3a298" kindref="member">ColPartition::BoundsWithoutBox</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>result;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box<sp/>!=<sp/>bb_it.data())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>bb_it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Claims<sp/>the<sp/>boxes<sp/>in<sp/>the<sp/>boxes_list<sp/>by<sp/>marking<sp/>them<sp/>with<sp/>a<sp/>this<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointer.<sp/>If<sp/>a<sp/>box<sp/>is<sp/>already<sp/>owned,<sp/>then<sp/>it<sp/>must<sp/>be<sp/>owned<sp/>by<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aa6dd9388e18a33fc48e6410e214e1d17" kindref="member">ColPartition::ClaimBoxes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.data();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>other<sp/>=<sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>case:<sp/>ownership<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(other<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>blobs<sp/>in<sp/>this<sp/>partition,<sp/>so<sp/>they<sp/>can<sp/>be<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>independently<sp/>of<sp/>the<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a00ada2372a982efadbd4fb6da128bbb3" kindref="member">ColPartition::DisownBoxes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.data();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(NULL);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>blobs<sp/>in<sp/>this<sp/>partition<sp/>that<sp/>are<sp/>owned<sp/>by<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partition,<sp/>so<sp/>they<sp/>can<sp/>be<sp/>deleted<sp/>independently<sp/>of<sp/>the<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>blobs<sp/>that<sp/>are<sp/>not<sp/>owned<sp/>by<sp/>this<sp/>partition<sp/>get<sp/>to<sp/>keep<sp/>their<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>an<sp/>assert<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a7601c6b9fa22be42ca11e815c46a541a" kindref="member">ColPartition::DisownBoxesNoAssert</ref>()<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.data();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(NULL);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>boxes<sp/>that<sp/>this<sp/>partition<sp/>owns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a7d58daab4baf2cd8166b1e931e1ffad4" kindref="member">ColPartition::DeleteBoxes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Although<sp/>the<sp/>boxes_<sp/>list<sp/>is<sp/>a<sp/>C_LIST,<sp/>in<sp/>some<sp/>cases<sp/>it<sp/>owns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BLOBNBOXes,<sp/>as<sp/>the<sp/>ColPartition<sp/>takes<sp/>ownership<sp/>from<sp/>the<sp/>grid,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>BLOBNBOXes<sp/>own<sp/>the<sp/>underlying<sp/>C_BLOBs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);<sp/>!bb_it.empty();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.extract();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bblob;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reflects<sp/>the<sp/>partition<sp/>in<sp/>the<sp/>y-axis,<sp/>assuming<sp/>that<sp/>its<sp/>blobs<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already<sp/>been<sp/>done.<sp/>Corrects<sp/>only<sp/>a<sp/>limited<sp/>part<sp/>of<sp/>the<sp/>members,<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>used<sp/>shortly<sp/>after<sp/>initial<sp/>creation,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>before<sp/>a<sp/>lot<sp/>of<sp/>the<sp/>members<sp/>are<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a77e212fc8da6ee21a817291c2180e2ad" kindref="member">ColPartition::ReflectInYAxis</ref>()<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>ColPartition_CLIST<sp/>reversed_boxes;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>reversed_it(&amp;reversed_boxes);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reverse<sp/>the<sp/>order<sp/>of<sp/>the<sp/>boxes_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>bb_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>reversed_it.add_before_then_move(bb_it.extract());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>bb_it.add_list_after(&amp;reversed_boxes);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!left_key_tab_<sp/>&amp;&amp;<sp/>!right_key_tab_);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>left_margin_;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>left_margin_<sp/>=<sp/>-right_margin_;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>right_margin_<sp/>=<sp/>-tmp;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ComputeLimits</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>this<sp/>is<sp/>a<sp/>legal<sp/>partition<sp/>-<sp/>meaning<sp/>that<sp/>the<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left_margin<sp/>&lt;=<sp/>bounding_box<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left_key<sp/>&lt;=<sp/>bounding<sp/>box<sp/>left<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding<sp/>box<sp/>left<sp/>&lt;=<sp/>bounding<sp/>box<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>likewise<sp/>for<sp/>right<sp/>margin<sp/>and<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>all<sp/>met.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1affa76b0b726f75d996a9e5dbe8b3e408" kindref="member">ColPartition::IsLegal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bounding<sp/>box<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Bounding<sp/>box<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin_<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>||</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_margin_<sp/>&lt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Margins<sp/>invalid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Margins<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_key_<sp/>&gt;<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>()<sp/>||<sp/>right_key_<sp/>&lt;<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Key<sp/>inside<sp/>box:<sp/>%d<sp/>v<sp/>%d<sp/>or<sp/>%d<sp/>v<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_key_,<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>(),<sp/>right_key_,<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Keys<sp/>inside<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>left<sp/>and<sp/>right<sp/>edges<sp/>are<sp/>approximately<sp/>equal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a75d8f8d4384f5bdb51c2c9e58f6677d3" kindref="member">ColPartition::MatchingColumns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(<ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>()<sp/>+<sp/>other.MidY())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(other.LeftAtY(y)<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ab71e3aebabe8a0a9e3cde26f84ec4f46" kindref="member">LeftAtY</ref>(y)<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(other.RightAtY(y)<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a3731935e70135384e25904d65c0ca8f7" kindref="member">RightAtY</ref>(y)<sp/>/<sp/><ref refid="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" kindref="member">kColumnWidthFactor</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>colors<sp/>match<sp/>for<sp/>two<sp/>text<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a43bbac4acbcc68b1998f0c92ca17be26" kindref="member">ColPartition::MatchingTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color1_[L_ALPHA_CHANNEL]<sp/>&gt;<sp/>kMaxRMSColorNoise<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.color1_[L_ALPHA_CHANNEL]<sp/>&gt;<sp/>kMaxRMSColorNoise)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>noisy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Colors<sp/>must<sp/>match<sp/>for<sp/>other<sp/>to<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_this1_o<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a2164c90398c78d8343f4bebec81f8341" kindref="member">ImageFind::ColorDistanceFromLine</ref>(other.color1_,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.color2_,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color1_);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_this2_o<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a2164c90398c78d8343f4bebec81f8341" kindref="member">ImageFind::ColorDistanceFromLine</ref>(other.color1_,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.color2_,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color2_);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_o1_this<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a2164c90398c78d8343f4bebec81f8341" kindref="member">ImageFind::ColorDistanceFromLine</ref>(color1_,<sp/>color2_,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.color1_);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_o2_this<sp/>=<sp/><ref refid="classtesseract_1_1_image_find_1a2164c90398c78d8343f4bebec81f8341" kindref="member">ImageFind::ColorDistanceFromLine</ref>(color1_,<sp/>color2_,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.color2_);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>4<sp/>distances<sp/>must<sp/>be<sp/>small<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_this1_o<sp/>&lt;<sp/>kMaxColorDistance<sp/>&amp;&amp;<sp/>d_this2_o<sp/>&lt;<sp/>kMaxColorDistance<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_o1_this<sp/>&lt;<sp/>kMaxColorDistance<sp/>&amp;&amp;<sp/>d_o2_this<sp/>&lt;<sp/><ref refid="namespacetesseract_1a4fb5be2b91cab225fc69bec75ccf96bc" kindref="member">kMaxColorDistance</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>sizes<sp/>match<sp/>for<sp/>two<sp/>text<sp/>partitions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>taking<sp/>orientation<sp/>into<sp/>account.<sp/>See<sp/>also<sp/>SizesSimilar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a5da7ad2aed53f88b06f60f044796d426" kindref="member">ColPartition::MatchingSizes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type_<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref><sp/>||<sp/>other.blob_type_<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classtesseract_1_1_tab_find_1a386ab5331aecfd3bf73b9dfdc5d23b57" kindref="member">TabFind::DifferentSizes</ref>(median_width_,<sp/>other.median_width_);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classtesseract_1_1_tab_find_1a386ab5331aecfd3bf73b9dfdc5d23b57" kindref="member">TabFind::DifferentSizes</ref>(median_size_,<sp/>other.median_size_);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>no<sp/>tabstop<sp/>violation<sp/>in<sp/>merging<sp/>this<sp/>and<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1acd5a7e99cb64ca351d6defeb0b650979" kindref="member">ColPartition::ConfirmNoTabViolation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>other.bounding_box_.left()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>other.LeftBlobRule())</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.bounding_box_.right()<sp/>&lt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.bounding_box_.right()<sp/>&lt;<sp/><ref refid="classtesseract_1_1_col_partition_1a206e0152232376b343553af9cdbd8ad4" kindref="member">LeftBlobRule</ref>())</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>other.bounding_box_.right()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>other.RightBlobRule())</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.bounding_box_.left()<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.bounding_box_.left()<sp/>&gt;<sp/><ref refid="classtesseract_1_1_col_partition_1a50177ba646b8b4b4a73ddc43d3b7a18a" kindref="member">RightBlobRule</ref>())</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>other<sp/>has<sp/>a<sp/>similar<sp/>stroke<sp/>width<sp/>to<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a254db121f880ac20406f454045dc9780" kindref="member">ColPartition::MatchingStrokeWidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fractional_tolerance,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constant_tolerance)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>match_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nonmatch_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it(const_cast&lt;BLOBNBOX_CLIST*&gt;(&amp;boxes_));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>other_it(const_cast&lt;BLOBNBOX_CLIST*&gt;(&amp;other.boxes_));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>box_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>other_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!box_it.cycled_list()<sp/>&amp;&amp;<sp/>!other_it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box_it.data()-&gt;MatchingStrokeWidth(*other_it.data(),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fractional_tolerance,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant_tolerance))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++match_count;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nonmatch_count;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>box_it.forward();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it.forward();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match_count<sp/>&gt;<sp/>nonmatch_count;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>base<sp/>is<sp/>an<sp/>acceptable<sp/>diacritic<sp/>base<sp/>char<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>this<sp/>as<sp/>the<sp/>diacritic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(1)<sp/>this<sp/>is<sp/>a<sp/>ColPartition<sp/>containing<sp/>only<sp/>diacritics,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(2)<sp/>the<sp/>base<sp/>characters<sp/>indicated<sp/>on<sp/>the<sp/>diacritics<sp/>all<sp/>believably<sp/>lie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>within<sp/>the<sp/>text<sp/>line<sp/>of<sp/>the<sp/>candidate<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a050a14aa4fa9b11f90e058ca242c4fcf" kindref="member">ColPartition::OKDiacriticMerge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>candidate,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(const_cast&lt;BLOBNBOX_CLIST*&gt;(&amp;boxes_));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_top<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bottom<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" kindref="member">IsDiacritic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Blob<sp/>is<sp/>not<sp/>a<sp/>diacritic:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>blobs<sp/>must<sp/>have<sp/>diacritic<sp/>bases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af83ee964739e33a2611a1ba4b21f7a4c" kindref="member">base_char_top</ref>()<sp/>&lt;<sp/>min_top)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_top<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af83ee964739e33a2611a1ba4b21f7a4c" kindref="member">base_char_top</ref>();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6fd24eab699bad3b00917fea0a82792b" kindref="member">base_char_bottom</ref>()<sp/>&gt;<sp/>max_bottom)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_bottom<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a6fd24eab699bad3b00917fea0a82792b" kindref="member">base_char_bottom</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>intersection<sp/>of<sp/>all<sp/>vertical<sp/>ranges<sp/>of<sp/>all<sp/>base<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>overlaps<sp/>the<sp/>median<sp/>range<sp/>of<sp/>this,<sp/>then<sp/>it<sp/>is<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>min_top<sp/>&gt;<sp/>candidate.median_bottom_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_bottom<sp/>&lt;<sp/>candidate.median_top_;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;OKDiacritic!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;y<sp/>ranges<sp/>don\&apos;t<sp/>overlap:<sp/>%d-%d<sp/>/<sp/>%d-%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_bottom,<sp/>min_top,<sp/>median_bottom_,<sp/>median_top_);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>sort<sp/>key<sp/>using<sp/>either<sp/>the<sp/>tab<sp/>vector,<sp/>or<sp/>the<sp/>bounding<sp/>box<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>tab<sp/>vector<sp/>is<sp/>NULL.<sp/>If<sp/>the<sp/>tab_vector<sp/>lies<sp/>inside<sp/>the<sp/>bounding_box,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>edge<sp/>of<sp/>the<sp/>box<sp/>as<sp/>a<sp/>key<sp/>any<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a770d020fe98100499e1a1bedfca9b1fc" kindref="member">ColPartition::SetLeftTab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector*<sp/>tab_vector)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_vector<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/>tab_vector-&gt;sort_key();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_tab_<sp/>=<sp/>left_key_<sp/>&lt;=<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_key_tab_)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>SetLeftTab,<sp/>but<sp/>with<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a426461a98a3feccd03ba68894dc8d4d2" kindref="member">ColPartition::SetRightTab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector*<sp/>tab_vector)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_vector<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/>tab_vector-&gt;sort_key();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_tab_<sp/>=<sp/>right_key_<sp/>&gt;=<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!right_key_tab_)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>left/right<sp/>tab<sp/>from<sp/>the<sp/>src<sp/>partition,<sp/>but<sp/>if<sp/>take_box<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true,<sp/>copies<sp/>the<sp/>box<sp/>instead<sp/>and<sp/>uses<sp/>that<sp/>as<sp/>a<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aff9a74526321b24bbafcdbc359f9d161" kindref="member">ColPartition::CopyLeftTab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_box)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>left_key_tab_<sp/>=<sp/>take_box<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/>src.left_key_tab_;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_key_tab_)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/>src.left_key_;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(<ref refid="classtesseract_1_1_col_partition_1a0194fb90361732323fa9c1d0c4b65d9c" kindref="member">XAtY</ref>(src.BoxLeftKey(),<sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>()));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin_<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>left_margin_<sp/>=<sp/>src.left_margin_;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>CopyLeftTab,<sp/>but<sp/>with<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ab4ec7202d19f98517fd32bce150ebbb0" kindref="member">ColPartition::CopyRightTab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>take_box)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>right_key_tab_<sp/>=<sp/>take_box<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/>src.right_key_tab_;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_key_tab_)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/>src.right_key_;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(<ref refid="classtesseract_1_1_col_partition_1a0194fb90361732323fa9c1d0c4b65d9c" kindref="member">XAtY</ref>(src.BoxRightKey(),<sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>()));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_margin_<sp/>&lt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>right_margin_<sp/>=<sp/>src.right_margin_;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>left<sp/>rule<sp/>line<sp/>x<sp/>coord<sp/>of<sp/>the<sp/>leftmost<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a206e0152232376b343553af9cdbd8ad4" kindref="member">ColPartition::LeftBlobRule</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(const_cast&lt;BLOBNBOX_CLIST*&gt;(&amp;boxes_));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.data()-&gt;left_rule();</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>right<sp/>rule<sp/>line<sp/>x<sp/>coord<sp/>of<sp/>the<sp/>rightmost<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a50177ba646b8b4b4a73ddc43d3b7a18a" kindref="member">ColPartition::RightBlobRule</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(const_cast&lt;BLOBNBOX_CLIST*&gt;(&amp;boxes_));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>it.move_to_last();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.data()-&gt;right_rule();</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aa92a42d781e779aac8cd593f8fd7d498" kindref="member">ColPartition::SpecialBlobsDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(type<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>];</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a2a9ba24fa7f6735045a09857d664136f" kindref="member">ColPartition::SpecialBlobsCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(type<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>blob_type<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa33e4d1cf720df979dc50d2b39abb4e9" kindref="member">special_text_type</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type<sp/>==<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a0b0967771316dc653ecc9af44c56dbd4" kindref="member">ColPartition::SetSpecialBlobsDensity</ref>(</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>density)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(type<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]<sp/>=<sp/>density;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aa348155cfa970382ea67c69ac2a95376" kindref="member">ColPartition::ComputeSpecialBlobsDensity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>memset(special_blobs_densities_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(special_blobs_densities_));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes_.empty())<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa33e4d1cf720df979dc50d2b39abb4e9" kindref="member">special_text_type</ref>();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]++;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0;<sp/>type<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>;<sp/>++<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]<sp/>/=<sp/>boxes_.length();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>partner<sp/>above<sp/>if<sp/>upper,<sp/>otherwise<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>them<sp/>uniquely<sp/>and<sp/>keep<sp/>the<sp/>list<sp/>sorted<sp/>by<sp/>box<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partnerships<sp/>are<sp/>added<sp/>symmetrically<sp/>to<sp/>partner<sp/>and<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aefd307b4da338376d4cadc4a2f424b60" kindref="member">ColPartition::AddPartner</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,<sp/>ColPartition*<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>partner-&gt;lower_partners_.add_sorted(SortByBoxLeft&lt;ColPartition&gt;,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_partners_.add_sorted(SortByBoxLeft&lt;ColPartition&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>partner);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>partner-&gt;upper_partners_.add_sorted(SortByBoxLeft&lt;ColPartition&gt;,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_partners_.add_sorted(SortByBoxLeft&lt;ColPartition&gt;,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>partner);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>the<sp/>partner<sp/>from<sp/>this,<sp/>but<sp/>does<sp/>not<sp/>remove<sp/>this<sp/>from<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>asymmetric<sp/>removal<sp/>is<sp/>so<sp/>as<sp/>not<sp/>to<sp/>mess<sp/>up<sp/>the<sp/>iterator<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/>working<sp/>on<sp/>partner&apos;s<sp/>partner<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aa53b48378daeaaec5ca59388a18cbfe5" kindref="member">ColPartition::RemovePartner</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,<sp/>ColPartition*<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(upper<sp/>?<sp/>&amp;upper_partners_<sp/>:<sp/>&amp;lower_partners_);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.data()<sp/>==<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>partner<sp/>if<sp/>the<sp/>given<sp/>partner<sp/>is<sp/>a<sp/>singleton,<sp/>otherwise<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1abb824820c4ebf82ee1dfc9c2a30c17ce" kindref="member">ColPartition::SingletonPartner</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>ColPartition_CLIST*<sp/>partners<sp/>=<sp/>upper<sp/>?<sp/>&amp;upper_partners_<sp/>:<sp/>&amp;lower_partners_;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;singleton())</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(partners);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.data();</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge<sp/>with<sp/>the<sp/>other<sp/>partition<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aedb906fb73709c79d702f0f95a85b300" kindref="member">ColPartition::Absorb</ref>(ColPartition*<sp/>other,<sp/><ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>has<sp/>to<sp/>either<sp/>own<sp/>all<sp/>of<sp/>the<sp/>blobs<sp/>or<sp/>none<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>flag<sp/>is<sp/>consisent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>()<sp/>==<sp/>other-&gt;owns_blobs());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(nbeato):<sp/>check<sp/>owns_blobs<sp/>better.<sp/>Right<sp/>now<sp/>owns_blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>always<sp/>be<sp/>true<sp/>when<sp/>this<sp/>is<sp/>called.<sp/>So<sp/>there<sp/>is<sp/>no<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>||</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>other-&gt;bounding_box_.left(),</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;bounding_box_.bottom()))<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>other-&gt;Print();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>special_blobs_densities_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>memset(special_blobs_densities_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(special_blobs_densities_));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0;<sp/>type<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>;<sp/>++<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w1<sp/>=<sp/>boxes_.length(),<sp/>w2<sp/>=<sp/>other-&gt;boxes_.length();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_val<sp/>=<sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]<sp/>*<sp/>w1<sp/>+</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]<sp/>*<sp/>w2;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w1<sp/>||<sp/>!w2)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>special_blobs_densities_[<ref refid="classtesseract_1_1_col_partition_1a32e3f08af42cf1e5ad99118b6fd66df2" kindref="member">type</ref>]<sp/>=<sp/>new_val<sp/>/<sp/>(w1<sp/>+<sp/>w2);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>the<sp/>two<sp/>sorted<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it2(&amp;other-&gt;boxes_);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!it2.empty();<sp/>it2.forward())<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox2<sp/>=<sp/>it2.extract();</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>prev_owner<sp/>=<sp/>bbox2-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_owner<sp/>!=<sp/>other<sp/>&amp;&amp;<sp/>prev_owner<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>blob<sp/>on<sp/>other&apos;s<sp/>list<sp/>is<sp/>owned<sp/>by<sp/>someone<sp/>else;<sp/>let<sp/>them<sp/>have<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(prev_owner<sp/>==<sp/>other<sp/>||<sp/>prev_owner<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_owner<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox2-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>it.add_to_end(bbox2);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>left_margin_<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(left_margin_,<sp/>other-&gt;left_margin_);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>right_margin_<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(right_margin_,<sp/>other-&gt;right_margin_);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;left_key_<sp/>&lt;<sp/>left_key_)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/>other-&gt;left_key_;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_tab_<sp/>=<sp/>other-&gt;left_key_tab_;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;right_key_<sp/>&gt;<sp/>right_key_)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/>other-&gt;right_key_;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_tab_<sp/>=<sp/>other-&gt;right_key_tab_;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>the<sp/>flow<sp/>and<sp/>blob_type<sp/>in<sp/>a<sp/>sensible<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dominant<sp/>flows<sp/>stay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="blobbox_8h_1a8157ecf7fd234474a816126c75012952" kindref="member">DominatesInMerge</ref>(flow_,<sp/>other-&gt;flow_))<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/>other-&gt;flow_;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/>other-&gt;blob_type_;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1abfa13ecb273fa29166a663daf82a2254" kindref="member">SetBlobTypes</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.sort(SortByBoxBottom&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>last_add_was_vertical_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.sort(SortByBoxLeft&lt;BLOBNBOX&gt;);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>last_add_was_vertical_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ComputeLimits</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>partner<sp/>lists.<sp/>other<sp/>is<sp/>going<sp/>away,<sp/>so<sp/>remove<sp/>it<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>partner<sp/>of<sp/>all<sp/>its<sp/>partners<sp/>and<sp/>add<sp/>this<sp/>in<sp/>its<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>0;<sp/>upper<sp/>&lt;<sp/>2;<sp/>++upper)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_CLIST<sp/>partners;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>part_it(&amp;partners);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_list_after(upper<sp/>?<sp/>&amp;other-&gt;upper_partners_</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&amp;other-&gt;lower_partners_);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/>other);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;AddPartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>other;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a8ea991fccc4013feadaa1cc2b8f35051" kindref="member">SetColumnGoodness</ref>(cb);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge1<sp/>and<sp/>merge2<sp/>are<sp/>candidates<sp/>to<sp/>be<sp/>merged,<sp/>yet<sp/>their<sp/>combined<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overlaps<sp/>this.<sp/>Is<sp/>that<sp/>allowed?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>overlap<sp/>between<sp/>this<sp/>and<sp/>the<sp/>merged<sp/>pair<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>merge<sp/>candidates<sp/>is<sp/>sufficiently<sp/>trivial<sp/>to<sp/>be<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>merged<sp/>box<sp/>can<sp/>graze<sp/>the<sp/>edge<sp/>of<sp/>this<sp/>by<sp/>the<sp/>ok_box_overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>that<sp/>exceeds<sp/>the<sp/>margin<sp/>to<sp/>the<sp/>median<sp/>top<sp/>and<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ok_box_overlap<sp/>should<sp/>be<sp/>set<sp/>by<sp/>the<sp/>caller<sp/>appropriate<sp/>to<sp/>the<sp/>sizes<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>text<sp/>involved,<sp/>and<sp/>is<sp/>usually<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>median<sp/>size<sp/>of<sp/>merge1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and/or<sp/>merge2,<sp/>or<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Determine<sp/>whether<sp/>vertical<sp/>text<sp/>needs<sp/>to<sp/>be<sp/>considered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a8ea7f1476b335624a5e11985491dc589" kindref="member">ColPartition::OKMergeOverlap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>merge1,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>merge2,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_box_overlap,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>partitions<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>be<sp/>involved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>()<sp/>||<sp/>merge1.IsVerticalType()<sp/>||<sp/>merge2.IsVerticalType())<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Vertical<sp/>partition\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>merging<sp/>partitions<sp/>must<sp/>strongly<sp/>overlap<sp/>each<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!merge1.VSignificantCoreOverlap(merge2))<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Voverlap<sp/>%d<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merge1.VCoreOverlap(merge2),</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merge1.VSignificantCoreOverlap(merge2));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>merged<sp/>box<sp/>must<sp/>not<sp/>overlap<sp/>the<sp/>median<sp/>bounds<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>merged_box(merge1.bounding_box());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>merged_box<sp/>+=<sp/>merge2.bounding_box();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(merged_box.bottom()<sp/>&lt;<sp/>median_top_<sp/>&amp;&amp;<sp/>merged_box.top()<sp/>&gt;<sp/>median_bottom_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_box.bottom()<sp/>&lt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>ok_box_overlap<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_box.top()<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>ok_box_overlap)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Excessive<sp/>box<sp/>overlap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Looks<sp/>OK!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>blob<sp/>at<sp/>which<sp/>to<sp/>split<sp/>this<sp/>to<sp/>minimize<sp/>the<sp/>overlap<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>box.<sp/>Returns<sp/>the<sp/>first<sp/>blob<sp/>to<sp/>go<sp/>in<sp/>the<sp/>second<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/><ref refid="classtesseract_1_1_col_partition_1a665821774d2bfdd59db589683a4cf87b" kindref="member">ColPartition::OverlapSplitBlob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes_.empty()<sp/>||<sp/>boxes_.singleton())</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>left_box(it.data()-&gt;bounding_box());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.forward();<sp/>!it.at_first();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>left_box<sp/>+=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_box.overlap(box))</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bbox;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>this<sp/>partition<sp/>keeping<sp/>the<sp/>first<sp/>half<sp/>in<sp/>this<sp/>and<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>half.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Splits<sp/>by<sp/>putting<sp/>the<sp/>split_blob<sp/>and<sp/>the<sp/>blobs<sp/>that<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>second<sp/>half,<sp/>and<sp/>the<sp/>rest<sp/>in<sp/>the<sp/>first<sp/>half.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1ab629b53eb1420cf5947f3c003d2d4761" kindref="member">ColPartition::SplitAtBlob</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>split_blob)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>split_part<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a70116af39898d43ca19ecb189faccfa1" kindref="member">ShallowCopy</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>split_part-&gt;set_owns_blobs(<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>prev_owner<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>()<sp/>||<sp/>prev_owner<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>prev_owner<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox<sp/>==<sp/>split_blob<sp/>||<sp/>!split_part-&gt;boxes_.empty())<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split_part-&gt;AddBox(it.extract());</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>()<sp/>&amp;&amp;<sp/>prev_owner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(split_part);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!it.empty());</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_part-&gt;IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>part<sp/>ended<sp/>up<sp/>with<sp/>nothing.<sp/>Possible<sp/>if<sp/>split_blob<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>list<sp/>of<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>split_part;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>right_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>split_part-&gt;left_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ComputeLimits</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(nbeato)<sp/>Merge<sp/>Ray&apos;s<sp/>CL<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(owns_blobs())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>SetBlobTextlineGoodness();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>split_part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(nbeato)<sp/>Merge<sp/>Ray&apos;s<sp/>CL<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(split_part-&gt;owns_blobs())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>split_part-&gt;SetBlobTextlineGoodness();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split_part;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>this<sp/>partition<sp/>at<sp/>the<sp/>given<sp/>x<sp/>coordinate,<sp/>returning<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">//<sp/>half<sp/>and<sp/>keeping<sp/>the<sp/>left<sp/>half<sp/>in<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a33427fb9a563253c69e0806115fb2a4b" kindref="member">ColPartition::SplitAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split_x)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_x<sp/>&lt;=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>||<sp/>split_x<sp/>&gt;=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>will<sp/>be<sp/>no<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>split_part<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a70116af39898d43ca19ecb189faccfa1" kindref="member">ShallowCopy</ref>();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>split_part-&gt;set_owns_blobs(<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>());</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>prev_owner<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>()<sp/>||<sp/>prev_owner<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>prev_owner<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;=<sp/>split_x)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split_part-&gt;AddBox(it.extract());</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>()<sp/>&amp;&amp;<sp/>prev_owner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(split_part);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!it.empty());</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_part-&gt;IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>part<sp/>ended<sp/>up<sp/>with<sp/>nothing.<sp/>Possible<sp/>if<sp/>split_x<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>through<sp/>the<sp/>last<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>split_part;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>right_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>split_part-&gt;left_key_tab_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>right_margin_<sp/>=<sp/>split_x;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>split_part-&gt;left_margin_<sp/>=<sp/>split_x;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ComputeLimits</ref>();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>split_part-&gt;ComputeLimits();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split_part;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recalculates<sp/>all<sp/>the<sp/>coordinate<sp/>limits<sp/>of<sp/>the<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a18f2c4bd514ea700d7d4f6d0a6541d17" kindref="member">ColPartition::ComputeLimits</ref>()<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>bounding_box_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>non_leader_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.empty())<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(left_margin_);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(right_margin_);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(0);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(0);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_<sp/>+=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++non_leader_count;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_key_tab_)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>left_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_key_<sp/>&gt;<sp/><ref refid="classtesseract_1_1_col_partition_1af8679f5d1f87946bcd821dd2ffe1e80e" kindref="member">BoxLeftKey</ref>()<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>investigate<sp/>the<sp/>causes<sp/>of<sp/>these<sp/>error<sp/>messages,<sp/>to<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>if<sp/>they<sp/>are<sp/>genuinely<sp/>harmful,<sp/>or<sp/>just<sp/>indicative<sp/>of<sp/>junk<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Computed<sp/>left-illegal<sp/>partition\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!right_key_tab_)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>right_key_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_key_<sp/>&lt;<sp/><ref refid="classtesseract_1_1_col_partition_1a498b82d4970d0c0fe24c59e27d5933e7" kindref="member">BoxRightKey</ref>()<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Computed<sp/>right-illegal<sp/>partition\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.empty())</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1a0ae19652d302dcc8bfd9cab1bed18770" kindref="member">IsImageType</ref>()<sp/>||<sp/><ref refid="classtesseract_1_1_col_partition_1a644ec0c0a7bf20b9aca71b8413b2a87e" kindref="member">blob_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>||</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a644ec0c0a7bf20b9aca71b8413b2a87e" kindref="member">blob_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>median_top_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>median_bottom_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>median_size_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>median_left_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>median_right_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>median_width_<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>top_stats(bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>bottom_stats(bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>size_stats(0,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>left_stats(bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>right_stats(bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>width_stats(0,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(non_leader_count<sp/>==<sp/>0<sp/>||<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_stats.add(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_stats.add(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_stats.add(box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_stats.add(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_stats.add(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_stats.add(box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>area);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>median_top_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(top_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>median_bottom_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bottom_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>median_size_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>median_left_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(left_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>median_right_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(right_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>median_width_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width_stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_margin_<sp/>&lt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Made<sp/>partition<sp/>with<sp/>bad<sp/>right<sp/>coords&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin_<sp/>&gt;<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Made<sp/>partition<sp/>with<sp/>bad<sp/>left<sp/>coords&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>partner<sp/>lists.<sp/>The<sp/>bounding<sp/>box<sp/>has<sp/>changed<sp/>and<sp/>partners<sp/>are<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>bounding<sp/>box<sp/>order,<sp/>so<sp/>remove<sp/>and<sp/>reinsert<sp/>this<sp/>as<sp/>a<sp/>partner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>all<sp/>its<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>0;<sp/>upper<sp/>&lt;<sp/>2;<sp/>++upper)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_CLIST<sp/>partners;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>part_it(&amp;partners);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.add_list_after(upper<sp/>?<sp/>&amp;upper_partners_<sp/>:<sp/>&amp;lower_partners_);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.move_to_first();<sp/>!part_it.empty();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>part_it.extract();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;AddPartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Recomputed<sp/>box<sp/>for<sp/>partition<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>boxes<sp/>that<sp/>overlap<sp/>the<sp/>given<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a85049818069c9a89322235b286b9915d" kindref="member">ColPartition::CountOverlappingBoxes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>()))</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++overlap_count;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overlap_count;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>and<sp/>sets<sp/>the<sp/>type_<sp/>and<sp/>first_colum_,<sp/>last_column_<sp/>and<sp/>column_set_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resolution<sp/>refers<sp/>to<sp/>the<sp/>ppi<sp/>resolution<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1acf8233abc2eb9a0b9cc6f258ddd1d04d" kindref="member">ColPartition::SetPartitionType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/>ColPartitionSet*<sp/>columns)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_spanned_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06a" kindref="member">ColumnSpanningType</ref><sp/>span_type<sp/>=</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns-&gt;SpanningType(resolution,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>(),<sp/>left_margin_,<sp/>right_margin_,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;first_column_,<sp/>&amp;last_column_,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;first_spanned_col);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>column_set_<sp/>=<sp/>columns;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_column_<sp/>&lt;<sp/>last_column_<sp/>&amp;&amp;<sp/>span_type<sp/>==<sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa8c1a2f43d95cbf09416204e1f5e04163" kindref="member">CST_PULLOUT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_col_partition_1acf97b6bd6c867bb71f5cd639f19b9994" kindref="member">IsLineType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unequal<sp/>columns<sp/>may<sp/>indicate<sp/>that<sp/>the<sp/>pullout<sp/>spans<sp/>one<sp/>of<sp/>the<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>lies<sp/>in,<sp/>so<sp/>force<sp/>it<sp/>to<sp/>be<sp/>allocated<sp/>to<sp/>just<sp/>that<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_spanned_col<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_column_<sp/>=<sp/>first_spanned_col;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_column_<sp/>=<sp/>first_spanned_col;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((first_column_<sp/>&amp;<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_<sp/>=<sp/>first_column_;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((last_column_<sp/>&amp;<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_<sp/>=<sp/>last_column_;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_<sp/>=<sp/>last_column_<sp/>=<sp/>(first_column_<sp/>+<sp/>last_column_)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a5a46de5acb31b0aec90ab89933c69bc9" kindref="member">PartitionType</ref>(span_type);</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>PartitionType<sp/>from<sp/>the<sp/>current<sp/>BlobRegionType<sp/>and<sp/>a<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flow<sp/>spanning<sp/>type<sp/>ColumnSpanningType,<sp/>generated<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitionSet::SpanningType,<sp/>that<sp/>indicates<sp/>how<sp/>the<sp/>partition<sp/>sits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/><ref refid="classtesseract_1_1_col_partition_1a5a46de5acb31b0aec90ab89933c69bc9" kindref="member">ColPartition::PartitionType</ref>(<ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06a" kindref="member">ColumnSpanningType</ref><sp/>flow)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flow<sp/>==<sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aad17bb659c6735f37306a6161f4013416" kindref="member">CST_NOISE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_type_<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref><sp/>&amp;&amp;<sp/>blob_type_<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_type_<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref><sp/>&amp;&amp;<sp/>blob_type_<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>flow<sp/>=<sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa53dd9af51c333b786fe51bd5f01543d6" kindref="member">CST_FLOWING</ref>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(blob_type_)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>:</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>:</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fad3f3a03631d09be1ba300cdd2af9a0d5" kindref="member">PT_HORZ_LINE</ref>;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref>:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa0cc815637c8f3f7967719c6abd956f0f" kindref="member">PT_VERT_LINE</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a15e526e8dd226bd4d7678da6dcddb49b" kindref="member">BRT_RECTIMAGE</ref>:</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>:</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(flow)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa53dd9af51c333b786fe51bd5f01543d6" kindref="member">CST_FLOWING</ref>:</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fae4dd1e076e7d8354de8123bbdfb9e6b0" kindref="member">PT_FLOWING_IMAGE</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aacf3616b52ca15a43ddfd40b9c91c9cd5" kindref="member">CST_HEADING</ref>:</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa919711bca6bed2e6a9846e4dc91f3900" kindref="member">PT_HEADING_IMAGE</ref>;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa8c1a2f43d95cbf09416204e1f5e04163" kindref="member">CST_PULLOUT</ref>:</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa88dcd7f4800095eb2f18b8a9bd521001" kindref="member">PT_PULLOUT_IMAGE</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!</highlight><highlight class="stringliteral">&quot;Undefined<sp/>flow<sp/>type<sp/>for<sp/>image!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>:</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fadf6b7dd3b8ca94923c3b94dfe53f230e" kindref="member">PT_VERTICAL_TEXT</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>:</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(flow)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa53dd9af51c333b786fe51bd5f01543d6" kindref="member">CST_FLOWING</ref>:</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677faaa63d8d8a99ddc2b3957f8e8787b4eca" kindref="member">PT_FLOWING_TEXT</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aacf3616b52ca15a43ddfd40b9c91c9cd5" kindref="member">CST_HEADING</ref>:</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa47f25d4065407dd98db92554ca54468b" kindref="member">PT_HEADING_TEXT</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa8c1a2f43d95cbf09416204e1f5e04163" kindref="member">CST_PULLOUT</ref>:</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa0e758c0b8cd519397b9c94ce6c12858c" kindref="member">PT_PULLOUT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!</highlight><highlight class="stringliteral">&quot;Undefined<sp/>flow<sp/>type<sp/>for<sp/>text!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!</highlight><highlight class="stringliteral">&quot;Should<sp/>never<sp/>get<sp/>here!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>first<sp/>and<sp/>last<sp/>column<sp/>touched<sp/>by<sp/>this<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resolution<sp/>refers<sp/>to<sp/>the<sp/>ppi<sp/>resolution<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a609bdd544b011d0b4fd46609843a9088" kindref="member">ColPartition::ColumnRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/>ColPartitionSet*<sp/>columns,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>first_col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>last_col)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_spanned_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06a" kindref="member">ColumnSpanningType</ref><sp/>span_type<sp/>=</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns-&gt;SpanningType(resolution,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>(),<sp/>left_margin_,<sp/>right_margin_,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_col,<sp/>last_col,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;first_spanned_col);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a5a46de5acb31b0aec90ab89933c69bc9" kindref="member">PartitionType</ref>(span_type);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>internal<sp/>flags<sp/>good_width_<sp/>and<sp/>good_column_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a8ea991fccc4013feadaa1cc2b8f35051" kindref="member">ColPartition::SetColumnGoodness</ref>(<ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a3731935e70135384e25904d65c0ca8f7" kindref="member">RightAtY</ref>(y)<sp/>-<sp/><ref refid="classtesseract_1_1_col_partition_1ab71e3aebabe8a0a9e3cde26f84ec4f46" kindref="member">LeftAtY</ref>(y);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>good_width_<sp/>=<sp/>cb-&gt;Run(width);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>good_column_<sp/>=<sp/>blob_type_<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref><sp/>&amp;&amp;<sp/>left_key_tab_<sp/>&amp;&amp;<sp/>right_key_tab_;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>whether<sp/>the<sp/>blobs<sp/>in<sp/>this<sp/>partition<sp/>mostly<sp/>represent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>leader<sp/>(fixed<sp/>pitch<sp/>sequence)<sp/>and<sp/>sets<sp/>the<sp/>member<sp/>blobs<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>height<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>been<sp/>tested<sp/>elsewhere,<sp/>and<sp/>that<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>will<sp/>find<sp/>most<sp/>fixed-pitch<sp/>text<sp/>as<sp/>leader<sp/>without<sp/>a<sp/>height<sp/>filter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leader<sp/>detection<sp/>is<sp/>limited<sp/>to<sp/>sequences<sp/>of<sp/>identical<sp/>width<sp/>objects,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>....<sp/>or<sp/>----,<sp/>so<sp/>patterns,<sp/>such<sp/>as<sp/>.-.-.-.-.<sp/>will<sp/>not<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ac793c818de7d472b7d45b4c2a6b9c11e" kindref="member">ColPartition::MarkAsLeaderIfMonospaced</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>statistics<sp/>on<sp/>the<sp/>gaps<sp/>between<sp/>blobs<sp/>and<sp/>the<sp/>widths<sp/>of<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_width<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>gap_stats(0,<sp/>part_width);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>width_stats(0,<sp/>part_width);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>prev_blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>prev_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>width_stats.add(prev_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.forward();<sp/>!it.at_first();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>gap_stats.add(left<sp/>-<sp/>prev_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>width_stats.add(right<sp/>-<sp/>left,<sp/>1);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_blob<sp/>=<sp/>blob;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>++blob_count;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>median_gap<sp/>=<sp/>gap_stats.median();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ae6dbcc0f37246998a114bbe2432d1969" kindref="member">median_width</ref><sp/>=<sp/>width_stats.median();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_width<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(median_gap,<sp/>median_width);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_width<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(median_gap,<sp/>median_width);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gap_iqr<sp/>=<sp/>gap_stats.ile(0.75<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>-<sp/>gap_stats.ile(0.25<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;gap<sp/>iqr<sp/>=<sp/>%g,<sp/>blob_count=%d,<sp/>limits=%g,%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap_iqr,<sp/>blob_count,<sp/>max_width<sp/>*<sp/>kMaxLeaderGapFractionOfMax,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_width<sp/>*<sp/>kMaxLeaderGapFractionOfMin);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap_iqr<sp/>&lt;<sp/>max_width<sp/>*<sp/>kMaxLeaderGapFractionOfMax<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gap_iqr<sp/>&lt;<sp/>min_width<sp/>*<sp/>kMaxLeaderGapFractionOfMin<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_count<sp/>&gt;=<sp/>kMinLeaderCount)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>stable<sp/>enough<sp/>to<sp/>be<sp/>called<sp/>a<sp/>leader,<sp/>so<sp/>check<sp/>the<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>leader<sp/>dashes<sp/>can<sp/>join,<sp/>run<sp/>a<sp/>dp<sp/>cutting<sp/>algorithm<sp/>and<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ceil(gap_iqr<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_step<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(median_gap<sp/>+<sp/>median_width<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_step<sp/>=<sp/>min_step<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>min_step<sp/>-=<sp/>offset;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>buffer<sp/>with<sp/>min_step/2<sp/>on<sp/>each<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_left<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>min_step<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>part_width<sp/>+=<sp/>min_step;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>DPPoint*<sp/>projection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DPPoint[part_width];</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>left;<sp/>x<sp/>&lt;<sp/>right;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projection[left<sp/>-<sp/>part_left].AddLocalCost(height);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>DPPoint*<sp/>best_end<sp/>=<sp/><ref refid="classtesseract_1_1_d_p_point_1a9d0050679afe827f7e0434c70916a07a" kindref="member">DPPoint::Solve</ref>(min_step,<sp/>max_step,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classtesseract_1_1_d_p_point_1a4d01fa4702020ea2e3cbd89f754fc9e5" kindref="member">DPPoint::CostWithVariance</ref>,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_width,<sp/>projection);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_end<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>best_end-&gt;total_cost()<sp/>&lt;<sp/>blob_count)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Good<sp/>enough.<sp/>Call<sp/>it<sp/>a<sp/>leader.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>first<sp/>or<sp/>last<sp/>blob<sp/>is<sp/>spaced<sp/>too<sp/>much,<sp/>don&apos;t<sp/>mark<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_first())<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>it.data_relative(1)-&gt;bounding_box().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>+<sp/>gap<sp/>&gt;<sp/>max_step)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.data_relative(-1)-&gt;bounding_box().right();</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>+<sp/>gap<sp/>&gt;<sp/>max_step)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(<ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_end<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>cost<sp/>=<sp/>%d<sp/>vs<sp/>allowed<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_end-&gt;total_cost()<sp/>&lt;<sp/>blob_count);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>projection;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>result<sp/>of<sp/>TextlineProjection::EvaluateColPartition,<sp/>(positive<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>text,<sp/>negative<sp/>for<sp/>vertical<sp/>text,<sp/>and<sp/>near<sp/>zero<sp/>for<sp/>non-text),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sets<sp/>the<sp/>blob_type_<sp/>and<sp/>flow_<sp/>for<sp/>this<sp/>partition<sp/>to<sp/>indicate<sp/>whether<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>strongly<sp/>or<sp/>weakly<sp/>vertical<sp/>or<sp/>horizontal<sp/>text,<sp/>or<sp/>non-text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>assumes<sp/>that<sp/>the<sp/>blob<sp/>neighbours<sp/>are<sp/>valid<sp/>(from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StrokeWidth::SetNeighbours)<sp/>and<sp/>that<sp/>those<sp/>neighbours<sp/>have<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>region_type()<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a4ce776ccc6a6222ccc7abeece8e1c7d5" kindref="member">ColPartition::SetRegionAndFlowTypesFromProjectionValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_count<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>#<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_blob_score_<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>#<sp/>good<sp/>strokewidth<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noisy_count<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>#<sp/>neighbours<sp/>marked<sp/>as<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hline_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vline_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>++blob_count;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>noisy_count<sp/>+=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a33a55d6d0da2ae6f24a5b6e95b9d10cf" kindref="member">NoisyNeighbours</ref>();</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>good_blob_score_<sp/>+=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a17600c15bdfd57f24bb7ec5b2765a48f" kindref="member">GoodTextBlob</ref>();</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>)<sp/>++hline_count;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref>)<sp/>++vline_count;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hline_count<sp/>&gt;<sp/>vline_count)<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vline_count<sp/>&gt;<sp/>hline_count)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a745b15b1c990fa88c0712c50c5cd2202" kindref="member">BTFT_NONE</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>-1<sp/>||<sp/>1<sp/>&lt;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>long_side;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>short_side;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>long_side<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>short_side<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a4f0b1431532d0e838187df32f2e822d7" kindref="member">BRT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>long_side<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>short_side<sp/>=<sp/>bounding_box_.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type_<sp/>=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575aea2da025a50db20db8213f96495dd4a6" kindref="member">BRT_VERT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>combine<sp/>the<sp/>old<sp/>metrics<sp/>using<sp/>aspect<sp/>ratio<sp/>and<sp/>blob<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>input<sp/>value<sp/>by<sp/>allowing<sp/>a<sp/>strong<sp/>indication<sp/>to<sp/>flip<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STRONG_CHAIN/CHAIN<sp/>flow<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strong_score<sp/>=<sp/>blob_count<sp/>&gt;=<sp/>kHorzStrongTextlineCount<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(short_side<sp/>&gt;<sp/>kHorzStrongTextlineHeight)<sp/>++strong_score;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(short_side<sp/>*<sp/>kHorzStrongTextlineAspect<sp/>&lt;<sp/>long_side)<sp/>++strong_score;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(value)<sp/>&gt;=<sp/>kMinStrongTextValue)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(value)<sp/>&gt;=<sp/>kMinChainTextValue)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upgrade<sp/>chain<sp/>to<sp/>strong<sp/>chain<sp/>if<sp/>the<sp/>other<sp/>indicators<sp/>are<sp/>good</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flow_<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref><sp/>&amp;&amp;<sp/>strong_score<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Downgrade<sp/>strong<sp/>vertical<sp/>text<sp/>to<sp/>chain<sp/>if<sp/>the<sp/>indicators<sp/>are<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flow_<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1ac6822a7999424340562c785a3fd95daa" kindref="member">BTFT_STRONG_CHAIN</ref><sp/>&amp;&amp;<sp/>value<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>strong_score<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a8fa903eb3c633ef681659563769a8007" kindref="member">BTFT_CHAIN</ref>;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flow_<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1adac19762bd040a53914be696482c1e53" kindref="member">BTFT_NEIGHBOURS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>noisy<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noisy_count<sp/>&gt;=<sp/>blob_count)<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flow_<sp/>=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1af99f0c54b98b6c7a0dd5d5f0b5dc635d" kindref="member">BTFT_NONTEXT</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_type_=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;RegionFlowTypesFromProjectionValue<sp/>count=%d,<sp/>noisy=%d,<sp/>score=%d,&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_count,<sp/>noisy_count,<sp/>good_blob_score_);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Projection<sp/>value=%d,<sp/>flow=%d,<sp/>blob_type=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>flow_,<sp/>blob_type_);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1abfa13ecb273fa29166a663daf82a2254" kindref="member">SetBlobTypes</ref>();</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>all<sp/>blobs<sp/>with<sp/>the<sp/>partition<sp/>blob<sp/>type<sp/>and<sp/>flow,<sp/>but<sp/>never<sp/>overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leader<sp/>blobs,<sp/>as<sp/>we<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>identify<sp/>them<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1abfa13ecb273fa29166a663daf82a2254" kindref="member">ColPartition::SetBlobTypes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_col_partition_1adb5b080242a8eacde82dd88186ad2cf3" kindref="member">owns_blobs</ref>())</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a64e3e70c4fac4d4e3facdb4638307d7f" kindref="member">BTFT_LEADER</ref>)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(flow_);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(blob_type_);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/>NULL<sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>decent<sp/>baseline<sp/>can<sp/>be<sp/>fitted<sp/>through<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Works<sp/>for<sp/>both<sp/>horizontal<sp/>and<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a65b2878a089ecff1dc1e221ed3189ddc" kindref="member">ColPartition::HasGoodBaseline</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Approximation<sp/>of<sp/>the<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>DetLineFit<sp/>linepoints;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculation<sp/>of<sp/>the<sp/>mean<sp/>height<sp/>on<sp/>this<sp/>line<sp/>segment.<sp/>Note<sp/>that<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>variable<sp/>names<sp/>apply<sp/>to<sp/>the<sp/>context<sp/>of<sp/>a<sp/>horizontal<sp/>line,<sp/>and<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>analogously,<sp/>rather<sp/>than<sp/>literally<sp/>in<sp/>the<sp/>case<sp/>of<sp/>a<sp/>vertical<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coverage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box(it.data()-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>points<sp/>representing<sp/>the<sp/>baseline<sp/>at<sp/>the<sp/>middle<sp/>of<sp/>each<sp/>blob,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>add<sp/>an<sp/>additional<sp/>point<sp/>for<sp/>each<sp/>end<sp/>of<sp/>the<sp/>line.<sp/>This<sp/>makes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>harder<sp/>to<sp/>fit<sp/>a<sp/>severe<sp/>skew<sp/>angle,<sp/>as<sp/>it<sp/>is<sp/>most<sp/>likely<sp/>not<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>vertical<sp/>line,<sp/>use<sp/>the<sp/>right<sp/>side<sp/>as<sp/>the<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>first_pt(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>bottom-right<sp/>of<sp/>the<sp/>first<sp/>(bottom)<sp/>box,<sp/>the<sp/>top-right<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last,<sp/>and<sp/>the<sp/>middle-right<sp/>of<sp/>all<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>linepoints.Add(first_pt);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.forward();<sp/>!it.at_last();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>box_pt(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linepoints.Add(box_pt);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_height<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coverage<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++height_count;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>=<sp/>it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>last_pt(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>linepoints.Add(last_pt);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>last_pt.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>-<sp/>first_pt.y();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>lines<sp/>use<sp/>the<sp/>bottom<sp/>as<sp/>the<sp/>baseline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box(it.data()-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>bottom-left<sp/>of<sp/>the<sp/>first<sp/>box,<sp/>the<sp/>the<sp/>bottom-right<sp/>of<sp/>the<sp/>last,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>middle<sp/>of<sp/>all<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>first_pt(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>linepoints.Add(first_pt);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.forward();<sp/>!it.at_last();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>box_pt((box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linepoints.Add(box_pt);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_height<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coverage<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++height_count;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>=<sp/>it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>last_pt(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>linepoints.Add(last_pt);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>last_pt.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>-<sp/>first_pt.x();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>median<sp/>error<sp/>allowed<sp/>to<sp/>be<sp/>a<sp/>good<sp/>text<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_error<sp/>=<sp/>kMaxBaselineError<sp/>*<sp/>total_height<sp/>/<sp/>height_count;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>start_pt,<sp/>end_pt;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>linepoints.Fit(&amp;start_pt,<sp/>&amp;end_pt);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>&lt;<sp/>max_error<sp/>&amp;&amp;<sp/>coverage<sp/>&gt;=<sp/>kMinBaselineCoverage<sp/>*<sp/>width;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>this<sp/>ColPartition<sp/>to<sp/>a<sp/>matching<sp/>WorkingPartSet<sp/>if<sp/>one<sp/>can<sp/>be<sp/>found,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise<sp/>starts<sp/>a<sp/>new<sp/>one<sp/>in<sp/>the<sp/>appropriate<sp/>column,<sp/>ending<sp/>the<sp/>previous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a36da7f621853cc3f769c581ad5997965" kindref="member">ColPartition::AddToWorkingSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkingPartSet_LIST*<sp/>working_sets)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_owned_)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>it<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>block_owned_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>WorkingPartSet_IT<sp/>it(working_sets);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>an<sp/>upper<sp/>partner<sp/>use<sp/>its<sp/>working_set_<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1abb824820c4ebf82ee1dfc9c2a30c17ce" kindref="member">SingletonPartner</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>partner-&gt;working_set_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set_<sp/>=<sp/>partner-&gt;working_set_;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set_-&gt;<ref refid="classtesseract_1_1_working_part_set_1a75288f5609d5095cee47ac92e3475608" kindref="member">AddPartition</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Partition<sp/>with<sp/>partner<sp/>has<sp/>no<sp/>working<sp/>set!:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>the<sp/>column<sp/>that<sp/>the<sp/>left<sp/>edge<sp/>fits<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>WorkingPartSet*<sp/>work_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>it.move_to_first();</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_index<sp/>!=<sp/>first_column_;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.forward(),<sp/>++col_index);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Match<sp/>is<sp/>%s<sp/>for:&quot;</highlight><highlight class="normal">,<sp/>(col_index<sp/>&amp;<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Real&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Between&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.cycled_list()<sp/>&amp;&amp;<sp/>textord_debug_bugs)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Target<sp/>column=%d,<sp/>only<sp/>had<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>first_column_,<sp/>col_index);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!it.cycled_list());</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>work_set<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>last_column_<sp/>!=<sp/>first_column,<sp/>then<sp/>we<sp/>need<sp/>to<sp/>scoop<sp/>up<sp/>all<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>here<sp/>and<sp/>the<sp/>last_column_<sp/>and<sp/>put<sp/>back<sp/>in<sp/>work_set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.cycled_list()<sp/>&amp;&amp;<sp/>last_column_<sp/>!=<sp/>first_column_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_col_partition_1a13f2518ad00152d63cce288bbbe66d10" kindref="member">IsPulloutType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>column<sp/>that<sp/>the<sp/>right<sp/>edge<sp/>falls<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_LIST<sp/>completed_blocks;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>TO_BLOCK_LIST<sp/>to_blocks;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!it.cycled_list()<sp/>&amp;&amp;<sp/>col_index<sp/>&lt;=<sp/>last_column_;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.forward(),<sp/>++col_index)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WorkingPartSet*<sp/>end_set<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_set-&gt;ExtractCompletedBlocks(bleft,<sp/>tright,<sp/>resolution,<sp/>used_parts,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;completed_blocks,<sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>work_set-&gt;InsertCompletedBlocks(&amp;completed_blocks,<sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>working_set_<sp/>=<sp/>work_set;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>work_set-&gt;<ref refid="classtesseract_1_1_working_part_set_1a75288f5609d5095cee47ac92e3475608" kindref="member">AddPartition</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>From<sp/>the<sp/>given<sp/>block_parts<sp/>list,<sp/>builds<sp/>one<sp/>or<sp/>more<sp/>BLOCKs<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corresponding<sp/>TO_BLOCKs,<sp/>such<sp/>that<sp/>the<sp/>line<sp/>spacing<sp/>is<sp/>uniform<sp/>in<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>blocks<sp/>are<sp/>appended<sp/>to<sp/>the<sp/>end<sp/>of<sp/>completed_blocks<sp/>and<sp/>to_blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>used<sp/>partitions<sp/>are<sp/>put<sp/>onto<sp/>used_parts,<sp/>as<sp/>they<sp/>may<sp/>still<sp/>be<sp/>referred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>in<sp/>the<sp/>partition<sp/>grid.<sp/>bleft,<sp/>tright<sp/>and<sp/>resolution<sp/>are<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>resolution<sp/>of<sp/>the<sp/>original<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a0f9db819e6d23fda5fe1af0e2e84b2d3" kindref="member">ColPartition::LineSpacingBlocks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>block_parts,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOCK_LIST*<sp/>completed_blocks,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO_BLOCK_LIST*<sp/>to_blocks)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_height<sp/>=<sp/>tright.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>-<sp/>bleft.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>initial<sp/>spacing<sp/>stats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(block_parts);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_line_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(joeliu):<sp/>We<sp/>should<sp/>add<sp/>some<sp/>special<sp/>logic<sp/>for<sp/>PT_INLINE_EQUATION<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>their<sp/>line<sp/>spacing<sp/>with<sp/>their<sp/>neighbors<sp/>maybe<sp/>smaller<sp/>and<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>may<sp/>be<sp/>slightly<sp/>larger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!part-&gt;boxes()-&gt;empty());</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>side_steps(0,<sp/>part-&gt;bounding_box().height());</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;bounding_box().height()<sp/>&gt;<sp/>max_line_height)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_line_height<sp/>=<sp/>part-&gt;bounding_box().height();</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_bottom<sp/>=<sp/>blob_it.data()-&gt;bounding_box().bottom();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.forward();<sp/>!blob_it.at_first();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>bottom<sp/>-<sp/>prev_bottom;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>-step;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>side_steps.add(step,<sp/>1);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_bottom<sp/>=<sp/>bottom;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;set_side_step(static_cast&lt;int&gt;(side_steps.median()<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>next_part<sp/>=<sp/>it.data_relative(1);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_bottom_spacing(part-&gt;median_bottom()<sp/>-</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;median_bottom());</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_top_spacing(part-&gt;median_top()<sp/>-<sp/>next_part-&gt;median_top());</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_bottom_spacing(page_height);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_top_spacing(page_height);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;side<sp/>step<sp/>=<sp/>%.2f,<sp/>top<sp/>spacing<sp/>=<sp/>%d,<sp/>bottom<sp/>spacing=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side_steps.median(),<sp/>part-&gt;top_spacing(),<sp/>part-&gt;bottom_spacing());</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>++part_count;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>SmoothSpacings(resolution,<sp/>page_height,<sp/>block_parts);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>partitions<sp/>into<sp/>individual<sp/>block<sp/>lists<sp/>and<sp/>make<sp/>the<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>block_it(completed_blocks);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>TO_BLOCK_IT<sp/>to_block_it(to_blocks);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>spacing_parts;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>sp_block_it(&amp;spacing_parts);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>same_block_threshold<sp/>=<sp/>max_line_height<sp/>*<sp/><ref refid="namespacetesseract_1ab896bf3ee331c3dc994d6ca764d523b0" kindref="member">kMaxSameBlockLineSpacing</ref>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.empty();)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>it.extract();</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_block_it.add_to_end(part);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.empty()<sp/>||<sp/>part-&gt;bottom_spacing()<sp/>&gt;<sp/>same_block_threshold<sp/>||</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!part-&gt;SpacingsEqual(*it.data(),<sp/>resolution))<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>spacing<sp/>boundary.<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>it.data()<sp/>belongs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>better<sp/>in<sp/>the<sp/>current<sp/>block<sp/>or<sp/>the<sp/>next<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.empty()<sp/>&amp;&amp;<sp/>part-&gt;bottom_spacing()<sp/>&lt;=<sp/>same_block_threshold)<sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>next_part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>size<sp/>match<sp/>one-way,<sp/>then<sp/>the<sp/>middle<sp/>line<sp/>goes<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>matched<sp/>size,<sp/>otherwise<sp/>it<sp/>goes<sp/>with<sp/>the<sp/>smallest<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>third_part<sp/>=<sp/>it.at_last()<sp/>?<sp/>NULL<sp/>:<sp/>it.data_relative(1);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Spacings<sp/>unequal:<sp/>upper:%d/%d,<sp/>lower:%d/%d,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>sizes<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;top_spacing(),<sp/>part-&gt;bottom_spacing(),</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;top_spacing(),<sp/>next_part-&gt;bottom_spacing(),</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;median_size(),<sp/>next_part-&gt;median_size(),</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>third_part<sp/>!=<sp/>NULL<sp/>?<sp/>third_part-&gt;median_size()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>only<sp/>consider<sp/>adding<sp/>the<sp/>next<sp/>line<sp/>to<sp/>the<sp/>block<sp/>if<sp/>the<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>and<sp/>the<sp/>lines<sp/>are<sp/>close<sp/>enough<sp/>for<sp/>their<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;SizesSimilar(*next_part)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;median_size()<sp/>*<sp/>kMaxSameBlockLineSpacing<sp/>&gt;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;bottom_spacing()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;median_size()<sp/>*<sp/>kMaxSameBlockLineSpacing<sp/>&gt;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;top_spacing())<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>now,<sp/>we<sp/>can<sp/>only<sp/>add<sp/>it<sp/>as<sp/>long<sp/>as<sp/>the<sp/>third<sp/>line<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>in<sp/>the<sp/>same<sp/>way<sp/>and<sp/>have<sp/>a<sp/>smaller<sp/>bottom<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(third_part<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!next_part-&gt;SizesSimilar(*third_part)<sp/>||</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>third_part-&gt;median_size()<sp/>*<sp/>kMaxSameBlockLineSpacing<sp/>&lt;=</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;bottom_spacing()<sp/>||</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;median_size()<sp/>*<sp/>kMaxSameBlockLineSpacing<sp/>&lt;=</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;top_spacing()<sp/>||</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;bottom_spacing()<sp/>&gt;<sp/>part-&gt;bottom_spacing())<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>the<sp/>current<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp_block_it.add_to_end(it.extract());</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>line<sp/>to<sp/>current<sp/>block.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>to_block<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a275ef8548fa5a0af39e84d05dd383ab8" kindref="member">MakeBlock</ref>(bleft,<sp/>tright,<sp/>&amp;spacing_parts,<sp/>used_parts);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_block<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_block_it.add_to_end(to_block);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_it.add_to_end(to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a16e698664028b0d6d2193db64560c16b" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_block_it.set_to_list(&amp;spacing_parts);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&amp;&amp;<sp/>!it.empty())<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>next_part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Spacings<sp/>equal:<sp/>upper:%d/%d,<sp/>lower:%d/%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;top_spacing(),<sp/>part-&gt;bottom_spacing(),</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_part-&gt;top_spacing(),<sp/>next_part-&gt;bottom_spacing(),</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;median_size(),<sp/>next_part-&gt;median_size());</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>clip<sp/>the<sp/>input<sp/>pos<sp/>to<sp/>the<sp/>given<sp/>bleft,<sp/>tright<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClipCoord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos-&gt;<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>&lt;<sp/>bleft.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>())</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>pos-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(bleft.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>());</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos-&gt;<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>&gt;<sp/>tright.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>())</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>pos-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(tright.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>());</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos-&gt;<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>&lt;<sp/>bleft.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>())</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>pos-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(bleft.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos-&gt;<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>&gt;<sp/>tright.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>())</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>pos-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(tright.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>moves<sp/>the<sp/>blobs<sp/>from<sp/>the<sp/>given<sp/>list<sp/>of<sp/>block_parts<sp/>into<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>itself.<sp/>Sets<sp/>up<sp/>the<sp/>block<sp/>for<sp/>(old)<sp/>textline<sp/>formation<sp/>correctly<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical<sp/>and<sp/>horizontal<sp/>text.<sp/>The<sp/>partitions<sp/>are<sp/>moved<sp/>to<sp/>used_parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>afterwards,<sp/>as<sp/>they<sp/>cannot<sp/>be<sp/>deleted<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>MoveBlobsToBlock(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vertical_text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_spacing,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>block_parts,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts)<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>matching<sp/>TO_BLOCK<sp/>and<sp/>put<sp/>all<sp/>the<sp/>BLOBNBOXes<sp/>from<sp/>the<sp/>parts<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>all<sp/>the<sp/>parts<sp/>to<sp/>a<sp/>done<sp/>list<sp/>as<sp/>they<sp/>are<sp/>no<sp/>longer<sp/>needed,<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>have<sp/>to<sp/>continue<sp/>to<sp/>exist<sp/>until<sp/>the<sp/>part<sp/>grid<sp/>is<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>median<sp/>blob<sp/>size<sp/>as<sp/>we<sp/>go,<sp/>as<sp/>the<sp/>block<sp/>needs<sp/>to<sp/>know.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>block_box(block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>());</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>sizes(0,<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(block_box.width(),<sp/>block_box.height()));</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>text_type<sp/>=<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a6670779c69aca2d574e4a0590d9b3939" kindref="member">poly_block</ref>()-&gt;<ref refid="class_p_o_l_y___b_l_o_c_k_1abd32dee532afe634cdbacffc0b53e660" kindref="member">IsText</ref>();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(block_parts);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>to_block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>(block);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(&amp;to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>used_it(used_parts);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.move_to_first();<sp/>!it.empty();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.extract();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>blobs<sp/>from<sp/>all<sp/>regions<sp/>to<sp/>the<sp/>output<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blobs<sp/>for<sp/>non-text<sp/>regions<sp/>will<sp/>be<sp/>used<sp/>to<sp/>define<sp/>the<sp/>polygonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>of<sp/>the<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BLOBNBOX_C_IT<sp/>bb_it(part-&gt;boxes());<sp/>!bb_it.empty();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.extract();</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>!=<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Ownership<sp/>incorrect<sp/>for<sp/>blob:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Part=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>owned\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Owner<sp/>part:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()-&gt;<ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/>part);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert<sp/>failure<sp/>here<sp/>is<sp/>caused<sp/>by<sp/>arbitrarily<sp/>changing<sp/>the<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>without<sp/>also<sp/>changing<sp/>the<sp/>blob<sp/>type,<sp/>such<sp/>as<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InsertSmallBlobsAsUnknowns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!text_type<sp/>||<sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C_OUTLINE_LIST*<sp/>outlines<sp/>=<sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>()-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>();</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C_OUTLINE_IT<sp/>ol_it(outlines);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!text_type<sp/>||<sp/>ol_it.data()-&gt;pathlength()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertical_text)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.add(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes.add(bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_it.add_after_then_move(bblob);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>used_it.add_to_end(part);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_type<sp/>&amp;&amp;<sp/>blob_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>block;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>to_block;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ab106233da0599f3e1595c1c765acadec" kindref="member">line_size</ref><sp/>=<sp/>sizes.median();</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertical_text)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_width<sp/>=<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>().width();</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_width<sp/>&lt;<sp/>line_spacing)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line_spacing<sp/>=<sp/>block_width;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ac17b9c95641b2eebee9d972338c2e5f6" kindref="member">line_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(line_spacing);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1abda136ff240577928343ca37453aca7a" kindref="member">max_blob_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(block_width<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_height<sp/>=<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>().height();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_height<sp/>&lt;<sp/>line_spacing)</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line_spacing<sp/>=<sp/>block_height;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ac17b9c95641b2eebee9d972338c2e5f6" kindref="member">line_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(line_spacing);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1abda136ff240577928343ca37453aca7a" kindref="member">max_blob_size</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(block_height<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_block;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>block<sp/>from<sp/>the<sp/>given<sp/>list<sp/>of<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arguments<sp/>are<sp/>as<sp/>LineSpacingBlocks<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/><ref refid="classtesseract_1_1_col_partition_1a275ef8548fa5a0af39e84d05dd383ab8" kindref="member">ColPartition::MakeBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>block_parts,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts)<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_parts-&gt;empty())</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(block_parts);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>type<sp/>=<sp/>part-&gt;type();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fadf6b7dd3b8ca94923c3b94dfe53f230e" kindref="member">PT_VERTICAL_TEXT</ref>)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a703b722077cd4fb5fc8c1c1212824b31" kindref="member">MakeVerticalTextBlock</ref>(bleft,<sp/>tright,<sp/>block_parts,<sp/>used_parts);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LineSpacingBlocks<sp/>has<sp/>handed<sp/>us<sp/>a<sp/>collection<sp/>of<sp/>evenly<sp/>spaced<sp/>lines<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>average<sp/>spacing<sp/>in<sp/>each<sp/>partition,<sp/>so<sp/>we<sp/>can<sp/>just<sp/>take<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>linespacing<sp/>from<sp/>the<sp/>first<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_spacing<sp/>=<sp/>part-&gt;bottom_spacing();</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_spacing<sp/>&lt;<sp/>part-&gt;<ref refid="classtesseract_1_1_col_partition_1a2ede8f204ed66939a0c4352657da6c94" kindref="member">median_size</ref>())</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>line_spacing<sp/>=<sp/>part-&gt;bounding_box().height();</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>ICOORDELT_LIST<sp/>vertices;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>ICOORDELT_IT<sp/>vert_it(&amp;vertices);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_x<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_x<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_y<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_y<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iteration<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition::LeftEdgeRun(&amp;it,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition::RightEdgeRun(&amp;it,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>ClipCoord(bleft,<sp/>tright,<sp/>&amp;start);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>ClipCoord(bleft,<sp/>tright,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>vert_it.add_after_then_move(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>(start));</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>vert_it.add_after_then_move(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>(end));</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(start.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>&amp;min_x,<sp/>&amp;max_x);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(end.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>&amp;min_x,<sp/>&amp;max_x);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(start.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>&amp;min_y,<sp/>&amp;max_y);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(end.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>&amp;min_y,<sp/>&amp;max_y);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((iteration<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>it.at_first())<sp/>||</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iteration<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>it.at_last()))<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++iteration;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.move_to_last();</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iteration<sp/>&lt;<sp/>2);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Making<sp/>block<sp/>at<sp/>(%d,%d)-&gt;(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_x,<sp/>min_y,<sp/>max_x,<sp/>max_y);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>min_x,<sp/>min_y,<sp/>max_x,<sp/>max_y);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a60f8ad7b10ca32e3ece92bb04e3f2793" kindref="member" tooltip="set the poly block ">set_poly_block</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_o_l_y___b_l_o_c_k" kindref="compound">POLY_BLOCK</ref>(&amp;vertices,<sp/>type));</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoveBlobsToBlock(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>line_spacing,<sp/>block,<sp/>block_parts,<sp/>used_parts);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>block<sp/>from<sp/>the<sp/>given<sp/>list<sp/>of<sp/>vertical<sp/>text<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>creates<sp/>rectangular<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/><ref refid="classtesseract_1_1_col_partition_1a703b722077cd4fb5fc8c1c1212824b31" kindref="member">ColPartition::MakeVerticalTextBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>block_parts,</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts)<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_parts-&gt;empty())</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(block_parts);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>block_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_spacing<sp/>=<sp/>block_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>type<sp/>=<sp/>it.data()-&gt;type();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>block_box<sp/>+=<sp/>it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Making<sp/>block<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>block_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>block_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>block_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>block_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a60f8ad7b10ca32e3ece92bb04e3f2793" kindref="member" tooltip="set the poly block ">set_poly_block</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_o_l_y___b_l_o_c_k" kindref="compound">POLY_BLOCK</ref>(block_box,<sp/>type));</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoveBlobsToBlock(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>line_spacing,<sp/>block,<sp/>block_parts,<sp/>used_parts);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Makes<sp/>a<sp/>TO_ROW<sp/>matching<sp/>this<sp/>and<sp/>moves<sp/>all<sp/>the<sp/>blobs<sp/>to<sp/>it,<sp/>transferring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ownership<sp/>to<sp/>to<sp/>returned<sp/>TO_ROW.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><ref refid="class_t_o___r_o_w" kindref="compound">TO_ROW</ref>*<sp/><ref refid="classtesseract_1_1_col_partition_1a6ce139019daba1e444a3be681425cf9a" kindref="member">ColPartition::MakeToRow</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(&amp;boxes_);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><ref refid="class_t_o___r_o_w" kindref="compound">TO_ROW</ref>*<sp/>row<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_size<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1aec438c63bf754474982b2bb4e74148b5" kindref="member">IsVerticalType</ref>()<sp/>?<sp/>median_width_<sp/>:<sp/>median_size_;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>the<sp/>blobs<sp/>to<sp/>a<sp/>single<sp/>TO_ROW.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!blob_it.empty();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.extract();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>blob-&gt;compute_bounding_box();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_o___r_o_w" kindref="compound">TO_ROW</ref>(blob,<sp/>static_cast&lt;float&gt;(top),</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(bottom),</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(line_size));</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row-&gt;<ref refid="class_t_o___r_o_w_1a0173e9da64e4f2d29f01da14c3a053ee" kindref="member">add_blob</ref>(blob,<sp/>static_cast&lt;float&gt;(top),</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(bottom),</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(line_size));</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>everything<sp/>except<sp/>the<sp/>list<sp/>of<sp/>boxes.<sp/>The<sp/>resulting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartition<sp/>is<sp/>only<sp/>suitable<sp/>for<sp/>keeping<sp/>in<sp/>a<sp/>column<sp/>candidate<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a70116af39898d43ca19ecb189faccfa1" kindref="member">ColPartition::ShallowCopy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>(blob_type_,<sp/>vertical_);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/>part-&gt;left_margin_<sp/>=<sp/>left_margin_;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>part-&gt;right_margin_<sp/>=<sp/>right_margin_;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>part-&gt;bounding_box_<sp/>=<sp/>bounding_box_;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/>memcpy(part-&gt;special_blobs_densities_,<sp/>special_blobs_densities_,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(special_blobs_densities_));</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>part-&gt;median_bottom_<sp/>=<sp/>median_bottom_;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/>part-&gt;median_top_<sp/>=<sp/>median_top_;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>part-&gt;median_size_<sp/>=<sp/>median_size_;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>part-&gt;median_left_<sp/>=<sp/>median_left_;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>part-&gt;median_right_<sp/>=<sp/>median_right_;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>part-&gt;median_width_<sp/>=<sp/>median_width_;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>part-&gt;good_width_<sp/>=<sp/>good_width_;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>part-&gt;good_column_<sp/>=<sp/>good_column_;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/>part-&gt;left_key_tab_<sp/>=<sp/>left_key_tab_;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/>part-&gt;right_key_tab_<sp/>=<sp/>right_key_tab_;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>part-&gt;type_<sp/>=<sp/>type_;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>part-&gt;flow_<sp/>=<sp/>flow_;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/>part-&gt;left_key_<sp/>=<sp/>left_key_;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>part-&gt;right_key_<sp/>=<sp/>right_key_;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>part-&gt;first_column_<sp/>=<sp/>first_column_;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>part-&gt;last_column_<sp/>=<sp/>last_column_;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>part-&gt;owns_blobs_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_1a3077eb7392f7d2ab1de2f93579fda55d" kindref="member">ColPartition::CopyButDontOwnBlobs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>copy<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a70116af39898d43ca19ecb189faccfa1" kindref="member">ShallowCopy</ref>();</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/>copy-&gt;set_owns_blobs(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>inserter(copy-&gt;boxes());</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>traverser(<ref refid="classtesseract_1_1_col_partition_1a3fc2dd797ede7a62546b2565811e9ce0" kindref="member">boxes</ref>());</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(traverser.mark_cycle_pt();<sp/>!traverser.cycled_list();<sp/>traverser.forward())</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>inserter.add_after_then_move(traverser.data());</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1745"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Provides<sp/>a<sp/>color<sp/>for<sp/>BBGrid<sp/>to<sp/>draw<sp/>the<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>kept<sp/>in<sp/>sync<sp/>with<sp/>PolyBlockType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a17666474219e537a71727f818e6b7c88" kindref="member">ColPartition::BoxColor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>==<sp/>PT_UNKNOWN)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x_1a7351d74f423975d676f47e4dc05e267f" kindref="member">BLOBNBOX::TextlineColor</ref>(blob_type_,<sp/>flow_);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_p_o_l_y___b_l_o_c_k_1aaa733d5e7c20fa495156049537574d5b" kindref="member" tooltip="Returns a color to draw the given type. ">POLY_BLOCK::ColorForPolyBlockType</ref>(type_);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1753"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>in<sp/>sync<sp/>with<sp/>BlobRegionType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kBlobTypes[<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3296f6ab68e0cf0c80dcd5478a1413a3" kindref="member">BRT_COUNT</ref><sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NHSRIUVT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prints<sp/>debug<sp/>information<sp/>on<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">ColPartition::Print</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1acfb9938222780d3957049698e2bde9e6" kindref="member">MidY</ref>();</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;ColPart:%c(M%d-%c%d-B%d/%d,%d/%d)-&gt;(%dB-%d%c-%dM/%d,%d/%d)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>w-ok=%d,<sp/>v-ok=%d,<sp/>type=%d%c%d,<sp/>fc=%d,<sp/>lc=%d,<sp/>boxes=%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>ts=%d<sp/>bs=%d<sp/>ls=%d<sp/>rs=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes_.empty()<sp/>?<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_margin_,<sp/>left_key_tab_<sp/>?<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_col_partition_1ab71e3aebabe8a0a9e3cde26f84ec4f46" kindref="member">LeftAtY</ref>(y),</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>median_left_,</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>median_bottom_,</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/><ref refid="classtesseract_1_1_col_partition_1a3731935e70135384e25904d65c0ca8f7" kindref="member">RightAtY</ref>(y),<sp/>right_key_tab_<sp/>?<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_margin_,<sp/>median_right_,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>median_top_,</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good_width_,<sp/>good_column_,<sp/>type_,</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBlobTypes[blob_type_],<sp/>flow_,</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_,<sp/>last_column_,<sp/>boxes_.length(),</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space_above_,<sp/>space_below_,<sp/>space_to_left_,<sp/>space_to_right_);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prints<sp/>debug<sp/>information<sp/>on<sp/>the<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1af07ad7867464972ce64aa421af34dada" kindref="member">ColPartition::PrintColors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Colors:(%d,<sp/>%d,<sp/>%d)%d<sp/>-&gt;<sp/>(%d,<sp/>%d,<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color1_[COLOR_RED],<sp/>color1_[COLOR_GREEN],<sp/>color1_[COLOR_BLUE],</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color1_[L_ALPHA_CHANNEL],</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color2_[COLOR_RED],<sp/>color2_[COLOR_GREEN],<sp/>color2_[COLOR_BLUE]);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>types<sp/>of<sp/>all<sp/>partitions<sp/>in<sp/>the<sp/>run<sp/>to<sp/>be<sp/>the<sp/>max<sp/>of<sp/>the<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a63928eac4e3026c21296da8c29eee854" kindref="member">ColPartition::SmoothPartnerRun</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>working_set_count)<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>left_stats(0,<sp/>working_set_count);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>right_stats(0,<sp/>working_set_count);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>max_type<sp/>=<sp/>type_;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(partner<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1abb824820c4ebf82ee1dfc9c2a30c17ce" kindref="member">SingletonPartner</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>=<sp/>partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;type_<sp/>&gt;<sp/>max_type)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_type<sp/>=<sp/>partner-&gt;type_;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_<sp/>==<sp/>partner-&gt;column_set_)<sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left_stats.add(partner-&gt;first_column_,<sp/>1);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_stats.add(partner-&gt;last_column_,<sp/>1);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/>max_type;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Either<sp/>establish<sp/>that<sp/>it<sp/>isn&apos;t<sp/>necessary<sp/>to<sp/>set<sp/>the<sp/>columns,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>find<sp/>a<sp/>way<sp/>to<sp/>do<sp/>it<sp/>that<sp/>does<sp/>not<sp/>cause<sp/>an<sp/>assert<sp/>failure<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>AddToWorkingSet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="1803"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>first_column_<sp/>=<sp/>left_stats.mode();</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>last_column_<sp/>=<sp/>right_stats.mode();</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_column_<sp/>&lt;<sp/>first_column_)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>last_column_<sp/>=<sp/>first_column_;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1808"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(partner<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1abb824820c4ebf82ee1dfc9c2a30c17ce" kindref="member">SingletonPartner</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner<sp/>=<sp/>partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>partner-&gt;type_<sp/>=<sp/>max_type;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/><sp/>//<sp/>See<sp/>TODO<sp/>above</highlight></codeline>
<codeline lineno="1813"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_<sp/>==<sp/>partner-&gt;column_set_)<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;first_column_<sp/>=<sp/>first_column_;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;last_column_<sp/>=<sp/>last_column_;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1818"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======<sp/>Scenario<sp/>common<sp/>to<sp/>all<sp/>Refine*Partners*<sp/>functions<sp/>=======</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitions<sp/>are<sp/>aiming<sp/>to<sp/>represent<sp/>textlines,<sp/>or<sp/>horizontal<sp/>slices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>images,<sp/>and<sp/>we<sp/>are<sp/>trying<sp/>to<sp/>form<sp/>bi-directional<sp/>(upper/lower)<sp/>chains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>UNIQUE<sp/>partner<sp/>ColPartitions<sp/>that<sp/>can<sp/>be<sp/>made<sp/>into<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ColPartitions<sp/>have<sp/>previously<sp/>been<sp/>typed<sp/>(see<sp/>SetPartitionType)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>according<sp/>to<sp/>a<sp/>combination<sp/>of<sp/>the<sp/>content<sp/>type<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>how<sp/>they<sp/>lie<sp/>on<sp/>the<sp/>columns.<sp/>We<sp/>want<sp/>to<sp/>chain<sp/>text<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>groups<sp/>of<sp/>a<sp/>single<sp/>type,<sp/>but<sp/>image<sp/>ColPartitions<sp/>may<sp/>have<sp/>been<sp/>typed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>differently<sp/>in<sp/>different<sp/>parts<sp/>of<sp/>the<sp/>image,<sp/>due<sp/>to<sp/>being<sp/>non-rectangular.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>previously<sp/>ran<sp/>a<sp/>search<sp/>for<sp/>upper<sp/>and<sp/>lower<sp/>partners,<sp/>but<sp/>there<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>more<sp/>than<sp/>one,<sp/>and<sp/>they<sp/>may<sp/>be<sp/>of<sp/>mixed<sp/>types,<sp/>so<sp/>now<sp/>we<sp/>wish<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>refine<sp/>the<sp/>partners<sp/>down<sp/>to<sp/>at<sp/>most<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>heading<sp/>may<sp/>have<sp/>multiple<sp/>partners:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========<sp/><sp/>==========<sp/><sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========<sp/><sp/>==========<sp/><sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>should<sp/>be<sp/>a<sp/>different<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>regular<sp/>flowing<sp/>text<sp/>line<sp/>may<sp/>have<sp/>multiple<sp/>partners:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================<sp/><sp/><sp/>===================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======<sp/><sp/><sp/>=================<sp/><sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>could<sp/>be<sp/>the<sp/>start<sp/>of<sp/>a<sp/>pull-out,<sp/>or<sp/>it<sp/>might<sp/>all<sp/>be<sp/>in<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>and<sp/>might<sp/>be<sp/>caused<sp/>by<sp/>tightly<sp/>spaced<sp/>text,<sp/>bold<sp/>words,<sp/>bullets,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="comment">//<sp/>funny<sp/>punctuation<sp/>etc,<sp/>all<sp/>of<sp/>which<sp/>can<sp/>cause<sp/>textlines<sp/>to<sp/>be<sp/>split<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>ColPartitions.<sp/>Pullouts<sp/>and<sp/>figure<sp/>captions<sp/>should<sp/>now<sp/>be<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>types<sp/>so<sp/>we<sp/>can<sp/>more<sp/>aggressively<sp/>merge<sp/>groups<sp/>of<sp/>partners<sp/>that<sp/>all<sp/>sit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>single<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>of<sp/>the<sp/>given<sp/>type<sp/>so<sp/>that<sp/>there<sp/>is<sp/>at<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>partner.<sp/>This<sp/>makes<sp/>block<sp/>creation<sp/>simpler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>get_desperate<sp/>is<sp/>true,<sp/>goes<sp/>to<sp/>more<sp/>desperate<sp/>merge<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>merge<sp/>flowing<sp/>text<sp/>before<sp/>breaking<sp/>partnerships.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a008e1c29b009f6d8f24ebf022bcc63b3" kindref="member">ColPartition::RefinePartners</ref>(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_desperate,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aa7be118d2184949aa30f824932f04586" kindref="member">TypesSimilar</ref>(type_,<sp/>type))<sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>RefinePartnersInternal(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>get_desperate,<sp/>grid);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>RefinePartnersInternal(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>get_desperate,<sp/>grid);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa1cfce41c30bf1aefe403aaa66d271da1" kindref="member">PT_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>final<sp/>pass.<sp/>Make<sp/>sure<sp/>only<sp/>the<sp/>correctly<sp/>typed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partners<sp/>surivive,<sp/>however<sp/>many<sp/>there<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>RefinePartnersByType(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;upper_partners_);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>RefinePartnersByType(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;lower_partners_);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>possible<sp/>for<sp/>a<sp/>merge<sp/>to<sp/>have<sp/>given<sp/>a<sp/>partition<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partners<sp/>again,<sp/>so<sp/>the<sp/>last<sp/>resort<sp/>is<sp/>to<sp/>use<sp/>overlap<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>guaranteed<sp/>to<sp/>leave<sp/>at<sp/>most<sp/>one<sp/>partner<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!upper_partners_.empty()<sp/>&amp;&amp;<sp/>!upper_partners_.singleton())</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RefinePartnersByOverlap(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;upper_partners_);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lower_partners_.empty()<sp/>&amp;&amp;<sp/>!lower_partners_.singleton())</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RefinePartnersByOverlap(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;lower_partners_);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>above<sp/>if<sp/>upper<sp/>is<sp/>true,<sp/>else<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>get_desperate<sp/>is<sp/>true,<sp/>goes<sp/>to<sp/>more<sp/>desperate<sp/>merge<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>merge<sp/>flowing<sp/>text<sp/>before<sp/>breaking<sp/>partnerships.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RefinePartnersInternal(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_desperate,</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>ColPartition_CLIST*<sp/>partners<sp/>=<sp/>upper<sp/>?<sp/>&amp;upper_partners_<sp/>:<sp/>&amp;lower_partners_;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())<sp/>{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>RefinePartnersByType(upper,<sp/>partners);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>transitive<sp/>partnerships<sp/>and<sp/>break<sp/>the<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RefinePartnerShortcuts(upper,<sp/>partners);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())<sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Types<sp/>didn&apos;t<sp/>fix<sp/>it.<sp/>Flowing<sp/>text<sp/>keeps<sp/>the<sp/>one<sp/>with<sp/>the<sp/>longest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequence<sp/>of<sp/>singleton<sp/>matching<sp/>partners.<sp/>All<sp/>others<sp/>max<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_col_partition_1aa7be118d2184949aa30f824932f04586" kindref="member">TypesSimilar</ref>(type_,<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677faaa63d8d8a99ddc2b3957f8e8787b4eca" kindref="member">PT_FLOWING_TEXT</ref>)<sp/>&amp;&amp;<sp/>get_desperate)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefineTextPartnersByMerge(upper,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>partners,<sp/>grid);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefineTextPartnersByMerge(upper,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>partners,<sp/>grid);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>resort<sp/>is<sp/>to<sp/>use<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefinePartnersByOverlap(upper,<sp/>partners);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>above<sp/>if<sp/>upper<sp/>is<sp/>true,<sp/>else<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Restricts<sp/>the<sp/>partners<sp/>to<sp/>only<sp/>desirable<sp/>types.<sp/>For<sp/>text<sp/>and<sp/>BRT_HLINE<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="comment">//<sp/>means<sp/>the<sp/>same<sp/>type_<sp/>,<sp/>and<sp/>for<sp/>image<sp/>types<sp/>it<sp/>means<sp/>any<sp/>image<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RefinePartnersByType(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>partners)<sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Refining<sp/>%d<sp/>%s<sp/>partners<sp/>by<sp/>type<sp/>for:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partners-&gt;length(),<sp/>upper<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Upper&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Lower&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(partners);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Purify<sp/>text<sp/>by<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_col_partition_1a0ae19652d302dcc8bfd9cab1bed18770" kindref="member">IsImageType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>only<sp/>partners<sp/>matching<sp/>type_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exception:<sp/>PT_VERTICAL_TEXT<sp/>is<sp/>allowed<sp/>to<sp/>stay<sp/>with<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>types<sp/>if<sp/>it<sp/>is<sp/>the<sp/>only<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_col_partition_1aa7be118d2184949aa30f824932f04586" kindref="member">TypesSimilar</ref>(type_,<sp/>partner-&gt;type_))<sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Keeping<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>polyimages<sp/>are<sp/>allowed<sp/>to<sp/>have<sp/>partners<sp/>of<sp/>any<sp/>kind!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;blob_type()<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref><sp/>||</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a644ec0c0a7bf20b9aca71b8413b2a87e" kindref="member">blob_type</ref>()<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a3b72528ad70da88719f0479bc8c5a190" kindref="member">BRT_POLYIMAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Keeping<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>above<sp/>if<sp/>upper<sp/>is<sp/>true,<sp/>else<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>transitive<sp/>partnerships:<sp/>this&lt;-&gt;a,<sp/>and<sp/>a&lt;-&gt;b<sp/>and<sp/>this&lt;-&gt;b.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>rid<sp/>of<sp/>this&lt;-&gt;b,<sp/>leaving<sp/>a<sp/>clean<sp/>chain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>if<sp/>we<sp/>have<sp/>this&lt;-&gt;a<sp/>and<sp/>a&lt;-&gt;this,<sp/>then<sp/>gets<sp/>rid<sp/>of<sp/>this&lt;-&gt;a,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>has<sp/>multiple<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RefinePartnerShortcuts(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>partners)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done_any<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>done_any<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>it(partners);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>a<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>match<sp/>between<sp/>all<sp/>of<sp/>a&apos;s<sp/>partners<sp/>(it1/b1)<sp/>and<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>this&apos;s<sp/>partners<sp/>(it2/b2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>it1(upper<sp/>?<sp/>&amp;a-&gt;upper_partners_<sp/>:<sp/>&amp;a-&gt;lower_partners_);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it1.mark_cycle_pt();<sp/>!it1.cycled_list();<sp/>it1.forward())<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>b1<sp/>=<sp/>it1.data();</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done_any<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>it2(partners);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it2.mark_cycle_pt();<sp/>!it2.cycled_list();<sp/>it2.forward())<sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>b2<sp/>=<sp/>it2.data();</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1<sp/>==<sp/>b2)<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jackpot!<sp/>b2<sp/>should<sp/>not<sp/>be<sp/>a<sp/>partner<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it2.extract();</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done_any<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>potentially<sp/>invalidated<sp/>all<sp/>the<sp/>iterators,<sp/>so<sp/>break<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>start<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done_any)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done_any)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(done_any<sp/>&amp;&amp;<sp/>!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton());</highlight></codeline>
<codeline lineno="1998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>above<sp/>if<sp/>upper<sp/>is<sp/>true,<sp/>else<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>multiple<sp/>text<sp/>partners<sp/>can<sp/>be<sp/>merged,<sp/>(with<sp/>each<sp/>other,<sp/>NOT<sp/>with<sp/>this),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>do<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>desperate<sp/>is<sp/>true,<sp/>then<sp/>an<sp/>increase<sp/>in<sp/>overlap<sp/>with<sp/>the<sp/>merge<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allowed.<sp/>If<sp/>the<sp/>overlap<sp/>increases,<sp/>then<sp/>the<sp/>desperately_merged_<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>set,<sp/>indicating<sp/>that<sp/>the<sp/>textlines<sp/>probably<sp/>need<sp/>to<sp/>be<sp/>regenerated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>aggressive<sp/>line<sp/>fitting/splitting,<sp/>as<sp/>there<sp/>are<sp/>probably<sp/>vertically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="comment">//<sp/>joined<sp/>blobs<sp/>that<sp/>cross<sp/>textlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RefineTextPartnersByMerge(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>desperate,</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>partners,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Refining<sp/>%d<sp/>%s<sp/>partners<sp/>by<sp/>merge<sp/>for:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partners-&gt;length(),<sp/>upper<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Upper&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Lower&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!partners-&gt;empty()<sp/>&amp;&amp;<sp/>!partners-&gt;singleton())<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Absorb<sp/>will<sp/>mess<sp/>up<sp/>the<sp/>iterators,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>merge<sp/>one<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>a<sp/>time<sp/>and<sp/>rebuild<sp/>the<sp/>iterators<sp/>each<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>it(partners);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>a<sp/>list<sp/>of<sp/>merge<sp/>candidates,<sp/>from<sp/>the<sp/>list<sp/>of<sp/>partners,<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>all<sp/>in<sp/>the<sp/>same<sp/>single<sp/>column.<sp/>See<sp/>general<sp/>scenario<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_CLIST<sp/>candidates;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_C_IT<sp/>cand_it(&amp;candidates);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.forward();<sp/>!it.at_first();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>candidate<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;first_column_<sp/>==<sp/>candidate-&gt;last_column_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;last_column_<sp/>==<sp/>candidate-&gt;first_column_)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cand_it.add_after_then_move(it.data());</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap_increase;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>candidate<sp/>=<sp/>grid-&gt;BestMergeCandidate(part,<sp/>&amp;candidates,<sp/>debug,</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>&amp;overlap_increase);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(candidate<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(overlap_increase<sp/>&lt;=<sp/>0<sp/>||<sp/>desperate))<sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging:hoverlap=%d,<sp/>voverlap=%d,<sp/>OLI=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;HCoreOverlap(*candidate),<sp/>part-&gt;VCoreOverlap(*candidate),</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlap_increase);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>before<sp/>merge<sp/>and<sp/>re-insert<sp/>to<sp/>keep<sp/>the<sp/>integrity<sp/>of<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grid-&gt;RemoveBBox(candidate);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grid-&gt;RemoveBBox(part);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Absorb(candidate,<sp/>NULL);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>modified<sp/>the<sp/>box<sp/>of<sp/>part,<sp/>so<sp/>re-insert<sp/>it<sp/>into<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grid-&gt;InsertBBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap_increase<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;desperately_merged_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleans<sp/>up<sp/>the<sp/>partners<sp/>above<sp/>if<sp/>upper<sp/>is<sp/>true,<sp/>else<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>partner<sp/>with<sp/>the<sp/>biggest<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RefinePartnersByOverlap(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>partners)<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Refining<sp/>%d<sp/>%s<sp/>partners<sp/>by<sp/>overlap<sp/>for:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partners-&gt;length(),<sp/>upper<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Upper&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Lower&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1a156c2af1b74aa05bb4633bbde1e64c22" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(partners);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>best_partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>partner<sp/>with<sp/>the<sp/>best<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_overlap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>partner-&gt;bounding_box_.right())</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>partner-&gt;bounding_box_.left());</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overlap<sp/>&gt;<sp/>best_overlap)<sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_overlap<sp/>=<sp/>overlap;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_partner<sp/>=<sp/>partner;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>only<sp/>the<sp/>best<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner<sp/>!=<sp/>best_partner)<sp/>{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;RemovePartner(!upper,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>bbox<sp/>belongs<sp/>better<sp/>in<sp/>this<sp/>than<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::ThisPartitionBetter(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox,</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Margins<sp/>take<sp/>priority.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&lt;<sp/>left_margin_<sp/>||<sp/>right<sp/>&gt;<sp/>right_margin_)</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&lt;<sp/>other.left_margin_<sp/>||<sp/>right<sp/>&gt;<sp/>other.right_margin_)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(top,<sp/>median_top_)<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(bottom,<sp/>median_bottom_);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>other_overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(top,<sp/>other.median_top_)<sp/>-</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(bottom,<sp/>other.median_bottom_);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_miss<sp/>=<sp/>median_top_<sp/>-<sp/>median_bottom_<sp/>-<sp/>this_overlap;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>other_miss<sp/>=<sp/>other.median_top_<sp/>-<sp/>other.median_bottom_<sp/>-<sp/>other_overlap;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(3,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Unique<sp/>on<sp/>(%d,%d)-&gt;(%d,%d)<sp/>overlap<sp/>%d/%d,<sp/>miss<sp/>%d/%d,<sp/>mt=%d/%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_overlap,<sp/>other_overlap,<sp/>this_miss,<sp/>other_miss,</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>median_top_,<sp/>other.median_top_);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_miss<sp/>&lt;<sp/>other_miss)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_miss<sp/>&gt;<sp/>other_miss)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_overlap<sp/>&gt;<sp/>other_overlap)</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_overlap<sp/>&lt;<sp/>other_overlap)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>median_top_<sp/>&gt;=<sp/>other.median_top_;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>median<sp/>line-spacing<sp/>between<sp/>the<sp/>current<sp/>position<sp/>and<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>iterator<sp/>is<sp/>passed<sp/>by<sp/>value<sp/>so<sp/>the<sp/>iteration<sp/>does<sp/>not<sp/>modify<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>caller&apos;s<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MedianSpacing(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_height,<sp/>ColPartition_IT<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>stats(0,<sp/>page_height);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.add(part-&gt;bottom_spacing(),<sp/>1);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.add(part-&gt;top_spacing(),<sp/>1);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(stats.median()<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>this<sp/>column<sp/>partition<sp/>is<sp/>in<sp/>the<sp/>same<sp/>column<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part.<sp/>This<sp/>function<sp/>will<sp/>only<sp/>work<sp/>after<sp/>the<sp/>SetPartitionType<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>has<sp/>been<sp/>called<sp/>on<sp/>both<sp/>column<sp/>partitions.<sp/>This<sp/>is<sp/>useful<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>doing<sp/>a<sp/>SideSearch<sp/>when<sp/>you<sp/>want<sp/>things<sp/>in<sp/>the<sp/>same<sp/>page<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>called<sp/>by<sp/>the<sp/>table<sp/>detection<sp/>code<sp/>to<sp/>identify<sp/>if<sp/>potential<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>partitions<sp/>exist<sp/>in<sp/>the<sp/>same<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aa05fd8e272964b349436a729acf3fc64" kindref="member">ColPartition::IsInSameColumnAs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap<sp/>does<sp/>not<sp/>occur<sp/>when<sp/>last<sp/>&lt;<sp/>part.first<sp/>or<sp/>first<sp/>&gt;<sp/>part.last.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>other<sp/>words,<sp/>one<sp/>is<sp/>completely<sp/>to<sp/>the<sp/>side<sp/>of<sp/>the<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>just<sp/>DeMorgan&apos;s<sp/>law<sp/>applied<sp/>to<sp/>that<sp/>so<sp/>the<sp/>function<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(last_column_<sp/>&gt;=<sp/>part.first_column_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(first_column_<sp/>&lt;=<sp/>part.last_column_);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smoothes<sp/>the<sp/>spacings<sp/>in<sp/>the<sp/>list<sp/>into<sp/>groups<sp/>of<sp/>equal<sp/>linespacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resolution<sp/>is<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>original<sp/>image,<sp/>used<sp/>as<sp/>a<sp/>basis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>thresholds<sp/>in<sp/>change<sp/>of<sp/>spacing.<sp/>page_height<sp/>is<sp/>in<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::SmoothSpacings(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_height,</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>task<sp/>would<sp/>be<sp/>trivial<sp/>if<sp/>we<sp/>didn&apos;t<sp/>have<sp/>to<sp/>allow<sp/>for<sp/>blips<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>occasional<sp/>offsets<sp/>in<sp/>spacing<sp/>caused<sp/>by<sp/>anomolous<sp/>text,<sp/>such<sp/>as<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>caps,<sp/>groups<sp/>of<sp/>descenders,<sp/>joined<sp/>words,<sp/>Arabic<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>neighbourhood<sp/>stores<sp/>a<sp/>consecutive<sp/>group<sp/>of<sp/>partitions<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blips<sp/>can<sp/>be<sp/>detected<sp/>correctly,<sp/>yet<sp/>conservatively<sp/>enough<sp/>to<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mistake<sp/>genuine<sp/>spacing<sp/>changes<sp/>for<sp/>blips.<sp/>See<sp/>example<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>neighbourhood[PN_COUNT];</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(parts);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Although<sp/>we<sp/>know<sp/>nothing<sp/>about<sp/>the<sp/>spacings<sp/>is<sp/>this<sp/>list,<sp/>the<sp/>median<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>as<sp/>an<sp/>approximation<sp/>to<sp/>allow<sp/>blips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>parts<sp/>of<sp/>this<sp/>block<sp/>aren&apos;t<sp/>spaced<sp/>to<sp/>the<sp/>median,<sp/>then<sp/>we<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>accept<sp/>blips<sp/>in<sp/>those<sp/>parts,<sp/>but<sp/>we&apos;ll<sp/>recalculate<sp/>it<sp/>each<sp/>time<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>the<sp/>block,<sp/>so<sp/>the<sp/>median<sp/>becomes<sp/>more<sp/>likely<sp/>to<sp/>match<sp/>all<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_space<sp/>=<sp/>MedianSpacing(page_height,<sp/>it);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>start_it(it);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>end_it(it);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>PN_COUNT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>PN_UPPER<sp/>||<sp/>it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[i]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>PN_LOWER)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_it<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[i]<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(neighbourhood[PN_UPPER]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>end<sp/>of<sp/>a<sp/>group.<sp/>Normally<sp/>SpacingsEqual<sp/>is<sp/>true<sp/>within<sp/>a<sp/>group,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>in<sp/>the<sp/>case<sp/>of<sp/>a<sp/>blip,<sp/>it<sp/>will<sp/>be<sp/>false.<sp/>Here<sp/>is<sp/>an<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>enum<sp/><sp/><sp/>Spacing<sp/>below<sp/>(spacing<sp/>between<sp/>tops<sp/>of<sp/>lines)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1<sp/><sp/><sp/>ABOVE2<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>2<sp/><sp/><sp/>ABOVE1<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>3<sp/><sp/><sp/>UPPER<sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>4<sp/><sp/><sp/>LOWER<sp/><sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>5<sp/><sp/><sp/>BELOW1<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>6<sp/><sp/><sp/>BELOW2<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>4<sp/>is<sp/>all<sp/>in<sp/>caps<sp/>(regular<sp/>caps),<sp/>so<sp/>the<sp/>spacing<sp/>between<sp/>line<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>line<sp/>4<sp/>(looking<sp/>at<sp/>the<sp/>tops)<sp/>is<sp/>smaller<sp/>than<sp/>normal,<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spacing<sp/>between<sp/>line<sp/>4<sp/>and<sp/>line<sp/>5<sp/>is<sp/>larger<sp/>than<sp/>normal,<sp/>but<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>of<sp/>them<sp/>add<sp/>to<sp/>twice<sp/>the<sp/>normal<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>if<sp/>has<sp/>to<sp/>accept<sp/>unequal<sp/>spacings<sp/>3<sp/>times<sp/>to<sp/>pass<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blip<sp/>(20/15,<sp/>15/25<sp/>and<sp/>25/20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>blip<sp/>is<sp/>in<sp/>the<sp/>middle,<sp/>OKSpacingBlip<sp/>tests<sp/>that<sp/>one<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ABOVE1<sp/>and<sp/>BELOW1<sp/>matches<sp/>the<sp/>median.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>time,<sp/>everything<sp/>is<sp/>shifted<sp/>down<sp/>1,<sp/>so<sp/>we<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OKSpacingBlip<sp/>with<sp/>neighbourhood+1<sp/>and<sp/>check<sp/>that<sp/>PN_UPPER<sp/>is<sp/>median.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>time,<sp/>everything<sp/>is<sp/>shifted<sp/>up<sp/>1,<sp/>so<sp/>we<sp/>present<sp/>OKSpacingBlip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>neighbourhood-1<sp/>and<sp/>check<sp/>that<sp/>PN_LOWER<sp/>matches<sp/>the<sp/>median.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbourhood[PN_LOWER]<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!neighbourhood[PN_UPPER]-&gt;SpacingsEqual(*neighbourhood[PN_LOWER],</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!OKSpacingBlip(resolution,<sp/>median_space,<sp/>neighbourhood)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!OKSpacingBlip(resolution,<sp/>median_space,<sp/>neighbourhood<sp/>-<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!neighbourhood[PN_LOWER]-&gt;SpacingEqual(median_space,<sp/>resolution))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!OKSpacingBlip(resolution,<sp/>median_space,<sp/>neighbourhood<sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!neighbourhood[PN_UPPER]-&gt;SpacingEqual(median_space,<sp/>resolution))))<sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>group<sp/>has<sp/>ended.<sp/>PN_UPPER<sp/>is<sp/>the<sp/>last<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>mean<sp/>spacing<sp/>over<sp/>the<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>sum_it(start_it);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>last_part<sp/>=<sp/>neighbourhood[PN_UPPER];</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_bottom<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_top<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>upper<sp/>=<sp/>sum_it.data();</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>process<sp/>last_part,<sp/>as<sp/>its<sp/>spacing<sp/>is<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(upper<sp/>!=<sp/>last_part)<sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bottom<sp/>+=<sp/>upper-&gt;bottom_spacing();</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_top<sp/>+=<sp/>upper-&gt;top_spacing();</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++total_count;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_it.forward();</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>sum_it.data();</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>were<sp/>at<sp/>least<sp/>2<sp/>lines,<sp/>so<sp/>set<sp/>them<sp/>all<sp/>to<sp/>the<sp/>mean.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1aaa8e68fc867682b5e496103fdfea55bf" kindref="member">top_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(total_top<sp/>/<sp/>total_count<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_1a01e366848d0b2f4ee921124f32cc63b3" kindref="member">bottom_spacing</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(total_bottom<sp/>/<sp/>total_count<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Spacing<sp/>run<sp/>ended.<sp/>Cause:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbourhood[PN_LOWER]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>more<sp/>lines\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Spacing<sp/>change.<sp/>Spacings:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>PN_COUNT;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbourhood[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>neighbourhood[i<sp/>-<sp/>1]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbourhood[i<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_col_partition_1abb824820c4ebf82ee1dfc9c2a30c17ce" kindref="member">SingletonPartner</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Lower<sp/>partner:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[i<sp/>-<sp/>1]-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)-&gt;Print();</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>NULL<sp/>lower<sp/>partner:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Top<sp/>=<sp/>%d,<sp/>bottom<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[i]-&gt;<ref refid="classtesseract_1_1_col_partition_1aaa8e68fc867682b5e496103fdfea55bf" kindref="member">top_spacing</ref>(),</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[i]-&gt;<ref refid="classtesseract_1_1_col_partition_1a01e366848d0b2f4ee921124f32cc63b3" kindref="member">bottom_spacing</ref>());</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Mean<sp/>spacing<sp/>=<sp/>%d/%d\n&quot;</highlight><highlight class="normal">,<sp/>top_spacing,<sp/>bottom_spacing);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_it<sp/>=<sp/>start_it;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>sum_it.data();</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(upper<sp/>!=<sp/>last_part)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper-&gt;set_top_spacing(top_spacing);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper-&gt;set_bottom_spacing(bottom_spacing);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Setting<sp/>mean<sp/>on:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper-&gt;Print();</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_it.forward();</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>sum_it.data();</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PN_LOWER<sp/>starts<sp/>the<sp/>next<sp/>group<sp/>and<sp/>end_it<sp/>is<sp/>the<sp/>next<sp/>start_it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_it<sp/>=<sp/>end_it;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalculate<sp/>the<sp/>median<sp/>spacing<sp/>to<sp/>maximize<sp/>the<sp/>chances<sp/>of<sp/>detecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spacing<sp/>blips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>median_space<sp/>=<sp/>MedianSpacing(page_height,<sp/>end_it);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shuffle<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>PN_COUNT;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[j<sp/>-<sp/>1]<sp/>=<sp/>neighbourhood[j];</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[PN_COUNT<sp/>-<sp/>1]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighbourhood[PN_COUNT<sp/>-<sp/>1]<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>end_it.forward();</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>parts<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>partitions<sp/>matches<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>condition<sp/>for<sp/>a<sp/>spacing<sp/>blip.<sp/>See<sp/>SmoothSpacings<sp/>for<sp/>what<sp/>this<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>how<sp/>it<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::OKSpacingBlip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_spacing,</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition**<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts[PN_UPPER]<sp/>==<sp/>NULL<sp/>||<sp/>parts[PN_LOWER]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>blip<sp/>is<sp/>OK<sp/>if<sp/>upper<sp/>and<sp/>lower<sp/>sum<sp/>to<sp/>an<sp/>OK<sp/>value<sp/>and<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>above1<sp/>and<sp/>below1<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>median.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parts[PN_UPPER]-&gt;SummedSpacingOK(*parts[PN_LOWER],</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>median_spacing,<sp/>resolution)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((parts[PN_ABOVE1]<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts[PN_ABOVE1]-&gt;SpacingEqual(median_spacing,<sp/>resolution))<sp/>||</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(parts[PN_BELOW1]<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts[PN_BELOW1]-&gt;SpacingEqual(median_spacing,<sp/>resolution)));</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>both<sp/>the<sp/>top<sp/>and<sp/>bottom<sp/>spacings<sp/>of<sp/>this<sp/>match<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spacing<sp/>to<sp/>within<sp/>suitable<sp/>margins<sp/>dictated<sp/>by<sp/>the<sp/>image<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::SpacingEqual(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_error<sp/>=<sp/>BottomSpacingMargin(resolution);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_error<sp/>=<sp/>TopSpacingMargin(resolution);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(bottom_spacing_,<sp/>spacing,<sp/>bottom_error)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(top_spacing_,<sp/>spacing,<sp/>top_error);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>both<sp/>the<sp/>top<sp/>and<sp/>bottom<sp/>spacings<sp/>of<sp/>this<sp/>and<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>match<sp/>to<sp/>within<sp/>suitable<sp/>margins<sp/>dictated<sp/>by<sp/>the<sp/>image<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::SpacingsEqual(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other,</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_error<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(BottomSpacingMargin(resolution),</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.BottomSpacingMargin(resolution));</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_error<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(TopSpacingMargin(resolution),</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.TopSpacingMargin(resolution));</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(bottom_spacing_,<sp/>other.bottom_spacing_,<sp/>bottom_error)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(top_spacing_,<sp/>other.top_spacing_,<sp/>top_error)<sp/>||</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(top_spacing_<sp/>+<sp/>other.top_spacing_,<sp/>bottom_spacing_<sp/>*<sp/>2,</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_error));</highlight></codeline>
<codeline lineno="2340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>sum<sp/>spacing<sp/>of<sp/>this<sp/>and<sp/>other<sp/>match<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spacing<sp/>(or<sp/>twice<sp/>the<sp/>given<sp/>spacing)<sp/>to<sp/>within<sp/>a<sp/>suitable<sp/>margin<sp/>dictated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>image<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::SummedSpacingOK(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other,</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_error<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(BottomSpacingMargin(resolution),</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.BottomSpacingMargin(resolution));</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_error<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(TopSpacingMargin(resolution),</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.TopSpacingMargin(resolution));</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_total<sp/>=<sp/>bottom_spacing_<sp/>+<sp/>other.bottom_spacing_;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_total<sp/>=<sp/>top_spacing_<sp/>+<sp/>other.top_spacing_;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(spacing,<sp/>bottom_total,<sp/>bottom_error)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(spacing,<sp/>top_total,<sp/>top_error))<sp/>||</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(spacing<sp/>*<sp/>2,<sp/>bottom_total,<sp/>bottom_error)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(spacing<sp/>*<sp/>2,<sp/>top_total,<sp/>top_error));</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>suitable<sp/>spacing<sp/>margin<sp/>that<sp/>can<sp/>be<sp/>applied<sp/>to<sp/>bottoms<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>text<sp/>lines,<sp/>based<sp/>on<sp/>the<sp/>resolution<sp/>and<sp/>the<sp/>stored<sp/>side_step_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ColPartition::BottomSpacingMargin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kMaxSpacingDrift<sp/>*<sp/>resolution<sp/>+<sp/>0.5)<sp/>+<sp/>side_step_;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>suitable<sp/>spacing<sp/>margin<sp/>that<sp/>can<sp/>be<sp/>applied<sp/>to<sp/>tops<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>text<sp/>lines,<sp/>based<sp/>on<sp/>the<sp/>resolution<sp/>and<sp/>the<sp/>stored<sp/>side_step_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ColPartition::TopSpacingMargin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(kMaxTopSpacingFraction<sp/>*<sp/>median_size_<sp/>+<sp/>0.5)<sp/>+</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BottomSpacingMargin(resolution);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>median<sp/>text<sp/>sizes<sp/>of<sp/>this<sp/>and<sp/>other<sp/>agree<sp/>to<sp/>within</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>reasonable<sp/>multiplicative<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColPartition::SizesSimilar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>median_size_<sp/>&lt;=<sp/>other.median_size_<sp/>*<sp/>kMaxSizeRatio<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.median_size_<sp/>&lt;=<sp/>median_size_<sp/>*<sp/><ref refid="namespacetesseract_1a253deddf742f4040aa4cd65ec08808e0" kindref="member">kMaxSizeRatio</ref>;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>updates<sp/>margin_left<sp/>and<sp/>margin_right,<sp/>being<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>margin<sp/>of<sp/>part<sp/>of<sp/>a<sp/>block.<sp/>Returns<sp/>false<sp/>and<sp/>does<sp/>not<sp/>update<sp/>the<sp/>bounds<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>partition<sp/>has<sp/>a<sp/>disjoint<sp/>margin<sp/>with<sp/>the<sp/>established<sp/>margin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UpdateLeftMargin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>margin_left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>margin_right)<sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tl_key<sp/>=<sp/>part.SortKey(part.left_margin(),<sp/>top);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr_key<sp/>=<sp/>part.SortKey(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>top);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bl_key<sp/>=<sp/>part.SortKey(part.left_margin(),<sp/>bottom);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>br_key<sp/>=<sp/>part.SortKey(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bottom);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_key<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(tl_key,<sp/>bl_key);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_key<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(tr_key,<sp/>br_key);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_key<sp/>&lt;=<sp/>*margin_right<sp/>&amp;&amp;<sp/>right_key<sp/>&gt;=<sp/>*margin_left)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>part<sp/>is<sp/>good<sp/>-<sp/>let&apos;s<sp/>keep<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>*margin_right<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(*margin_right,<sp/>right_key);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>*margin_left<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(*margin_left,<sp/>left_key);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>and<sp/>returns<sp/>in<sp/>start,<sp/>end<sp/>a<sp/>line<sp/>segment<sp/>formed<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forwards-iterated<sp/>group<sp/>of<sp/>left<sp/>edges<sp/>of<sp/>partitions<sp/>that<sp/>satisfy<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>condition<sp/>that<sp/>the<sp/>intersection<sp/>of<sp/>the<sp/>left<sp/>margins<sp/>is<sp/>non-empty,<sp/>ie<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rightmost<sp/>left<sp/>margin<sp/>is<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>leftmost<sp/>left<sp/>bounding<sp/>box<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>return<sp/>the<sp/>iterator<sp/>is<sp/>set<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::LeftEdgeRun(ColPartition_IT*<sp/>part_it,</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>start,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>start_part<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_y<sp/>=<sp/>part-&gt;bounding_box_.top();</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_first())<sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_bottom<sp/>=<sp/>part_it-&gt;data_relative(-1)-&gt;bounding_box_.bottom();</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_bottom<sp/>&lt;<sp/>start_y)</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>prev_bottom;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_bottom<sp/>&gt;<sp/>start_y)</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>(start_y<sp/>+<sp/>prev_bottom)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_y<sp/>=<sp/>part-&gt;bounding_box_.bottom();</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin_right<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin_left<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>UpdateLeftMargin(*part,<sp/>&amp;margin_left,<sp/>&amp;margin_right);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it-&gt;forward();</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_first()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateLeftMargin(*part,<sp/>&amp;margin_left,<sp/>&amp;margin_right));</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>run<sp/>ended.<sp/>If<sp/>we<sp/>were<sp/>pushed<sp/>inwards,<sp/>compute<sp/>the<sp/>next<sp/>run<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extend<sp/>it<sp/>backwards<sp/>into<sp/>the<sp/>run<sp/>we<sp/>just<sp/>calculated<sp/>to<sp/>find<sp/>the<sp/>end<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>run<sp/>that<sp/>provides<sp/>a<sp/>tight<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_margin_right<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_margin_left<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>UpdateLeftMargin(*part,<sp/>&amp;next_margin_left,<sp/>&amp;next_margin_right);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_margin_left<sp/>&gt;<sp/>margin_right)<sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>next_it(*part_it);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_it.forward();</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>next_it.data();</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!next_it.at_first()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateLeftMargin(*part,<sp/>&amp;next_margin_left,<sp/>&amp;next_margin_right));</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>extend<sp/>the<sp/>next<sp/>run<sp/>backwards<sp/>into<sp/>the<sp/>original<sp/>run<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tightest<sp/>fit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_it-&gt;backward();</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/>start_part<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateLeftMargin(*part,<sp/>&amp;next_margin_left,<sp/>&amp;next_margin_right));</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it-&gt;forward();</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>calculate<sp/>the<sp/>end_y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data_relative(-1);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/>end_y<sp/>=<sp/>part-&gt;bounding_box_.bottom();</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_first()<sp/>&amp;&amp;<sp/>part_it-&gt;data()-&gt;bounding_box_.top()<sp/>&lt;<sp/>end_y)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>end_y<sp/>=<sp/>(end_y<sp/>+<sp/>part_it-&gt;data()-&gt;bounding_box_.top())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/>start-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(start_y);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>start-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(part-&gt;XAtY(margin_right,<sp/>start_y));</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(end_y);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(part-&gt;XAtY(margin_right,<sp/>end_y));</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&amp;&amp;<sp/>!part_it-&gt;at_first())</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Left<sp/>run<sp/>from<sp/>y=%d<sp/>to<sp/>%d<sp/>terminated<sp/>with<sp/>sum<sp/>%d-%d,<sp/>new<sp/>%d-%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_y,<sp/>end_y,<sp/>part-&gt;XAtY(margin_left,<sp/>end_y),</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>part-&gt;left_margin_,<sp/>part-&gt;bounding_box_.left());</highlight></codeline>
<codeline lineno="2463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>updates<sp/>margin_left<sp/>and<sp/>margin_right,<sp/>being<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>margin<sp/>of<sp/>part<sp/>of<sp/>a<sp/>block.<sp/>Returns<sp/>false<sp/>and<sp/>does<sp/>not<sp/>update<sp/>the<sp/>bounds<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>partition<sp/>has<sp/>a<sp/>disjoint<sp/>margin<sp/>with<sp/>the<sp/>established<sp/>margin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UpdateRightMargin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>margin_left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>margin_right)<sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tl_key<sp/>=<sp/>part.SortKey(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>top);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr_key<sp/>=<sp/>part.SortKey(part.right_margin(),<sp/>top);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bl_key<sp/>=<sp/>part.SortKey(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>bottom);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>br_key<sp/>=<sp/>part.SortKey(part.right_margin(),<sp/>bottom);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_key<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(tl_key,<sp/>bl_key);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_key<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(tr_key,<sp/>br_key);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_key<sp/>&lt;=<sp/>*margin_right<sp/>&amp;&amp;<sp/>right_key<sp/>&gt;=<sp/>*margin_left)<sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>part<sp/>is<sp/>good<sp/>-<sp/>let&apos;s<sp/>keep<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>*margin_right<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(*margin_right,<sp/>right_key);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>*margin_left<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(*margin_left,<sp/>left_key);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>and<sp/>returns<sp/>in<sp/>start,<sp/>end<sp/>a<sp/>line<sp/>segment<sp/>formed<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>backwards-iterated<sp/>group<sp/>of<sp/>right<sp/>edges<sp/>of<sp/>partitions<sp/>that<sp/>satisfy<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>condition<sp/>that<sp/>the<sp/>intersection<sp/>of<sp/>the<sp/>right<sp/>margins<sp/>is<sp/>non-empty,<sp/>ie<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leftmost<sp/>right<sp/>margin<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>rightmost<sp/>right<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>return<sp/>the<sp/>iterator<sp/>is<sp/>set<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartition::RightEdgeRun(ColPartition_IT*<sp/>part_it,</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>start,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_col_partition_1ac9838a760a9e246080953da4af85091d" kindref="member">ColPartition</ref>*<sp/>start_part<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_y<sp/>=<sp/>part-&gt;bounding_box_.bottom();</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_last())<sp/>{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_y<sp/>=<sp/>part_it-&gt;data_relative(1)-&gt;bounding_box_.top();</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_y<sp/>&gt;<sp/>start_y)</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>next_y;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_y<sp/>&lt;<sp/>start_y)</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>(start_y<sp/>+<sp/>next_y)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_y<sp/>=<sp/>part-&gt;bounding_box_.top();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin_right<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin_left<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>UpdateRightMargin(*part,<sp/>&amp;margin_left,<sp/>&amp;margin_right);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it-&gt;backward();</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_last()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRightMargin(*part,<sp/>&amp;margin_left,<sp/>&amp;margin_right));</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>run<sp/>ended.<sp/>If<sp/>we<sp/>were<sp/>pushed<sp/>inwards,<sp/>compute<sp/>the<sp/>next<sp/>run<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extend<sp/>it<sp/>backwards<sp/>to<sp/>find<sp/>the<sp/>end<sp/>of<sp/>this<sp/>run<sp/>for<sp/>a<sp/>tight<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_margin_right<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_margin_left<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>UpdateRightMargin(*part,<sp/>&amp;next_margin_left,<sp/>&amp;next_margin_right);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_margin_right<sp/>&lt;<sp/>margin_left)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>next_it(*part_it);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_it.backward();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>next_it.data();</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!next_it.at_last()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRightMargin(*part,<sp/>&amp;next_margin_left,</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;next_margin_right));</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>extend<sp/>the<sp/>next<sp/>run<sp/>forwards<sp/>into<sp/>the<sp/>original<sp/>run<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tightest<sp/>fit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_it-&gt;forward();</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data();</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/>start_part<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRightMargin(*part,<sp/>&amp;next_margin_left,</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;next_margin_right));</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it-&gt;backward();</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>calculate<sp/>the<sp/>end_y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/>part<sp/>=<sp/>part_it-&gt;data_relative(1);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/>end_y<sp/>=<sp/>part-&gt;bounding_box().top();</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_it-&gt;at_last()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_it-&gt;data()-&gt;bounding_box_.bottom()<sp/>&gt;<sp/>end_y)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>end_y<sp/>=<sp/>(end_y<sp/>+<sp/>part_it-&gt;data()-&gt;bounding_box_.bottom())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>start-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(start_y);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/>start-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(part-&gt;XAtY(margin_left,<sp/>start_y));</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(end_y);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(part-&gt;XAtY(margin_left,<sp/>end_y));</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&amp;&amp;<sp/>!part_it-&gt;at_last())</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Right<sp/>run<sp/>from<sp/>y=%d<sp/>to<sp/>%d<sp/>terminated<sp/>with<sp/>sum<sp/>%d-%d,<sp/>new<sp/>%d-%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_y,<sp/>end_y,<sp/>end-&gt;<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>part-&gt;XAtY(margin_right,<sp/>end_y),</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;bounding_box_.right(),<sp/>part-&gt;right_margin_);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp"/>
  </compounddef>
</doxygen>
