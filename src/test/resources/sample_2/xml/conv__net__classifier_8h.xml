<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="conv__net__classifier_8h" kind="file">
    <compoundname>conv_net_classifier.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="char__samp_8h" local="yes">char_samp.h</includes>
    <includes refid="char__altlist_8h" local="yes">char_altlist.h</includes>
    <includes refid="char__set_8h" local="yes">char_set.h</includes>
    <includes refid="feature__base_8h" local="yes">feature_base.h</includes>
    <includes refid="classifier__base_8h" local="yes">classifier_base.h</includes>
    <includes refid="neural__net_8h" local="yes">neural_net.h</includes>
    <includes refid="lang__model_8h" local="yes">lang_model.h</includes>
    <includes refid="tuning__params_8h" local="yes">tuning_params.h</includes>
    <includedby refid="classifier__factory_8cpp" local="yes">cube/classifier_factory.cpp</includedby>
    <includedby refid="conv__net__classifier_8cpp" local="yes">cube/conv_net_classifier.cpp</includedby>
    <includedby refid="cube__search__object_8h" local="yes">cube/cube_search_object.h</includedby>
    <includedby refid="hybrid__neural__net__classifier_8cpp" local="yes">cube/hybrid_neural_net_classifier.cpp</includedby>
    <incdepgraph>
      <node id="29664">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="29652">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="29638">
        <label>stdlib.h</label>
      </node>
      <node id="29677">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="29678" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
      </node>
      <node id="29656">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="29657" relation="include">
        </childnode>
      </node>
      <node id="29681">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="29649" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
      </node>
      <node id="29651">
        <label>allheaders.h</label>
      </node>
      <node id="29680">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29681" relation="include">
        </childnode>
        <childnode refid="29682" relation="include">
        </childnode>
      </node>
      <node id="29636">
        <label>string</label>
      </node>
      <node id="29635">
        <label>cube/conv_net_classifier.h</label>
        <link refid="conv_net_classifier.h"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29674" relation="include">
        </childnode>
        <childnode refid="29676" relation="include">
        </childnode>
        <childnode refid="29680" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
      </node>
      <node id="29667">
        <label>stddef.h</label>
      </node>
      <node id="29670">
        <label>memory.h</label>
      </node>
      <node id="29675">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="29636" relation="include">
        </childnode>
      </node>
      <node id="29674">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
      </node>
      <node id="29662">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="29655" relation="include">
        </childnode>
      </node>
      <node id="29676">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29647" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29674" relation="include">
        </childnode>
        <childnode refid="29677" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
      </node>
      <node id="29657">
        <label>limits.h</label>
      </node>
      <node id="29637">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29640" relation="include">
        </childnode>
        <childnode refid="29643" relation="include">
        </childnode>
      </node>
      <node id="29653">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29643" relation="include">
        </childnode>
        <childnode refid="29654" relation="include">
        </childnode>
        <childnode refid="29668" relation="include">
        </childnode>
        <childnode refid="29672" relation="include">
        </childnode>
      </node>
      <node id="29644">
        <label>string.h</label>
      </node>
      <node id="29671">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="29669" relation="include">
        </childnode>
      </node>
      <node id="29669">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="29670" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
      </node>
      <node id="29650">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="29646" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29651" relation="include">
        </childnode>
        <childnode refid="29652" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
        <childnode refid="29637" relation="include">
        </childnode>
        <childnode refid="29673" relation="include">
        </childnode>
      </node>
      <node id="29646">
        <label>vector</label>
      </node>
      <node id="29661">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="29655" relation="include">
        </childnode>
      </node>
      <node id="29649">
        <label>math.h</label>
      </node>
      <node id="29678">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="29679" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
      </node>
      <node id="29659">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29660" relation="include">
        </childnode>
        <childnode refid="29665" relation="include">
        </childnode>
      </node>
      <node id="29660">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29664" relation="include">
        </childnode>
      </node>
      <node id="29666">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="29667" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
      </node>
      <node id="29640">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="29638" relation="include">
        </childnode>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29641" relation="include">
        </childnode>
        <childnode refid="29642" relation="include">
        </childnode>
      </node>
      <node id="29641">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="29679">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29675" relation="include">
        </childnode>
      </node>
      <node id="29668">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="29662" relation="include">
        </childnode>
        <childnode refid="29663" relation="include">
        </childnode>
        <childnode refid="29665" relation="include">
        </childnode>
        <childnode refid="29661" relation="include">
        </childnode>
        <childnode refid="29669" relation="include">
        </childnode>
        <childnode refid="29671" relation="include">
        </childnode>
      </node>
      <node id="29647">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="29648" relation="include">
        </childnode>
        <childnode refid="29653" relation="include">
        </childnode>
      </node>
      <node id="29672">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="29673">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="29666" relation="include">
        </childnode>
      </node>
      <node id="29658">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="29659" relation="include">
        </childnode>
      </node>
      <node id="29645">
        <label>algorithm</label>
      </node>
      <node id="29655">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="29656" relation="include">
        </childnode>
      </node>
      <node id="29642">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
      </node>
      <node id="29639">
        <label>stdio.h</label>
      </node>
      <node id="29682">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
      </node>
      <node id="29643">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29636" relation="include">
        </childnode>
        <childnode refid="29645" relation="include">
        </childnode>
        <childnode refid="29646" relation="include">
        </childnode>
      </node>
      <node id="29654">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29655" relation="include">
        </childnode>
        <childnode refid="29658" relation="include">
        </childnode>
      </node>
      <node id="29665">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
        <childnode refid="29656" relation="include">
        </childnode>
        <childnode refid="29666" relation="include">
        </childnode>
      </node>
      <node id="29648">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="29649" relation="include">
        </childnode>
        <childnode refid="29650" relation="include">
        </childnode>
      </node>
      <node id="29663">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="29639" relation="include">
        </childnode>
        <childnode refid="29644" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29688">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="29691">
        <label>cube/cube_line_object.h</label>
        <link refid="cube__line__object_8h"/>
        <childnode refid="29692" relation="include">
        </childnode>
      </node>
      <node id="29692">
        <label>cube/cube_line_object.cpp</label>
        <link refid="cube__line__object_8cpp"/>
      </node>
      <node id="29683">
        <label>cube/conv_net_classifier.h</label>
        <link refid="conv_net_classifier.h"/>
        <childnode refid="29684" relation="include">
        </childnode>
        <childnode refid="29685" relation="include">
        </childnode>
        <childnode refid="29686" relation="include">
        </childnode>
        <childnode refid="29695" relation="include">
        </childnode>
      </node>
      <node id="29687">
        <label>cube/cube_object.h</label>
        <link refid="cube__object_8h"/>
        <childnode refid="29688" relation="include">
        </childnode>
        <childnode refid="29689" relation="include">
        </childnode>
        <childnode refid="29690" relation="include">
        </childnode>
        <childnode refid="29691" relation="include">
        </childnode>
        <childnode refid="29693" relation="include">
        </childnode>
      </node>
      <node id="29693">
        <label>cube/cube_object.cpp</label>
        <link refid="cube__object_8cpp"/>
      </node>
      <node id="29694">
        <label>cube/cube_search_object.cpp</label>
        <link refid="cube__search__object_8cpp"/>
      </node>
      <node id="29690">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="29685">
        <label>cube/conv_net_classifier.cpp</label>
        <link refid="conv__net__classifier_8cpp"/>
      </node>
      <node id="29689">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="29686">
        <label>cube/cube_search_object.h</label>
        <link refid="cube__search__object_8h"/>
        <childnode refid="29687" relation="include">
        </childnode>
        <childnode refid="29694" relation="include">
        </childnode>
      </node>
      <node id="29695">
        <label>cube/hybrid_neural_net_classifier.cpp</label>
        <link refid="hybrid__neural__net__classifier_8cpp"/>
      </node>
      <node id="29684">
        <label>cube/classifier_factory.cpp</label>
        <link refid="classifier__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_conv_net_char_classifier" prot="public">tesseract::ConvNetCharClassifier</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv_net_classifier.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Declaration<sp/>of<sp/>Convolutional-NeuralNet<sp/>Character<sp/>Classifier</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ConvNetCharClassifier<sp/>inherits<sp/>from<sp/>the<sp/>base<sp/>classifier<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;CharClassifierBase&quot;.<sp/>It<sp/>implements<sp/>a<sp/>Convolutional<sp/>Neural<sp/>Net<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instance<sp/>of<sp/>the<sp/>base<sp/>classifier.<sp/>It<sp/>uses<sp/>the<sp/>Tesseract<sp/>Neural<sp/>Net<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Neural<sp/>Net<sp/>takes<sp/>a<sp/>scaled<sp/>version<sp/>of<sp/>a<sp/>bitmap<sp/>and<sp/>feeds<sp/>it<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convolutional<sp/>Neural<sp/>Net<sp/>as<sp/>input<sp/>and<sp/>performs<sp/>a<sp/>FeedForward.<sp/>Each<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>net<sp/>corresponds<sp/>to<sp/>class_id<sp/>in<sp/>the<sp/>CharSet<sp/>passed<sp/>at<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Afterwards,<sp/>the<sp/>outputs<sp/>of<sp/>the<sp/>Net<sp/>are<sp/>&quot;folded&quot;<sp/>using<sp/>the<sp/>folding<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONV_NET_CLASSIFIER_H</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CONV_NET_CLASSIFIER_H</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__samp_8h" kindref="compound">char_samp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__altlist_8h" kindref="compound">char_altlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__set_8h" kindref="compound">char_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__base_8h" kindref="compound">feature_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classifier__base_8h" kindref="compound">classifier_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="neural__net_8h" kindref="compound">neural_net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lang__model_8h" kindref="compound">lang_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tuning__params_8h" kindref="compound">tuning_params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Folding<sp/>Ratio<sp/>is<sp/>the<sp/>ratio<sp/>of<sp/>the<sp/>max-activation<sp/>of<sp/>members<sp/>of<sp/>a<sp/>folding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>that<sp/>is<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>min-activation<sp/>of<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kFoldingRatio<sp/>=<sp/>0.75;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classtesseract_1_1_conv_net_char_classifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_conv_net_char_classifier" kindref="compound">ConvNetCharClassifier</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_classifier" kindref="compound">CharClassifier</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a1ee09e5790b8d690fe995f3235ca0f14" kindref="member">ConvNetCharClassifier</ref>(<ref refid="classtesseract_1_1_char_set" kindref="compound">CharSet</ref><sp/>*char_set,<sp/><ref refid="classtesseract_1_1_tuning_params" kindref="compound">TuningParams</ref><sp/>*params,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_feature_base" kindref="compound">FeatureBase</ref><sp/>*feat_extract);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a70d83d9eecbde1c1aca3e3682aa05c09" kindref="member">~ConvNetCharClassifier</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>training<sp/>function.<sp/>Given<sp/>a<sp/>sample<sp/>and<sp/>a<sp/>class<sp/>ID<sp/>the<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>updates<sp/>its<sp/>parameters<sp/>according<sp/>to<sp/>its<sp/>learning<sp/>algorithm.<sp/>This<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>currently<sp/>not<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a451b0a0301ad22b5644e554dc65a6279" kindref="member">Train</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ClassID);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>secondary<sp/>function<sp/>needed<sp/>for<sp/>training.<sp/>Allows<sp/>the<sp/>trainer<sp/>to<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>of<sp/>any<sp/>train-time<sp/>paramter.<sp/>This<sp/>function<sp/>is<sp/>currently<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1ab3552a6a9eae46ff0cdd99c3118a2343" kindref="member">SetLearnParam</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Externally<sp/>sets<sp/>the<sp/>Neural<sp/>Net<sp/>used<sp/>by<sp/>the<sp/>classifier.<sp/>Used<sp/>for<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a15f44fc0bf7d6dd5cdd25608a84a239b" kindref="member">SetNet</ref>(<ref refid="classtesseract_1_1_neural_net" kindref="compound">tesseract::NeuralNet</ref><sp/>*net);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Classifies<sp/>an<sp/>input<sp/>charsamp<sp/>and<sp/>return<sp/>a<sp/>CharAltList<sp/>object<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>possible<sp/>candidates<sp/>and<sp/>corresponding<sp/>scores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_alt_list" kindref="compound">CharAltList</ref><sp/>*<sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a9de324fdc6f2b71fd546ad9cd281223b" kindref="member">Classify</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>cost<sp/>of<sp/>a<sp/>specific<sp/>charsamp<sp/>being<sp/>a<sp/>character<sp/>(versus<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-character:<sp/>part-of-a-character<sp/>OR<sp/>more-than-one-character)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_conv_net_char_classifier_1a6199a4f98c310f0b2593e95e860eacfc" kindref="member">CharCost</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Neural<sp/>Net<sp/>object<sp/>used<sp/>for<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net" kindref="compound">tesseract::NeuralNet</ref><sp/>*char_net_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>buffers<sp/>used<sp/>to<sp/>hold<sp/>Neural<sp/>Net<sp/>inputs<sp/>and<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*net_input_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*net_output_;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>the<sp/>classifier<sp/>provided<sp/>a<sp/>data-path<sp/>and<sp/>a<sp/>language<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>NeuralNets<sp/>needed<sp/>for<sp/>the<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadNets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>folding<sp/>sets<sp/>provided<sp/>a<sp/>data-path<sp/>and<sp/>a<sp/>language<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadFoldingSets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Folds<sp/>the<sp/>output<sp/>of<sp/>the<sp/>NeuralNet<sp/>using<sp/>the<sp/>loaded<sp/>folding<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Fold();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scales<sp/>the<sp/>input<sp/>char_samp<sp/>and<sp/>feeds<sp/>it<sp/>to<sp/>the<sp/>NeuralNet<sp/>as<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RunNets(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CONV_NET_CLASSIFIER_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/conv_net_classifier.h"/>
  </compounddef>
</doxygen>
