<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_t_b_o_x" kind="class" prot="public">
    <compoundname>TBOX</compoundname>
    <includes refid="rect_8h" local="no">rect.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_t_b_o_x_1ac20fb9537c1b469c955b285a1fe1a005" prot="private" static="no" mutable="no">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD TBOX::bot_left</definition>
        <argsstring></argsstring>
        <name>bot_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="301" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_t_b_o_x_1a87a1fa69c8366e055dea48c748ea63ae" prot="private" static="no" mutable="no">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD TBOX::top_right</definition>
        <argsstring></argsstring>
        <name>top_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="302" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_t_b_o_x_1ae0ff3f08b18219201a1e4de08a359374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TBOX::TBOX</definition>
        <argsstring>()</argsstring>
        <name>TBOX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a6731c485105a797efcfa2cec510e7904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TBOX::TBOX</definition>
        <argsstring>(const ICOORD pt1, const ICOORD pt2)</argsstring>
        <name>TBOX</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="33" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a89ac087fa337f9e57772a56055c17d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TBOX::TBOX</definition>
        <argsstring>(inT16 left, inT16 bottom, inT16 right, inT16 top)</argsstring>
        <name>TBOX</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>bottom</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a88a896251a9eda45ff35026ddb1996a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TBOX::TBOX</definition>
        <argsstring>(const FCOORD pt)</argsstring>
        <name>TBOX</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="310" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::null_box</definition>
        <argsstring>() const </argsstring>
        <name>null_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a41937e184ee899f30f0a0d0707d755a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::operator==</definition>
        <argsstring>(const TBOX &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::top</definition>
        <argsstring>() const </argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::set_top</definition>
        <argsstring>(int y)</argsstring>
        <name>set_top</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::bottom</definition>
        <argsstring>() const </argsstring>
        <name>bottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::set_bottom</definition>
        <argsstring>(int y)</argsstring>
        <name>set_bottom</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::left</definition>
        <argsstring>() const </argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::set_left</definition>
        <argsstring>(int x)</argsstring>
        <name>set_left</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::right</definition>
        <argsstring>() const </argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="74" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::set_right</definition>
        <argsstring>(int x)</argsstring>
        <name>set_right</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a9f46d9e51b8b69c5cb6d031e9ac34978" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>const ICOORD&amp; TBOX::botleft</definition>
        <argsstring>() const </argsstring>
        <name>botleft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a24d69d48b18162bf1c8e9e62ec00ecfe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD TBOX::botright</definition>
        <argsstring>() const </argsstring>
        <name>botright</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ad6f19fe78e5fcc3a824310d3f75ad358" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD TBOX::topleft</definition>
        <argsstring>() const </argsstring>
        <name>topleft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="89" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a02511fc69b598b332ac1f4af6c943f8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>const ICOORD&amp; TBOX::topright</definition>
        <argsstring>() const </argsstring>
        <name>topright</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="93" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::height</definition>
        <argsstring>() const </argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 TBOX::width</definition>
        <argsstring>() const </argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="104" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 TBOX::area</definition>
        <argsstring>() const </argsstring>
        <name>area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::pad</definition>
        <argsstring>(int xpad, int ypad)</argsstring>
        <name>pad</name>
        <param>
          <type>int</type>
          <declname>xpad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ypad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a0f635179085dbef57b8ee2cb93299fe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move_bottom_edge</definition>
        <argsstring>(const inT16 y)</argsstring>
        <name>move_bottom_edge</name>
        <param>
          <type>const <ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="126" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1adc78fbe7af6e79d3d99498d0d8be92b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move_left_edge</definition>
        <argsstring>(const inT16 x)</argsstring>
        <name>move_left_edge</name>
        <param>
          <type>const <ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="131" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a2db39cd4ebd04603db148498c5ba908e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move_right_edge</definition>
        <argsstring>(const inT16 x)</argsstring>
        <name>move_right_edge</name>
        <param>
          <type>const <ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ac0b97c09eb87e1418bbe922843158f76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move_top_edge</definition>
        <argsstring>(const inT16 y)</argsstring>
        <name>move_top_edge</name>
        <param>
          <type>const <ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a5fb1ce0d624392f72f82933e63f20e71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move</definition>
        <argsstring>(const ICOORD vec)</argsstring>
        <name>move</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="146" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a3ebe0259286541655d44d5a62a60dd26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::move</definition>
        <argsstring>(const FCOORD vec)</argsstring>
        <name>move</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="152" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="152" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a667878008a6e0c349231020dddddb0f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::scale</definition>
        <argsstring>(const float f)</argsstring>
        <name>scale</name>
        <param>
          <type>const float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="164" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a0d026e41c283acb4c19255b78ad51ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::scale</definition>
        <argsstring>(const FCOORD vec)</argsstring>
        <name>scale</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="171" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::rotate</definition>
        <argsstring>(const FCOORD &amp;vec)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a56b4e1cc91e8abcb9f97622da7468e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::rotate_large</definition>
        <argsstring>(const FCOORD &amp;vec)</argsstring>
        <name>rotate_large</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="190" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::contains</definition>
        <argsstring>(const FCOORD pt) const </argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="192" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="323" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a01e2f8fc64fd9582e2abe881c04ed529" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::contains</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="195" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::major_overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>major_overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="201" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="358" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1acc3b9d3b59853635705c39278e560435" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::x_overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>x_overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TBOX::x_gap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>x_gap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="210" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int TBOX::y_gap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>y_gap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="218" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::major_x_overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>major_x_overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="225" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="402" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::y_overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>y_overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="228" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="418" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a6b8b3bf99ea363303e11c26866335f23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::major_y_overlap</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>major_y_overlap</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="232" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="429" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a9e8d88530048135be86afb906ff9dd74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double TBOX::overlap_fraction</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>overlap_fraction</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="235" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="378" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a9f1aa7e1a714e01ae826600df63eccb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double TBOX::x_overlap_fraction</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>x_overlap_fraction</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="238" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="447" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a79379377536b6b6fed259f3b577977c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double TBOX::y_overlap_fraction</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>y_overlap_fraction</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="241" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="469" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ae75357efb10b9c990eaa4a5cf954722c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::x_almost_equal</definition>
        <argsstring>(const TBOX &amp;box, int tolerance) const </argsstring>
        <name>x_almost_equal</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="244" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a0f7a028a3ad0355f38e17db45c737384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::almost_equal</definition>
        <argsstring>(const TBOX &amp;box, int tolerance) const </argsstring>
        <name>almost_equal</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="247" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX TBOX::intersection</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="249" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="88" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ab8ae7b66782fa1802f78ff034da16089" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX TBOX::bounding_union</definition>
        <argsstring>(const TBOX &amp;box) const </argsstring>
        <name>bounding_union</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="252" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="130" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1ad61db4030d2a99fb107bb9679a055bed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::set_to_given_coords</definition>
        <argsstring>(int x_min, int y_min, int x_max, int y_max)</argsstring>
        <name>set_to_given_coords</name>
        <param>
          <type>int</type>
          <declname>x_min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="256" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="256" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="263" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a0344effa1c2a22bddf8005fe579cf601" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::append_debug</definition>
        <argsstring>(STRING *str) const </argsstring>
        <name>append_debug</name>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="270" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="270" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1af0ef9850320825065508b4f7f1276c7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::plot</definition>
        <argsstring>(ScrollView *fd) const </argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="278" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1aa144a45f47fe4134152f9de83732d5aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TBOX::plot</definition>
        <argsstring>(ScrollView *fd, ScrollView::Color fill_colour, ScrollView::Color border_colour) const </argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>fill_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>border_colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="284" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="164" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1a85bcf6863c6479e2c84a71b0a8874188" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::Serialize</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="290" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_t_b_o_x_1af19281ad7906c2fe18a81caf9dd56ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TBOX::DeSerialize</definition>
        <argsstring>(bool swap, FILE *fp)</argsstring>
        <name>DeSerialize</name>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="293" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="183" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_t_b_o_x_1aaf7b9efe1a330c91ea7193af78dec553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
        <definition>TBOX&amp; operator+=</definition>
        <argsstring>(TBOX &amp;, const TBOX &amp;)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="295" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="196" bodyend="212"/>
      </memberdef>
      <memberdef kind="friend" id="class_t_b_o_x_1a133f7448a4cbb7bc1cc0338b683fcb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
        <definition>TBOX&amp; operator&amp;=</definition>
        <argsstring>(TBOX &amp;, const TBOX &amp;)</argsstring>
        <name>operator&amp;=</name>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="297" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.cpp" bodystart="221" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/rect.h" line="29" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/rect.h" bodystart="29" bodyend="303"/>
    <listofallmembers>
      <member refid="class_t_b_o_x_1a0f7a028a3ad0355f38e17db45c737384" prot="public" virt="non-virtual"><scope>TBOX</scope><name>almost_equal</name></member>
      <member refid="class_t_b_o_x_1a0344effa1c2a22bddf8005fe579cf601" prot="public" virt="non-virtual"><scope>TBOX</scope><name>append_debug</name></member>
      <member refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" prot="public" virt="non-virtual"><scope>TBOX</scope><name>area</name></member>
      <member refid="class_t_b_o_x_1ac20fb9537c1b469c955b285a1fe1a005" prot="private" virt="non-virtual"><scope>TBOX</scope><name>bot_left</name></member>
      <member refid="class_t_b_o_x_1a9f46d9e51b8b69c5cb6d031e9ac34978" prot="public" virt="non-virtual"><scope>TBOX</scope><name>botleft</name></member>
      <member refid="class_t_b_o_x_1a24d69d48b18162bf1c8e9e62ec00ecfe" prot="public" virt="non-virtual"><scope>TBOX</scope><name>botright</name></member>
      <member refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" prot="public" virt="non-virtual"><scope>TBOX</scope><name>bottom</name></member>
      <member refid="class_t_b_o_x_1ab8ae7b66782fa1802f78ff034da16089" prot="public" virt="non-virtual"><scope>TBOX</scope><name>bounding_union</name></member>
      <member refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" prot="public" virt="non-virtual"><scope>TBOX</scope><name>contains</name></member>
      <member refid="class_t_b_o_x_1a01e2f8fc64fd9582e2abe881c04ed529" prot="public" virt="non-virtual"><scope>TBOX</scope><name>contains</name></member>
      <member refid="class_t_b_o_x_1af19281ad7906c2fe18a81caf9dd56ab1" prot="public" virt="non-virtual"><scope>TBOX</scope><name>DeSerialize</name></member>
      <member refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" prot="public" virt="non-virtual"><scope>TBOX</scope><name>height</name></member>
      <member refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" prot="public" virt="non-virtual"><scope>TBOX</scope><name>intersection</name></member>
      <member refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" prot="public" virt="non-virtual"><scope>TBOX</scope><name>left</name></member>
      <member refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" prot="public" virt="non-virtual"><scope>TBOX</scope><name>major_overlap</name></member>
      <member refid="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" prot="public" virt="non-virtual"><scope>TBOX</scope><name>major_x_overlap</name></member>
      <member refid="class_t_b_o_x_1a6b8b3bf99ea363303e11c26866335f23" prot="public" virt="non-virtual"><scope>TBOX</scope><name>major_y_overlap</name></member>
      <member refid="class_t_b_o_x_1a5fb1ce0d624392f72f82933e63f20e71" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move</name></member>
      <member refid="class_t_b_o_x_1a3ebe0259286541655d44d5a62a60dd26" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move</name></member>
      <member refid="class_t_b_o_x_1a0f635179085dbef57b8ee2cb93299fe6" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move_bottom_edge</name></member>
      <member refid="class_t_b_o_x_1adc78fbe7af6e79d3d99498d0d8be92b6" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move_left_edge</name></member>
      <member refid="class_t_b_o_x_1a2db39cd4ebd04603db148498c5ba908e" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move_right_edge</name></member>
      <member refid="class_t_b_o_x_1ac0b97c09eb87e1418bbe922843158f76" prot="public" virt="non-virtual"><scope>TBOX</scope><name>move_top_edge</name></member>
      <member refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" prot="public" virt="non-virtual"><scope>TBOX</scope><name>null_box</name></member>
      <member refid="class_t_b_o_x_1a133f7448a4cbb7bc1cc0338b683fcb78" prot="public" virt="non-virtual"><scope>TBOX</scope><name>operator&amp;=</name></member>
      <member refid="class_t_b_o_x_1aaf7b9efe1a330c91ea7193af78dec553" prot="public" virt="non-virtual"><scope>TBOX</scope><name>operator+=</name></member>
      <member refid="class_t_b_o_x_1a41937e184ee899f30f0a0d0707d755a1" prot="public" virt="non-virtual"><scope>TBOX</scope><name>operator==</name></member>
      <member refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" prot="public" virt="non-virtual"><scope>TBOX</scope><name>overlap</name></member>
      <member refid="class_t_b_o_x_1a9e8d88530048135be86afb906ff9dd74" prot="public" virt="non-virtual"><scope>TBOX</scope><name>overlap_fraction</name></member>
      <member refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" prot="public" virt="non-virtual"><scope>TBOX</scope><name>pad</name></member>
      <member refid="class_t_b_o_x_1af0ef9850320825065508b4f7f1276c7a" prot="public" virt="non-virtual"><scope>TBOX</scope><name>plot</name></member>
      <member refid="class_t_b_o_x_1aa144a45f47fe4134152f9de83732d5aa" prot="public" virt="non-virtual"><scope>TBOX</scope><name>plot</name></member>
      <member refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" prot="public" virt="non-virtual"><scope>TBOX</scope><name>print</name></member>
      <member refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" prot="public" virt="non-virtual"><scope>TBOX</scope><name>right</name></member>
      <member refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" prot="public" virt="non-virtual"><scope>TBOX</scope><name>rotate</name></member>
      <member refid="class_t_b_o_x_1a56b4e1cc91e8abcb9f97622da7468e98" prot="public" virt="non-virtual"><scope>TBOX</scope><name>rotate_large</name></member>
      <member refid="class_t_b_o_x_1a667878008a6e0c349231020dddddb0f6" prot="public" virt="non-virtual"><scope>TBOX</scope><name>scale</name></member>
      <member refid="class_t_b_o_x_1a0d026e41c283acb4c19255b78ad51ed0" prot="public" virt="non-virtual"><scope>TBOX</scope><name>scale</name></member>
      <member refid="class_t_b_o_x_1a85bcf6863c6479e2c84a71b0a8874188" prot="public" virt="non-virtual"><scope>TBOX</scope><name>Serialize</name></member>
      <member refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" prot="public" virt="non-virtual"><scope>TBOX</scope><name>set_bottom</name></member>
      <member refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" prot="public" virt="non-virtual"><scope>TBOX</scope><name>set_left</name></member>
      <member refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" prot="public" virt="non-virtual"><scope>TBOX</scope><name>set_right</name></member>
      <member refid="class_t_b_o_x_1ad61db4030d2a99fb107bb9679a055bed" prot="public" virt="non-virtual"><scope>TBOX</scope><name>set_to_given_coords</name></member>
      <member refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" prot="public" virt="non-virtual"><scope>TBOX</scope><name>set_top</name></member>
      <member refid="class_t_b_o_x_1ae0ff3f08b18219201a1e4de08a359374" prot="public" virt="non-virtual"><scope>TBOX</scope><name>TBOX</name></member>
      <member refid="class_t_b_o_x_1a6731c485105a797efcfa2cec510e7904" prot="public" virt="non-virtual"><scope>TBOX</scope><name>TBOX</name></member>
      <member refid="class_t_b_o_x_1a89ac087fa337f9e57772a56055c17d3b" prot="public" virt="non-virtual"><scope>TBOX</scope><name>TBOX</name></member>
      <member refid="class_t_b_o_x_1a88a896251a9eda45ff35026ddb1996a0" prot="public" virt="non-virtual"><scope>TBOX</scope><name>TBOX</name></member>
      <member refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" prot="public" virt="non-virtual"><scope>TBOX</scope><name>top</name></member>
      <member refid="class_t_b_o_x_1a87a1fa69c8366e055dea48c748ea63ae" prot="private" virt="non-virtual"><scope>TBOX</scope><name>top_right</name></member>
      <member refid="class_t_b_o_x_1ad6f19fe78e5fcc3a824310d3f75ad358" prot="public" virt="non-virtual"><scope>TBOX</scope><name>topleft</name></member>
      <member refid="class_t_b_o_x_1a02511fc69b598b332ac1f4af6c943f8f" prot="public" virt="non-virtual"><scope>TBOX</scope><name>topright</name></member>
      <member refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" prot="public" virt="non-virtual"><scope>TBOX</scope><name>width</name></member>
      <member refid="class_t_b_o_x_1ae75357efb10b9c990eaa4a5cf954722c" prot="public" virt="non-virtual"><scope>TBOX</scope><name>x_almost_equal</name></member>
      <member refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" prot="public" virt="non-virtual"><scope>TBOX</scope><name>x_gap</name></member>
      <member refid="class_t_b_o_x_1acc3b9d3b59853635705c39278e560435" prot="public" virt="non-virtual"><scope>TBOX</scope><name>x_overlap</name></member>
      <member refid="class_t_b_o_x_1a9f1aa7e1a714e01ae826600df63eccb3" prot="public" virt="non-virtual"><scope>TBOX</scope><name>x_overlap_fraction</name></member>
      <member refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" prot="public" virt="non-virtual"><scope>TBOX</scope><name>y_gap</name></member>
      <member refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" prot="public" virt="non-virtual"><scope>TBOX</scope><name>y_overlap</name></member>
      <member refid="class_t_b_o_x_1a79379377536b6b6fed259f3b577977c0" prot="public" virt="non-virtual"><scope>TBOX</scope><name>y_overlap_fraction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
