<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="commontraining_8h" kind="file">
    <compoundname>commontraining.h</compoundname>
    <includes refid="oldlist_8h" local="yes">oldlist.h</includes>
    <includes refid="cluster_8h" local="yes">cluster.h</includes>
    <includes refid="intproto_8h" local="yes">intproto.h</includes>
    <includes refid="featdefs_8h" local="yes">featdefs.h</includes>
    <includes local="yes">base/commandlineflags.h</includes>
    <includedby refid="classifier__tester_8cpp" local="yes">training/classifier_tester.cpp</includedby>
    <includedby refid="cntraining_8cpp" local="yes">training/cntraining.cpp</includedby>
    <includedby refid="commontraining_8cpp" local="yes">training/commontraining.cpp</includedby>
    <includedby refid="mftraining_8cpp" local="yes">training/mftraining.cpp</includedby>
    <includedby refid="shapeclustering_8cpp" local="yes">training/shapeclustering.cpp</includedby>
    <incdepgraph>
      <node id="41348">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="41349" relation="include">
        </childnode>
        <childnode refid="41362" relation="include">
        </childnode>
        <childnode refid="41345" relation="include">
        </childnode>
      </node>
      <node id="41344">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="41362">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="41334">
        <label>stdlib.h</label>
      </node>
      <node id="41336">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="41337" relation="include">
        </childnode>
      </node>
      <node id="41380">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
      </node>
      <node id="41363">
        <label>cluster.h</label>
        <link refid="cluster_8h"/>
        <childnode refid="41364" relation="include">
        </childnode>
        <childnode refid="41330" relation="include">
        </childnode>
      </node>
      <node id="41349">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="41350" relation="include">
        </childnode>
        <childnode refid="41342" relation="include">
        </childnode>
        <childnode refid="41345" relation="include">
        </childnode>
        <childnode refid="41359" relation="include">
        </childnode>
        <childnode refid="41339" relation="include">
        </childnode>
        <childnode refid="41357" relation="include">
        </childnode>
        <childnode refid="41360" relation="include">
        </childnode>
        <childnode refid="41361" relation="include">
        </childnode>
      </node>
      <node id="41372">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
      </node>
      <node id="41352">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="41334" relation="include">
        </childnode>
        <childnode refid="41333" relation="include">
        </childnode>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41346" relation="include">
        </childnode>
        <childnode refid="41342" relation="include">
        </childnode>
        <childnode refid="41353" relation="include">
        </childnode>
      </node>
      <node id="41367">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41352" relation="include">
        </childnode>
        <childnode refid="41354" relation="include">
        </childnode>
      </node>
      <node id="41378">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41366" relation="include">
        </childnode>
        <childnode refid="41339" relation="include">
        </childnode>
      </node>
      <node id="41347">
        <label>stddef.h</label>
      </node>
      <node id="41356">
        <label>memory.h</label>
      </node>
      <node id="41377">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41369" relation="include">
        </childnode>
      </node>
      <node id="41342">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
      </node>
      <node id="41375">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41355" relation="include">
        </childnode>
      </node>
      <node id="41337">
        <label>limits.h</label>
      </node>
      <node id="41364">
        <label>kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41331" relation="include">
        </childnode>
        <childnode refid="41365" relation="include">
        </childnode>
      </node>
      <node id="41371">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="41369" relation="include">
        </childnode>
      </node>
      <node id="41360">
        <label>pthread.h</label>
      </node>
      <node id="41333">
        <label>string.h</label>
      </node>
      <node id="41358">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="41355" relation="include">
        </childnode>
      </node>
      <node id="41355">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="41356" relation="include">
        </childnode>
        <childnode refid="41333" relation="include">
        </childnode>
      </node>
      <node id="41331">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41333" relation="include">
        </childnode>
        <childnode refid="41334" relation="include">
        </childnode>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41338" relation="include">
        </childnode>
        <childnode refid="41348" relation="include">
        </childnode>
      </node>
      <node id="41368">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="41369" relation="include">
        </childnode>
        <childnode refid="41370" relation="include">
        </childnode>
        <childnode refid="41344" relation="include">
        </childnode>
        <childnode refid="41372" relation="include">
        </childnode>
        <childnode refid="41338" relation="include">
        </childnode>
      </node>
      <node id="41341">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
      </node>
      <node id="41361">
        <label>semaphore.h</label>
      </node>
      <node id="41383">
        <label>base/commandlineflags.h</label>
      </node>
      <node id="41353">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="41342" relation="include">
        </childnode>
      </node>
      <node id="41376">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41330" relation="include">
        </childnode>
        <childnode refid="41377" relation="include">
        </childnode>
        <childnode refid="41378" relation="include">
        </childnode>
        <childnode refid="41339" relation="include">
        </childnode>
      </node>
      <node id="41350">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="41351" relation="include">
        </childnode>
        <childnode refid="41338" relation="include">
        </childnode>
        <childnode refid="41355" relation="include">
        </childnode>
        <childnode refid="41357" relation="include">
        </childnode>
        <childnode refid="41340" relation="include">
        </childnode>
      </node>
      <node id="41381">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="41341" relation="include">
        </childnode>
        <childnode refid="41342" relation="include">
        </childnode>
        <childnode refid="41340" relation="include">
        </childnode>
      </node>
      <node id="41369">
        <label>math.h</label>
      </node>
      <node id="41354">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="41342" relation="include">
        </childnode>
      </node>
      <node id="41373">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="41369" relation="include">
        </childnode>
        <childnode refid="41366" relation="include">
        </childnode>
      </node>
      <node id="41330">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="41331" relation="include">
        </childnode>
        <childnode refid="41341" relation="include">
        </childnode>
      </node>
      <node id="41365">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="41366" relation="include">
        </childnode>
        <childnode refid="41332" relation="include">
        </childnode>
      </node>
      <node id="41339">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41340" relation="include">
        </childnode>
        <childnode refid="41345" relation="include">
        </childnode>
      </node>
      <node id="41340">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41334" relation="include">
        </childnode>
        <childnode refid="41341" relation="include">
        </childnode>
        <childnode refid="41342" relation="include">
        </childnode>
        <childnode refid="41343" relation="include">
        </childnode>
        <childnode refid="41344" relation="include">
        </childnode>
      </node>
      <node id="41346">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="41347" relation="include">
        </childnode>
        <childnode refid="41335" relation="include">
        </childnode>
      </node>
      <node id="41379">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="41380" relation="include">
        </childnode>
        <childnode refid="41331" relation="include">
        </childnode>
        <childnode refid="41355" relation="include">
        </childnode>
        <childnode refid="41381" relation="include">
        </childnode>
        <childnode refid="41339" relation="include">
        </childnode>
      </node>
      <node id="41382">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="41365" relation="include">
        </childnode>
      </node>
      <node id="41351">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41352" relation="include">
        </childnode>
        <childnode refid="41354" relation="include">
        </childnode>
      </node>
      <node id="41357">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="41342" relation="include">
        </childnode>
        <childnode refid="41343" relation="include">
        </childnode>
        <childnode refid="41345" relation="include">
        </childnode>
        <childnode refid="41341" relation="include">
        </childnode>
        <childnode refid="41355" relation="include">
        </childnode>
        <childnode refid="41358" relation="include">
        </childnode>
      </node>
      <node id="41329">
        <label>training/commontraining.h</label>
        <link refid="commontraining.h"/>
        <childnode refid="41330" relation="include">
        </childnode>
        <childnode refid="41363" relation="include">
        </childnode>
        <childnode refid="41374" relation="include">
        </childnode>
        <childnode refid="41382" relation="include">
        </childnode>
        <childnode refid="41383" relation="include">
        </childnode>
      </node>
      <node id="41370">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41369" relation="include">
        </childnode>
        <childnode refid="41351" relation="include">
        </childnode>
        <childnode refid="41371" relation="include">
        </childnode>
      </node>
      <node id="41338">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="41339" relation="include">
        </childnode>
      </node>
      <node id="41335">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="41336" relation="include">
        </childnode>
      </node>
      <node id="41332">
        <label>stdio.h</label>
      </node>
      <node id="41374">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="41340" relation="include">
        </childnode>
        <childnode refid="41375" relation="include">
        </childnode>
        <childnode refid="41376" relation="include">
        </childnode>
        <childnode refid="41379" relation="include">
        </childnode>
        <childnode refid="41372" relation="include">
        </childnode>
        <childnode refid="41357" relation="include">
        </childnode>
      </node>
      <node id="41359">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41335" relation="include">
        </childnode>
        <childnode refid="41338" relation="include">
        </childnode>
      </node>
      <node id="41345">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41333" relation="include">
        </childnode>
        <childnode refid="41336" relation="include">
        </childnode>
        <childnode refid="41346" relation="include">
        </childnode>
      </node>
      <node id="41366">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="41367" relation="include">
        </childnode>
        <childnode refid="41368" relation="include">
        </childnode>
        <childnode refid="41373" relation="include">
        </childnode>
      </node>
      <node id="41343">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="41332" relation="include">
        </childnode>
        <childnode refid="41333" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41387">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="41388">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="41386">
        <label>training/cntraining.cpp</label>
        <link refid="cntraining_8cpp"/>
      </node>
      <node id="41389">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="41385">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="41384">
        <label>training/commontraining.h</label>
        <link refid="commontraining.h"/>
        <childnode refid="41385" relation="include">
        </childnode>
        <childnode refid="41386" relation="include">
        </childnode>
        <childnode refid="41387" relation="include">
        </childnode>
        <childnode refid="41388" relation="include">
        </childnode>
        <childnode refid="41389" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" prot="public">LABELEDLISTNODE</innerclass>
    <innerclass refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" prot="public">MERGE_CLASS_NODE</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="commontraining_8h_1ad748a6074d71dbad0eefb8e9f5a92bb0" prot="public" static="no">
        <name>INT_PARAM_FLAG</name>
        <param><defname>name</defname></param>
        <param><defname>val</defname></param>
        <param><defname>comment</defname></param>
        <initializer><ref refid="shapeclustering_8cpp_1accf8daedfd84ddced4d732c912b6edf5" kindref="member">DEFINE_int32</ref>(name, val, comment)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="35" column="13" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commontraining_8h_1a2e09690c0916d41fdffade0bdaed4a3c" prot="public" static="no">
        <name>DECLARE_INT_PARAM_FLAG</name>
        <param><defname>name</defname></param>
        <initializer>DECLARE_int32(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="37" column="11" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" prot="public" static="no">
        <name>STRING_PARAM_FLAG</name>
        <param><defname>name</defname></param>
        <param><defname>val</defname></param>
        <param><defname>comment</defname></param>
        <initializer><ref refid="shapeclustering_8cpp_1a0bacb1f1d314bc87b502af76087a0c07" kindref="member">DEFINE_string</ref>(name, val, comment)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="38" column="11" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="commontraining_8h_1a87a885957cbc36af45212ba399d6c815" prot="public" static="no">
        <name>DECLARE_STRING_PARAM_FLAG</name>
        <param><defname>name</defname></param>
        <initializer><ref refid="mftraining_8cpp_1a5c2468eff0e9a40f0f63260d6d2eb4bb" kindref="member">DECLARE_string</ref>(name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="40" column="11" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" prot="public" static="no">
        <type>struct <ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLISTNODE</ref> *</type>
        <definition>typedef  struct LABELEDLISTNODE * LABELEDLIST</definition>
        <argsstring></argsstring>
        <name>LABELEDLIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" prot="public" static="no">
        <type><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS_NODE</ref> *</type>
        <definition>typedef MERGE_CLASS_NODE* MERGE_CLASS</definition>
        <argsstring></argsstring>
        <name>MERGE_CLASS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="commontraining_8h_1a7bbe652f7a8f769dd65d6442a8f004a9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref></type>
        <definition>FEATURE_DEFS_STRUCT feature_defs</definition>
        <argsstring></argsstring>
        <name>feature_defs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commontraining_8h_1a1630a3dc82a9a7cef07bb6153df9eb9c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref></type>
        <definition>CLUSTERCONFIG Config</definition>
        <argsstring></argsstring>
        <name>Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="commontraining_8h_1a5177d61ebf73a60571198cb6eaa753ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseArguments</definition>
        <argsstring>(int *argc, char ***argv)</argsstring>
        <name>ParseArguments</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="82" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="88" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1acc69f64ead8e1c64560ef259e5d87b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetNextFilename</definition>
        <argsstring>(int argc, const char *const *argv)</argsstring>
        <name>GetNextFilename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="109" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="362" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a7acd4f2950ab3bd42ed87dc7b081be83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
        <definition>LABELEDLIST FindList</definition>
        <argsstring>(LIST List, char *Label)</argsstring>
        <name>FindList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>List</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="385" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a83417b534a3cb0ea9e43eba33e37f1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
        <definition>LABELEDLIST NewLabeledList</definition>
        <argsstring>(const char *Label)</argsstring>
        <name>NewLabeledList</name>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="115" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="417" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a858311d0ef1820c6e83cc15ecc0e0e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadTrainingSamples</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;feature_defs, const char *feature_name, int max_samples, UNICHARSET *unicharset, FILE *file, LIST *training_samples)</argsstring>
        <name>ReadTrainingSamples</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>feature_defs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>feature_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_samples</declname>
        </param>
        <param>
          <type><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>training_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="448" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a0bbb85cd65a6bf50d1b0d04865635a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteTrainingSamples</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, char *Directory, LIST CharList, const char *program_feature_type)</argsstring>
        <name>WriteTrainingSamples</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>Directory</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>CharList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>program_feature_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a2eb4d580c0984a25fea59c6ec1196cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeTrainingSamples</definition>
        <argsstring>(LIST CharList)</argsstring>
        <name>FreeTrainingSamples</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>CharList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="518" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a499ee1a13b378e272171053afca0de80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeLabeledList</definition>
        <argsstring>(LABELEDLIST LabeledList)</argsstring>
        <name>FreeLabeledList</name>
        <param>
          <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
          <declname>LabeledList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="132" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="548" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1adfc1458331a5648a286484c1f6324510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeLabeledClassList</definition>
        <argsstring>(LIST ClassListList)</argsstring>
        <name>FreeLabeledClassList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ClassListList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="135" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="809" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1acde409fe3d92475e3cf2c6cc82e5bb63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
        <definition>CLUSTERER* SetUpForClustering</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, LABELEDLIST CharSample, const char *program_feature_type)</argsstring>
        <name>SetUpForClustering</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
          <declname>CharSample</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>program_feature_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="138" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="567" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1aad49ec475f2a0dc40c789df41d101c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST RemoveInsignificantProtos</definition>
        <argsstring>(LIST ProtoList, BOOL8 KeepSigProtos, BOOL8 KeepInsigProtos, int N)</argsstring>
        <name>RemoveInsignificantProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>KeepSigProtos</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>KeepInsigProtos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="143" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="710" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a561b5ddf89562dbf46af5ef6ce1e058e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanUpUnusedData</definition>
        <argsstring>(LIST ProtoList)</argsstring>
        <name>CleanUpUnusedData</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="149" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="683" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a9bd7631e2f9e44b661bf1c4edae4d270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MergeInsignificantProtos</definition>
        <argsstring>(LIST ProtoList, const char *label, CLUSTERER *Clusterer, CLUSTERCONFIG *Config)</argsstring>
        <name>MergeInsignificantProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
          <declname>Clusterer</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref> *</type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="152" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="618" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1aa89103a9b87cd5fe196c69787aacca2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref></type>
        <definition>MERGE_CLASS FindClass</definition>
        <argsstring>(LIST List, const char *Label)</argsstring>
        <name>FindClass</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>List</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="158" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="778" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1ad07aa0e45caed9a49158afcd82d9e825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref></type>
        <definition>MERGE_CLASS NewLabeledClass</definition>
        <argsstring>(const char *Label)</argsstring>
        <name>NewLabeledClass</name>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="162" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="795" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1ae0ede748b48d1f73abdaeac0c2a1a000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref> *</type>
        <definition>CLASS_STRUCT* SetUpForFloat2Int</definition>
        <argsstring>(const UNICHARSET &amp;unicharset, LIST LabeledClassList)</argsstring>
        <name>SetUpForFloat2Int</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>LabeledClassList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SetUpForFloat2Int </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="168" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="839" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a8959d42d4e9ba28a3e128aed3cefb479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Normalize</definition>
        <argsstring>(float *Values)</argsstring>
        <name>Normalize</name>
        <param>
          <type>float *</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="171" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="902" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a7a389fb9515f5942d514995b3dfb904c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeNormProtoList</definition>
        <argsstring>(LIST CharList)</argsstring>
        <name>FreeNormProtoList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>CharList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="174" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="919" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a19e1f0ede9842599275a9d0ffc67ef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddToNormProtosList</definition>
        <argsstring>(LIST *NormProtoList, LIST ProtoList, char *CharName)</argsstring>
        <name>AddToNormProtosList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>NormProtoList</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>CharName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="177" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="935" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1abeba7db95e0009664b96ac0441e7dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NumberOfProtos</definition>
        <argsstring>(LIST ProtoList, BOOL8 CountSigProtos, BOOL8 CountInsigProtos)</argsstring>
        <name>NumberOfProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>CountSigProtos</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>CountInsigProtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="953" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8h_1a778e1d560aab7cb9181069b639f227aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void allocNormProtos</definition>
        <argsstring>()</argsstring>
        <name>allocNormProtos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.h" line="188" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>scharron@google.com<sp/>(Samuel<sp/>Charron)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_TRAINING_COMMONTRAINING_H__</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_TRAINING_COMMONTRAINING_H__</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="oldlist_8h" kindref="compound">oldlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cluster_8h" kindref="compound">cluster.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intproto_8h" kindref="compound">intproto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="featdefs_8h" kindref="compound">featdefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Macros<sp/>to<sp/>merge<sp/>tesseract<sp/>params<sp/>with<sp/>command-line<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_STD_NAMESPACE</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INT_PARAM_FLAG(name,<sp/>val,<sp/>comment)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>INT_VAR(FLAGS_##name,<sp/>val,<sp/>comment)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DECLARE_INT_PARAM_FLAG(name)<sp/>extern<sp/>INT_VAR_H(FLAGS_##name,<sp/>0,<sp/>&quot;&quot;)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STRING_PARAM_FLAG(name,<sp/>val,<sp/>comment)<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>STRING_VAR(FLAGS_##name,<sp/>val,<sp/>comment)</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DECLARE_STRING_PARAM_FLAG(name)<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>STRING_VAR_H(FLAGS_##name,<sp/>&quot;&quot;,<sp/>&quot;&quot;)</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>c_str<sp/>string</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;base/commandlineflags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="commontraining_8h_1ad748a6074d71dbad0eefb8e9f5a92bb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>INT_PARAM_FLAG(name,<sp/>val,<sp/>comment)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DEFINE_int32(name,<sp/>val,<sp/>comment)</highlight></codeline>
<codeline lineno="37" refid="commontraining_8h_1a2e09690c0916d41fdffade0bdaed4a3c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DECLARE_INT_PARAM_FLAG(name)<sp/>DECLARE_int32(name)</highlight></codeline>
<codeline lineno="38" refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>STRING_PARAM_FLAG(name,<sp/>val,<sp/>comment)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DEFINE_string(name,<sp/>val,<sp/>comment)</highlight></codeline>
<codeline lineno="40" refid="commontraining_8h_1a87a885957cbc36af45212ba399d6c815" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DECLARE_STRING_PARAM_FLAG(name)<sp/>DECLARE_string(name)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Classify;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MasterTrainer;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShapeTable;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">//<sp/>Globals<sp/>///////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/><ref refid="commontraining_8cpp_1a7bbe652f7a8f769dd65d6442a8f004a9" kindref="member">feature_defs</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>defined<sp/>in<sp/>the<sp/>file<sp/>that<sp/>&quot;implements&quot;<sp/>commonTraining<sp/>facilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">//<sp/>Structs<sp/>///////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="61" refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" kindref="member">Label</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1aab481329945e65c4aeee79b145e4de51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1aab481329945e65c4aeee79b145e4de51" kindref="member">SampleCount</ref>;</highlight></codeline>
<codeline lineno="65" refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" kindref="member">font_sample_count</ref>;</highlight></codeline>
<codeline lineno="66" refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLISTNODE</ref>,<sp/>*<ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72" refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref>;</highlight></codeline>
<codeline lineno="73" refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a66ece12653cd86542d9c9c461a256f8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>NumMerged[<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>];</highlight></codeline>
<codeline lineno="74" refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS_NODE</ref>;</highlight></codeline>
<codeline lineno="76" refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS_NODE</ref>*<sp/><ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">//<sp/>Functions<sp/>/////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a5177d61ebf73a60571198cb6eaa753ac" kindref="member">ParseArguments</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>argv);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>loads<sp/>shape<sp/>table<sp/>from<sp/>the<sp/>given<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">ShapeTable*<sp/><ref refid="namespacetesseract_1a1f150258bf03e986518efd91fb077322" kindref="member">LoadShapeTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>file_prefix);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>write<sp/>the<sp/>shape_table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af6657e7cdbf17875a06df792c22cd28b" kindref="member">WriteShapeTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>file_prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeTable&amp;<sp/>shape_table);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>MasterTraininer<sp/>and<sp/>loads<sp/>the<sp/>training<sp/>data<sp/>into<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initializes<sp/>feature_defs<sp/>and<sp/>IntegerFX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>shape_table<sp/>if<sp/>shape_table<sp/>!=<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loads<sp/>initial<sp/>unicharset<sp/>from<sp/>-U<sp/>command-line<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>FLAGS_input_trainer<sp/>is<sp/>set,<sp/>loads<sp/>the<sp/>majority<sp/>of<sp/>data<sp/>from<sp/>there,<sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>font<sp/>info<sp/>from<sp/>-F<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>xheights<sp/>from<sp/>-X<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>samples<sp/>from<sp/>.tr<sp/>files<sp/>in<sp/>remaining<sp/>command-line<sp/>args.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Deletes<sp/>outliers<sp/>and<sp/>computes<sp/>canonical<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>FLAGS_output_trainer<sp/>is<sp/>set,<sp/>saves<sp/>the<sp/>trainer<sp/>for<sp/>future<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>canonical<sp/>and<sp/>cloud<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>shape_table<sp/>is<sp/>not<sp/>NULL,<sp/>but<sp/>failed<sp/>to<sp/>load,<sp/>make<sp/>a<sp/>fake<sp/>flat<sp/>one,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shape<sp/>clustering<sp/>was<sp/>not<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">MasterTrainer*<sp/><ref refid="namespacetesseract_1a2af3b74c1139cfc070d17e947f212b58" kindref="member">LoadTrainingData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>argv,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>replication,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShapeTable**<sp/>shape_table,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>file_prefix);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="commontraining_8cpp_1acc69f64ead8e1c64560ef259e5d87b5b" kindref="member">GetNextFilename</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>argv);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">LABELEDLIST<sp/><ref refid="commontraining_8cpp_1a7acd4f2950ab3bd42ed87dc7b081be83" kindref="member">FindList</ref>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Label);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">LABELEDLIST<sp/><ref refid="commontraining_8cpp_1a83417b534a3cb0ea9e43eba33e37f1bc" kindref="member">NewLabeledList</ref>(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*Label);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a858311d0ef1820c6e83cc15ecc0e0e28" kindref="member">ReadTrainingSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref>&amp;<sp/>feature_defs,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*feature_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_samples,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>*<sp/>unicharset,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>file,<sp/><ref refid="structlist__rec" kindref="compound">LIST</ref>*<sp/>training_samples);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8h_1a0bbb85cd65a6bf50d1b0d04865635a5b" kindref="member">WriteTrainingSamples</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Directory,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>CharList,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*program_feature_type);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a2eb4d580c0984a25fea59c6ec1196cec" kindref="member">FreeTrainingSamples</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharList);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a499ee1a13b378e272171053afca0de80" kindref="member">FreeLabeledList</ref>(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>LABELEDLIST<sp/>LabeledList);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a0f90ef232622ab0d996654dd91a278e2" kindref="member">FreeLabeledClassList</ref>(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassListList);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*<ref refid="commontraining_8cpp_1aeec0a66901e2f5ba2fba6c5023a6734e" kindref="member">SetUpForClustering</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>LABELEDLIST<sp/>CharSample,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*program_feature_type);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="commontraining_8cpp_1aad49ec475f2a0dc40c789df41d101c94" kindref="member">RemoveInsignificantProtos</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoList,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepSigProtos,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepInsigProtos,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a561b5ddf89562dbf46af5ef6ce1e058e" kindref="member">CleanUpUnusedData</ref>(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoList);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a9bd7631e2f9e44b661bf1c4edae4d270" kindref="member">MergeInsignificantProtos</ref>(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoList,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*label,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/><sp/><sp/>*Clusterer,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref><sp/>*Config);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><ref refid="commontraining_8cpp_1aa89103a9b87cd5fe196c69787aacca2f" kindref="member">FindClass</ref>(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Label);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><ref refid="commontraining_8cpp_1ad07aa0e45caed9a49158afcd82d9e825" kindref="member">NewLabeledClass</ref>(</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Label);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a2eb4d580c0984a25fea59c6ec1196cec" kindref="member">FreeTrainingSamples</ref>(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharList);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref>*<sp/><ref refid="commontraining_8cpp_1ae0ede748b48d1f73abdaeac0c2a1a000" kindref="member">SetUpForFloat2Int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>LabeledClassList);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a8959d42d4e9ba28a3e128aed3cefb479" kindref="member">Normalize</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Values);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a7a389fb9515f5942d514995b3dfb904c" kindref="member">FreeNormProtoList</ref>(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharList);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a19e1f0ede9842599275a9d0ffc67ef4a" kindref="member">AddToNormProtosList</ref>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormProtoList,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoList,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*CharName);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1abeba7db95e0009664b96ac0441e7dc16" kindref="member">NumberOfProtos</ref>(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoList,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountSigProtos,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountInsigProtos);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8h_1a778e1d560aab7cb9181069b639f227aa" kindref="member">allocNormProtos</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_TRAINING_COMMONTRAINING_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/training/commontraining.h"/>
  </compounddef>
</doxygen>
