<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="namespacetesseract" kind="namespace">
    <compoundname>tesseract</compoundname>
    <innerclass refid="structtesseract_1_1_t_e_s_s___c_h_a_r" prot="public">tesseract::TESS_CHAR</innerclass>
    <innerclass refid="classtesseract_1_1_tess_base_a_p_i" prot="public">tesseract::TessBaseAPI</innerclass>
    <innerclass refid="classtesseract_1_1_cube_reco_context" prot="public">tesseract::CubeRecoContext</innerclass>
    <innerclass refid="classtesseract_1_1_cube_classifier" prot="public">tesseract::CubeClassifier</innerclass>
    <innerclass refid="classtesseract_1_1_cube_tess_classifier" prot="public">tesseract::CubeTessClassifier</innerclass>
    <innerclass refid="structtesseract_1_1_doc_qual_callbacks" prot="public">tesseract::DocQualCallbacks</innerclass>
    <innerclass refid="classtesseract_1_1_equation_detect" prot="public">tesseract::EquationDetect</innerclass>
    <innerclass refid="classtesseract_1_1_l_t_r_result_iterator" prot="public">tesseract::LTRResultIterator</innerclass>
    <innerclass refid="classtesseract_1_1_choice_iterator" prot="public">tesseract::ChoiceIterator</innerclass>
    <innerclass refid="classtesseract_1_1_mutable_iterator" prot="public">tesseract::MutableIterator</innerclass>
    <innerclass refid="classtesseract_1_1_page_iterator" prot="public">tesseract::PageIterator</innerclass>
    <innerclass refid="classtesseract_1_1_unicode_span_skipper" prot="public">tesseract::UnicodeSpanSkipper</innerclass>
    <innerclass refid="structtesseract_1_1_cluster" prot="public">tesseract::Cluster</innerclass>
    <innerclass refid="classtesseract_1_1_simple_clusterer" prot="public">tesseract::SimpleClusterer</innerclass>
    <innerclass refid="structtesseract_1_1_geometric_classifier_state" prot="public">tesseract::GeometricClassifierState</innerclass>
    <innerclass refid="structtesseract_1_1_interval" prot="public">tesseract::Interval</innerclass>
    <innerclass refid="classtesseract_1_1_row_info" prot="public">tesseract::RowInfo</innerclass>
    <innerclass refid="structtesseract_1_1_line_hypothesis" prot="public">tesseract::LineHypothesis</innerclass>
    <innerclass refid="classtesseract_1_1_row_scratch_registers" prot="public">tesseract::RowScratchRegisters</innerclass>
    <innerclass refid="classtesseract_1_1_paragraph_theory" prot="public">tesseract::ParagraphTheory</innerclass>
    <innerclass refid="classtesseract_1_1_paragraph_model_smearer" prot="public">tesseract::ParagraphModelSmearer</innerclass>
    <innerclass refid="classtesseract_1_1_result_iterator" prot="public">tesseract::ResultIterator</innerclass>
    <innerclass refid="classtesseract_1_1_tesseract_cube_combiner" prot="public">tesseract::TesseractCubeCombiner</innerclass>
    <innerclass refid="structtesseract_1_1_tesseract_stats" prot="public">tesseract::TesseractStats</innerclass>
    <innerclass refid="classtesseract_1_1_tesseract" prot="public">tesseract::Tesseract</innerclass>
    <innerclass refid="classtesseract_1_1_image_thresholder" prot="public">tesseract::ImageThresholder</innerclass>
    <innerclass refid="classtesseract_1_1_box_word" prot="public">tesseract::BoxWord</innerclass>
    <innerclass refid="classtesseract_1_1_c_c_struct" prot="public">tesseract::CCStruct</innerclass>
    <innerclass refid="classtesseract_1_1_det_line_fit" prot="public">tesseract::DetLineFit</innerclass>
    <innerclass refid="classtesseract_1_1_d_p_point" prot="public">tesseract::DPPoint</innerclass>
    <innerclass refid="structtesseract_1_1_font_spacing_info" prot="public">tesseract::FontSpacingInfo</innerclass>
    <innerclass refid="structtesseract_1_1_font_info" prot="public">tesseract::FontInfo</innerclass>
    <innerclass refid="structtesseract_1_1_font_set" prot="public">tesseract::FontSet</innerclass>
    <innerclass refid="structtesseract_1_1_params_training_hypothesis" prot="public">tesseract::ParamsTrainingHypothesis</innerclass>
    <innerclass refid="classtesseract_1_1_params_training_bundle" prot="public">tesseract::ParamsTrainingBundle</innerclass>
    <innerclass refid="classtesseract_1_1_unichar_id_array_utils" prot="public">tesseract::UnicharIdArrayUtils</innerclass>
    <innerclass refid="classtesseract_1_1_ambig_spec" prot="public">tesseract::AmbigSpec</innerclass>
    <innerclass refid="classtesseract_1_1_ambig_spec___l_i_s_t" prot="public">tesseract::AmbigSpec_LIST</innerclass>
    <innerclass refid="classtesseract_1_1_ambig_spec___i_t" prot="public">tesseract::AmbigSpec_IT</innerclass>
    <innerclass refid="classtesseract_1_1_unichar_ambigs" prot="public">tesseract::UnicharAmbigs</innerclass>
    <innerclass refid="classtesseract_1_1_bit_vector" prot="public">tesseract::BitVector</innerclass>
    <innerclass refid="classtesseract_1_1_c_c_util_mutex" prot="public">tesseract::CCUtilMutex</innerclass>
    <innerclass refid="classtesseract_1_1_c_c_util" prot="public">tesseract::CCUtil</innerclass>
    <innerclass refid="classtesseract_1_1_pointer_vector" prot="public">tesseract::PointerVector</innerclass>
    <innerclass refid="classtesseract_1_1_index_map" prot="public">tesseract::IndexMap</innerclass>
    <innerclass refid="classtesseract_1_1_index_map_bi_di" prot="public">tesseract::IndexMapBiDi</innerclass>
    <innerclass refid="structtesseract_1_1_params_vectors" prot="public">tesseract::ParamsVectors</innerclass>
    <innerclass refid="classtesseract_1_1_param_utils" prot="public">tesseract::ParamUtils</innerclass>
    <innerclass refid="classtesseract_1_1_param" prot="public">tesseract::Param</innerclass>
    <innerclass refid="classtesseract_1_1_int_param" prot="public">tesseract::IntParam</innerclass>
    <innerclass refid="classtesseract_1_1_bool_param" prot="public">tesseract::BoolParam</innerclass>
    <innerclass refid="classtesseract_1_1_string_param" prot="public">tesseract::StringParam</innerclass>
    <innerclass refid="classtesseract_1_1_double_param" prot="public">tesseract::DoubleParam</innerclass>
    <innerclass refid="classtesseract_1_1_tessdata_manager" prot="public">tesseract::TessdataManager</innerclass>
    <innerclass refid="classtesseract_1_1_classify" prot="public">tesseract::Classify</innerclass>
    <innerclass refid="classtesseract_1_1_error_counter" prot="public">tesseract::ErrorCounter</innerclass>
    <innerclass refid="classtesseract_1_1_int_feature_dist" prot="public">tesseract::IntFeatureDist</innerclass>
    <innerclass refid="classtesseract_1_1_int_feature_map" prot="public">tesseract::IntFeatureMap</innerclass>
    <innerclass refid="classtesseract_1_1_int_feature_space" prot="public">tesseract::IntFeatureSpace</innerclass>
    <innerclass refid="classtesseract_1_1_class_pruner" prot="public">tesseract::ClassPruner</innerclass>
    <innerclass refid="structtesseract_1_1_shape_dist" prot="public">tesseract::ShapeDist</innerclass>
    <innerclass refid="classtesseract_1_1_master_trainer" prot="public">tesseract::MasterTrainer</innerclass>
    <innerclass refid="classtesseract_1_1_sample_iterator" prot="public">tesseract::SampleIterator</innerclass>
    <innerclass refid="structtesseract_1_1_shape_rating" prot="public">tesseract::ShapeRating</innerclass>
    <innerclass refid="classtesseract_1_1_shape_classifier" prot="public">tesseract::ShapeClassifier</innerclass>
    <innerclass refid="structtesseract_1_1_unichar_and_fonts" prot="public">tesseract::UnicharAndFonts</innerclass>
    <innerclass refid="classtesseract_1_1_shape" prot="public">tesseract::Shape</innerclass>
    <innerclass refid="classtesseract_1_1_shape_table" prot="public">tesseract::ShapeTable</innerclass>
    <innerclass refid="classtesseract_1_1_tess_classifier" prot="public">tesseract::TessClassifier</innerclass>
    <innerclass refid="classtesseract_1_1_training_sample" prot="public">tesseract::TrainingSample</innerclass>
    <innerclass refid="classtesseract_1_1_training_sample_set" prot="public">tesseract::TrainingSampleSet</innerclass>
    <innerclass refid="classtesseract_1_1_alt_list" prot="public">tesseract::AltList</innerclass>
    <innerclass refid="classtesseract_1_1_beam_search" prot="public">tesseract::BeamSearch</innerclass>
    <innerclass refid="classtesseract_1_1_bmp8" prot="public">tesseract::Bmp8</innerclass>
    <innerclass refid="classtesseract_1_1_cached_file" prot="public">tesseract::CachedFile</innerclass>
    <innerclass refid="classtesseract_1_1_char_alt_list" prot="public">tesseract::CharAltList</innerclass>
    <innerclass refid="structtesseract_1_1_bigram" prot="public">tesseract::Bigram</innerclass>
    <innerclass refid="structtesseract_1_1_char_bigram" prot="public">tesseract::CharBigram</innerclass>
    <innerclass refid="structtesseract_1_1_char_bigram_table" prot="public">tesseract::CharBigramTable</innerclass>
    <innerclass refid="classtesseract_1_1_char_bigrams" prot="public">tesseract::CharBigrams</innerclass>
    <innerclass refid="classtesseract_1_1_char_samp" prot="public">tesseract::CharSamp</innerclass>
    <innerclass refid="classtesseract_1_1_char_samp_enum" prot="public">tesseract::CharSampEnum</innerclass>
    <innerclass refid="classtesseract_1_1_char_samp_set" prot="public">tesseract::CharSampSet</innerclass>
    <innerclass refid="classtesseract_1_1_char_set" prot="public">tesseract::CharSet</innerclass>
    <innerclass refid="classtesseract_1_1_char_classifier" prot="public">tesseract::CharClassifier</innerclass>
    <innerclass refid="classtesseract_1_1_char_classifier_factory" prot="public">tesseract::CharClassifierFactory</innerclass>
    <innerclass refid="classtesseract_1_1_con_comp_pt" prot="public">tesseract::ConCompPt</innerclass>
    <innerclass refid="classtesseract_1_1_con_comp" prot="public">tesseract::ConComp</innerclass>
    <innerclass refid="classtesseract_1_1_conv_net_char_classifier" prot="public">tesseract::ConvNetCharClassifier</innerclass>
    <innerclass refid="classtesseract_1_1_cube_line_object" prot="public">tesseract::CubeLineObject</innerclass>
    <innerclass refid="classtesseract_1_1_cube_line_segmenter" prot="public">tesseract::CubeLineSegmenter</innerclass>
    <innerclass refid="classtesseract_1_1_cube_object" prot="public">tesseract::CubeObject</innerclass>
    <innerclass refid="classtesseract_1_1_cube_search_object" prot="public">tesseract::CubeSearchObject</innerclass>
    <innerclass refid="classtesseract_1_1_cube_tuning_params" prot="public">tesseract::CubeTuningParams</innerclass>
    <innerclass refid="classtesseract_1_1_cube_utils" prot="public">tesseract::CubeUtils</innerclass>
    <innerclass refid="classtesseract_1_1_feature_base" prot="public">tesseract::FeatureBase</innerclass>
    <innerclass refid="classtesseract_1_1_feature_bmp" prot="public">tesseract::FeatureBmp</innerclass>
    <innerclass refid="classtesseract_1_1_feature_chebyshev" prot="public">tesseract::FeatureChebyshev</innerclass>
    <innerclass refid="classtesseract_1_1_feature_hybrid" prot="public">tesseract::FeatureHybrid</innerclass>
    <innerclass refid="classtesseract_1_1_hybrid_neural_net_char_classifier" prot="public">tesseract::HybridNeuralNetCharClassifier</innerclass>
    <innerclass refid="classtesseract_1_1_lang_mod_edge" prot="public">tesseract::LangModEdge</innerclass>
    <innerclass refid="classtesseract_1_1_lang_model" prot="public">tesseract::LangModel</innerclass>
    <innerclass refid="classtesseract_1_1_search_column" prot="public">tesseract::SearchColumn</innerclass>
    <innerclass refid="classtesseract_1_1_search_node" prot="public">tesseract::SearchNode</innerclass>
    <innerclass refid="classtesseract_1_1_search_node_hash_table" prot="public">tesseract::SearchNodeHashTable</innerclass>
    <innerclass refid="classtesseract_1_1_search_object" prot="public">tesseract::SearchObject</innerclass>
    <innerclass refid="classtesseract_1_1_tess_lang_mod_edge" prot="public">tesseract::TessLangModEdge</innerclass>
    <innerclass refid="classtesseract_1_1_tess_lang_model" prot="public">tesseract::TessLangModel</innerclass>
    <innerclass refid="classtesseract_1_1_tuning_params" prot="public">tesseract::TuningParams</innerclass>
    <innerclass refid="classtesseract_1_1_word_alt_list" prot="public">tesseract::WordAltList</innerclass>
    <innerclass refid="classtesseract_1_1_word_list_lang_model" prot="public">tesseract::WordListLangModel</innerclass>
    <innerclass refid="structtesseract_1_1_pair_size_info" prot="public">tesseract::PairSizeInfo</innerclass>
    <innerclass refid="structtesseract_1_1_font_pair_size_info" prot="public">tesseract::FontPairSizeInfo</innerclass>
    <innerclass refid="classtesseract_1_1_word_size_model" prot="public">tesseract::WordSizeModel</innerclass>
    <innerclass refid="classtesseract_1_1_word_unigrams" prot="public">tesseract::WordUnigrams</innerclass>
    <innerclass refid="classtesseract_1_1_c_util" prot="public">tesseract::CUtil</innerclass>
    <innerclass refid="structtesseract_1_1_node_child" prot="public">tesseract::NodeChild</innerclass>
    <innerclass refid="classtesseract_1_1_dawg" prot="public">tesseract::Dawg</innerclass>
    <innerclass refid="structtesseract_1_1_dawg_info" prot="public">tesseract::DawgInfo</innerclass>
    <innerclass refid="classtesseract_1_1_dawg_info_vector" prot="public">tesseract::DawgInfoVector</innerclass>
    <innerclass refid="classtesseract_1_1_squished_dawg" prot="public">tesseract::SquishedDawg</innerclass>
    <innerclass refid="structtesseract_1_1_dawg_args" prot="public">tesseract::DawgArgs</innerclass>
    <innerclass refid="classtesseract_1_1_dict" prot="public">tesseract::Dict</innerclass>
    <innerclass refid="classtesseract_1_1_permuter_state" prot="public">tesseract::PermuterState</innerclass>
    <innerclass refid="classtesseract_1_1_trie" prot="public">tesseract::Trie</innerclass>
    <innerclass refid="classtesseract_1_1_image" prot="public">tesseract::Image</innerclass>
    <innerclass refid="classtesseract_1_1_input_file_buffer" prot="public">tesseract::InputFileBuffer</innerclass>
    <innerclass refid="classtesseract_1_1_neural_net" prot="public">tesseract::NeuralNet</innerclass>
    <innerclass refid="classtesseract_1_1_neuron" prot="public">tesseract::Neuron</innerclass>
    <innerclass refid="structtesseract_1_1_aligned_blob_params" prot="public">tesseract::AlignedBlobParams</innerclass>
    <innerclass refid="classtesseract_1_1_aligned_blob" prot="public">tesseract::AlignedBlob</innerclass>
    <innerclass refid="classtesseract_1_1_grid_search" prot="public">tesseract::GridSearch</innerclass>
    <innerclass refid="classtesseract_1_1_grid_base" prot="public">tesseract::GridBase</innerclass>
    <innerclass refid="classtesseract_1_1_int_grid" prot="public">tesseract::IntGrid</innerclass>
    <innerclass refid="classtesseract_1_1_b_b_grid" prot="public">tesseract::BBGrid</innerclass>
    <innerclass refid="classtesseract_1_1_tab_event_handler" prot="public">tesseract::TabEventHandler</innerclass>
    <innerclass refid="classtesseract_1_1_blob_grid" prot="public">tesseract::BlobGrid</innerclass>
    <innerclass refid="classtesseract_1_1_c_c_non_text_detect" prot="public">tesseract::CCNonTextDetect</innerclass>
    <innerclass refid="classtesseract_1_1_column_finder" prot="public">tesseract::ColumnFinder</innerclass>
    <innerclass refid="classtesseract_1_1_col_partition" prot="public">tesseract::ColPartition</innerclass>
    <innerclass refid="classtesseract_1_1_col_partition_grid" prot="public">tesseract::ColPartitionGrid</innerclass>
    <innerclass refid="classtesseract_1_1_col_partition_set" prot="public">tesseract::ColPartitionSet</innerclass>
    <innerclass refid="classtesseract_1_1_pixel_histogram" prot="public">tesseract::PixelHistogram</innerclass>
    <innerclass refid="classtesseract_1_1_shiro_rekha_splitter" prot="public">tesseract::ShiroRekhaSplitter</innerclass>
    <innerclass refid="classtesseract_1_1_equation_detect_base" prot="public">tesseract::EquationDetectBase</innerclass>
    <innerclass refid="classtesseract_1_1_image_find" prot="public">tesseract::ImageFind</innerclass>
    <innerclass refid="classtesseract_1_1_line_finder" prot="public">tesseract::LineFinder</innerclass>
    <innerclass refid="classtesseract_1_1_stroke_width" prot="public">tesseract::StrokeWidth</innerclass>
    <innerclass refid="classtesseract_1_1_tab_find" prot="public">tesseract::TabFind</innerclass>
    <innerclass refid="classtesseract_1_1_col_segment" prot="public">tesseract::ColSegment</innerclass>
    <innerclass refid="classtesseract_1_1_table_finder" prot="public">tesseract::TableFinder</innerclass>
    <innerclass refid="classtesseract_1_1_structured_table" prot="public">tesseract::StructuredTable</innerclass>
    <innerclass refid="classtesseract_1_1_table_recognizer" prot="public">tesseract::TableRecognizer</innerclass>
    <innerclass refid="classtesseract_1_1_tab_constraint" prot="public">tesseract::TabConstraint</innerclass>
    <innerclass refid="classtesseract_1_1_tab_vector" prot="public">tesseract::TabVector</innerclass>
    <innerclass refid="classtesseract_1_1_textline_projection" prot="public">tesseract::TextlineProjection</innerclass>
    <innerclass refid="classtesseract_1_1_textord" prot="public">tesseract::Textord</innerclass>
    <innerclass refid="classtesseract_1_1_working_part_set" prot="public">tesseract::WorkingPartSet</innerclass>
    <innerclass refid="structtesseract_1_1_associate_stats" prot="public">tesseract::AssociateStats</innerclass>
    <innerclass refid="classtesseract_1_1_associate_utils" prot="public">tesseract::AssociateUtils</innerclass>
    <innerclass refid="structtesseract_1_1_language_model_consistency_info" prot="public">tesseract::LanguageModelConsistencyInfo</innerclass>
    <innerclass refid="structtesseract_1_1_language_model_dawg_info" prot="public">tesseract::LanguageModelDawgInfo</innerclass>
    <innerclass refid="structtesseract_1_1_language_model_ngram_info" prot="public">tesseract::LanguageModelNgramInfo</innerclass>
    <innerclass refid="structtesseract_1_1_viterbi_state_entry" prot="public">tesseract::ViterbiStateEntry</innerclass>
    <innerclass refid="structtesseract_1_1_language_model_state" prot="public">tesseract::LanguageModelState</innerclass>
    <innerclass refid="structtesseract_1_1_best_choice_bundle" prot="public">tesseract::BestChoiceBundle</innerclass>
    <innerclass refid="structtesseract_1_1_best_path_by_column" prot="public">tesseract::BestPathByColumn</innerclass>
    <innerclass refid="classtesseract_1_1_language_model" prot="public">tesseract::LanguageModel</innerclass>
    <innerclass refid="structtesseract_1_1_m_a_t_c_h" prot="public">tesseract::MATCH</innerclass>
    <innerclass refid="classtesseract_1_1_blob_match_table" prot="public">tesseract::BlobMatchTable</innerclass>
    <innerclass refid="classtesseract_1_1_f_r_a_g_m_e_n_t" prot="public">tesseract::FRAGMENT</innerclass>
    <innerclass refid="classtesseract_1_1_wordrec" prot="public">tesseract::Wordrec</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" prot="public" static="no">
        <name>LineType</name>
        <enumvalue id="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a350c14d666e61e3ad1310244edde8537" prot="public">
          <name>LT_START</name>
          <initializer>= &apos;S&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a92f4e011332f48d7de7ddef587dff012" prot="public">
          <name>LT_BODY</name>
          <initializer>= &apos;C&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a5dc9805a3ad0a4c99b98ff282e36d204" prot="public">
          <name>LT_UNKNOWN</name>
          <initializer>= &apos;U&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a923acc0db591045108d7903821a8a594" prot="public">
          <name>LT_MULTIPLE</name>
          <initializer>= &apos;M&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a158666bdc32b1dce84c368c24cbc4108" prot="public" static="no">
        <name>CMD_EVENTS</name>
        <enumvalue id="namespacetesseract_1a158666bdc32b1dce84c368c24cbc4108ad5393026a89cc45e229dc1cceca208cd" prot="public">
          <name>ACTION_1_CMD_EVENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a158666bdc32b1dce84c368c24cbc4108a73be97af434dae7d485282b3a24e766f" prot="public">
          <name>RECOG_WERDS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a158666bdc32b1dce84c368c24cbc4108a5ff116d52a6fb93880f2501ee7f7cd64" prot="public">
          <name>RECOG_PSEUDO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a158666bdc32b1dce84c368c24cbc4108a5e902f0d506a3c3d51b2e5ebcc0ad603" prot="public">
          <name>ACTION_2_CMD_EVENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" line="438" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" bodystart="437" bodyend="443"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2" prot="public" static="no">
        <name>ScriptPos</name>
        <enumvalue id="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a4aa5a5c8505a529a803f4a837d54c526" prot="public">
          <name>SP_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a0018c0645e510228c6701ff42d36bd01" prot="public">
          <name>SP_SUBSCRIPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a6160fc6d2a9bba3b56e3f673f84b24b8" prot="public">
          <name>SP_SUPERSCRIPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a39a9b42f2bd03c3cb815dcf93b3d00d4" prot="public">
          <name>SP_DROPCAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxword.h" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1ad3e7916f0120e26e7b4e0f830784194a" prot="public" static="no">
        <name>NormalizationMode</name>
        <enumvalue id="namespacetesseract_1ad3e7916f0120e26e7b4e0f830784194aa643bd757ce3d9647d68aae97256d0233" prot="public">
          <name>NM_BASELINE</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ad3e7916f0120e26e7b4e0f830784194aa856806160022221f012f954a60601b74" prot="public">
          <name>NM_CHAR_ISOTROPIC</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ad3e7916f0120e26e7b4e0f830784194aa81bec0cd85211e03befb611fa7003180" prot="public">
          <name>NM_CHAR_ANISOTROPIC</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201d" prot="public" static="no">
        <name>ParamsTrainingRawFeatureType</name>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201dacd140429d67d9693f3fda1f6a825a884" prot="public">
          <name>PTRAIN_RAW_FEATURE_DICT_MATCH_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da08e0de66071fb1ba4f2d3f912004c6f8" prot="public">
          <name>PTRAIN_RAW_FEATURE_UNAMBIG_DICT_MATCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201daa46c926f4a2c65322a00a66e951add14" prot="public">
          <name>PTRAIN_RAW_FEATURE_SHAPE_COST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da01c7e571e706110832d5cd5f78bc81cc" prot="public">
          <name>PTRAIN_RAW_FEATURE_NGRAM_PROB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da176875b762342c79ad8ffc309060b4cf" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_PUNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da8e423948ec64f3e4dd2caacc51ff314a" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_CASE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da3b60a17235a0e398ee7f24ab53988af3" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_CHAR_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da6b9fdbe80a3187a598bd6c7d644f8372" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_SPACING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da115356a10135d2e4e0df288ce036a6f9" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_SCRIPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da5e1ad5280e13132334f8366967e9b9de" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_BAD_FONT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da36fc854c77aa623c958c425fe9692aaf" prot="public">
          <name>PTRAIN_RAW_FEATURE_WORST_CERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da59df71be0d2cc74afd2ffd44ae1e3b7b" prot="public">
          <name>PTRAIN_RAW_FEATURE_RATING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da2d97330d026c3f7abe7764861755734d" prot="public">
          <name>PTRAIN_RAW_FEATURE_ADAPTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201dafbf18c7a9ae9c7ec2d07b74bb0c5b66b" prot="public">
          <name>PTRAIN_RAW_FEATURE_NUM_UNICHARS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da969d4c6ed75f9afc59a5bdd06e5d19bb" prot="public">
          <name>PTRAIN_RAW_FEATURE_OUTLINE_LEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da27e18c8c402b13298ff918b89d124de7" prot="public">
          <name>PTRAIN_NUM_RAW_FEATURE_TYPES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" line="34" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" bodystart="34" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a76ce0248fd3ba576ca053e9bb82e492f" prot="public" static="no">
        <name>Orientation</name>
        <enumvalue id="namespacetesseract_1a76ce0248fd3ba576ca053e9bb82e492fa6e5beda212ea9e59ce8aad91ac47f248" prot="public">
          <name>ORIENTATION_PAGE_UP</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a76ce0248fd3ba576ca053e9bb82e492fad8849c28e9fc9e0850a7645d285ae576" prot="public">
          <name>ORIENTATION_PAGE_RIGHT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a76ce0248fd3ba576ca053e9bb82e492fa55ca6b8e5b1952c18808651fd8223df4" prot="public">
          <name>ORIENTATION_PAGE_DOWN</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a76ce0248fd3ba576ca053e9bb82e492fa013a33864930ee598d047ce03de75b18" prot="public">
          <name>ORIENTATION_PAGE_LEFT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>+---------------<mdash/>+ Orientation Example: | 1 Aaaa Aaaa Aaaa | ==================== | Aaa aa aaa aa | To left is a diagram of some (1) English and | aaaaaa A aa aaa. | (2) Chinese text and a (3) photo credit. | 2 | | ####### c c C | Upright Latin characters are represented as A and a. | ####### c c c | &apos;&lt;&apos; represents a latin character rotated | &lt; ####### c c c | anti-clockwise 90 degrees. | &lt; ####### c c | | &lt; ####### . c | Upright Chinese characters are represented C and c. | 3 ####### c | +---------------<mdash/>+ NOTA BENE: enum values here should match goodoc.proto</para><para>If you orient your head so that &quot;up&quot; aligns with Orientation, then the characters will appear &quot;right side up&quot; and readable.</para><para>In the example above, both the English and Chinese paragraphs are oriented so their &quot;up&quot; is the top of the page (page up). The photo credit is read with one&apos;s head turned leftward (&quot;up&quot; is to page left).</para><para>The values of this enum match the convention of <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>&apos;s <ref refid="osdetect_8h" kindref="compound">osdetect.h</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1acac5bfbc6e9f8ca26f42ea3bad95d84e" prot="public" static="no">
        <name>WritingDirection</name>
        <enumvalue id="namespacetesseract_1acac5bfbc6e9f8ca26f42ea3bad95d84ea525638f610d97a0064cef8e3d25da586" prot="public">
          <name>WRITING_DIRECTION_LEFT_TO_RIGHT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acac5bfbc6e9f8ca26f42ea3bad95d84ea876dcb2db2ae5333ff02decbe5628b24" prot="public">
          <name>WRITING_DIRECTION_RIGHT_TO_LEFT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acac5bfbc6e9f8ca26f42ea3bad95d84ea2101d1745ea753883e7cd89188fe511d" prot="public">
          <name>WRITING_DIRECTION_TOP_TO_BOTTOM</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The grapheme clusters within a line of text are laid out logically in this direction, judged when looking at the text line rotated so that its Orientation is &quot;page up&quot;.</para><para>For English text, the writing direction is left-to-right. For the Chinese text in the above example, the writing direction is top-to-bottom. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="123" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a28b14f9ab9d686fb45e130abc15c1781" prot="public" static="no">
        <name>TextlineOrder</name>
        <enumvalue id="namespacetesseract_1a28b14f9ab9d686fb45e130abc15c1781a53344bdc7b64779b811381a96b55ae7a" prot="public">
          <name>TEXTLINE_ORDER_LEFT_TO_RIGHT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a28b14f9ab9d686fb45e130abc15c1781ac45389026475922de984d60559fe5594" prot="public">
          <name>TEXTLINE_ORDER_RIGHT_TO_LEFT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a28b14f9ab9d686fb45e130abc15c1781ae05aaca68080ad5368696f5e90d2b4dc" prot="public">
          <name>TEXTLINE_ORDER_TOP_TO_BOTTOM</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The text lines are read in the given sequence.</para><para>In English, the order is top-to-bottom. In Chinese, vertical text lines are read right-to-left. Mongolian is written in vertical columns top to bottom like Chinese, but the lines order left-to right.</para><para>Note that only some combinations make sense. For example, WRITING_DIRECTION_LEFT_TO_RIGHT implies TEXTLINE_ORDER_TOP_TO_BOTTOM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" prot="public" static="no">
        <name>PageSegMode</name>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa319d6168eaa4b2002ac84c0558ba947d" prot="public">
          <name>PSM_OSD_ONLY</name>
          <briefdescription>
<para>Orientation and script detection only. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa1f0a7b4dbb495bc92c36847c555a706b" prot="public">
          <name>PSM_AUTO_OSD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic page segmentation with orientation and script detection. (OSD) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa6c70374f53473ba410723e32b12f3f01" prot="public">
          <name>PSM_AUTO_ONLY</name>
          <briefdescription>
<para>Automatic page segmentation, but no OSD, or OCR. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa759fdd456efbe83648acd54f0a9263cb" prot="public">
          <name>PSM_AUTO</name>
          <briefdescription>
<para>Fully automatic page segmentation, but no OSD. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa73beed38a70fa050cd927691e757eb7d" prot="public">
          <name>PSM_SINGLE_COLUMN</name>
          <briefdescription>
<para>Assume a single column of text of variable sizes. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa6d12cbb6be71dad8d3f090f214301630" prot="public">
          <name>PSM_SINGLE_BLOCK_VERT_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Assume a single uniform block of vertically aligned text. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aab76fe3ca390d99e070ea60b892ee18ef" prot="public">
          <name>PSM_SINGLE_BLOCK</name>
          <briefdescription>
<para>Assume a single uniform block of text. (Default.) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aae3fc1f34ef8d2b0a1f7b09a9d3dc138a" prot="public">
          <name>PSM_SINGLE_LINE</name>
          <briefdescription>
<para>Treat the image as a single text line. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aab2ba05e0391e8fa0014323490c54b1b8" prot="public">
          <name>PSM_SINGLE_WORD</name>
          <briefdescription>
<para>Treat the image as a single word. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa2c473f99b506306a04efeb199444217e" prot="public">
          <name>PSM_CIRCLE_WORD</name>
          <briefdescription>
<para>Treat the image as a single word in a circle. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa7045cff7a3ae929fb1db5dbf031a4875" prot="public">
          <name>PSM_SINGLE_CHAR</name>
          <briefdescription>
<para>Treat the image as a single character. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa52098adaaa77f63a382a3ec2a8202c43" prot="public">
          <name>PSM_SPARSE_TEXT</name>
          <briefdescription>
<para>Find as much text as possible in no particular order. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aae9467850a0f8b1ad6df639994a20bfb5" prot="public">
          <name>PSM_SPARSE_TEXT_OSD</name>
          <briefdescription>
<para>Sparse text with orientation and script det. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa43cbd9776a49ef8469e8148d8161eaae" prot="public">
          <name>PSM_COUNT</name>
          <briefdescription>
<para>Number of enum entries. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible modes for page layout analysis. These <emphasis>must</emphasis> be kept in order of decreasing amount of layout analysis to be done, except for OSD_ONLY, so that the inequality test macros below work. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="151" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="151" bodyend="169"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" prot="public" static="no">
        <name>PageIteratorLevel</name>
        <enumvalue id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7a2dcea8d4208c16055353029d26f9bf49" prot="public">
          <name>RIL_BLOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7a3e63980691bf64801c704f59bd795bd9" prot="public">
          <name>RIL_PARA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7a5e87a35f16de644593c353159ede11d1" prot="public">
          <name>RIL_TEXTLINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7afd466aec253e5daa6f0c112b0f0e0610" prot="public">
          <name>RIL_WORD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7adbd62c7f34a9ebdd6e3b813a34cd812d" prot="public">
          <name>RIL_SYMBOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enum of the elements of the page hierarchy, used in <ref refid="classtesseract_1_1_result_iterator" kindref="compound">ResultIterator</ref> to provide functions that operate on each level without having to have 5x as many functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="195" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="195" bodyend="201"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" prot="public" static="no">
        <name>ParagraphJustification</name>
        <enumvalue id="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a90150303905fef6037adc10dc2aa3689" prot="public">
          <name>JUSTIFICATION_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a0141f695e0959de2dc43e0eb94023ff6" prot="public">
          <name>JUSTIFICATION_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1aa9a39d3bca308f650f8c75b0c14f6838" prot="public">
          <name>JUSTIFICATION_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a93a23b19fec3ebdb587df6e0aa9e9fce" prot="public">
          <name>JUSTIFICATION_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>JUSTIFICATION_UNKNONW The alignment is not clearly one of the other options. This could happen for example if there are only one or two lines of text or the text looks like source code or poetry.</para><para>NOTA BENE: Fully justified paragraphs (text aligned to both left and right margins) are marked by <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> with JUSTIFICATION_LEFT if their text is written with a left-to-right script and with JUSTIFICATION_RIGHT if their text is written in a right-to-left script.</para><para>Interpretation for text read in vertical lines: &quot;Left&quot; is wherever the starting reading position is.</para><para>JUSTIFICATION_LEFT Each line, except possibly the first, is flush to the same left tab stop.</para><para>JUSTIFICATION_CENTER The text lines of the paragraph are centered about a line going down through their middle of the text lines.</para><para>JUSTIFICATION_RIGHT Each line, except possibly the first, is flush to the same right tab stop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="227" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="227" bodyend="232"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a04550a0ed1279562027bf2fc92c421ae" prot="public" static="no">
        <name>OcrEngineMode</name>
        <enumvalue id="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aeaea8028f61e76a0f4def7cbe7905206cf" prot="public">
          <name>OEM_TESSERACT_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aea4de4c2ca439ebe56d793719da1a6b14a" prot="public">
          <name>OEM_CUBE_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aea6d35341d8b4c2a74cd7ca933899ffdb8" prot="public">
          <name>OEM_TESSERACT_CUBE_COMBINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aeae7376c1e8d55b9d13e75c639a6930159" prot="public">
          <name>OEM_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When Tesseract/Cube is initialized we can choose to instantiate/load/run only the <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> part, only the Cube part or both along with the combiner. The preference of which engine to use is stored in tessedit_ocr_engine_mode.</para><para>ATTENTION: When modifying this enum, please make sure to make the appropriate changes to all the enums mirroring it (e.g. OCREngine in cityblock/workflow/detection/detection_storage.proto). Such enums will mention the connection to OcrEngineMode in the comments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" line="244" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/publictypes.h" bodystart="244" bodyend="255"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222" prot="public" static="no">
        <name>AmbigType</name>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222af40a6c3f3fbd83ba09a6607f534349dc" prot="public">
          <name>NOT_AMBIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222a4de7fc7ae32fd87a4c53e4b6bf3322de" prot="public">
          <name>REPLACE_AMBIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222a36712914249ab1d96c4f395c06bc7009" prot="public">
          <name>DEFINITE_AMBIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222aba0a03f0cccfdd9e45817623613dd740" prot="public">
          <name>SIMILAR_AMBIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222a29c650e9672a75e50491fc10c0f07ec5" prot="public">
          <name>CASE_AMBIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1aa13017f5f891a1f9f95074bf26a5b222a79854db5a6d73c698dd9b003f426918f" prot="public">
          <name>AMBIG_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5" prot="public" static="no">
        <name>SetParamConstraint</name>
        <enumvalue id="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5a64d51904c77c536bd02b78e873f7a4ce" prot="public">
          <name>SET_PARAM_CONSTRAINT_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5ab006bbe489e53081990e1f41174bb9e0" prot="public">
          <name>SET_PARAM_CONSTRAINT_DEBUG_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5a5f07aa438783c0f1bac049e6fcb11aa1" prot="public">
          <name>SET_PARAM_CONSTRAINT_NON_DEBUG_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5a713c7bc13788ed69eb16dd9e5f309d12" prot="public">
          <name>SET_PARAM_CONSTRAINT_NON_INIT_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/params.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/params.h" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a5f278974ef80900b460194614d4f1899" prot="public" static="no">
        <name>TessdataType</name>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899ab2c001209bd1c4dbd12856ba4db97854" prot="public">
          <name>TESSDATA_LANG_CONFIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a54d433c57446ba87f95299d42d324a18" prot="public">
          <name>TESSDATA_UNICHARSET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a62bf86d17ac77ffef850c49bea246f0c" prot="public">
          <name>TESSDATA_AMBIGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899adfd87e838c95bfbdab3d08399e36b362" prot="public">
          <name>TESSDATA_INTTEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899afe6ffc645055800e632965abcbc9c501" prot="public">
          <name>TESSDATA_PFFMTABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a54f23d768a3b4d9d8cfd2513f5101d66" prot="public">
          <name>TESSDATA_NORMPROTO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a041eff587bbc58c4c93e76facd593b56" prot="public">
          <name>TESSDATA_PUNC_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899af89fe7138ea14ba1a31e8ddf53f2089f" prot="public">
          <name>TESSDATA_SYSTEM_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a7bad9e33542e38f498f9c6672626ee04" prot="public">
          <name>TESSDATA_NUMBER_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a041f1b2804fb7a000090908c979739ff" prot="public">
          <name>TESSDATA_FREQ_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899ae57ec423406725deceddd071fefb367c" prot="public">
          <name>TESSDATA_FIXED_LENGTH_DAWGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a87310a274403592ee7b1bd07e8b29973" prot="public">
          <name>TESSDATA_CUBE_UNICHARSET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a445f2a31c9940f2027a67ba8f8630f9f" prot="public">
          <name>TESSDATA_CUBE_SYSTEM_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899ae3c25bcbffa5055814464c04388a8035" prot="public">
          <name>TESSDATA_SHAPE_TABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899aa59c96914537bb9958be8fb3a96b2a85" prot="public">
          <name>TESSDATA_BIGRAM_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a0f153618328153c350638138d2807d97" prot="public">
          <name>TESSDATA_UNAMBIG_DAWG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899a8664f958a6dba03b4c6754ecb9f85a16" prot="public">
          <name>TESSDATA_PARAMS_TRAINING_MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a5f278974ef80900b460194614d4f1899ae23733dd332d50ddb3b0be7990b1538c" prot="public">
          <name>TESSDATA_NUM_ENTRIES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240" prot="public" static="no">
        <name>CharSegmentationType</name>
        <enumvalue id="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240af7f038dab34772b9ddb631d46aa4126a" prot="public">
          <name>CST_FRAGMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240ab74e41d8efe1a9beae832eb1652096f5" prot="public">
          <name>CST_WHOLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240a9395c1832262d72b28dd6461c334f207" prot="public">
          <name>CST_IMPROPER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1afe12112c1ca56d41c919d0f18dfdf240a9757169f767169fe9fea1f62ab9ba17b" prot="public">
          <name>CST_NGRAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/classify.h" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/classify.h" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fd" prot="public" static="no">
        <name>CountTypes</name>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8fb31a83f810e43940202a9dfb39952b" prot="public">
          <name>CT_SHAPE_TOP_CORRECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaece404f7a03b3e062c4c2f9580019c13" prot="public">
          <name>CT_SHAPE_TOP_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa1c74855ce10eb780dabadbf54eb7b8a" prot="public">
          <name>CT_FONT_ATTR_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4fbb2b48a2fae3c2a8be73d82702d9ca" prot="public">
          <name>CT_UNICHAR_TOP1_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda695227fd1cabdbcf6421beaee60e7e3c" prot="public">
          <name>CT_UNICHAR_TOP2_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda4649b3e172660074d3255fd5f1f5c850" prot="public">
          <name>CT_UNICHAR_TOPN_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaab5d38d92964a3603dd577180571243b" prot="public">
          <name>CT_OK_MULTI_UNICHAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda89ab4937a98054f1c525755ce6ae36c8" prot="public">
          <name>CT_REJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdafe639ee6eab2f5503df027e13dc3d776" prot="public">
          <name>CT_NUM_RESULTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdacf1cf7811b8c6938a7097cc30f56d991" prot="public">
          <name>CT_RANK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fda8b7c62ce93360d39e8a8204c0cd77f45" prot="public">
          <name>CT_REJECTED_JUNK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdaa3bba775583d2acab58b3543043ab591" prot="public">
          <name>CT_ACCEPTED_JUNK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acb0bc20d78b75745c9aa3832a619f4fdabb745ecf0c26d7e73f8c4e29e5988100" prot="public">
          <name>CT_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/errorcounter.h" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/errorcounter.h" bodystart="69" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" prot="public" static="no">
        <name>DawgType</name>
        <enumvalue id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151aa8e8b65bf32d2884c0bab5fb8223c6eb" prot="public">
          <name>DAWG_TYPE_PUNCTUATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" prot="public">
          <name>DAWG_TYPE_WORD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a16f2414a05db0ec4b7e1b266052a966f" prot="public">
          <name>DAWG_TYPE_NUMBER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a4e994eccb48eec56bb31bccd8bbb3cef" prot="public">
          <name>DAWG_TYPE_PATTERN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151ac823345423c28fc2793bfdb0db9f9942" prot="public">
          <name>DAWG_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="71" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06a" prot="public" static="no">
        <name>ColumnSpanningType</name>
        <enumvalue id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aad17bb659c6735f37306a6161f4013416" prot="public">
          <name>CST_NOISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa53dd9af51c333b786fe51bd5f01543d6" prot="public">
          <name>CST_FLOWING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aacf3616b52ca15a43ddfd40b9c91c9cd5" prot="public">
          <name>CST_HEADING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa8c1a2f43d95cbf09416204e1f5e04163" prot="public">
          <name>CST_PULLOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa9f98f32893c3f27ef2373aec2d9f7205" prot="public">
          <name>CST_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.h" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.h" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20f" prot="public" static="no">
        <name>NeighbourPartitionType</name>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20faf11849d4adc5e8047d5d66a4b4bbcb0f" prot="public">
          <name>NPT_HTEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa27c8da6ed042fcd7739cc43deb47d877" prot="public">
          <name>NPT_VTEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4fb3395899c584480e12d1e5f57013cc" prot="public">
          <name>NPT_WEAK_HTEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa4af22b9c01e35695839b9cb11c0be594" prot="public">
          <name>NPT_WEAK_VTEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa5ed965ae2d40e930c7cda6c0797c6626" prot="public">
          <name>NPT_IMAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1ac6b87c14191b9d8faad9933a7334d20fa962f103650d31bd5ec341006e04ec61b" prot="public">
          <name>NPT_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="1495" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="1495" bodyend="1504"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1acd121b57d321ca8511db069f603d071f" prot="public" static="no">
        <name>LeftOrRight</name>
        <enumvalue id="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" prot="public">
          <name>LR_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1acd121b57d321ca8511db069f603d071facb1914d58c6a7acb6ddb9563a46a1046" prot="public">
          <name>LR_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cb" prot="public" static="no">
        <name>ColSegType</name>
        <enumvalue id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cbaee1976dbb59fbd65d366f0424759c729" prot="public">
          <name>COL_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cba05d5fe5bf814b3e82827a3a321d5b2ec" prot="public">
          <name>COL_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cba8943a61e53229e72f0f896ec8e415316" prot="public">
          <name>COL_TABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cba794ff16294744099e9bab9ecf2cabc11" prot="public">
          <name>COL_MIXED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a25254b3df45454565d58a62480d3a6cbaf626b1b46e354d9f577495c7de9ece2a" prot="public">
          <name>COL_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.h" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.h" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" prot="public" static="no">
        <name>TabAlignment</name>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a4bb9e250c5358790a63ef5b71cb5a9d3" prot="public">
          <name>TA_LEFT_ALIGNED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a63f1e8bdcb518d39f915c4a6f51126c9" prot="public">
          <name>TA_LEFT_RAGGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a856a9fe4c5ad29ebd6b7ebceeb3b2951" prot="public">
          <name>TA_CENTER_JUSTIFIED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a0dfc605a485921b4a7c1616e32019513" prot="public">
          <name>TA_RIGHT_ALIGNED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a3eb640025f235401fd86bf1bf01e4a49" prot="public">
          <name>TA_RIGHT_RAGGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a5e3a11fa3b4f26e3e73cc7832bb72381" prot="public">
          <name>TA_SEPARATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a00b88131b24dba80c75bcc0c24769359" prot="public">
          <name>TA_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.h" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.h" bodystart="43" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacetesseract_1a8405c121c1d39fbfff2ee0318496d5f6" prot="public" static="no">
        <type>int(Dict::*</type>
        <definition>typedef int(Dict::* tesseract::DictFunc)(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </definition>
        <argsstring>)(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </argsstring>
        <name>DictFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1acff22894b78fa786f06840a81caf7650" prot="public" static="no">
        <type>double(Dict::*</type>
        <definition>typedef double(Dict::* tesseract::ProbabilityInContextFunc)(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</definition>
        <argsstring>)(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</argsstring>
        <name>ProbabilityInContextFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a1d9d5b16b1c6d8d4add27aaf89267ce9" prot="public" static="no">
        <type>void(Wordrec::*</type>
        <definition>typedef void(Wordrec::* tesseract::FillLatticeFunc)(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</definition>
        <argsstring>)(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</argsstring>
        <name>FillLatticeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1ac936df568c982d1b91cdb50e5ea1beb7" prot="public" static="no">
        <type><ref refid="class_tess_callback3" kindref="compound">TessCallback3</ref>&lt; const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;, int, <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> * &gt;</type>
        <definition>typedef TessCallback3&lt;const UNICHARSET &amp;, int, PAGE_RES *&gt; tesseract::TruthCallback</definition>
        <argsstring></argsstring>
        <name>TruthCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a5616e4c6a53be12ea0d684b1f0fb8485" prot="public" static="no">
        <type><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq</ref>&lt; const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> * &gt;</type>
        <definition>typedef GenericVectorEqEq&lt;const ParagraphModel *&gt; tesseract::SetOfModels</definition>
        <argsstring></argsstring>
        <name>SetOfModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1adee1ad14cb56271fcda4f4c09c1b8d80" prot="public" static="no">
        <type>void(Tesseract::*</type>
        <definition>typedef void(Tesseract::* tesseract::WordRecognizer)(BLOCK *block, ROW *row, WERD_RES *word)</definition>
        <argsstring>)(BLOCK *block, ROW *row, WERD_RES *word)</argsstring>
        <name>WordRecognizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/tesseractclass.h" line="103" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/tesseractclass.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1ac276fef8cf1673fac0a8759dcbb0ec4d" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_params_training_hypothesis" kindref="compound">ParamsTrainingHypothesis</ref> &gt;</type>
        <definition>typedef GenericVector&lt;ParamsTrainingHypothesis&gt; tesseract::ParamsTrainingHypothesisList</definition>
        <argsstring></argsstring>
        <name>ParamsTrainingHypothesisList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a3dad1b2dad5ed3069bdb4c971116b9c5" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref> &gt;</type>
        <definition>typedef GenericVector&lt;UNICHAR_ID&gt; tesseract::UnicharIdVector</definition>
        <argsstring></argsstring>
        <name>UnicharIdVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="34" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1aa63fceec9a01c185fac83c0e7d04fe08" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_ambig_spec___l_i_s_t" kindref="compound">AmbigSpec_LIST</ref> * &gt;</type>
        <definition>typedef GenericVector&lt;AmbigSpec_LIST *&gt; tesseract::UnicharAmbigsVector</definition>
        <argsstring></argsstring>
        <name>UnicharAmbigsVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int tesseract::char_32</definition>
        <argsstring></argsstring>
        <name>char_32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/string_32.h" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/string_32.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" prot="public" static="no">
        <type>basic_string&lt; <ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref> &gt;</type>
        <definition>typedef basic_string&lt;char_32&gt; tesseract::string_32</definition>
        <argsstring></argsstring>
        <name>string_32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/string_32.h" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/string_32.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a5084886f7cd9adefa73d03111d92f593" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_node_child" kindref="compound">NodeChild</ref> &gt;</type>
        <definition>typedef GenericVector&lt;NodeChild&gt; tesseract::NodeChildVector</definition>
        <argsstring></argsstring>
        <name>NodeChildVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a2da5d0a635bfbb70a26ab0844903bed3" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; int &gt;</type>
        <definition>typedef GenericVector&lt;int&gt; tesseract::SuccessorList</definition>
        <argsstring></argsstring>
        <name>SuccessorList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a23c05b24ce05fdac89b62f2994eb95ee" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="namespacetesseract_1a2da5d0a635bfbb70a26ab0844903bed3" kindref="member">SuccessorList</ref> * &gt;</type>
        <definition>typedef GenericVector&lt;SuccessorList *&gt; tesseract::SuccessorListsVector</definition>
        <argsstring></argsstring>
        <name>SuccessorListsVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> * &gt;</type>
        <definition>typedef GenericVector&lt;Dawg *&gt; tesseract::DawgVector</definition>
        <argsstring></argsstring>
        <name>DawgVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a2681de132e11a73d6fc4f281b2750109" prot="public" static="no">
        <type><ref refid="classtesseract_1_1_grid_search" kindref="compound">GridSearch</ref>&lt; <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>, BLOBNBOX_CLIST, BLOBNBOX_C_IT &gt;</type>
        <definition>typedef GridSearch&lt;BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT&gt; tesseract::BlobGridSearch</definition>
        <argsstring></argsstring>
        <name>BlobGridSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/blobgrid.h" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/blobgrid.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" prot="public" static="no">
        <type><ref refid="classtesseract_1_1_grid_search" kindref="compound">GridSearch</ref>&lt; <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>, ColPartition_CLIST, ColPartition_C_IT &gt;</type>
        <definition>typedef GridSearch&lt;ColPartition, ColPartition_CLIST, ColPartition_C_IT&gt; tesseract::ColPartitionGridSearch</definition>
        <argsstring></argsstring>
        <name>ColPartitionGridSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.h" line="908" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.h" bodystart="908" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_col_partition_set" kindref="compound">ColPartitionSet</ref> * &gt;</type>
        <definition>typedef GenericVector&lt;ColPartitionSet*&gt; tesseract::PartSetVector</definition>
        <argsstring></argsstring>
        <name>PartSetVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitionset.h" line="34" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitionset.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" prot="public" static="no">
        <type><ref refid="class_tess_result_callback1" kindref="compound">TessResultCallback1</ref>&lt; bool, int &gt;</type>
        <definition>typedef TessResultCallback1&lt;bool, int&gt; tesseract::WidthCallback</definition>
        <argsstring></argsstring>
        <name>WidthCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a80cfbd9a83df02629e2afd48c16880f0" prot="public" static="no">
        <type><ref refid="classtesseract_1_1_b_b_grid" kindref="compound">BBGrid</ref>&lt; <ref refid="classtesseract_1_1_col_segment" kindref="compound">ColSegment</ref>, ColSegment_CLIST, ColSegment_C_IT &gt;</type>
        <definition>typedef BBGrid&lt;ColSegment, ColSegment_CLIST, ColSegment_C_IT&gt; tesseract::ColSegmentGrid</definition>
        <argsstring></argsstring>
        <name>ColSegmentGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1ac7f2f25bfb4914e691db80a6b523c703" prot="public" static="no">
        <type><ref refid="classtesseract_1_1_grid_search" kindref="compound">GridSearch</ref>&lt; <ref refid="classtesseract_1_1_col_segment" kindref="compound">ColSegment</ref>, ColSegment_CLIST, ColSegment_C_IT &gt;</type>
        <definition>typedef GridSearch&lt;ColSegment, ColSegment_CLIST, ColSegment_C_IT&gt; tesseract::ColSegmentGridSearch</definition>
        <argsstring></argsstring>
        <name>ColSegmentGridSearch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.h" line="121" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char tesseract::LanguageModelFlagsType</definition>
        <argsstring></argsstring>
        <name>LanguageModelFlagsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/language_model.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/language_model.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacetesseract_1a11307fd919d7a9313500b04cfc1a8e3d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinRectSize</definition>
        <argsstring></argsstring>
        <name>kMinRectSize</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum sensible image size to be worth running tesseract. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1083ed81b6adbb6930e87d0c58671e26" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kTesseractReject</definition>
        <argsstring></argsstring>
        <name>kTesseractReject</name>
        <initializer>= &apos;~&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Character returned when <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> couldn&apos;t recognize as anything. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a99bec48b41ccb504c28851dbe5b1f106" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kUNLVReject</definition>
        <argsstring></argsstring>
        <name>kUNLVReject</name>
        <initializer>= &apos;~&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Character used by UNLV error counter as a reject. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af7e73b761f145b66ffcc7585ed69d940" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kUNLVSuspect</definition>
        <argsstring></argsstring>
        <name>kUNLVSuspect</name>
        <initializer>= &apos;^&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Character used by UNLV as a suspect marker. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3ba7b8d4b2132f72118c62fba346ffd0" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tesseract::kInputFile</definition>
        <argsstring></argsstring>
        <name>kInputFile</name>
        <initializer>= &quot;noname.tif&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filename used for input image file, from which to derive a name to search for a possible UNLV zone file, if none is specified by SetInputName. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a46ecbfaef9e549b16cd97fee9d4614d2" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tesseract::kOldVarsFile</definition>
        <argsstring></argsstring>
        <name>kOldVarsFile</name>
        <initializer>= &quot;failed_vars.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temp file used for storing current parameters before applying retry values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3e35711780f8c0254a2dd64071ef2b6b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxIntSize</definition>
        <argsstring></argsstring>
        <name>kMaxIntSize</name>
        <initializer>= 22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max string length of an int. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af670abba9a6fc5f36a04b8650e53d1b7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinCredibleResolution</definition>
        <argsstring></argsstring>
        <name>kMinCredibleResolution</name>
        <initializer>= 70</initializer>
        <briefdescription>
<para>Minimum believable resolution. </para>        </briefdescription>
        <detaileddescription>
<para>Minimum believable resolution. Used as a default if there is no other information, as it is safer to under-estimate than over-estimate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8ce8daeb42d63f39924c0a342e2cfdf4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxCredibleResolution</definition>
        <argsstring></argsstring>
        <name>kMaxCredibleResolution</name>
        <initializer>= 2400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum believable resolution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa46d9454c58be9a34a7a91737d553900" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNumbersPerBlob</definition>
        <argsstring></argsstring>
        <name>kNumbersPerBlob</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The 5 numbers output for each box (the usual 4 and a page number.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1204" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a929cce152875849d022496470235b437" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kBytesPerNumber</definition>
        <argsstring></argsstring>
        <name>kBytesPerNumber</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of bytes taken by each number. Since we use inT16 for <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref>, assume only 5 digits max. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1209" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ada8c39277dfe2d8bd85135eaa66f9047" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kBytesPerBlob</definition>
        <argsstring></argsstring>
        <name>kBytesPerBlob</name>
        <initializer>= <ref refid="namespacetesseract_1aa46d9454c58be9a34a7a91737d553900" kindref="member">kNumbersPerBlob</ref> * (<ref refid="namespacetesseract_1a929cce152875849d022496470235b437" kindref="member">kBytesPerNumber</ref> + 1) + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplier for max expected textlength assumes (kBytesPerNumber + space)<itemizedlist>
<listitem><para>kNumbersPerBlob plus the newline. Add to this the original UTF8 characters, and one kMaxBytesPerLine for safety. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1215" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a294e870871cf3fb0928cbd5686346b3d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kBytesPerBoxFileLine</definition>
        <argsstring></argsstring>
        <name>kBytesPerBoxFileLine</name>
        <initializer>= (<ref refid="namespacetesseract_1a929cce152875849d022496470235b437" kindref="member">kBytesPerNumber</ref> + 1) * <ref refid="namespacetesseract_1aa46d9454c58be9a34a7a91737d553900" kindref="member">kNumbersPerBlob</ref> + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1216" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6007ea2fe11067865156fb804c36079e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kBytesPer64BitNumber</definition>
        <argsstring></argsstring>
        <name>kBytesPer64BitNumber</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max bytes in the decimal representation of inT64. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1218" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a688dc51b653c642009af87c6d9b9dea2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxBytesPerLine</definition>
        <argsstring></argsstring>
        <name>kMaxBytesPerLine</name>
        <initializer>= <ref refid="namespacetesseract_1aa46d9454c58be9a34a7a91737d553900" kindref="member">kNumbersPerBlob</ref> * (<ref refid="namespacetesseract_1a6007ea2fe11067865156fb804c36079e" kindref="member">kBytesPer64BitNumber</ref> + 1) + 1 +
    <ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A maximal single box could occupy kNumbersPerBlob numbers at kBytesPer64BitNumber digits (if someone sneaks in a 64 bit value) and a space plus the newline and the maximum length of a <ref refid="class_u_n_i_c_h_a_r" kindref="compound">UNICHAR</ref>. Test against this on each iteration for safety. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1225" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afa62cc25480d6eee8b1bb2ef4a1f8fc3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kUniChs[]</definition>
        <argsstring>[]</argsstring>
        <name>kUniChs</name>
        <initializer>= {
  0x20ac, 0x201c, 0x201d, 0x2018, 0x2019, 0x2022, 0x2014, 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Conversion table for non-latin characters. Maps characters out of the latin set into the latin set. TODO(rays) incorporate this translation into unicharset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1275" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a7e0c7c50e2e05e503a51b8c33d35ade6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLatinChs[]</definition>
        <argsstring>[]</argsstring>
        <name>kLatinChs</name>
        <initializer>= {
  0x00a2, 0x0022, 0x0022, 0x0027, 0x0027, 0x00b7, 0x002d, 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Latin chars corresponding to the unicode chars above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1279" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad996502770c51cc260e4d66db9543bcc" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMathDigitDensityTh1</definition>
        <argsstring></argsstring>
        <name>kMathDigitDensityTh1</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a2a82022958d051af0fb624095c3ada00" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMathDigitDensityTh2</definition>
        <argsstring></argsstring>
        <name>kMathDigitDensityTh2</name>
        <initializer>= 0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="84" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad64e658be002902d7a5b0dd98ab0fe35" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMathItalicDensityTh</definition>
        <argsstring></argsstring>
        <name>kMathItalicDensityTh</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a07a51423879204a025d373c6ae40fba5" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kUnclearDensityTh</definition>
        <argsstring></argsstring>
        <name>kUnclearDensityTh</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="86" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a113f000461790e1cd1c397f382814da5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSeedBlobsCountTh</definition>
        <argsstring></argsstring>
        <name>kSeedBlobsCountTh</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="87" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1a5ac6fad51e61e88df309fb704d8ebc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLeftIndentAlignmentCountTh</definition>
        <argsstring></argsstring>
        <name>kLeftIndentAlignmentCountTh</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af2e2357e43916a53259c2ac0d7954eaf" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxCharTopRange</definition>
        <argsstring></argsstring>
        <name>kMaxCharTopRange</name>
        <initializer>= 48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/fixxht.cpp" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/fixxht.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a406162a590788c2b370a74745eb376f1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kDefaultResolution</definition>
        <argsstring></argsstring>
        <name>kDefaultResolution</name>
        <initializer>= 300</initializer>
        <briefdescription>
<para>Default resolution used if input in not believable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac7c9e75ad6da750ae79b8dff6c8f30cd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxCircleErosions</definition>
        <argsstring></argsstring>
        <name>kMaxCircleErosions</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a2c0b1b1ae6730a690766ec71da2f908e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kStrayLinePer</definition>
        <argsstring></argsstring>
        <name>kStrayLinePer</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a98233252a018dc9eb158c8223e2db208" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
        <definition>const ParagraphModel * tesseract::kCrownLeft</definition>
        <argsstring></argsstring>
        <name>kCrownLeft</name>
        <initializer>= reinterpret_cast&lt;<ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *&gt;(0xDEAD111F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9fec475017947c91c5cdb29b160f4453" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
        <definition>const ParagraphModel * tesseract::kCrownRight</definition>
        <argsstring></argsstring>
        <name>kCrownRight</name>
        <initializer>= reinterpret_cast&lt;<ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *&gt;(0xDEAD888F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abfaec7e51561d081ff6615aaad765883" prot="public" static="no" mutable="no">
        <type>const <ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>const inT16 tesseract::kMaxBoxEdgeDiff</definition>
        <argsstring></argsstring>
        <name>kMaxBoxEdgeDiff</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/recogtraining.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/recogtraining.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kBoxClipTolerance</definition>
        <argsstring></argsstring>
        <name>kBoxClipTolerance</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ade0750d1a21114a42d54a11b903ad72a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinSubscriptOffset</definition>
        <argsstring></argsstring>
        <name>kMinSubscriptOffset</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aee3f1b44d026b8de929a0ba25591cc85" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinSuperscriptOffset</definition>
        <argsstring></argsstring>
        <name>kMinSuperscriptOffset</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a084fccc7b63dce7abd842e07877397c6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxDropCapBottom</definition>
        <argsstring></argsstring>
        <name>kMaxDropCapBottom</name>
        <initializer>= -128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acd4677fe72e83fad95bf289ca8b832b6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNumEndPoints</definition>
        <argsstring></argsstring>
        <name>kNumEndPoints</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" line="27" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a30cac105cb2746dccb9a2e6334a0209b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kHistogramSize</definition>
        <argsstring></argsstring>
        <name>kHistogramSize</name>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.h" line="25" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5faaa7b796e8009b61fb54b07948484b" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const tesseract::kParamsTrainingRawFeatureTypeName[]</definition>
        <argsstring>[]</argsstring>
        <name>kParamsTrainingRawFeatureTypeName</name>
        <initializer>= {
    &quot;DICT_MATCH_TYPE&quot;,     
    &quot;UNAMBIG_DICT_MATCH&quot;,  
    &quot;SHAPE_COST&quot;,          
    &quot;NGRAM_PROB&quot;,          
    &quot;NUM_BAD_PUNC&quot;,        
    &quot;NUM_BAD_CASE&quot;,        
    &quot;NUM_BAD_CHAR_TYPE&quot;,   
    &quot;NUM_BAD_SPACING&quot;,     
    &quot;NUM_BAD_SCRIPT&quot;,      
    &quot;NUM_BAD_FONT&quot;,        
    &quot;WORST_CERT&quot;,          
    &quot;<ref refid="matchdefs_8h_1a909658b0609ea401112d3091d6137e92" kindref="member">RATING</ref>&quot;,              
    &quot;ADAPTED&quot;,             
    &quot;NUM_UNICHARS&quot;,        
    &quot;OUTLINE_LEN&quot;,         
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/params_training_featdef.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ace75f93863cc26c7a127b5b3b0d8c460" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kUnigramAmbigsBufferSize</definition>
        <argsstring></argsstring>
        <name>kUnigramAmbigsBufferSize</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab7dcdb35c1f230084d46958232d67921" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kAmbigNgramSeparator[]</definition>
        <argsstring>[]</argsstring>
        <name>kAmbigNgramSeparator</name>
        <initializer>= { &apos; &apos;, &apos;\0&apos; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad8774597cdc7266bc7462fc35a939ef1" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kAmbigDelimiters[]</definition>
        <argsstring>[]</argsstring>
        <name>kAmbigDelimiters</name>
        <initializer>= &quot;\t &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af9235f53f17c0e214a97848349ecd1b8" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kIllegalMsg[]</definition>
        <argsstring>[]</argsstring>
        <name>kIllegalMsg</name>
        <initializer>=
  &quot;Illegal ambiguity specification on line %d\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8ffd261aed50909a23404766e3439bb7" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kIllegalUnicharMsg[]</definition>
        <argsstring>[]</argsstring>
        <name>kIllegalUnicharMsg</name>
        <initializer>=
  &quot;Illegal unichar %s in ambiguity specification\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a21e8ca8a9b5682a2649f8915227d4a8c" prot="public" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_c_c_util_mutex" kindref="compound">CCUtilMutex</ref></type>
        <definition>CCUtilMutex tesseract::tprintfMutex</definition>
        <argsstring></argsstring>
        <name>tprintfMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ccutil.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ccutil.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a339968ff5f9c76bb77b9620333accf09" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char* const tesseract::kTessdataFileSuffixes[]</definition>
        <argsstring>[]</argsstring>
        <name>kTessdataFileSuffixes</name>
        <initializer>= {
  kLangConfigFileSuffix,        
  kUnicharsetFileSuffix,        
  kAmbigsFileSuffix,            
  kBuiltInTemplatesFileSuffix,  
  kBuiltInCutoffsFileSuffix,    
  kNormProtoFileSuffix,         
  kPuncDawgFileSuffix,          
  kSystemDawgFileSuffix,        
  kNumberDawgFileSuffix,        
  kFreqDawgFileSuffix,          
  kFixedLengthDawgsFileSuffix,  
  kCubeUnicharsetFileSuffix,    
  kCubeSystemDawgFileSuffix,    
  kShapeTableFileSuffix,        
  kBigramDawgFileSuffix,        
  kUnambigDawgFileSuffix,       
  kParamsTrainingModelFileSuffix,  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>kTessdataFileSuffixes[i] indicates the file suffix for tessdata of type i (from TessdataType enum). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a869d38f3d2e613027d5438b7bff5c037" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool tesseract::kTessdataFileIsText[]</definition>
        <argsstring>[]</argsstring>
        <name>kTessdataFileIsText</name>
        <initializer>= {
  true,                         
  true,                         
  true,                         
  false,                        
  true,                         
  true,                         
  false,                        
  false,                        
  false,                        
  false,                        
  false,                        
  true,                         
  false,                        
  false,                        
  false,                        
  false,                        
  false,                        
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If kTessdataFileIsText[i] is true - the tessdata component of type i (from TessdataType enum) is text, and is binary otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" line="101" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af891390c2ee8195ea41d9d9ff5ebc912" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxNumTessdataEntries</definition>
        <argsstring></argsstring>
        <name>kMaxNumTessdataEntries</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TessdataType could be updated to contain more entries, however we do not expect that number to be astronomically high. In order to automatically detect endianness <ref refid="classtesseract_1_1_tessdata_manager" kindref="compound">TessdataManager</ref> will flip the bits if actual_tessdata_num_entries_ is larger than kMaxNumTessdataEntries. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" line="128" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/tessdatamanager.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8760587e4a172eabdec26d5820dfa8b9" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kUTF8LineSeparator</definition>
        <argsstring></argsstring>
        <name>kUTF8LineSeparator</name>
        <initializer>= &quot;\u2028&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="25" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aedb372736a48e98b9ea9075cdc65cc12" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kUTF8ParagraphSeparator</definition>
        <argsstring></argsstring>
        <name>kUTF8ParagraphSeparator</name>
        <initializer>= &quot;\u2029&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="26" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kLRM</definition>
        <argsstring></argsstring>
        <name>kLRM</name>
        <initializer>= &quot;\u200E&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="27" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kRLM</definition>
        <argsstring></argsstring>
        <name>kRLM</name>
        <initializer>= &quot;\u200F&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="28" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a20de3eb1fcacc29addf5c6903e743cfe" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kRLE</definition>
        <argsstring></argsstring>
        <name>kRLE</name>
        <initializer>= &quot;\u202A&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="29" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a94431ee0c0b62532a711669a890a6d9c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kPDF</definition>
        <argsstring></argsstring>
        <name>kPDF</name>
        <initializer>= &quot;\u202C&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa1505ec49e73744b09f67e0a8390a103" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kHyphenLikeUTF8</definition>
        <argsstring>[]</argsstring>
        <name>kHyphenLikeUTF8</name>
        <initializer>= {
  &quot;-&quot;,       
  &quot;\u05BE&quot;,  
  &quot;\u2010&quot;,  
  &quot;\u2011&quot;,  
  &quot;\u2012&quot;,  
  &quot;\u2013&quot;,  
  &quot;\u2014&quot;,  
  &quot;\u2015&quot;,  
  &quot;\u2212&quot;,  
  &quot;\uFE58&quot;,  
  &quot;\uFE63&quot;,  
  &quot;\uFF0D&quot;,  
   0L ,      
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0e977b84de723eee3cf551283b1d1ed1" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * tesseract::kApostropheLikeUTF8</definition>
        <argsstring>[]</argsstring>
        <name>kApostropheLikeUTF8</name>
        <initializer>= {
  &quot;&apos;&quot;,       
  &quot;`&quot;,       
  &quot;\u2018&quot;,  
  &quot;\u2019&quot;,  
  &quot;\u2032&quot;,  
   0L ,      
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicodes.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5ed5ea7e3054219b18144501c5ec3d1e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxOffsetDist</definition>
        <argsstring></argsstring>
        <name>kMaxOffsetDist</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intfeaturemap.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intfeaturemap.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a49cc91997030c04f4b29b8ddf620f021" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinPCLengthIncrease</definition>
        <argsstring></argsstring>
        <name>kMinPCLengthIncrease</name>
        <initializer>= 1.0 / 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intfeaturemap.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intfeaturemap.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a66fe526890f3eef2ba57723176850001" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNumOffsetMaps</definition>
        <argsstring></argsstring>
        <name>kNumOffsetMaps</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intfeaturemap.h" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intfeaturemap.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6dc1c791f04726f9cc345b54b85222b9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinClusteredShapes</definition>
        <argsstring></argsstring>
        <name>kMinClusteredShapes</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a93d3ba882abd48b578f7db93e8a4e6e9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxUnicharsPerCluster</definition>
        <argsstring></argsstring>
        <name>kMaxUnicharsPerCluster</name>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5a80aa3c385749b5df58ac015ba00e9f" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kFontMergeDistance</definition>
        <argsstring></argsstring>
        <name>kFontMergeDistance</name>
        <initializer>= 0.025</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a765cba391d1d3fc666802038fce31c85" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kInfiniteDist</definition>
        <argsstring></argsstring>
        <name>kInfiniteDist</name>
        <initializer>= 999.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" line="896" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mastertrainer.cpp" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8cf21e9037258ea336196c6097a889da" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kRandomizingCenter</definition>
        <argsstring></argsstring>
        <name>kRandomizingCenter</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsample.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsample.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a616511d1f759683a0e2de86b77a124e6" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNumCNParams</definition>
        <argsstring></argsstring>
        <name>kNumCNParams</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsample.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsample.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a360e126fc02b42c053989a3870ba4e7f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSampleYShiftSize</definition>
        <argsstring></argsstring>
        <name>kSampleYShiftSize</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsample.h" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsample.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a7fc81c6be845c07d43ec69aa8007615b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSampleScaleSize</definition>
        <argsstring></argsstring>
        <name>kSampleScaleSize</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsample.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsample.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a158a975d0928182308147806219b0d37" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSampleRandomSize</definition>
        <argsstring></argsstring>
        <name>kSampleRandomSize</name>
        <initializer>= kSampleYShiftSize * kSampleScaleSize - 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsample.h" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsample.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aedc256912be3e2d615b8899ba661300a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kTestChar</definition>
        <argsstring></argsstring>
        <name>kTestChar</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aeaad2b6ef5a02069d1898468d26da372" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSquareLimit</definition>
        <argsstring></argsstring>
        <name>kSquareLimit</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab57f233601ee3f43a6bdcc4478b59547" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kPrime1</definition>
        <argsstring></argsstring>
        <name>kPrime1</name>
        <initializer>= 17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="34" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a606492ee81ad0e6765a6b2f8dbb798df" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kPrime2</definition>
        <argsstring></argsstring>
        <name>kPrime2</name>
        <initializer>= 13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aaaac2947d8026a1e91fc20287ef90e3a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinOutlierSamples</definition>
        <argsstring></argsstring>
        <name>kMinOutlierSamples</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aac1dfbb2362f23a997d96e519c8574b9" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMinDeslantAngle</definition>
        <argsstring></argsstring>
        <name>kMinDeslantAngle</name>
        <initializer>= -30.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/bmp_8.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/bmp_8.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4b3bccc46bbceff40580b07176953654" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMaxDeslantAngle</definition>
        <argsstring></argsstring>
        <name>kMaxDeslantAngle</name>
        <initializer>= 30.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/bmp_8.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/bmp_8.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad8681ccc0dc88baae0586c3d246c27a0" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kDeslantAngleDelta</definition>
        <argsstring></argsstring>
        <name>kDeslantAngleDelta</name>
        <initializer>= 0.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/bmp_8.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/bmp_8.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5427e43c614fdc76be1d3f7b0032285c" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kFoldingRatio</definition>
        <argsstring></argsstring>
        <name>kFoldingRatio</name>
        <initializer>= 0.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/conv_net_classifier.h" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/conv_net_classifier.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1adfaad3450814935fb295147737afc635" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMinNormalizationAspectRatio</definition>
        <argsstring></argsstring>
        <name>kMinNormalizationAspectRatio</name>
        <initializer>= 3.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/cube_object.h" line="86" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/cube_object.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a140798b92709580fd1c2191f21659414" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMinProbSkipDeslanted</definition>
        <argsstring></argsstring>
        <name>kMinProbSkipDeslanted</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/cube_object.h" line="89" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/cube_object.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acc744c888b291dd541ba6fb60c76b0a9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kStateCnt</definition>
        <argsstring></argsstring>
        <name>kStateCnt</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/tess_lang_model.h" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/tess_lang_model.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6b4a65d34133edfd1e49af29cb711767" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNumLiteralCnt</definition>
        <argsstring></argsstring>
        <name>kNumLiteralCnt</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/tess_lang_model.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/cube/tess_lang_model.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af8006a49b1c13533b0afd3f73423699b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinAbsoluteGarbageWordLength</definition>
        <argsstring></argsstring>
        <name>kMinAbsoluteGarbageWordLength</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/context.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/context.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8923c6c6314ad20b97293c05d199ca13" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMinAbsoluteGarbageAlphanumFrac</definition>
        <argsstring></argsstring>
        <name>kMinAbsoluteGarbageAlphanumFrac</name>
        <initializer>= 0.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/context.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/context.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae599808f0375f76eb5e9340ec448d7f2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::case_state_table[6][4]</definition>
        <argsstring>[6][4]</argsstring>
        <name>case_state_table</name>
        <initializer>= { {
                                  
    
                                  
      0, 1, 5, 4
    },
    {                            
      0, 3, 2, 4
    },
    {                            
      0, -1, 2, -1
    },
    {                            
      0, 3, -1, 4
    },
    {                            
      0, -1, -1, 4
    },
    {                            
      5, -1, 2, -1
    },
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/context.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/context.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6d21047470e469f2a47f8c058f74c14e" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool tesseract::kBeginningDawgsType[]</definition>
        <argsstring>[]</argsstring>
        <name>kBeginningDawgsType</name>
        <initializer>= { 1, 1, 1, 1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a95aab380e1968584875bbfc8735604fc" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool tesseract::kDawgSuccessors[DAWG_TYPE_COUNT][DAWG_TYPE_COUNT]</definition>
        <argsstring>[DAWG_TYPE_COUNT][DAWG_TYPE_COUNT]</argsstring>
        <name>kDawgSuccessors</name>
        <initializer>= {
  { 0, 1, 1, 0 },  
  { 1, 0, 0, 0 },  
  { 1, 0, 0, 0 },  
  { 0, 0, 0, 0 },  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="98" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa8a63c5d8ca7f41128ea5bdc9a44018e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kWildcard[]</definition>
        <argsstring>[]</argsstring>
        <name>kWildcard</name>
        <initializer>= &quot;*&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dawg.h" line="105" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dawg.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aca02ee7b78494ccbe85921b6da32abc3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kAnyWordLength</definition>
        <argsstring></argsstring>
        <name>kAnyWordLength</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a095f706bd58a68f7660976766a34dbdd" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kRatingPad</definition>
        <argsstring></argsstring>
        <name>kRatingPad</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a46b0eddc1d202d93d2f5b94cd16bca58" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kHyphenSymbol[]</definition>
        <argsstring>[]</argsstring>
        <name>kHyphenSymbol</name>
        <initializer>= &quot;-&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a2bdcd435dd60d72c1be1f9afc16f517b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxNumDawgEdgees</definition>
        <argsstring></argsstring>
        <name>kMaxNumDawgEdgees</name>
        <initializer>= 2000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3c4212a1c331a0fac78b44706b930060" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxDocDawgEdges</definition>
        <argsstring></argsstring>
        <name>kMaxDocDawgEdges</name>
        <initializer>= 250000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab52d8db207f1ea040850fcddb6161eca" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxUserDawgEdges</definition>
        <argsstring></argsstring>
        <name>kMaxUserDawgEdges</name>
        <initializer>= 50000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a29d6e578ef80f937965a312b5d611902" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kSimCertaintyScale</definition>
        <argsstring></argsstring>
        <name>kSimCertaintyScale</name>
        <initializer>= -10.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab75b4352639fdd34f286a21556712c58" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kSimCertaintyOffset</definition>
        <argsstring></argsstring>
        <name>kSimCertaintyOffset</name>
        <initializer>= -10.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae541485627f3396cf6460058d47af8ff" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kSimilarityFloor</definition>
        <argsstring></argsstring>
        <name>kSimilarityFloor</name>
        <initializer>= 100.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a010943a3c178dbd41dc241904e8b9ed9" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kDocDictMaxRepChars</definition>
        <argsstring></argsstring>
        <name>kDocDictMaxRepChars</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a99e48c6105e2bc2730701048399a90b4" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kPermDawgRatingPad</definition>
        <argsstring></argsstring>
        <name>kPermDawgRatingPad</name>
        <initializer>= 5.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permdawg.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permdawg.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0db2198747060995d61a01dcfac97eb7" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kDoNotReverse[]</definition>
        <argsstring>[]</argsstring>
        <name>kDoNotReverse</name>
        <initializer>= &quot;RRP_DO_NO_REVERSE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.cpp" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a402a13eb2d1593daed0190a118f23d88" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kReverseIfHasRTL[]</definition>
        <argsstring>[]</argsstring>
        <name>kReverseIfHasRTL</name>
        <initializer>= &quot;RRP_REVERSE_IF_HAS_RTL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a597d22620e40ecc0ec38dfa4f65a9d85" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char tesseract::kForceReverse[]</definition>
        <argsstring>[]</argsstring>
        <name>kForceReverse</name>
        <initializer>= &quot;RRP_FORCE_REVERSE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.cpp" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af5c5a40d574f6ab56726b8b2f963f65c" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const tesseract::RTLReversePolicyNames[]</definition>
        <argsstring>[]</argsstring>
        <name>RTLReversePolicyNames</name>
        <initializer>= {
  <ref refid="namespacetesseract_1a0db2198747060995d61a01dcfac97eb7" kindref="member">kDoNotReverse</ref>,
  <ref refid="namespacetesseract_1a402a13eb2d1593daed0190a118f23d88" kindref="member">kReverseIfHasRTL</ref>,
  <ref refid="namespacetesseract_1a597d22620e40ecc0ec38dfa4f65a9d85" kindref="member">kForceReverse</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a00495c306a53361686cd9051f5f7822c" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kMinInputRange</definition>
        <argsstring></argsstring>
        <name>kMinInputRange</name>
        <initializer>= 1e-6f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/neural_networks/runtime/neural_net.h" line="20" column="1" bodyfile="/Users/makoto/Desktop/trunk/neural_networks/runtime/neural_net.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a38bd5dd9ac9d0446b395e23b84f4936c" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kInputNodeBias</definition>
        <argsstring></argsstring>
        <name>kInputNodeBias</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/neural_networks/runtime/neuron.h" line="22" column="1" bodyfile="/Users/makoto/Desktop/trunk/neural_networks/runtime/neuron.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9ef44019867a8035dc34a7795097b157" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAlignedFraction</definition>
        <argsstring></argsstring>
        <name>kAlignedFraction</name>
        <initializer>= 0.03125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abdaa318336c9bb9609f2fdba391a9451" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kRaggedFraction</definition>
        <argsstring></argsstring>
        <name>kRaggedFraction</name>
        <initializer>= 2.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5b475b6dfc1167009e77c89f2ca25dfb" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAlignedGapFraction</definition>
        <argsstring></argsstring>
        <name>kAlignedGapFraction</name>
        <initializer>= 0.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a92a18c9684aaa0acd9939e7e91d1cd60" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kRaggedGapFraction</definition>
        <argsstring></argsstring>
        <name>kRaggedGapFraction</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9e1752bce5ba73cc7345cc8b688e149d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kVLineAlignment</definition>
        <argsstring></argsstring>
        <name>kVLineAlignment</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4e46e9a76747314d18c6db272345a9c9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kVLineGutter</definition>
        <argsstring></argsstring>
        <name>kVLineGutter</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3de2795111588ee41cd247b177131f37" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kVLineSearchSize</definition>
        <argsstring></argsstring>
        <name>kVLineSearchSize</name>
        <initializer>= 150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad619a483f2439f99777811f537a9cb24" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinRaggedTabs</definition>
        <argsstring></argsstring>
        <name>kMinRaggedTabs</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3036fb27e166287eddab8b7988c96383" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinAlignedTabs</definition>
        <argsstring></argsstring>
        <name>kMinAlignedTabs</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a20a31756a93d4d56040b537fd40f1da9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kVLineMinLength</definition>
        <argsstring></argsstring>
        <name>kVLineMinLength</name>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad8fd17f5ba82834b8c2f95e94f5a9129" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinTabGradient</definition>
        <argsstring></argsstring>
        <name>kMinTabGradient</name>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa2907c990fec72f4cfd40254643178e3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxSkewFactor</definition>
        <argsstring></argsstring>
        <name>kMaxSkewFactor</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad3740a681ee2fe5c705d28e5cd2645ee" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tesseract::kTextordDebugPix</definition>
        <argsstring></argsstring>
        <name>kTextordDebugPix</name>
        <initializer>= &quot;psdebug_pix&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acc370cbda4181ad132c73ad679cd7b62" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxSmallNeighboursPerPix</definition>
        <argsstring></argsstring>
        <name>kMaxSmallNeighboursPerPix</name>
        <initializer>= 1.0 / 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="28" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3a426b02bca50b86771f72e232473731" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxLargeOverlapsWithSmall</definition>
        <argsstring></argsstring>
        <name>kMaxLargeOverlapsWithSmall</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a223bb3b024d6a8cc9f67be9c3256eab6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxMediumOverlapsWithSmall</definition>
        <argsstring></argsstring>
        <name>kMaxMediumOverlapsWithSmall</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a32d5a83c9d50b348fb071ebfe543aaee" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxLargeOverlapsWithMedium</definition>
        <argsstring></argsstring>
        <name>kMaxLargeOverlapsWithMedium</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a2c7d6e5fba3f18650dca66e06f1dc7ef" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kOriginalNoiseMultiple</definition>
        <argsstring></argsstring>
        <name>kOriginalNoiseMultiple</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3b862db5dec2761daccc3215b5082c4f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kNoisePadding</definition>
        <argsstring></argsstring>
        <name>kNoisePadding</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad4251cb7939f87518909d0e342ef929c" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kPhotoOffsetFraction</definition>
        <argsstring></argsstring>
        <name>kPhotoOffsetFraction</name>
        <initializer>= 0.375</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a127b07e8133a6a81822ba5b58a0ddef5" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinGoodTextPARatio</definition>
        <argsstring></argsstring>
        <name>kMinGoodTextPARatio</name>
        <initializer>= 1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinColumnWidth</definition>
        <argsstring></argsstring>
        <name>kMinColumnWidth</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a525b2fedb87de1261b0df536104ba145" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxIncompatibleColumnCount</definition>
        <argsstring></argsstring>
        <name>kMaxIncompatibleColumnCount</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acea5cf3f3fc7999a57079cc1bb4104f7" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMarginOverlapFraction</definition>
        <argsstring></argsstring>
        <name>kMarginOverlapFraction</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9c9da421469028d22d7a2a4dbd3e3cbd" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kHorizontalGapMergeFraction</definition>
        <argsstring></argsstring>
        <name>kHorizontalGapMergeFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afeb3a1b870eeeb9e810fcb85744bb234" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinNonNoiseFraction</definition>
        <argsstring></argsstring>
        <name>kMinNonNoiseFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af587ca3f993f7a3b54bdb0fac568d620" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinGutterWidthGrid</definition>
        <argsstring></argsstring>
        <name>kMinGutterWidthGrid</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae4010112e32e0a18dfda3cc0efec9a1f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxDistToPartSizeRatio</definition>
        <argsstring></argsstring>
        <name>kMaxDistToPartSizeRatio</name>
        <initializer>= 1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa442956755df972dd0aa8ab4d832e5bd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxPartnerDepth</definition>
        <argsstring></argsstring>
        <name>kMaxPartnerDepth</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae0a877f2f2010a2510e31be3d5cf9a46" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxSpacingDrift</definition>
        <argsstring></argsstring>
        <name>kMaxSpacingDrift</name>
        <initializer>= 1.0 / 72</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab991108b48ad3c8977dc27b8b40697c4" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxTopSpacingFraction</definition>
        <argsstring></argsstring>
        <name>kMaxTopSpacingFraction</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab896bf3ee331c3dc994d6ca764d523b0" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxSameBlockLineSpacing</definition>
        <argsstring></argsstring>
        <name>kMaxSameBlockLineSpacing</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a253deddf742f4040aa4cd65ec08808e0" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxSizeRatio</definition>
        <argsstring></argsstring>
        <name>kMaxSizeRatio</name>
        <initializer>= 1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afa8971bf35c601524286aeb419a061a2" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxLeaderGapFractionOfMax</definition>
        <argsstring></argsstring>
        <name>kMaxLeaderGapFractionOfMax</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a06d2e157a317d737547326b3a463326f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxLeaderGapFractionOfMin</definition>
        <argsstring></argsstring>
        <name>kMaxLeaderGapFractionOfMin</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a97c300450ada83371da245cda0fdee0e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinLeaderCount</definition>
        <argsstring></argsstring>
        <name>kMinLeaderCount</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a75bf494eb463097bac2fe7c5d8d1d660" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLeaderCutCost</definition>
        <argsstring></argsstring>
        <name>kLeaderCutCost</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac940a7cfcc7b1a0ecab3e6c0af788175" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinStrongTextValue</definition>
        <argsstring></argsstring>
        <name>kMinStrongTextValue</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a22d76064f02915e8be7a835f2ea05038" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinChainTextValue</definition>
        <argsstring></argsstring>
        <name>kMinChainTextValue</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a32f2825c55e218c93202c88eb0a9e9cd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kHorzStrongTextlineCount</definition>
        <argsstring></argsstring>
        <name>kHorzStrongTextlineCount</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5f972eef50e9dbc6cf11d791a877ad6e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kHorzStrongTextlineHeight</definition>
        <argsstring></argsstring>
        <name>kHorzStrongTextlineHeight</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8bb43436a786b376902309db2f0b5699" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kHorzStrongTextlineAspect</definition>
        <argsstring></argsstring>
        <name>kHorzStrongTextlineAspect</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8043339cb79428cd76d41f5432de9712" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxBaselineError</definition>
        <argsstring></argsstring>
        <name>kMaxBaselineError</name>
        <initializer>= 0.4375</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a65472193d051a39743ef565bd34bcc64" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinBaselineCoverage</definition>
        <argsstring></argsstring>
        <name>kMinBaselineCoverage</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abf95c90bc0630ea9218c2eb0d70472dd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxRMSColorNoise</definition>
        <argsstring></argsstring>
        <name>kMaxRMSColorNoise</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4fb5be2b91cab225fc69bec75ccf96bc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxColorDistance</definition>
        <argsstring></argsstring>
        <name>kMaxColorDistance</name>
        <initializer>= 900</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="80" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a20254a33e4245d3bc7edce6c87619aca" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char tesseract::kBlobTypes[BRT_COUNT+1]</definition>
        <argsstring>[BRT_COUNT+1]</argsstring>
        <name>kBlobTypes</name>
        <initializer>= &quot;NHSRIUVT&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="1755" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="1755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abd090245debb6dcc506aba8f62da938b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kRGBRMSColors</definition>
        <argsstring></argsstring>
        <name>kRGBRMSColors</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aae8f2f2cc0e41a6cc4a6d1bf322f4b2a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxPadFactor</definition>
        <argsstring></argsstring>
        <name>kMaxPadFactor</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae4ffbfaa120044bd1f22b6f95ead9dce" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxNeighbourDistFactor</definition>
        <argsstring></argsstring>
        <name>kMaxNeighbourDistFactor</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0c0112882a0fd4d5db231341b276748f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxCaptionLines</definition>
        <argsstring></argsstring>
        <name>kMaxCaptionLines</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aede50c5fa6fdad612c08e73757501178" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinCaptionGapRatio</definition>
        <argsstring></argsstring>
        <name>kMinCaptionGapRatio</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3edae94975001932766025af12aa9615" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinCaptionGapHeightRatio</definition>
        <argsstring></argsstring>
        <name>kMinCaptionGapHeightRatio</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a45530b4b5280b8d2f185a531cab4169b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kBigPartSizeRatio</definition>
        <argsstring></argsstring>
        <name>kBigPartSizeRatio</name>
        <initializer>= 1.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abc28700fa5d19f82a78db318450d7786" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthFractionTolerance</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthFractionTolerance</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allowed proportional change in stroke width to be the same font. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a7dc74940f73222c81918e8701c301516" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthConstantTolerance</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthConstantTolerance</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1fa28613a5db6fb9d0c7fdef0f151872" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kTinyEnoughTextlineOverlapFraction</definition>
        <argsstring></argsstring>
        <name>kTinyEnoughTextlineOverlapFraction</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a03ac774c4cfbfe5f2b611e59b1e3f74b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxPartitionSpacing</definition>
        <argsstring></argsstring>
        <name>kMaxPartitionSpacing</name>
        <initializer>= 1.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0683cf2a8cb220b4bf8f5719b4846b09" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSmoothDecisionMargin</definition>
        <argsstring></argsstring>
        <name>kSmoothDecisionMargin</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1f21fe8acb13b4e1904e1d1157183d0d" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinRectangularFraction</definition>
        <argsstring></argsstring>
        <name>kMinRectangularFraction</name>
        <initializer>= 0.125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae6dc7638052b18db703d824259f9d39e" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxRectangularFraction</definition>
        <argsstring></argsstring>
        <name>kMaxRectangularFraction</name>
        <initializer>= 0.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac980c05231fe3f7a8cb4c7ed7f9b6516" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxRectangularGradient</definition>
        <argsstring></argsstring>
        <name>kMaxRectangularGradient</name>
        <initializer>= 0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad923bf9132f3e7cfd57199a3190c446c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinImageFindSize</definition>
        <argsstring></argsstring>
        <name>kMinImageFindSize</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a351af5b8ad4d2b3fd95e59d758f13e7a" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kRMSFitScaling</definition>
        <argsstring></argsstring>
        <name>kRMSFitScaling</name>
        <initializer>= 8.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa76be4c175875d95748cec9f9d5467e3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinColorDifference</definition>
        <argsstring></argsstring>
        <name>kMinColorDifference</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af5a3375be81da4b1d09d654fed77617a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kThinLineFraction</definition>
        <argsstring></argsstring>
        <name>kThinLineFraction</name>
        <initializer>= 20</initializer>
        <briefdescription>
<para>Denominator of resolution makes max pixel width to allow thin lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab1ecce6329628c52853d15330697b9a5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinLineLengthFraction</definition>
        <argsstring></argsstring>
        <name>kMinLineLengthFraction</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Denominator of resolution makes min pixels to demand line lengths to be. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a67e1606288499ff9e08833b9c2a1ded8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kCrackSpacing</definition>
        <argsstring></argsstring>
        <name>kCrackSpacing</name>
        <initializer>= 100</initializer>
        <briefdescription>
<para>Spacing of cracks across the page to break up tall vertical lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acbcf973384ce439c1b3ab4decf0c383c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLineFindGridSize</definition>
        <argsstring></argsstring>
        <name>kLineFindGridSize</name>
        <initializer>= 50</initializer>
        <briefdescription>
<para>Grid size used by line finder. Not very critical. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8109c0293738c5b8a499baf96e6191e2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinThickLineWidth</definition>
        <argsstring></argsstring>
        <name>kMinThickLineWidth</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab97d7447e46667c618a568b97b96bb3c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxLineResidue</definition>
        <argsstring></argsstring>
        <name>kMaxLineResidue</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6978c95cbd05d6aef11ca4b7850a1a6b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kThickLengthMultiple</definition>
        <argsstring></argsstring>
        <name>kThickLengthMultiple</name>
        <initializer>= 0.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="55" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a88f852ceee95241622ec0f837dbfeff8" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxNonLineDensity</definition>
        <argsstring></argsstring>
        <name>kMaxNonLineDensity</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a40e2e4747be3bc8a6358a023e2e3a001" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxStaveHeight</definition>
        <argsstring></argsstring>
        <name>kMaxStaveHeight</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a064746ea8b34175e6f12ce364c8d6414" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinMusicPixelFraction</definition>
        <argsstring></argsstring>
        <name>kMinMusicPixelFraction</name>
        <initializer>= 0.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5d1f89502955a97f3986e480f45d11ac" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthTolerance</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthTolerance</name>
        <initializer>= 1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allowed constant change in stroke width to be the same font. Really 1.5 pixels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1abd67e80f3588f9bbf627ae8b21494513" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthFractionCJK</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthFractionCJK</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ad4cf0379178f03e5f1fc982c6e12a7a3" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthCJK</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthCJK</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a73ac9428eb90511e5627135347d561e2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kCJKRadius</definition>
        <argsstring></argsstring>
        <name>kCJKRadius</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a39569c92bdfdb4178deaac42d588f830" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kCJKBrokenDistanceFraction</definition>
        <argsstring></argsstring>
        <name>kCJKBrokenDistanceFraction</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a308c19587dfea876b3291916f10443ec" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kCJKMaxComponents</definition>
        <argsstring></argsstring>
        <name>kCJKMaxComponents</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="71" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4569b4a16846b1c45945534463a09e75" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kCJKAspectRatio</definition>
        <argsstring></argsstring>
        <name>kCJKAspectRatio</name>
        <initializer>= 1.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a62516d3e478bcfb239d046da287150b3" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kCJKAspectRatioIncrease</definition>
        <argsstring></argsstring>
        <name>kCJKAspectRatioIncrease</name>
        <initializer>= 1.0625</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa44aa93b17b5967315a229c1b1ed1f31" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxCJKSizeRatio</definition>
        <argsstring></argsstring>
        <name>kMaxCJKSizeRatio</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a93725c4be688b102564ecc9ef6642366" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kBrokenCJKIterationFraction</definition>
        <argsstring></argsstring>
        <name>kBrokenCJKIterationFraction</name>
        <initializer>= 0.125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aabf5756c7e5d355517dc1af5df71e750" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kDiacriticXPadRatio</definition>
        <argsstring></argsstring>
        <name>kDiacriticXPadRatio</name>
        <initializer>= 7.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="82" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1adfd3b22e2049d8d544208834da403031" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kDiacriticYPadRatio</definition>
        <argsstring></argsstring>
        <name>kDiacriticYPadRatio</name>
        <initializer>= 1.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3883c045452c59e5a80bd9ed73cd9e6f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinDiacriticSizeRatio</definition>
        <argsstring></argsstring>
        <name>kMinDiacriticSizeRatio</name>
        <initializer>= 1.0625</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a140f97b7a02095877cba6ffaf66edc32" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxDiacriticDistanceRatio</definition>
        <argsstring></argsstring>
        <name>kMaxDiacriticDistanceRatio</name>
        <initializer>= 1.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aaf71279184a5815428ada7f1b3fa5d5c" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxDiacriticGapToBaseCharHeight</definition>
        <argsstring></argsstring>
        <name>kMaxDiacriticGapToBaseCharHeight</name>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="94" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa272bbcbb5d0b8dad555f86a29a1a133" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSearchRadius</definition>
        <argsstring></argsstring>
        <name>kSearchRadius</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3d9a4df05c442729540b7459fbec462c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLineTrapLongest</definition>
        <argsstring></argsstring>
        <name>kLineTrapLongest</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="101" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab34b32a5ea90db86801786f0f8a83997" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLineTrapShortest</definition>
        <argsstring></argsstring>
        <name>kLineTrapShortest</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="103" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afba5db6e43d5f018b1c6bb6dfa43e488" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMostlyOneDirRatio</definition>
        <argsstring></argsstring>
        <name>kMostlyOneDirRatio</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="106" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a84872b3032afddbed37888802b109b56" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kLineResidueAspectRatio</definition>
        <argsstring></argsstring>
        <name>kLineResidueAspectRatio</name>
        <initializer>= 8.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1a706351c04a309beaf8be435136baac" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLineResiduePadRatio</definition>
        <argsstring></argsstring>
        <name>kLineResiduePadRatio</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aad875f37920782a2a2e7acedceefb20f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kLineResidueSizeRatio</definition>
        <argsstring></argsstring>
        <name>kLineResidueSizeRatio</name>
        <initializer>= 1.75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="112" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af750de0df296b9b48c485e2ec4bb283c" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float tesseract::kSizeRatioToReject</definition>
        <argsstring></argsstring>
        <name>kSizeRatioToReject</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="114" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a349538464d5316e5854eee5dba4bf38e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxLargeOverlaps</definition>
        <argsstring></argsstring>
        <name>kMaxLargeOverlaps</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="117" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a746b69b4c2ec2f296100ebfaf15b2e2b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kNeighbourSearchFactor</definition>
        <argsstring></argsstring>
        <name>kNeighbourSearchFactor</name>
        <initializer>= 2.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="119" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1955d1b3b99cebc67e90fa20f8407a04" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kTabRadiusFactor</definition>
        <argsstring></argsstring>
        <name>kTabRadiusFactor</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a2fa6d78b73f614c75e0fe25a9dbdaaae" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinVerticalSearch</definition>
        <argsstring></argsstring>
        <name>kMinVerticalSearch</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a664cd7aab5779ec9a70ddd95e53c29c1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxVerticalSearch</definition>
        <argsstring></argsstring>
        <name>kMaxVerticalSearch</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a80f8cfaf51d03db29c6e94d70af97cf8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxRaggedSearch</definition>
        <argsstring></argsstring>
        <name>kMaxRaggedSearch</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9f107f3f0670a037dd195b875a3f5a20" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinLinesInColumn</definition>
        <argsstring></argsstring>
        <name>kMinLinesInColumn</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a940cd6c9651095d7b562b4d66f776107" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinFractionalLinesInColumn</definition>
        <argsstring></argsstring>
        <name>kMinFractionalLinesInColumn</name>
        <initializer>= 0.125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae21e2c36358c259cded9c442cab812e7" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinGutterWidthAbsolute</definition>
        <argsstring></argsstring>
        <name>kMinGutterWidthAbsolute</name>
        <initializer>= 0.02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4d8d6ad8a3ebea8a7b3b45de690c7e40" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxGutterWidthAbsolute</definition>
        <argsstring></argsstring>
        <name>kMaxGutterWidthAbsolute</name>
        <initializer>= 2.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3f4e3895634b56c7096734cc15982208" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kRaggedGutterMultiple</definition>
        <argsstring></argsstring>
        <name>kRaggedGutterMultiple</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a859848f39707e3651c43974d50abe408" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kLineFragmentAspectRatio</definition>
        <argsstring></argsstring>
        <name>kLineFragmentAspectRatio</name>
        <initializer>= 10.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afadff62f2d6f2d5f6c143d958e548c7c" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kSmoothFactor</definition>
        <argsstring></argsstring>
        <name>kSmoothFactor</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a59d7d7820f7a4cd49d0dc316b15a5916" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kCharVerticalOverlapFraction</definition>
        <argsstring></argsstring>
        <name>kCharVerticalOverlapFraction</name>
        <initializer>= 0.375</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a19f1decdbc5e8704aad99febd8755812" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxHorizontalGap</definition>
        <argsstring></argsstring>
        <name>kMaxHorizontalGap</name>
        <initializer>= 3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="65" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1adc693e483b6c8c17a5c85a0836fed4cd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinEvaluatedTabs</definition>
        <argsstring></argsstring>
        <name>kMinEvaluatedTabs</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a99c9fb2718706bafc74bc3ad2904b950" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxTextLineBlobRatio</definition>
        <argsstring></argsstring>
        <name>kMaxTextLineBlobRatio</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a25e68d9020c882dce505ac387807952e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinTextLineBlobRatio</definition>
        <argsstring></argsstring>
        <name>kMinTextLineBlobRatio</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab4ff5ad2b93e3611d310d5338a2cfd06" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinImageArea</definition>
        <argsstring></argsstring>
        <name>kMinImageArea</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a54e5bd928697f4ac6707ebd6d6313ac8" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kCosMaxSkewAngle</definition>
        <argsstring></argsstring>
        <name>kCosMaxSkewAngle</name>
        <initializer>= 0.866025</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="82" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a09df286c02619a6b22c2cd6f89e42267" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kColumnWidthFactor</definition>
        <argsstring></argsstring>
        <name>kColumnWidthFactor</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pixel resolution of column width estimates. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.h" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a00d83d0f6a701860dcf421bbbe283fef" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxVerticalSpacing</definition>
        <argsstring></argsstring>
        <name>kMaxVerticalSpacing</name>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="40" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a83ac44e5e0c7348fd8591b3cba175dff" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxBlobWidth</definition>
        <argsstring></argsstring>
        <name>kMaxBlobWidth</name>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aeecbc7f84d79acc5731cfdcccc164bde" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kSplitPartitionSize</definition>
        <argsstring></argsstring>
        <name>kSplitPartitionSize</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a9b013c09ae4bd53f0b147f3945ae9c8c" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowTextHeight</definition>
        <argsstring></argsstring>
        <name>kAllowTextHeight</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a92f436872c90049797ee7b1356f50133" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowTextWidth</definition>
        <argsstring></argsstring>
        <name>kAllowTextWidth</name>
        <initializer>= 0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a744c12bd96933e697e5afff35c492dc0" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowTextArea</definition>
        <argsstring></argsstring>
        <name>kAllowTextArea</name>
        <initializer>= 0.8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0de56cf05a1e8a1aee7e6bcd81e34742" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowBlobHeight</definition>
        <argsstring></argsstring>
        <name>kAllowBlobHeight</name>
        <initializer>= 0.3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aa86b1f68578cb7c0b834b2a137376ed7" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowBlobWidth</definition>
        <argsstring></argsstring>
        <name>kAllowBlobWidth</name>
        <initializer>= 0.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a714f54e357a15f2578470c0430a9ec5f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kAllowBlobArea</definition>
        <argsstring></argsstring>
        <name>kAllowBlobArea</name>
        <initializer>= 0.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a3fe030812946d2ca16b873bde30d5431" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinBoxesInTextPartition</definition>
        <argsstring></argsstring>
        <name>kMinBoxesInTextPartition</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="65" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac2d16b5be5214a804964b939c8111bc7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxBoxesInDataPartition</definition>
        <argsstring></argsstring>
        <name>kMaxBoxesInDataPartition</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a632cb2dd79696389be8feb970de28e3e" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxGapInTextPartition</definition>
        <argsstring></argsstring>
        <name>kMaxGapInTextPartition</name>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="71" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a25dab2777976176c8de47ef2fb5b74a5" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinMaxGapInTextPartition</definition>
        <argsstring></argsstring>
        <name>kMinMaxGapInTextPartition</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af7577bf68e7e1466e0d58eb91ad999c6" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxBlobOverlapFactor</definition>
        <argsstring></argsstring>
        <name>kMaxBlobOverlapFactor</name>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a12f077d41b2f5c668c1b25912b9b6244" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxTableCellXheight</definition>
        <argsstring></argsstring>
        <name>kMaxTableCellXheight</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aae5eb999d710e50055ba3096b2f54c38" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxColumnHeaderDistance</definition>
        <argsstring></argsstring>
        <name>kMaxColumnHeaderDistance</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="87" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a6a040ffaa830485299daa5c344ebe039" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kTableColumnThreshold</definition>
        <argsstring></argsstring>
        <name>kTableColumnThreshold</name>
        <initializer>= 3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac42d5746b048036811177c1bd95e7691" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kRulingVerticalMargin</definition>
        <argsstring></argsstring>
        <name>kRulingVerticalMargin</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="95" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0f2ae212b6b475efca7981fd1dc51e29" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinOverlapWithTable</definition>
        <argsstring></argsstring>
        <name>kMinOverlapWithTable</name>
        <initializer>= 0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aee32ef58150f63a980c7b4f736c4a22a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSideSpaceMargin</definition>
        <argsstring></argsstring>
        <name>kSideSpaceMargin</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="104" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae12e73878098046ae28b0d54408359f7" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kSmallTableProjectionThreshold</definition>
        <argsstring></argsstring>
        <name>kSmallTableProjectionThreshold</name>
        <initializer>= 0.35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a39b11305adc922233ab775b31d94b6bb" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kLargeTableProjectionThreshold</definition>
        <argsstring></argsstring>
        <name>kLargeTableProjectionThreshold</name>
        <initializer>= 0.45</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="109" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1adf7c67274b1cdc63e4afeb2500796de7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLargeTableRowCount</definition>
        <argsstring></argsstring>
        <name>kLargeTableRowCount</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4947294f7e711f5f1713df9de000b1b8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMinRowsInTable</definition>
        <argsstring></argsstring>
        <name>kMinRowsInTable</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="114" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1daab9134060be235b5cc1ee94aceeaf" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kRequiredFullJustifiedSpacing</definition>
        <argsstring></argsstring>
        <name>kRequiredFullJustifiedSpacing</name>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="119" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a7c23a9af9374381d1a961227ce653ea6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kAdjacentLeaderSearchPadding</definition>
        <argsstring></argsstring>
        <name>kAdjacentLeaderSearchPadding</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac6a1849ed370a22bb4a2b4a94ca1634c" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kParagraphEndingPreviousLineRatio</definition>
        <argsstring></argsstring>
        <name>kParagraphEndingPreviousLineRatio</name>
        <initializer>= 1.3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1b76b5479d00c222f8a17e22d317b770" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxParagraphEndingLeftSpaceMultiple</definition>
        <argsstring></argsstring>
        <name>kMaxParagraphEndingLeftSpaceMultiple</name>
        <initializer>= 3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a59fff4582ea32f8a8661fbc20a3ab947" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinParagraphEndingTextToWhitespaceRatio</definition>
        <argsstring></argsstring>
        <name>kMinParagraphEndingTextToWhitespaceRatio</name>
        <initializer>= 3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af950654bba3a03e1ba3f1df8177cdd73" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxXProjectionGapFactor</definition>
        <argsstring></argsstring>
        <name>kMaxXProjectionGapFactor</name>
        <initializer>= 2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="143" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a477fb9ba9844da49a285692762b117d9" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kStrokeWidthFractionalTolerance</definition>
        <argsstring></argsstring>
        <name>kStrokeWidthFractionalTolerance</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="147" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a459c450e19dcfec134e92887f41bb9ac" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kHorizontalSpacing</definition>
        <argsstring></argsstring>
        <name>kHorizontalSpacing</name>
        <initializer>= 0.30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="29" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a0420369bcc5ffea9087e2779a2dacdb6" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kVerticalSpacing</definition>
        <argsstring></argsstring>
        <name>kVerticalSpacing</name>
        <initializer>= -0.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a39a015a67ade7e0efecbb76e7b675720" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kCellSplitRowThreshold</definition>
        <argsstring></argsstring>
        <name>kCellSplitRowThreshold</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a4b621a2aed2de5bbc9f60f5a2e1050a5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kCellSplitColumnThreshold</definition>
        <argsstring></argsstring>
        <name>kCellSplitColumnThreshold</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1acc82e2db65c1e3234222f38f46ab42d3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLinedTableMinVerticalLines</definition>
        <argsstring></argsstring>
        <name>kLinedTableMinVerticalLines</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a230bf7e7a8fb6b2c2b5501baf6291743" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kLinedTableMinHorizontalLines</definition>
        <argsstring></argsstring>
        <name>kLinedTableMinHorizontalLines</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a59250c62639c9045e10bd2e0ca53148b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kRequiredColumns</definition>
        <argsstring></argsstring>
        <name>kRequiredColumns</name>
        <initializer>= 0.7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ab11424363f4f0ea43a9395a314790f90" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMarginFactor</definition>
        <argsstring></argsstring>
        <name>kMarginFactor</name>
        <initializer>= 1.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a81a11e8f02c3fb3a0bbbec62de19e1ad" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMaxRowSize</definition>
        <argsstring></argsstring>
        <name>kMaxRowSize</name>
        <initializer>= 2.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a68558ee989aac7883a39814a36f1f592" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kGoodRowNumberOfColumnsSmall[]</definition>
        <argsstring>[]</argsstring>
        <name>kGoodRowNumberOfColumnsSmall</name>
        <initializer>= { 2, 2, 2, 2, 2, 3, 3 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a7e35b09657599e52f423ee1e9de41b33" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kGoodRowNumberOfColumnsSmallSize</definition>
        <argsstring></argsstring>
        <name>kGoodRowNumberOfColumnsSmallSize</name>
        <initializer>= 
    sizeof(<ref refid="namespacetesseract_1a68558ee989aac7883a39814a36f1f592" kindref="member">kGoodRowNumberOfColumnsSmall</ref>) / sizeof(double) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a043f4bae458f1871a3a49b10917b60ad" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kGoodRowNumberOfColumnsLarge</definition>
        <argsstring></argsstring>
        <name>kGoodRowNumberOfColumnsLarge</name>
        <initializer>= 0.7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a787309c5a8b6594e5aed4adda5e15671" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinFilledArea</definition>
        <argsstring></argsstring>
        <name>kMinFilledArea</name>
        <initializer>= 0.35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablerecog.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a5e5c88d73de712626bb45049f05bf935" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kGutterMultiple</definition>
        <argsstring></argsstring>
        <name>kGutterMultiple</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ae01d1c3ecd3191b3fd9b5df6fc7329c1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kGutterToNeighbourRatio</definition>
        <argsstring></argsstring>
        <name>kGutterToNeighbourRatio</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a70fef17dce833d756ce25024339559ab" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSimilarVectorDist</definition>
        <argsstring></argsstring>
        <name>kSimilarVectorDist</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1afe209ead2031e46e5acc7e412edbb078" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kSimilarRaggedDist</definition>
        <argsstring></argsstring>
        <name>kSimilarRaggedDist</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1ac71cf6db3acc20786941d1146f15bf2b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int tesseract::kMaxFillinMultiple</definition>
        <argsstring></argsstring>
        <name>kMaxFillinMultiple</name>
        <initializer>= 11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1adde25237f36db6088af89a6a01a903df" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinGutterFraction</definition>
        <argsstring></argsstring>
        <name>kMinGutterFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1aaa71fcc94da61f06092ac41c1000092b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kLineCountReciprocal</definition>
        <argsstring></argsstring>
        <name>kLineCountReciprocal</name>
        <initializer>= 4.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a1e54ca6764ad8a50cdbc42ebe335784e" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinAlignedGutter</definition>
        <argsstring></argsstring>
        <name>kMinAlignedGutter</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1a8a2e596e8a74bfa615969413f2059244" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double tesseract::kMinRaggedGutter</definition>
        <argsstring></argsstring>
        <name>kMinRaggedGutter</name>
        <initializer>= 1.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesseract_1af634680a235b3605fbe0ff57bbdcc971" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tesseract::kAlignmentNames[]</definition>
        <argsstring>[]</argsstring>
        <name>kAlignmentNames</name>
        <initializer>= {
  &quot;Left Aligned&quot;,
  &quot;Left Ragged&quot;,
  &quot;Center&quot;,
  &quot;Right Aligned&quot;,
  &quot;Right Ragged&quot;,
  &quot;Separator&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="516" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" bodystart="516" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetesseract_1a94bf40501f379eb684323383a926162c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::CubeAPITest</definition>
        <argsstring>(Boxa *boxa_blocks, Pixa *pixa_blocks, Boxa *boxa_words, Pixa *pixa_words, const FCOORD &amp;reskew, Pix *page_pix, PAGE_RES *page_res)</argsstring>
        <name>CubeAPITest</name>
        <param>
          <type>Boxa *</type>
          <declname>boxa_blocks</declname>
        </param>
        <param>
          <type>Pixa *</type>
          <declname>pixa_blocks</declname>
        </param>
        <param>
          <type>Boxa *</type>
          <declname>boxa_words</declname>
        </param>
        <param>
          <type>Pixa *</type>
          <declname>pixa_words</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>reskew</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>page_pix</declname>
        </param>
        <param>
          <type><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
          <declname>page_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Placeholder for call to Cube and test that the input data is correct. reskew is the direction of baselines in the skewed image in normalized (cos theta, sin theta) form, so (0.866, 0.5) would represent a 30 degree anticlockwise skew. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="637" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="637" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a08f5bc34aaabdc68ad810b2f66ec4368" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::AddBoxTohOCR</definition>
        <argsstring>(const PageIterator *it, PageIteratorLevel level, STRING *hocr_str)</argsstring>
        <name>AddBoxTohOCR</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_page_iterator" kindref="compound">PageIterator</ref> *</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>hocr_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1044" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1044" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a920259f2171a834a4e379e8a6a8460c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
        <definition>TBLOB* tesseract::make_tesseract_blob</definition>
        <argsstring>(float baseline, float xheight, float descender, float ascender, bool numeric_mode, Pix *pix)</argsstring>
        <name>make_tesseract_blob</name>
        <param>
          <type>float</type>
          <declname>baseline</declname>
        </param>
        <param>
          <type>float</type>
          <declname>xheight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>descender</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ascender</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>numeric_mode</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> * from the whole pix. To be freed later with delete. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="1956" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1956" bodyend="1967"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1fa50226c92449d871c93478eb59e18e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::add_space</definition>
        <argsstring>(TESS_CHAR_IT *it)</argsstring>
        <name>add_space</name>
        <param>
          <type>TESS_CHAR_IT *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="2064" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2064" bodyend="2067"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a82bcc1c5ec63490a08916ea131ac9462" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float tesseract::rating_to_cost</definition>
        <argsstring>(float rating)</argsstring>
        <name>rating_to_cost</name>
        <param>
          <type>float</type>
          <declname>rating</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="2070" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2070" bodyend="2077"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a362c83cf5231ffc1970e4474fe208790" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::extract_result</definition>
        <argsstring>(TESS_CHAR_IT *out, PAGE_RES *page_res)</argsstring>
        <name>extract_result</name>
        <param>
          <type>TESS_CHAR_IT *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
          <declname>page_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the OCR results, costs (penalty points for uncertainty), and the bounding boxes of the characters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="2083" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2083" bodyend="2107"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af1cc734b9c92e8ff73ecff450fb2a567" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::clear_any_old_text</definition>
        <argsstring>(BLOCK_LIST *block_list)</argsstring>
        <name>clear_any_old_text</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>block_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="76" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1accbf6d555297f059d6b481ea498b41f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double tesseract::MedianXHeight</definition>
        <argsstring>(BLOCK_LIST *block_list)</argsstring>
        <name>MedianXHeight</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>block_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="182" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8aa5f869f339e978b0bbdaa1095e743b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::MakeWordChoice</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, const UNICHARSET &amp;unicharset, WERD_CHOICE *word_choice)</argsstring>
        <name>MakeWordChoice</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word_choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="241" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="241" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a40e83a9df43d1e05bbf96c4dddf88fa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double tesseract::BoxMissMetric</definition>
        <argsstring>(const TBOX &amp;box1, const TBOX &amp;box2)</argsstring>
        <name>BoxMissMetric</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box1</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="324" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="324" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa0c6b87af560d2a2cf3e21d437e90585" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::NewWordBetter</definition>
        <argsstring>(const WERD_RES &amp;word, const WERD_RES &amp;new_word)</argsstring>
        <name>NewWordBetter</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> &amp;</type>
          <declname>new_word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/control.cpp" line="736" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/control.cpp" bodystart="736" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a02d1816fb32d976876cb614d513d076e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>static BLOB_CHOICE* tesseract::FindMatchingChoice</definition>
        <argsstring>(UNICHAR_ID char_id, BLOB_CHOICE_LIST *bc_list)</argsstring>
        <name>FindMatchingChoice</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>char_id</declname>
        </param>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>bc_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/control.cpp" line="1140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/control.cpp" bodystart="1140" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a221612d54542e1831a6001587d15a331" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>static BLOB_CHOICE* tesseract::FindBestMatchingChoice</definition>
        <argsstring>(UNICHAR_ID char_id, WERD_RES *word_res)</argsstring>
        <name>FindBestMatchingChoice</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>char_id</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/control.cpp" line="1156" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/control.cpp" bodystart="1156" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afa1c37c44ab4ceedb1192ed2fb968ab0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CorrectRepcharChoices</definition>
        <argsstring>(BLOB_CHOICE *blob_choice, WERD_RES *word_res)</argsstring>
        <name>CorrectRepcharChoices</name>
        <param>
          <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
          <declname>blob_choice</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/control.cpp" line="1174" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/control.cpp" bodystart="1174" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa0ed84782a81da53efb62685caee6df4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::find_modal_font</definition>
        <argsstring>(STATS *fonts, inT16 *font_out, inT8 *font_count)</argsstring>
        <name>find_modal_font</name>
        <param>
          <type><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref> *</type>
          <declname>fonts</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref> *</type>
          <declname>font_out</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref> *</type>
          <declname>font_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>find_modal_font</para><para>Find the modal font and remove from the stats. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/control.cpp" line="1474" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/control.cpp" bodystart="1474" bodyend="1493"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a38f0b674abe3cc6908a75b0490eccf3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float tesseract::convert_prob_to_tess_certainty</definition>
        <argsstring>(float prob)</argsstring>
        <name>convert_prob_to_tess_certainty</name>
        <param>
          <type>float</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1abe832326e054f5b25a1fc79566c92742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX tesseract::char_box_to_tbox</definition>
        <argsstring>(Box *char_box, TBOX word_box, int x_offset)</argsstring>
        <name>char_box_to_tbox</name>
        <param>
          <type>Box *</type>
          <declname>char_box</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
          <declname>word_box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" bodystart="42" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a04a21522016f9da2f7f5d3a938f5abcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>static WERD_CHOICE* tesseract::create_werd_choice</definition>
        <argsstring>(CharSamp **char_samples, int num_chars, const char *str, float certainty, const UNICHARSET &amp;unicharset, CharSet *cube_char_set)</argsstring>
        <name>create_werd_choice</name>
        <param>
          <type><ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref> **</type>
          <declname>char_samples</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_chars</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainty</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_char_set" kindref="compound">CharSet</ref> *</type>
          <declname>cube_char_set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" line="151" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/cube_control.cpp" bodystart="151" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a57002f94eec9e153a2bd60e23c90330a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::SortCPByTopReverse</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>SortCPByTopReverse</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a6a4b8f26220846b5bf54db4288e8b370" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::SortCPByBottom</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>SortCPByBottom</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af26428640b0ad1f104358eb9cc89a6d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::SortCPByHeight</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>SortCPByHeight</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="74" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsTextOrEquationType</definition>
        <argsstring>(PolyBlockType type)</argsstring>
        <name>IsTextOrEquationType</name>
        <param>
          <type><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afe260b66ccf11a3f3346ba282f315c49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsLeftIndented</definition>
        <argsstring>(const EquationDetect::IndentType type)</argsstring>
        <name>IsLeftIndented</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">EquationDetect::IndentType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="95" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8a161b61eb46383ddad93473fb3d8749" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsRightIndented</definition>
        <argsstring>(const EquationDetect::IndentType type)</argsstring>
        <name>IsRightIndented</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">EquationDetect::IndentType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="100" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0ff3755ccee7d8c8dd1cb844089895bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>static Pix* tesseract::RemoveEnclosingCircle</definition>
        <argsstring>(Pix *pixs)</argsstring>
        <name>RemoveEnclosingCircle</name>
        <param>
          <type>Pix *</type>
          <declname>pixs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" bodystart="67" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a3dd7d4ecfdc21dc1cffdb27d1125b63a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::WriteDebugBackgroundImage</definition>
        <argsstring>(bool printable, Pix *pix_binary)</argsstring>
        <name>WriteDebugBackgroundImage</name>
        <param>
          <type>bool</type>
          <declname>printable</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix_binary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" line="177" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/pagesegmain.cpp" bodystart="177" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1186677428808160b31145774bff3d78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::Epsilon</definition>
        <argsstring>(int space_pix)</argsstring>
        <name>Epsilon</name>
        <param>
          <type>int</type>
          <declname>space_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a754167046052a8517b3f70466abbd9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tesseract::SimpleSwap</definition>
        <argsstring>(T &amp;a, T &amp;b)</argsstring>
        <name>SimpleSwap</name>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ad8c4b097e128a92df9f2f45fb3faf5a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::AcceptableRowArgs</definition>
        <argsstring>(int debug_level, int min_num_rows, const char *function_name, const GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end)</argsstring>
        <name>AcceptableRowArgs</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_num_rows</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function_name</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="68" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="68" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa9b0e5b01f53a01978065581e3812e78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>static STRING tesseract::StrOf</definition>
        <argsstring>(int num)</argsstring>
        <name>StrOf</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afe59f19dcdbfbadda5d234800842f3e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::PrintTable</definition>
        <argsstring>(const GenericVector&lt; GenericVector&lt; STRING &gt; &gt; &amp;rows, const STRING &amp;colsep)</argsstring>
        <name>PrintTable</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>colsep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="98" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="98" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afdbc950f37a9d5101e659df02ed190ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>STRING tesseract::RtlEmbed</definition>
        <argsstring>(const STRING &amp;word, bool rtlify)</argsstring>
        <name>RtlEmbed</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rtlify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5d8288fe00c8f96cdd55d6236ee8b2b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::PrintDetectorState</definition>
        <argsstring>(const ParagraphTheory &amp;theory, const GenericVector&lt; RowScratchRegisters &gt; &amp;rows)</argsstring>
        <name>PrintDetectorState</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> &amp;</type>
          <declname>theory</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="140" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af9921c5620245bcedc8d02b10b9d4883" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DebugDump</definition>
        <argsstring>(bool should_print, const STRING &amp;phase, const ParagraphTheory &amp;theory, const GenericVector&lt; RowScratchRegisters &gt; &amp;rows)</argsstring>
        <name>DebugDump</name>
        <param>
          <type>bool</type>
          <declname>should_print</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> &amp;</type>
          <declname>theory</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="182" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8378146d7327d4a6b76eba7230d8bc75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::PrintRowRange</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, int row_start, int row_end)</argsstring>
        <name>PrintRowRange</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="194" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="194" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a764dbdcb37bf14a8e87da5ce0050eb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsLatinLetter</definition>
        <argsstring>(int ch)</argsstring>
        <name>IsLatinLetter</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af1c486bf46d22fdcb2df90a8ba84534f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsDigitLike</definition>
        <argsstring>(int ch)</argsstring>
        <name>IsDigitLike</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="209" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a9c7b0a9082fc78893d964bb78bde0a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsOpeningPunct</definition>
        <argsstring>(int ch)</argsstring>
        <name>IsOpeningPunct</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="213" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a365f2c422d0d2608811f6c9328cc9f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::IsTerminalPunct</definition>
        <argsstring>(int ch)</argsstring>
        <name>IsTerminalPunct</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="217" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aff50e7cdb437c3cf2d38b5701c5bd894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* tesseract::SkipChars</definition>
        <argsstring>(const char *str, const char *toskip)</argsstring>
        <name>SkipChars</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>toskip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="222" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab5a218dce9dbca5f21b9baba6dd4d278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* tesseract::SkipChars</definition>
        <argsstring>(const char *str, bool(*skip)(int))</argsstring>
        <name>SkipChars</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool(*)(int)</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="227" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4165f0ede8e358d9e5e191bf45336888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* tesseract::SkipOne</definition>
        <argsstring>(const char *str, const char *toskip)</argsstring>
        <name>SkipOne</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>toskip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="232" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a70accd766d7d382d35fbca275fb694d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::LikelyListNumeral</definition>
        <argsstring>(const STRING &amp;word)</argsstring>
        <name>LikelyListNumeral</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="240" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="240" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae34676564aa0eeb84e86a5855a9065df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::LikelyListMark</definition>
        <argsstring>(const STRING &amp;word)</argsstring>
        <name>LikelyListMark</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="274" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4b153a6c7f9116c12cffe35964cf6ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::AsciiLikelyListItem</definition>
        <argsstring>(const STRING &amp;word)</argsstring>
        <name>AsciiLikelyListItem</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="279" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1abe22d992db19f44c79906b66dc846eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::UnicodeFor</definition>
        <argsstring>(const UNICHARSET *u, const WERD_CHOICE *werd, int pos)</argsstring>
        <name>UnicodeFor</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>werd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="286" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="286" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4dfe7d50410afc3b609037cde09bc809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::LikelyListMarkUnicode</definition>
        <argsstring>(int ch)</argsstring>
        <name>LikelyListMarkUnicode</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="340" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="340" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aff02604454bbea69eee7715140eddff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::UniLikelyListItem</definition>
        <argsstring>(const UNICHARSET *u, const WERD_CHOICE *werd)</argsstring>
        <name>UniLikelyListItem</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>werd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="369" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="369" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a04498cd763cc4a381f1b7c2d0e17f020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::LeftWordAttributes</definition>
        <argsstring>(const UNICHARSET *unicharset, const WERD_CHOICE *werd, const STRING &amp;utf8, bool *is_list, bool *starts_idea, bool *ends_idea)</argsstring>
        <name>LeftWordAttributes</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>werd</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>is_list</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>starts_idea</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ends_idea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="406" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="406" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa0bc43fa3c52639420ed7eeb1093aa24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::RightWordAttributes</definition>
        <argsstring>(const UNICHARSET *unicharset, const WERD_CHOICE *werd, const STRING &amp;utf8, bool *is_list, bool *starts_idea, bool *ends_idea)</argsstring>
        <name>RightWordAttributes</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>werd</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>is_list</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>starts_idea</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ends_idea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="453" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="453" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a53eddb3d002b356e42971ce60959d3e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::ClosestCluster</definition>
        <argsstring>(const GenericVector&lt; Cluster &gt; &amp;clusters, int value)</argsstring>
        <name>ClosestCluster</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_cluster" kindref="compound">Cluster</ref> &gt; &amp;</type>
          <declname>clusters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="677" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="677" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a238f021738264889994f28dbc63477b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::CalculateTabStops</definition>
        <argsstring>(GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, int tolerance, GenericVector&lt; Cluster &gt; *left_tabs, GenericVector&lt; Cluster &gt; *right_tabs)</argsstring>
        <name>CalculateTabStops</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_cluster" kindref="compound">Cluster</ref> &gt; *</type>
          <declname>left_tabs</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_cluster" kindref="compound">Cluster</ref> &gt; *</type>
          <declname>right_tabs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="703" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="703" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a785f377507993ae13ab4cbc7ebc1004b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::MarkRowsWithModel</definition>
        <argsstring>(GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, const ParagraphModel *model, bool ltr, int eop_threshold)</argsstring>
        <name>MarkRowsWithModel</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ltr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eop_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="763" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="763" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ad5543edb48f0545cc79e6a0cc2f9d913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::GeometricClassifyThreeTabStopTextBlock</definition>
        <argsstring>(int debug_level, GeometricClassifierState &amp;s, ParagraphTheory *theory)</argsstring>
        <name>GeometricClassifyThreeTabStopTextBlock</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_geometric_classifier_state" kindref="compound">GeometricClassifierState</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="936" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="936" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8d91a40c49289ead57042892913dd194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::GeometricClassify</definition>
        <argsstring>(int debug_level, GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, ParagraphTheory *theory)</argsstring>
        <name>GeometricClassify</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1028" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1028" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8f44dde2641dd1047debf38c4429dc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::ValidFirstLine</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; *rows, int row, const ParagraphModel *model)</argsstring>
        <name>ValidFirstLine</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1215" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1215" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7933d5b144ff81c13320bfb6f32e0264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::ValidBodyLine</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; *rows, int row, const ParagraphModel *model)</argsstring>
        <name>ValidBodyLine</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1226" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1226" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2327e0fae9f7527a805d6cb2ac9bfc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::CrownCompatible</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; *rows, int a, int b, const ParagraphModel *model)</argsstring>
        <name>CrownCompatible</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1237" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1237" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aeddb85e711cd9a3ae5665769f7219184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::DiscardUnusedModels</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, ParagraphTheory *theory)</argsstring>
        <name>DiscardUnusedModels</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1404" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1404" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af0e45d1ea104c74b336a6ecd6ae917e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::DowngradeWeakestToCrowns</definition>
        <argsstring>(int debug_level, ParagraphTheory *theory, GenericVector&lt; RowScratchRegisters &gt; *rows)</argsstring>
        <name>DowngradeWeakestToCrowns</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1437" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1437" bodyend="1488"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8f083a56b3a7be7431cea88c86f49216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::RecomputeMarginsAndClearHypotheses</definition>
        <argsstring>(GenericVector&lt; RowScratchRegisters &gt; *rows, int start, int end, int percentile)</argsstring>
        <name>RecomputeMarginsAndClearHypotheses</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1507" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1507" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1adf0128a0f8d13a8183820ce034d56122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::InterwordSpace</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, int row_start, int row_end)</argsstring>
        <name>InterwordSpace</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1547" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1547" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5d73136a6cc816e7f51fcfbfe99d52c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::FirstWordWouldHaveFit</definition>
        <argsstring>(const RowScratchRegisters &amp;before, const RowScratchRegisters &amp;after, tesseract::ParagraphJustification justification)</argsstring>
        <name>FirstWordWouldHaveFit</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>before</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>after</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref></type>
          <declname>justification</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1568" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1568" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a95092769d51f59c291291e7397895a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::FirstWordWouldHaveFit</definition>
        <argsstring>(const RowScratchRegisters &amp;before, const RowScratchRegisters &amp;after)</argsstring>
        <name>FirstWordWouldHaveFit</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>before</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1593" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1593" bodyend="1606"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7acae39665867aca06e6292488b4abba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TextSupportsBreak</definition>
        <argsstring>(const RowScratchRegisters &amp;before, const RowScratchRegisters &amp;after)</argsstring>
        <name>TextSupportsBreak</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>before</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1608" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1608" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac154ce339833f35931ef5b2e57d47a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::LikelyParagraphStart</definition>
        <argsstring>(const RowScratchRegisters &amp;before, const RowScratchRegisters &amp;after)</argsstring>
        <name>LikelyParagraphStart</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>before</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1619" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1619" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1e593bbbff46d043b16a043f6b379ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::LikelyParagraphStart</definition>
        <argsstring>(const RowScratchRegisters &amp;before, const RowScratchRegisters &amp;after, tesseract::ParagraphJustification j)</argsstring>
        <name>LikelyParagraphStart</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>before</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &amp;</type>
          <declname>after</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1626" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1626" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a143a6aab4440faae4d6997cb40681193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref></type>
        <definition>ParagraphModel tesseract::InternalParagraphModelByOutline</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; *rows, int start, int end, int tolerance, bool *consistent)</argsstring>
        <name>InternalParagraphModelByOutline</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>consistent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1639" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1639" bodyend="1734"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aad4f3926ebb6c2679e4c3ccb25fb5591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref></type>
        <definition>ParagraphModel tesseract::ParagraphModelByOutline</definition>
        <argsstring>(int debug_level, const GenericVector&lt; RowScratchRegisters &gt; *rows, int start, int end, int tolerance)</argsstring>
        <name>ParagraphModelByOutline</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1740" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1740" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac1812316831faad241ffadb840e9a21e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::RowsFitModel</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; *rows, int start, int end, const ParagraphModel *model)</argsstring>
        <name>RowsFitModel</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1755" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1755" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab9e189e88fbacb1c003b980c6c819596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::MarkStrongEvidence</definition>
        <argsstring>(GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end)</argsstring>
        <name>MarkStrongEvidence</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1777" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1777" bodyend="1842"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0be3347642e85b32982fce55d5925285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::ModelStrongEvidence</definition>
        <argsstring>(int debug_level, GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, bool allow_flush_models, ParagraphTheory *theory)</argsstring>
        <name>ModelStrongEvidence</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_flush_models</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1847" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1847" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a630625afbbf53827da300e0bdbab1f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrongEvidenceClassify</definition>
        <argsstring>(int debug_level, GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, ParagraphTheory *theory)</argsstring>
        <name>StrongEvidenceClassify</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1942" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1942" bodyend="1970"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae3e3ab620487f1634d3e7e5c57484603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::SeparateSimpleLeaderLines</definition>
        <argsstring>(GenericVector&lt; RowScratchRegisters &gt; *rows, int row_start, int row_end, ParagraphTheory *theory)</argsstring>
        <name>SeparateSimpleLeaderLines</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1972" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1972" bodyend="1984"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af5043cb8d50067acfa5f0601fe767192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::ConvertHypothesizedModelRunsToParagraphs</definition>
        <argsstring>(int debug_level, const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, GenericVector&lt; PARA * &gt; *row_owners, ParagraphTheory *theory)</argsstring>
        <name>ConvertHypothesizedModelRunsToParagraphs</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="struct_p_a_r_a" kindref="compound">PARA</ref> * &gt; *</type>
          <declname>row_owners</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref> *</type>
          <declname>theory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="1988" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="1988" bodyend="2067"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0c73d33c15c6d44491a952b0362d7e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::RowIsStranded</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, int row)</argsstring>
        <name>RowIsStranded</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2086" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2086" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a83bb74ffbdbc98a7c0c013872acfa2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::LeftoverSegments</definition>
        <argsstring>(const GenericVector&lt; RowScratchRegisters &gt; &amp;rows, GenericVector&lt; Interval &gt; *to_fix, int row_start, int row_end)</argsstring>
        <name>LeftoverSegments</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref> &gt; &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_interval" kindref="compound">Interval</ref> &gt; *</type>
          <declname>to_fix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2128" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2128" bodyend="2174"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a9cafdf34c1f6a37446d3e656da69afdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::CanonicalizeDetectionResults</definition>
        <argsstring>(GenericVector&lt; PARA * &gt; *row_owners, PARA_LIST *paragraphs)</argsstring>
        <name>CanonicalizeDetectionResults</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="struct_p_a_r_a" kindref="compound">PARA</ref> * &gt; *</type>
          <declname>row_owners</declname>
        </param>
        <param>
          <type>PARA_LIST *</type>
          <declname>paragraphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2179" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2179" bodyend="2199"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac3edfcbb6042dffc461c6e5737c72643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::DetectParagraphs</definition>
        <argsstring>(int debug_level, GenericVector&lt; RowInfo &gt; *row_infos, GenericVector&lt; PARA * &gt; *row_owners, PARA_LIST *paragraphs, GenericVector&lt; ParagraphModel * &gt; *models)</argsstring>
        <name>DetectParagraphs</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_row_info" kindref="compound">RowInfo</ref> &gt; *</type>
          <declname>row_infos</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="struct_p_a_r_a" kindref="compound">PARA</ref> * &gt; *</type>
          <declname>row_owners</declname>
        </param>
        <param>
          <type>PARA_LIST *</type>
          <declname>paragraphs</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> * &gt; *</type>
          <declname>models</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2211" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2211" bodyend="2301"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1e7cbf676cb5f8ddf355f3c5fe77530e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::InitializeTextAndBoxesPreRecognition</definition>
        <argsstring>(const MutableIterator &amp;it, RowInfo *info)</argsstring>
        <name>InitializeTextAndBoxesPreRecognition</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_mutable_iterator" kindref="compound">MutableIterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_row_info" kindref="compound">RowInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2305" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2305" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae3a3364357e7b5531c9e77c579ea79f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::InitializeRowInfo</definition>
        <argsstring>(bool after_recognition, const MutableIterator &amp;it, RowInfo *info)</argsstring>
        <name>InitializeRowInfo</name>
        <param>
          <type>bool</type>
          <declname>after_recognition</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_mutable_iterator" kindref="compound">MutableIterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_row_info" kindref="compound">RowInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2356" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2356" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7fb9da5e21dab182f4ac89730a421443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::DetectParagraphs</definition>
        <argsstring>(int debug_level, bool after_text_recognition, const MutableIterator *block_start, GenericVector&lt; ParagraphModel * &gt; *models)</argsstring>
        <name>DetectParagraphs</name>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>after_text_recognition</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_mutable_iterator" kindref="compound">MutableIterator</ref> *</type>
          <declname>block_start</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> * &gt; *</type>
          <declname>models</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" line="2454" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs.cpp" bodystart="2454" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2f0e8f8921e73010316eaf366ec45852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrongModel</definition>
        <argsstring>(const ParagraphModel *model)</argsstring>
        <name>StrongModel</name>
        <param>
          <type>const <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ad7ffe56cad38dd6067797106e3d284d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::read_t</definition>
        <argsstring>(PAGE_RES_IT *page_res_it, TBOX *tbox)</argsstring>
        <name>read_t</name>
        <param>
          <type><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref> *</type>
          <declname>page_res_it</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>tbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/recogtraining.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/recogtraining.cpp" bodystart="58" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab3bd5aa2386a5fc9a72ba0073a2eef80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::PrintScriptDirs</definition>
        <argsstring>(const GenericVector&lt; StrongScriptDirection &gt; &amp;dirs)</argsstring>
        <name>PrintScriptDirs</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dba" kindref="member">StrongScriptDirection</ref> &gt; &amp;</type>
          <declname>dirs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/resultiterator.cpp" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/resultiterator.cpp" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1acbc8d48933470cea6cc06a88b1538db1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::IsStrInList</definition>
        <argsstring>(const STRING &amp;str, const GenericVector&lt; STRING &gt; &amp;str_list)</argsstring>
        <name>IsStrInList</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; &amp;</type>
          <declname>str_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" line="220" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" bodystart="220" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aca59e3cc5ba1f57a77d2c75ce222d95d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CollectFonts</definition>
        <argsstring>(const UnicityTable&lt; FontInfo &gt; &amp;new_fonts, UnicityTable&lt; FontInfo &gt; *all_fonts)</argsstring>
        <name>CollectFonts</name>
        <param>
          <type>const <ref refid="class_unicity_table" kindref="compound">UnicityTable</ref>&lt; <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &gt; &amp;</type>
          <declname>new_fonts</declname>
        </param>
        <param>
          <type><ref refid="class_unicity_table" kindref="compound">UnicityTable</ref>&lt; <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &gt; *</type>
          <declname>all_fonts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" line="380" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" bodystart="380" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac80886c1af8dabb005326b8321d6ce9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::AssignIds</definition>
        <argsstring>(const UnicityTable&lt; FontInfo &gt; &amp;all_fonts, UnicityTable&lt; FontInfo &gt; *lang_fonts)</argsstring>
        <name>AssignIds</name>
        <param>
          <type>const <ref refid="class_unicity_table" kindref="compound">UnicityTable</ref>&lt; <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &gt; &amp;</type>
          <declname>all_fonts</declname>
        </param>
        <param>
          <type><ref refid="class_unicity_table" kindref="compound">UnicityTable</ref>&lt; <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &gt; *</type>
          <declname>lang_fonts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" line="389" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/tessedit.cpp" bodystart="389" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0ea591521432f65d5384df8250f90c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD tesseract::ComputeEndFromGradient</definition>
        <argsstring>(const ICOORD &amp;start, double m)</argsstring>
        <name>ComputeEndFromGradient</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" bodystart="124" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a612aa6e0b13219b96270b9644ffe3e78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::CompareInts</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>CompareInts</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/detlinefit.cpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a050fbf6fe3d3cb63b62efbff771495ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::CompareFontInfo</definition>
        <argsstring>(const FontInfo &amp;fi1, const FontInfo &amp;fi2)</argsstring>
        <name>CompareFontInfo</name>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &amp;</type>
          <declname>fi1</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &amp;</type>
          <declname>fi2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="25" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2d183ded4bf706476f186ff0b2d14ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::CompareFontSet</definition>
        <argsstring>(const FontSet &amp;fs1, const FontSet &amp;fs2)</argsstring>
        <name>CompareFontSet</name>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref> &amp;</type>
          <declname>fs1</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref> &amp;</type>
          <declname>fs2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1eb40be391904d34559ee7fc06b321f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::FontInfoDeleteCallback</definition>
        <argsstring>(FontInfo f)</argsstring>
        <name>FontInfoDeleteCallback</name>
        <param>
          <type><ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab0d03c86610f630327041d46a069fa94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::FontSetDeleteCallback</definition>
        <argsstring>(FontSet fs)</argsstring>
        <name>FontSetDeleteCallback</name>
        <param>
          <type><ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref></type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4a8355da6e96695bb003d778da05a95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::read_info</definition>
        <argsstring>(FILE *f, FontInfo *fi, bool swap)</argsstring>
        <name>read_info</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> *</type>
          <declname>fi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="57" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a39563e2e9bd26b96504e53ae2c9defcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::write_info</definition>
        <argsstring>(FILE *f, const FontInfo &amp;fi)</argsstring>
        <name>write_info</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &amp;</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8643fbecc8aa5b606e53a534ad14d491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::read_spacing_info</definition>
        <argsstring>(FILE *f, FontInfo *fi, bool swap)</argsstring>
        <name>read_spacing_info</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> *</type>
          <declname>fi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="80" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="80" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a48b60e911578a0285e73738e81181abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::write_spacing_info</definition>
        <argsstring>(FILE *f, const FontInfo &amp;fi)</argsstring>
        <name>write_spacing_info</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_info" kindref="compound">FontInfo</ref> &amp;</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="112" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="112" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a718a9f9121464dbaa6ef73c5f9dc6d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::read_set</definition>
        <argsstring>(FILE *f, FontSet *fs, bool swap)</argsstring>
        <name>read_set</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="140" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a385582f69442d7d9588e2983c768cec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::write_set</definition>
        <argsstring>(FILE *f, const FontSet &amp;fs)</argsstring>
        <name>write_set</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref> &amp;</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" line="153" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/fontinfo.cpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ace7c5fa55465a6bd91d0d374d3f3da5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::OtsuThreshold</definition>
        <argsstring>(const unsigned char *imagedata, int bytes_per_pixel, int bytes_per_line, int left, int top, int width, int height, int **thresholds, int **hi_values)</argsstring>
        <name>OtsuThreshold</name>
        <param>
          <type>const unsigned char *</type>
          <declname>imagedata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_pixel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>thresholds</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>hi_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" bodystart="32" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4c20d7e4565650a02f77d21a596e96a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::HistogramRect</definition>
        <argsstring>(const unsigned char *imagedata, int bytes_per_pixel, int bytes_per_line, int left, int top, int width, int height, int *histogram)</argsstring>
        <name>HistogramRect</name>
        <param>
          <type>const unsigned char *</type>
          <declname>imagedata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_pixel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>histogram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" line="93" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" bodystart="93" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa38847c682089329f7cec83a5bcb714b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::OtsuStats</definition>
        <argsstring>(const int *histogram, int *H_out, int *omega0_out)</argsstring>
        <name>OtsuStats</name>
        <param>
          <type>const int *</type>
          <declname>histogram</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>H_out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>omega0_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" line="113" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/otsuthr.cpp" bodystart="113" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a56137589e7af62a866a1b55acac266e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::AmbigSpec_zapper</definition>
        <argsstring>(ELIST_LINK *link)</argsstring>
        <name>AmbigSpec_zapper</name>
        <param>
          <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/ambigs.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/ambigs.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a212c25895ae2269d47fab33e233b408f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool tesseract::cmp_eq</definition>
        <argsstring>(T const &amp;t1, T const &amp;t2)</argsstring>
        <name>cmp_eq</name>
        <param>
          <type>T const &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" line="285" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a80ac7a7c78e68d061ee45ae3e2cff93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::sort_cmp</definition>
        <argsstring>(const void *t1, const void *t2)</argsstring>
        <name>sort_cmp</name>
        <param>
          <type>const void *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" line="294" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" bodystart="294" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af2ffd2bbd2b0d128ead8c9a4ff2535bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::sort_ptr_cmp</definition>
        <argsstring>(const void *t1, const void *t2)</argsstring>
        <name>sort_ptr_cmp</name>
        <param>
          <type>const void *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" line="311" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/genericvector.h" bodystart="311" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a50fae3caed4dccef6a71ac7e7aa9d63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::ClearFeatureSpaceWindow</definition>
        <argsstring>(NORM_METHOD norm_method, ScrollView *window)</argsstring>
        <name>ClearFeatureSpaceWindow</name>
        <param>
          <type><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865" kindref="member">NORM_METHOD</ref></type>
          <declname>norm_method</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1132" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1132" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac5fd1952b9a1b00e23b0dc13a6591f55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::AddNearFeatures</definition>
        <argsstring>(const IntFeatureMap &amp;feature_map, int f, int levels, GenericVector&lt; int &gt; *good_features)</argsstring>
        <name>AddNearFeatures</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref> &amp;</type>
          <declname>feature_map</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; int &gt; *</type>
          <declname>good_features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="383" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="383" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2cf8d410ec4395e1a027523ec72074aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>static Pix* tesseract::DebugSample</definition>
        <argsstring>(const UNICHARSET &amp;unicharset, TrainingSample *sample)</argsstring>
        <name>DebugSample</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref> *</type>
          <declname>sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" line="586" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp" bodystart="586" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2b39555188390212bae2294b5ed08f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE* tesseract::get_best_delete_other</definition>
        <argsstring>(WERD_CHOICE *choice1, WERD_CHOICE *choice2)</argsstring>
        <name>get_best_delete_other</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>choice1</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>choice2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get_best_delete_other</para><para>Returns the best of two choices and deletes the other (worse) choice. A choice is better if it has a non-empty string and has a lower rating than the other choice. If the ratings are the same, choice2 is preferred over choice1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="74" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a64ff2ce4da7827279b5ac0aaea905e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>BLOB_CHOICE* tesseract::get_nth_choice</definition>
        <argsstring>(BLOB_CHOICE_LIST *blob_list, int n)</argsstring>
        <name>get_nth_choice</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>blob_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the n-th choice in the given blob_list (top-K choices). If n &gt; K, the last choice is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab822bbc3c0f362dc6b70f7d5363a5e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
        <definition>UNICHAR_ID tesseract::get_top_choice_uid</definition>
        <argsstring>(BLOB_CHOICE_LIST *blob_list)</argsstring>
        <name>get_top_choice_uid</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>blob_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the top choice char id. A helper function to make code cleaner. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1d350f26199c9116aa8b3faa7cd64cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::find_choice_by_uid</definition>
        <argsstring>(BLOB_CHOICE_LIST *blob_list, UNICHAR_ID target_uid)</argsstring>
        <name>find_choice_by_uid</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>blob_list</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>target_uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the rank (starting at 0) of a given unichar ID in the char choice list, or -1 if not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a17fb104bbf4cd7af5cc91d97421ece8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE* tesseract::get_choice_from_posstr</definition>
        <argsstring>(const UNICHARSET *unicharset, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int start_pos, const char *pos_str, float *certainties)</argsstring>
        <name>get_choice_from_posstr</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pos_str</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>certainties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> formed by taking the specified position (nth choice) string from char_choices starting at the given position. For example, if start_pos=2, pos_str=&quot;0121&quot; will form a word using the 1st choice of char 3, 2nd choice of char 4, 3rd choice of char 5, 2nd choice of char 6. If n &gt; number of choice, the closest (last) one is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="129" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ad724fdc2e32c233ba731fed5237e94d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::get_posstr_from_choice</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, WERD_CHOICE *word_choice, int start_pos, char *pos_str)</argsstring>
        <name>get_posstr_from_choice</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word_choice</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_pos</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pos_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given a <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>, find the corresponding position string from char_choices. Pos_str must have been allocated already. This is the reverse of get_choice_from_posstr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="161" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="161" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0e8ea78ad7c9450d129344eb7480b31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>BLOB_CHOICE* tesseract::find_choice_by_type</definition>
        <argsstring>(BLOB_CHOICE_LIST *blob_choices, char target_type, const UNICHARSET &amp;unicharset)</argsstring>
        <name>find_choice_by_type</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>blob_choices</declname>
        </param>
        <param>
          <type>char</type>
          <declname>target_type</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through all the character choices (for a single blob) and return the first that matches the given type, which is one of &apos;aA0px*&apos;, for lower, upper, digit, punctuation, other, and &apos;any&apos;, respectively. If not match is found, a NULL is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="181" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="181" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aac150a471549dd71ea575fa2932493aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>BLOB_CHOICE* tesseract::find_choice_by_script</definition>
        <argsstring>(BLOB_CHOICE_LIST *blob_choices, int target_sid, int backup_sid, int secondary_sid)</argsstring>
        <name>find_choice_by_script</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>blob_choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>target_sid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backup_sid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>secondary_sid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate through all the character choices (for a single blob) and return the first that matches the target script ID. If backup_sid is not 0, then a match on either the target or backup sid is allowed. Note that there is no preference between a target or backup sid. To search for another sid only if no target_sid matched, use secondary_sid. So for example, to find first Han or Common char choice, do find_choice_by_script(cchoice, han_sid, common_sid, 0); To find first Han choice, but allow Common if none is found, do find_choice_by_script(cchoice, han_sid, 0, common_sid); </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/permute.cpp" line="206" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="206" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a92faad0b39ae986309084cf5afd393de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::AtLeast2LineCrossings</definition>
        <argsstring>(BLOBNBOX_CLIST *blobs)</argsstring>
        <name>AtLeast2LineCrossings</name>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" line="229" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/alignedblob.cpp" bodystart="229" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4b8ee8e8f4bb2a493ce4128db3bd9bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix* tesseract::GridReducedPix</definition>
        <argsstring>(const TBOX &amp;box, int gridsize, ICOORD bleft, int *left, int *bottom)</argsstring>
        <name>GridReducedPix</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gridsize</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>bleft</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" line="212" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" bodystart="212" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a904ab4d9c9e49e83c5d3800d57d433cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix * tesseract::TraceOutlineOnReducedPix</definition>
        <argsstring>(C_OUTLINE *outline, int gridsize, ICOORD bleft, int *left, int *bottom)</argsstring>
        <name>TraceOutlineOnReducedPix</name>
        <param>
          <type><ref refid="class_c___o_u_t_l_i_n_e" kindref="compound">C_OUTLINE</ref> *</type>
          <declname>outline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gridsize</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>bleft</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" line="232" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" bodystart="232" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a6cee1dea0a3fdece76728ad65ab48563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix * tesseract::TraceBlockOnReducedPix</definition>
        <argsstring>(BLOCK *block, int gridsize, ICOORD bleft, int *left, int *bottom)</argsstring>
        <name>TraceBlockOnReducedPix</name>
        <param>
          <type><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gridsize</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>bleft</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" line="258" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.cpp" bodystart="258" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a78a7f55303493ead36192ae0c6aaaf87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BBC</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::SortByBoxLeft</definition>
        <argsstring>(const void *void1, const void *void2)</argsstring>
        <name>SortByBoxLeft</name>
        <param>
          <type>const void *</type>
          <declname>void1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>void2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.h" line="369" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.h" bodystart="369" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afa6a2fa0337896bda9eebeaa226b2da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BBC</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::SortRightToLeft</definition>
        <argsstring>(const void *void1, const void *void2)</argsstring>
        <name>SortRightToLeft</name>
        <param>
          <type>const void *</type>
          <declname>void1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>void2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.h" line="387" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.h" bodystart="387" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a531d67167395e03fae5373a3b45539c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BBC</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::SortByBoxBottom</definition>
        <argsstring>(const void *void1, const void *void2)</argsstring>
        <name>SortByBoxBottom</name>
        <param>
          <type>const void *</type>
          <declname>void1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>void2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/bbgrid.h" line="405" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/bbgrid.h" bodystart="405" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab5fc673f7fceccc739893b9463393309" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>static TBOX tesseract::AttemptBoxExpansion</definition>
        <argsstring>(const TBOX &amp;box, const IntGrid &amp;noise_density, int pad)</argsstring>
        <name>AttemptBoxExpansion</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_int_grid" kindref="compound">IntGrid</ref> &amp;</type>
          <declname>noise_density</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" line="204" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/ccnontextdetect.cpp" bodystart="204" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_initial_partitions, false,&quot;Show partition bounds&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_initial_partitions</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show partition bounds&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8a0dbd587ba96be43c330425cd3d8596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_reject_blobs, false,&quot;Show blobs rejected as noise&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_reject_blobs</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show blobs rejected as noise&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a203119da6300ca7502a76b8eb15ea27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::INT_VAR</definition>
        <argsstring>(textord_tabfind_show_partitions, 0,&quot;Show partition bounds, waiting if &gt;1&quot;)</argsstring>
        <name>INT_VAR</name>
        <param>
          <type>textord_tabfind_show_partitions</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Show partition</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>waiting</type>
          <declname>if</declname>
        </param>
        <param>
          <type>1&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a40c52b3f5bbda8286a3746d5083026f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_columns, false,&quot;Show column bounds&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_columns</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show column bounds&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a86929399f682b9b8984e6a4ec081e938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_blocks, false,&quot;Show final block bounds&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_blocks</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show final block bounds&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac001517af2a976f8b1b6f2e982975dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_find_tables, true,&quot;run table detection&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_find_tables</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;run table detection&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a39231b56eca75048837f9b0a4640d520" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::ReleaseAllBlobsAndDeleteUnused</definition>
        <argsstring>(BLOBNBOX_LIST *blobs)</argsstring>
        <name>ReleaseAllBlobsAndDeleteUnused</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="928" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="928" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae9568a6a158abfd06c6b6fd19ee6ac85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>static TBOX tesseract::BoxFromHLine</definition>
        <argsstring>(const TabVector *hline)</argsstring>
        <name>BoxFromHLine</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_tab_vector" kindref="compound">TabVector</ref> *</type>
          <declname>hline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="1193" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="1193" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a766dcbcaea1ca8d0a33878f60e7f3e3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::ReflectBlobList</definition>
        <argsstring>(BLOBNBOX_LIST *bblobs)</argsstring>
        <name>ReflectBlobList</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>bblobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="1446" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="1446" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a9d921dd7d9481b18df4f44c69c8474e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::RotateAndExplodeBlobList</definition>
        <argsstring>(const FCOORD &amp;blob_rotation, BLOBNBOX_LIST *bblobs, STATS *widths, STATS *heights)</argsstring>
        <name>RotateAndExplodeBlobList</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>blob_rotation</declname>
        </param>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>bblobs</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref> *</type>
          <declname>widths</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref> *</type>
          <declname>heights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp" line="1475" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colfind.cpp" bodystart="1475" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1abe96b7d876c210a3f49f2eff09694f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR_H</definition>
        <argsstring>(textord_tabfind_find_tables, false,&quot;run table detection&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>textord_tabfind_find_tables</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;run table detection&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colfind.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a69e4fdf462f4970119833cb3d425f65f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::ClipCoord</definition>
        <argsstring>(const ICOORD &amp;bleft, const ICOORD &amp;tright, ICOORD *pos)</argsstring>
        <name>ClipCoord</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>bleft</declname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>tright</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="1513" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="1513" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa447b89fe26829a0abcc1b16a7f179a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
        <definition>static TO_BLOCK* tesseract::MoveBlobsToBlock</definition>
        <argsstring>(bool vertical_text, int line_spacing, BLOCK *block, ColPartition_LIST *block_parts, ColPartition_LIST *used_parts)</argsstring>
        <name>MoveBlobsToBlock</name>
        <param>
          <type>bool</type>
          <declname>vertical_text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_spacing</declname>
        </param>
        <param>
          <type><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>block_parts</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>used_parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="1528" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="1528" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a45e5baac48bfc9a0494605c96a80320c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::MedianSpacing</definition>
        <argsstring>(int page_height, ColPartition_IT it)</argsstring>
        <name>MedianSpacing</name>
        <param>
          <type>int</type>
          <declname>page_height</declname>
        </param>
        <param>
          <type>ColPartition_IT</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="2133" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="2133" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7cd4b87303a2cb2a8231474c9af9421c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::UpdateLeftMargin</definition>
        <argsstring>(const ColPartition &amp;part, int *margin_left, int *margin_right)</argsstring>
        <name>UpdateLeftMargin</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>margin_left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>margin_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="2382" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="2382" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae4da59f421f061137c590cf73548f08b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::UpdateRightMargin</definition>
        <argsstring>(const ColPartition &amp;part, int *margin_left, int *margin_right)</argsstring>
        <name>UpdateRightMargin</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>margin_left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>margin_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" line="2468" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartition.cpp" bodystart="2468" bodyend="2486"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a50bb8a7d79381a2bb1c2c51c2a4c79a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_color_fit, false,&quot;Show stroke widths&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_color_fit</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show stroke widths&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a3c3e581574241a07c2367d2587acb745" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::OKMergeCandidate</definition>
        <argsstring>(const ColPartition *part, const ColPartition *candidate, bool debug)</argsstring>
        <name>OKMergeCandidate</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="191" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="191" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7de8be0109a47e2d614156c20dc5248f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::IncreaseInOverlap</definition>
        <argsstring>(const ColPartition *merge1, const ColPartition *merge2, int ok_overlap, ColPartition_CLIST *parts)</argsstring>
        <name>IncreaseInOverlap</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>merge1</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>merge2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ok_overlap</declname>
        </param>
        <param>
          <type>ColPartition_CLIST *</type>
          <declname>parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="239" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="239" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a9907d111aa361e53ddb9d6d4ad15117b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::TestCompatibleCandidates</definition>
        <argsstring>(const ColPartition &amp;part, bool debug, ColPartition_CLIST *candidates)</argsstring>
        <name>TestCompatibleCandidates</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>ColPartition_CLIST *</type>
          <declname>candidates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="298" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="298" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5d8cd9a9f15646c27f70dbe716da1889" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::RemoveBadBox</definition>
        <argsstring>(BLOBNBOX *box, ColPartition *part, ColPartition_LIST *part_list)</argsstring>
        <name>RemoveBadBox</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="475" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="475" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8d79ba1d794136ec02de9db0ba19befd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::ComputeSearchBoxAndScaling</definition>
        <argsstring>(BlobNeighbourDir direction, const TBOX &amp;part_box, int min_padding, TBOX *search_box, ICOORD *dist_scaling)</argsstring>
        <name>ComputeSearchBoxAndScaling</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>part_box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_padding</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>search_box</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> *</type>
          <declname>dist_scaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" line="1457" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/colpartitiongrid.cpp" bodystart="1457" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2d19473332c23c40b8f83d4b6b546d86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::HScanForEdge</definition>
        <argsstring>(uinT32 *data, int wpl, int x_start, int x_end, int min_count, int mid_width, int max_count, int y_end, int y_step, int *y_start)</argsstring>
        <name>HScanForEdge</name>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wpl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mid_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_step</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="178" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="178" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aeabc7663af56d08d3c2ba8103db2bf58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::VScanForEdge</definition>
        <argsstring>(uinT32 *data, int wpl, int y_start, int y_end, int min_count, int mid_width, int max_count, int x_end, int x_step, int *x_start)</argsstring>
        <name>VScanForEdge</name>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wpl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mid_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_step</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="210" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="210" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2ebc3f8b432edb6ba30e87c4330d40e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::AttemptToShrinkBox</definition>
        <argsstring>(const FCOORD &amp;rotation, const FCOORD &amp;rerotation, const TBOX &amp;im_box, Pix *pix, TBOX *slice)</argsstring>
        <name>AttemptToShrinkBox</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="597" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="597" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a094f17e1cf511dede6d6f5f10ec93f6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CutChunkFromParts</definition>
        <argsstring>(const TBOX &amp;box, const TBOX &amp;im_box, const FCOORD &amp;rotation, const FCOORD &amp;rerotation, Pix *pix, ColPartition_LIST *part_list)</argsstring>
        <name>CutChunkFromParts</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="642" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="642" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a635b76270af5fc7571269e5503d49025" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DivideImageIntoParts</definition>
        <argsstring>(const TBOX &amp;im_box, const FCOORD &amp;rotation, const FCOORD &amp;rerotation, Pix *pix, ColPartitionGridSearch *rectsearch, ColPartition_LIST *part_list)</argsstring>
        <name>DivideImageIntoParts</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref> *</type>
          <declname>rectsearch</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="725" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="725" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a49f8c76650f7fcb89d3bcf220733ac83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::ExpandImageLeft</definition>
        <argsstring>(const TBOX &amp;box, int left_limit, ColPartitionGrid *part_grid)</argsstring>
        <name>ExpandImageLeft</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left_limit</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="775" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="775" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5c819d6e5bc86cc5ff4498f09f5f06a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::ExpandImageRight</definition>
        <argsstring>(const TBOX &amp;box, int right_limit, ColPartitionGrid *part_grid)</argsstring>
        <name>ExpandImageRight</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right_limit</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="811" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="811" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af18b72277c4c7429c53ad17d95bb7e99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::ExpandImageBottom</definition>
        <argsstring>(const TBOX &amp;box, int bottom_limit, ColPartitionGrid *part_grid)</argsstring>
        <name>ExpandImageBottom</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bottom_limit</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="846" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="846" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a6112b7b47a4d7399a5c6f27277ffe336" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::ExpandImageTop</definition>
        <argsstring>(const TBOX &amp;box, int top_limit, ColPartitionGrid *part_grid)</argsstring>
        <name>ExpandImageTop</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top_limit</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="881" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="881" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a16e112cacc5846e112426a2ded2c6aae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::ExpandImageDir</definition>
        <argsstring>(BlobNeighbourDir dir, const TBOX &amp;im_box, const TBOX &amp;limit_box, ColPartitionGrid *part_grid, TBOX *expanded_box)</argsstring>
        <name>ExpandImageDir</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>limit_box</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>expanded_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="918" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="918" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab76d959d5210fd85837bcfc7dd5eeb2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::MaximalImageBoundingBox</definition>
        <argsstring>(ColPartitionGrid *part_grid, TBOX *im_box)</argsstring>
        <name>MaximalImageBoundingBox</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>im_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="948" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="948" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac11b81e416006fa5d8a1b9304145c508" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DeletePartition</definition>
        <argsstring>(ColPartition *part)</argsstring>
        <name>DeletePartition</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="982" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="982" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a3493e226c330fcf6f43c13f0e0f70311" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::ExpandImageIntoParts</definition>
        <argsstring>(const TBOX &amp;max_image_box, ColPartitionGridSearch *rectsearch, ColPartitionGrid *part_grid, ColPartition **part_ptr)</argsstring>
        <name>ExpandImageIntoParts</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>max_image_box</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref> *</type>
          <declname>rectsearch</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> **</type>
          <declname>part_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1009" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1009" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae99271591f37ad0a082e013c4deec00f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::IntersectArea</definition>
        <argsstring>(const TBOX &amp;box, ColPartition_LIST *part_list)</argsstring>
        <name>IntersectArea</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1086" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1086" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a569e11c3a46405f96464cf37e89b8632" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::TestWeakIntersectedPart</definition>
        <argsstring>(const TBOX &amp;im_box, ColPartition_LIST *part_list, ColPartition *part)</argsstring>
        <name>TestWeakIntersectedPart</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1104" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1104" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1afac2c5d6e238c730485eb3575a533773" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::EliminateWeakParts</definition>
        <argsstring>(const TBOX &amp;im_box, ColPartitionGrid *part_grid, ColPartition_LIST *big_parts, ColPartition_LIST *part_list)</argsstring>
        <name>EliminateWeakParts</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>im_box</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>big_parts</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1126" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1126" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a469fe253073cc61f121549d3634a8544" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::ScanForOverlappingText</definition>
        <argsstring>(ColPartitionGrid *part_grid, TBOX *box)</argsstring>
        <name>ScanForOverlappingText</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1162" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1162" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae56a02b2b81d900ee822e458ec176759" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::MarkAndDeleteImageParts</definition>
        <argsstring>(const FCOORD &amp;rerotate, ColPartitionGrid *part_grid, ColPartition_LIST *image_parts, Pix *image_pix)</argsstring>
        <name>MarkAndDeleteImageParts</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotate</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>image_parts</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>image_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1189" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1189" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0aa5965e41ae7ba7c1efb75a5d7207b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DeleteSmallImages</definition>
        <argsstring>(ColPartitionGrid *part_grid)</argsstring>
        <name>DeleteSmallImages</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" line="1245" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/imagefind.cpp" bodystart="1245" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ada6c50b97d6fb953244d3b0ca2e0dca7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::RemoveUnusedLineSegments</definition>
        <argsstring>(bool horizontal_lines, BLOBNBOX_LIST *line_bblobs, Pix *line_pix)</argsstring>
        <name>RemoveUnusedLineSegments</name>
        <param>
          <type>bool</type>
          <declname>horizontal_lines</declname>
        </param>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>line_bblobs</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>line_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="65" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="65" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a738271c1c343843919028bace1877b12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::SubtractLinesAndResidue</definition>
        <argsstring>(Pix *line_pix, Pix *non_line_pix, int resolution, Pix *src_pix)</argsstring>
        <name>SubtractLinesAndResidue</name>
        <param>
          <type>Pix *</type>
          <declname>line_pix</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>non_line_pix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>src_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="100" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1abfe0f16b06b3dfe9e771f80caeca777a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::MaxStrokeWidth</definition>
        <argsstring>(Pix *pix)</argsstring>
        <name>MaxStrokeWidth</name>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="118" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa34b494b07b1d66afd6b1a3a63d2480c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::NumTouchingIntersections</definition>
        <argsstring>(Box *line_box, Pix *intersection_pix)</argsstring>
        <name>NumTouchingIntersections</name>
        <param>
          <type>Box *</type>
          <declname>line_box</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>intersection_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="139" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a25ade7ec32191981c519e8b758e7d9ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::CountPixelsAdjacentToLine</definition>
        <argsstring>(int line_width, Box *line_box, Pix *nonline_pix)</argsstring>
        <name>CountPixelsAdjacentToLine</name>
        <param>
          <type>int</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>Box *</type>
          <declname>line_box</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nonline_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="153" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="153" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a04411574a94498f350a205daac349fa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::FilterFalsePositives</definition>
        <argsstring>(int resolution, Pix *nonline_pix, Pix *intersection_pix, Pix *line_pix)</argsstring>
        <name>FilterFalsePositives</name>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nonline_pix</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>intersection_pix</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>line_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="186" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="186" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a889b09baef968cb3a947dec674ec7b53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>static Pix* tesseract::FilterMusic</definition>
        <argsstring>(int resolution, Pix *pix_closed, Pix *pix_vline, Pix *pix_hline, l_int32 *v_empty, l_int32 *h_empty)</argsstring>
        <name>FilterMusic</name>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix_closed</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix_vline</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>pix_hline</declname>
        </param>
        <param>
          <type>l_int32 *</type>
          <declname>v_empty</declname>
        </param>
        <param>
          <type>l_int32 *</type>
          <declname>h_empty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/linefind.cpp" line="490" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/linefind.cpp" bodystart="490" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a793fad8a8168bd9000e75e0c90a5f951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::INT_VAR</definition>
        <argsstring>(textord_tabfind_show_strokewidths, 0,&quot;Show stroke widths&quot;)</argsstring>
        <name>INT_VAR</name>
        <param>
          <type>textord_tabfind_show_strokewidths</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Show stroke widths&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a6520b6c2f30b7acb56cd953a119a4a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_only_strokewidths, false,&quot;Only run stroke widths&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_only_strokewidths</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Only run stroke widths&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5c134058d52f64514646ba2e10077790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_vertical_text, true,&quot;Enable vertical detection&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_vertical_text</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Enable vertical detection&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af450ddab0791d01f93ad91b9aa8a71ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_force_vertical_text, false,&quot;Force using vertical text page mode&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_force_vertical_text</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Force using vertical text page <ref refid="pgedit_8cpp_1afc03cf3e39248c2e339fee4d31f5f750" kindref="member">mode</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2697ba3f70cd180e6740b1347f6fbcdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_vertical_horizontal_mix, true,&quot;find horizontal lines such as headers in vertical page mode&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_vertical_horizontal_mix</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;find horizontal lines such as headers in vertical page <ref refid="pgedit_8cpp_1afc03cf3e39248c2e339fee4d31f5f750" kindref="member">mode</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a9539ddbb56bbf8225df264cef0d86417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR</definition>
        <argsstring>(textord_tabfind_vertical_text_ratio, 0.5,&quot;Fraction of textlines deemed vertical to use vertical page mode&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>textord_tabfind_vertical_text_ratio</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Fraction of textlines deemed vertical to use vertical page <ref refid="pgedit_8cpp_1afc03cf3e39248c2e339fee4d31f5f750" kindref="member">mode</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8c56586a7887abddc8f0c57599c1e4d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CollectHorizVertBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *input_blobs, int *num_vertical_blobs, int *num_horizontal_blobs, BLOBNBOX_CLIST *vertical_blobs, BLOBNBOX_CLIST *horizontal_blobs, BLOBNBOX_CLIST *nondescript_blobs)</argsstring>
        <name>CollectHorizVertBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>input_blobs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_vertical_blobs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_horizontal_blobs</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>vertical_blobs</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>horizontal_blobs</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>nondescript_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="181" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="181" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ab5ea300cc5e34c544331b51cc780f8ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::PrintBoxWidths</definition>
        <argsstring>(BLOBNBOX *neighbour)</argsstring>
        <name>PrintBoxWidths</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>neighbour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="395" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="395" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ad65e89ff1bb73b72e4bbc02ebe696dc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tesseract::UpperQuartileCJKSize</definition>
        <argsstring>(int gridsize, BLOBNBOX_LIST *blobs)</argsstring>
        <name>UpperQuartileCJKSize</name>
        <param>
          <type>int</type>
          <declname>gridsize</declname>
        </param>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="566" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="566" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a836967fcf03e6ffeaa943d848ee3ae55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::AcceptableCJKMerge</definition>
        <argsstring>(const TBOX &amp;bbox, const TBOX &amp;nbox, bool debug, int max_size, int max_dist, int *x_gap, int *y_gap)</argsstring>
        <name>AcceptableCJKMerge</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>nbox</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_dist</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x_gap</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y_gap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="684" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="684" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aed341688de9f3a4b9870f946b2f0cbee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::ListNeighbours</definition>
        <argsstring>(const BLOBNBOX *blob, BLOBNBOX_CLIST *neighbours)</argsstring>
        <name>ListNeighbours</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>neighbours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1031" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1031" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a41391e842c7e1882bbfe8771199c5cb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::List2ndNeighbours</definition>
        <argsstring>(const BLOBNBOX *blob, BLOBNBOX_CLIST *neighbours)</argsstring>
        <name>List2ndNeighbours</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>neighbours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1043" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1043" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a17d7dec203ad4da6eef42d9aa71d9316" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::List3rdNeighbours</definition>
        <argsstring>(const BLOBNBOX *blob, BLOBNBOX_CLIST *neighbours)</argsstring>
        <name>List3rdNeighbours</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>neighbours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1056" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1056" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a23dc1e0ee3240e50d19484f740c6aa2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CountNeighbourGaps</definition>
        <argsstring>(bool debug, BLOBNBOX_CLIST *neighbours, int *pure_h_count, int *pure_v_count)</argsstring>
        <name>CountNeighbourGaps</name>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>neighbours</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pure_h_count</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pure_v_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1070" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1070" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8ac188c021b14687570969d6e26b1c1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::CountNeighbourTypes</definition>
        <argsstring>(BLOBNBOX_CLIST *neighbours, int *pure_h_count, int *pure_v_count)</argsstring>
        <name>CountNeighbourTypes</name>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>neighbours</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pure_h_count</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pure_v_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1142" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1142" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa2239fab69ded1322fa1b47b00d3e49d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>static BLOBNBOX* tesseract::MutualUnusedVNeighbour</definition>
        <argsstring>(const BLOBNBOX *blob, BlobNeighbourDir dir)</argsstring>
        <name>MutualUnusedVNeighbour</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1280" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1280" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae3d3edc7e35cfe97ae0c93e8a713276f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>static BLOBNBOX* tesseract::MutualUnusedHNeighbour</definition>
        <argsstring>(const BLOBNBOX *blob, BlobNeighbourDir dir)</argsstring>
        <name>MutualUnusedHNeighbour</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1323" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1323" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af3a8cebcb2e9116f378b0a6754bf166e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DrawDiacriticJoiner</definition>
        <argsstring>(const BLOBNBOX *blob, ScrollView *window)</argsstring>
        <name>DrawDiacriticJoiner</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" line="1873" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1873" bodyend="1881"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a5d20a982fe35e21d818343e4cae4d8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_initialtabs, false,&quot;Show tab candidates&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_initialtabs</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show tab candidates&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1acf863cc737dfa6a8e0cfbcb4bf2ca86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tabfind_show_finaltabs, false,&quot;Show tab vectors&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tabfind_show_finaltabs</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show tab vectors&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1adce5a9134b434c82e9677c65164070f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR</definition>
        <argsstring>(textord_tabfind_aligned_gap_fraction, 0.75,&quot;Fraction of height used as a minimum gap for aligned blobs.&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>textord_tabfind_aligned_gap_fraction</type>
        </param>
        <param>
          <type>0.</type>
          <declname>75</declname>
        </param>
        <param>
          <type>&quot;Fraction of height used as a minimum gap for aligned blobs.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0e5d6d1348ab3da965f9256da1876c9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::DisplayBoxVector</definition>
        <argsstring>(const GenericVector&lt; BLOBNBOX * &gt; boxes, ScrollView *win)</argsstring>
        <name>DisplayBoxVector</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> * &gt;</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" line="566" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tabfind.cpp" bodystart="566" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a01f3d95901cc7191da0904221ec5b371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_dump_table_images, false,&quot;Paint table detection output&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_dump_table_images</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Paint table detection output&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ac00cd4950cb96637eccc2894f806b6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_show_tables, false,&quot;Show table regions&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_show_tables</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show table regions&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1ae71fca2b47d76e67282a270ffef2a2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tablefind_show_mark, false,&quot;Debug table marking steps in detail&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tablefind_show_mark</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Debug table marking steps in detail&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a28f3c868ddd619909cbfa49442c40fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tablefind_show_stats, false,&quot;Show page stats used in table finding&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tablefind_show_stats</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Show page stats used in table finding&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a90b850e86950f67c428685be56400dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::BOOL_VAR</definition>
        <argsstring>(textord_tablefind_recognize_tables, false,&quot;Enables the table recognizer for table layout and filtering.&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>textord_tablefind_recognize_tables</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Enables the table recognizer for table layout and filtering.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a67d9dc6d03fb77b0f23aafd42bb3c835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tesseract::DeleteObject</definition>
        <argsstring>(T *object)</argsstring>
        <name>DeleteObject</name>
        <param>
          <type>T *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/tablefind.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a0605a13ff342f5847ec9c5ee9b833b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR</definition>
        <argsstring>(textord_tabvector_vertical_gap_fraction, 0.5,&quot;max fraction of mean blob width allowed for vertical gaps in vertical text&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>textord_tabvector_vertical_gap_fraction</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;max fraction of mean blob width allowed for vertical gaps in vertical text&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af55287938793cffa2bacdec0a8d19c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR</definition>
        <argsstring>(textord_tabvector_vertical_box_ratio, 0.5,&quot;Fraction of box matches required to declare a line vertical&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>textord_tabvector_vertical_box_ratio</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Fraction of box matches required to declare a line vertical&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1add38f054b5fc51f04226b817e6fff1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR_H</definition>
        <argsstring>(textord_tabvector_vertical_gap_fraction, 0.5,&quot;Max fraction of mean blob width allowed for vertical gaps in vertical text&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>textord_tabvector_vertical_gap_fraction</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Max fraction of mean blob width allowed for vertical gaps in vertical text&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a727ac060a423d554351213fa44525f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::double_VAR_H</definition>
        <argsstring>(textord_tabvector_vertical_box_ratio, 0.5,&quot;Fraction of box matches required to declare a line vertical&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>textord_tabvector_vertical_box_ratio</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Fraction of box matches required to declare a line vertical&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/tabvector.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a8993c60427235595a39f8879ceca3c46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>static TBOX tesseract::BoundsWithinBox</definition>
        <argsstring>(Pix *pix, const TBOX &amp;box)</argsstring>
        <name>BoundsWithinBox</name>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="574" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="574" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1aa39f9342284fe18a270ec5e3e9670bf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tesseract::TruncateBoxToMissNonText</definition>
        <argsstring>(int x_middle, int y_middle, bool split_on_x, Pix *nontext_map, TBOX *bbox)</argsstring>
        <name>TruncateBoxToMissNonText</name>
        <param>
          <type>int</type>
          <declname>x_middle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_middle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>split_on_x</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nontext_map</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="598" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="598" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a1f150258bf03e986518efd91fb077322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref> *</type>
        <definition>ShapeTable * tesseract::LoadShapeTable</definition>
        <argsstring>(const STRING &amp;file_prefix)</argsstring>
        <name>LoadShapeTable</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>file_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="183" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="183" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1af6657e7cdbf17875a06df792c22cd28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::WriteShapeTable</definition>
        <argsstring>(const STRING &amp;file_prefix, const ShapeTable &amp;shape_table)</argsstring>
        <name>WriteShapeTable</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>file_prefix</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref> &amp;</type>
          <declname>shape_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="209" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="209" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a2af3b74c1139cfc070d17e947f212b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_master_trainer" kindref="compound">MasterTrainer</ref> *</type>
        <definition>MasterTrainer * tesseract::LoadTrainingData</definition>
        <argsstring>(int argc, const char *const *argv, bool replication, ShapeTable **shape_table, STRING *file_prefix)</argsstring>
        <name>LoadTrainingData</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replication</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref> **</type>
          <declname>shape_table</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>file_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="238" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="238" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a3b71ccfcd667bca92d2e6435845a4c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::ELISTIZE</definition>
        <argsstring>(ViterbiStateEntry)</argsstring>
        <name>ELISTIZE</name>
        <param>
          <type><ref refid="structtesseract_1_1_viterbi_state_entry" kindref="compound">ViterbiStateEntry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/language_model.cpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a897f98148e8c084774a0c00f774da30a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::ELISTIZEH</definition>
        <argsstring>(ViterbiStateEntry)</argsstring>
        <name>ELISTIZEH</name>
        <param>
          <type><ref refid="structtesseract_1_1_viterbi_state_entry" kindref="compound">ViterbiStateEntry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/language_model.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a23c436879a7a3c0729cdf23e7c36e1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref></type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::SortByUnicharID</definition>
        <argsstring>(const void *void1, const void *void2)</argsstring>
        <name>SortByUnicharID</name>
        <param>
          <type>const void *</type>
          <declname>void1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>void2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesseract_1a7900da278a2093f2ad84ebf3431522e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref></type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tesseract::SortByRating</definition>
        <argsstring>(const void *void1, const void *void2)</argsstring>
        <name>SortByRating</name>
        <param>
          <type>const void *</type>
          <declname>void1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>void2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="116" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>recog_pseudo_word</para><para>Make a word from the selected blobs and run Tess on them.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>page_res</parametername>
</parameternamelist>
<parameterdescription>
<para>recognise blobs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_box</parametername>
</parameternamelist>
<parameterdescription>
<para>within this box</para></parameterdescription>
</parameteritem>
</parameterlist>
fp_eval_word_spacing() Evaluation function for fixed pitch word lists.</para><para>Basically, count the number of &quot;nice&quot; characters - those which are in tess acceptable words or in dict words and are not rejected. Penalise any potential noise chars</para><para>process_selected_words()</para><para>Walk the current block list applying the specified word processor function to each word that overlaps the selection_box.</para><para>build_menu()</para><para>Construct the menu tree used by the command window</para><para>process_cmd_win_event()</para><para>Process a command returned from the command window (Just call the appropriate command handler)</para><para>word_blank_and_set_display() Word processor</para><para>Blank display of word then redisplay word according to current display mode settings</para><para><hruler/>
 <heading level="2">Public Code </heading>
</para><para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><heading level="2">Public Code </heading>
</para>    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/api/baseapi.cpp" line="74" column="1"/>
  </compounddef>
</doxygen>
