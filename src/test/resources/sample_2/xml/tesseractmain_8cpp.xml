<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="tesseractmain_8cpp" kind="file">
    <compoundname>tesseractmain.cpp</compoundname>
    <includes local="yes">allheaders.h</includes>
    <includes refid="baseapi_8h" local="yes">baseapi.h</includes>
    <includes refid="basedir_8h" local="yes">basedir.h</includes>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includes refid="tesseractmain_8h" local="yes">tesseractmain.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <incdepgraph>
      <node id="265">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="264">
        <label>stdlib.h</label>
      </node>
      <node id="266">
        <label>basedir.h</label>
        <link refid="basedir_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="244" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>pageiterator.h</label>
        <link refid="pageiterator_8h"/>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>allheaders.h</label>
      </node>
      <node id="254">
        <label>resultiterator.h</label>
        <link refid="resultiterator_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>baseapi.h</label>
        <link refid="baseapi_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>stddef.h</label>
      </node>
      <node id="249">
        <label>memory.h</label>
      </node>
      <node id="257">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="244">
        <label>limits.h</label>
      </node>
      <node id="247">
        <label>thresholder.h</label>
        <link refid="thresholder_8h"/>
      </node>
      <node id="239">
        <label>api/tesseractmain.cpp</label>
        <link refid="tesseractmain.cpp"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>apitypes.h</label>
        <link refid="apitypes_8h"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="250">
        <label>string.h</label>
      </node>
      <node id="262">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
      <node id="248">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>tesseractmain.h</label>
        <link refid="tesseractmain_8h"/>
      </node>
      <node id="255">
        <label>ltrresultiterator.h</label>
        <link refid="ltrresultiterator_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="269">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>stdio.h</label>
      </node>
      <node id="259">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" prot="public" static="no">
        <name>_</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/tesseractmain.cpp" line="35" column="11" bodyfile="/Users/makoto/Desktop/trunk/api/tesseractmain.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tesseractmain_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Public Function Prototypes </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/tesseractmain.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/tesseractmain.cpp" bodystart="50" bodyend="250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tessedit.cpp<sp/><sp/>(Formerly<sp/>tessedit.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Description:<sp/>Main<sp/>program<sp/>for<sp/>merge<sp/>of<sp/>tess<sp/>and<sp/>editor.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tue<sp/>Jan<sp/>07<sp/>15:21:46<sp/>GMT<sp/>1992</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>(C)<sp/>Copyright<sp/>1992,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>USE_VLD<sp/>//Uncomment<sp/>for<sp/>Visual<sp/>Leak<sp/>Detector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>defined<sp/>USE_VLD)</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vld.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>USING_GETTEXT</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;libintl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_(x)<sp/>gettext(x)</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_(x)<sp/>(x)</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="baseapi_8h" kindref="compound">baseapi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="basedir_8h" kindref="compound">basedir.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractmain_8h" kindref="compound">tesseractmain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>main()</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tesseractmain_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USING_GETTEXT</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>setlocale<sp/>(LC_ALL,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>bindtextdomain<sp/>(PACKAGE,<sp/>LOCALEDIR);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>textdomain<sp/>(PACKAGE);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((argc<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(argc<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;--version&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*versionStrP;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;tesseract<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_tess_base_a_p_i_1a3785779c909fcdd77e24b340f5913e4b" kindref="member">tesseract::TessBaseAPI::Version</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>versionStrP<sp/>=<sp/>getLeptonicaVersion();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>versionStrP);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>lept_free(versionStrP);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>versionStrP<sp/>=<sp/>getImagelibVersions();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>versionStrP);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>lept_free(versionStrP);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>order<sp/>of<sp/>args<sp/>a<sp/>bit<sp/>more<sp/>forgiving<sp/>than<sp/>it<sp/>used<sp/>to<sp/>be.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;eng&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>image<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>output<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noocr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>list_langs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>print_parameters<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">tesseract::PageSegMode</ref><sp/>pagesegmode<sp/>=<sp/><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aa759fdd456efbe83648acd54f0a9263cb" kindref="member" tooltip="Fully automatic page segmentation, but no OSD. ">tesseract::PSM_AUTO</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(arg<sp/>&lt;<sp/>argc<sp/>&amp;&amp;<sp/>(output<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>argv[arg][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[arg],<sp/></highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>arg<sp/>+<sp/>1<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lang<sp/>=<sp/>argv[arg<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++arg;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[arg],<sp/></highlight><highlight class="stringliteral">&quot;-psm&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>arg<sp/>+<sp/>1<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pagesegmode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">tesseract::PageSegMode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(atoi(argv[arg<sp/>+<sp/>1]));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++arg;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[arg],<sp/></highlight><highlight class="stringliteral">&quot;--print-parameters&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noocr<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>print_parameters<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[arg],<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>arg<sp/>+<sp/>1<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handled<sp/>properly<sp/>after<sp/>api<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++arg;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>argv[arg];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>argv[arg];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>++arg;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;--list-langs&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>list_langs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>noocr<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>noocr<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Usage:%s<sp/>imagename<sp/>outputbase|stdout<sp/>[-l<sp/>lang]<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[-psm<sp/>pagesegmode]<sp/>[-c<sp/>configvar=value]<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[configfile...]\n\n&quot;</highlight><highlight class="normal">),<sp/>argv[0]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;pagesegmode<sp/>values<sp/>are:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>Orientation<sp/>and<sp/>script<sp/>detection<sp/>(OSD)<sp/>only.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>Automatic<sp/>page<sp/>segmentation<sp/>with<sp/>OSD.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2<sp/>=<sp/>Automatic<sp/>page<sp/>segmentation,<sp/>but<sp/>no<sp/>OSD,<sp/>or<sp/>OCR\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3<sp/>=<sp/>Fully<sp/>automatic<sp/>page<sp/>segmentation,<sp/>but<sp/>no<sp/>OSD.<sp/>(Default)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4<sp/>=<sp/>Assume<sp/>a<sp/>single<sp/>column<sp/>of<sp/>text<sp/>of<sp/>variable<sp/>sizes.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;5<sp/>=<sp/>Assume<sp/>a<sp/>single<sp/>uniform<sp/>block<sp/>of<sp/>vertically<sp/>aligned<sp/>text.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;6<sp/>=<sp/>Assume<sp/>a<sp/>single<sp/>uniform<sp/>block<sp/>of<sp/>text.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;7<sp/>=<sp/>Treat<sp/>the<sp/>image<sp/>as<sp/>a<sp/>single<sp/>text<sp/>line.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;8<sp/>=<sp/>Treat<sp/>the<sp/>image<sp/>as<sp/>a<sp/>single<sp/>word.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;9<sp/>=<sp/>Treat<sp/>the<sp/>image<sp/>as<sp/>a<sp/>single<sp/>word<sp/>in<sp/>a<sp/>circle.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;10<sp/>=<sp/>Treat<sp/>the<sp/>image<sp/>as<sp/>a<sp/>single<sp/>character.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;multiple<sp/>-c<sp/>arguments<sp/>are<sp/>allowed.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;-l<sp/>lang,<sp/>-psm<sp/>pagesegmode<sp/>and<sp/>any<sp/>-c<sp/>options<sp/>must<sp/>occur&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;before<sp/>any<sp/>configfile.\n\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Single<sp/>options:\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>-v<sp/>--version:<sp/>version<sp/>info\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>--list-langs:<sp/>list<sp/>available<sp/>languages<sp/>for<sp/>tesseract<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;engine\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>--print-parameters:<sp/>print<sp/>tesseract<sp/>parameters<sp/>to<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stdout\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">tesseract::TessBaseAPI</ref><sp/><ref refid="namespacetesseract-c__api-demo_1a6e5e62fdd18584223572e5cbaa9a1d1d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>tessdata_dir;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="basedir_8cpp_1a7cf3a953ccf5f593c57b2e711cc43bf2" kindref="member">truncate_path</ref>(argv[0],<sp/>&amp;tessdata_dir);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1af997008815be7af2edcd9ff1a5d55896" kindref="member">SetOutputName</ref>(output);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract-c__api-demo_1a42e422a84ae8cc850bac5f48b7b6c5ef" kindref="member">rc</ref><sp/>=<sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" kindref="member">Init</ref>(tessdata_dir.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,<sp/><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aeae7376c1e8d55b9d13e75c639a6930159" kindref="member">tesseract::OEM_DEFAULT</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(argv[arg]),<sp/>argc<sp/>-<sp/>arg,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>tesseract.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>opt1[255],<sp/>opt2[255];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arg<sp/>=<sp/>0;<sp/>arg<sp/>&lt;<sp/>argc;<sp/>arg++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[arg],<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>arg<sp/>+<sp/>1<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(opt1,<sp/>argv[arg<sp/>+<sp/>1],<sp/>255);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(strchr(opt1,<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(opt2,<sp/>strchr(argv[arg<sp/>+<sp/>1],<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)<sp/>+<sp/>1,<sp/>255);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt2[254]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++arg;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1a2e09259c558c6d8e0f7e523cbaf5adf5" kindref="member">SetVariable</ref>(opt1,<sp/>opt2))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>option:<sp/>%s=%s\n&quot;</highlight><highlight class="normal">),<sp/>opt1,<sp/>opt2);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list_langs)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>languages;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1a1fd02f053ce01f915805fff31aea6695" kindref="member">GetAvailableLanguagesAsVector</ref>(&amp;languages);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;List<sp/>of<sp/>available<sp/>languages<sp/>(%d):\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>languages.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>languages.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++index)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>languages[index];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>api.<ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(print_parameters)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fout<sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Tesseract<sp/>parameters:\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1aa00be783b6ce3c3178fc86afdf1cba7d" kindref="member">PrintVariables</ref>(fout);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>api.<ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>2<sp/>possible<sp/>sources<sp/>of<sp/>pagesegmode:<sp/>a<sp/>config<sp/>file<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>command<sp/>line.<sp/>For<sp/>backwards<sp/>compatability<sp/>reasons,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>in<sp/>tesseract<sp/>is<sp/>tesseract::PSM_SINGLE_BLOCK,<sp/>but<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>for<sp/>this<sp/>program<sp/>is<sp/>tesseract::PSM_AUTO.<sp/>We<sp/>will<sp/>let</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>config<sp/>file<sp/>take<sp/>priority,<sp/>so<sp/>the<sp/>command-line<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>take<sp/>priority<sp/>over<sp/>the<sp/>tesseract<sp/>default,<sp/>so<sp/>we<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>from<sp/>the<sp/>command<sp/>line<sp/>only<sp/>if<sp/>the<sp/>retrieved<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>still<sp/>tesseract::PSM_SINGLE_BLOCK,<sp/>indicating<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>any<sp/>config<sp/>file.<sp/>Therefore<sp/>the<sp/>only<sp/>way<sp/>to<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tesseract::PSM_SINGLE_BLOCK<sp/>is<sp/>from<sp/>the<sp/>command<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>simpler<sp/>if<sp/>we<sp/>could<sp/>set<sp/>the<sp/>value<sp/>before<sp/>Init,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>that<sp/>doesn&apos;t<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1a943206e3548bfb517c67354ee50661f3" kindref="member">GetPageSegMode</ref>()<sp/>==<sp/><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66aab76fe3ca390d99e070ea60b892ee18ef" kindref="member" tooltip="Assume a single uniform block of text. (Default.) ">tesseract::PSM_SINGLE_BLOCK</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1a15a7a9c1afbba3078a55b4566de891ab" kindref="member">SetPageSegMode</ref>(pagesegmode);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Tesseract<sp/>Open<sp/>Source<sp/>OCR<sp/>Engine<sp/>v%s<sp/>with<sp/>Leptonica\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tess_base_a_p_i_1a3785779c909fcdd77e24b340f5913e4b" kindref="member">tesseract::TessBaseAPI::Version</ref>());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>FILE*<sp/>fin<sp/>=<sp/>fopen(image,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fin<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>open<sp/>input<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">),<sp/>image);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(2);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>fclose(fin);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>PIX<sp/><sp/><sp/>*pixs;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pixs<sp/>=<sp/>pixRead(image))<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>image<sp/>type.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(3);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixs);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_hocr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1ac5e219cbaa2c19c67ccef3246ff838a6" kindref="member">GetBoolVariable</ref>(</highlight><highlight class="stringliteral">&quot;tessedit_create_hocr&quot;</highlight><highlight class="normal">,<sp/>&amp;output_hocr);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_box<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>api.<ref refid="classtesseract_1_1_tess_base_a_p_i_1ac5e219cbaa2c19c67ccef3246ff838a6" kindref="member">GetBoolVariable</ref>(</highlight><highlight class="stringliteral">&quot;tessedit_create_boxfile&quot;</highlight><highlight class="normal">,<sp/>&amp;output_box);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>FILE*<sp/>fout<sp/>=<sp/>stdout;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(output,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>strcmp(output,<sp/></highlight><highlight class="stringliteral">&quot;stdout&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>outfile<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile<sp/>+=<sp/>output_hocr<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;.html&quot;</highlight><highlight class="normal"><sp/>:<sp/>output_box<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;.box&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>=<sp/>fopen(outfile.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fout<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>output<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">),<sp/>outfile.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="namespacetesseract-c__api-demo_1a4cb5504e991035002a887059676c8d14" kindref="member">text_out</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!api.<ref refid="group___advanced_a_p_i_1gaf89df932c29b0abe4fb4ca3ae852506b" kindref="member">ProcessPages</ref>(image,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>&amp;text_out))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/><ref refid="tesseractmain_8cpp_1af20b8d139279b360b0fdeae71f8f43bc" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>during<sp/>processing.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fout<sp/>!=<sp/>stdout)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fout);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>fwrite(text_out.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>1,<sp/>text_out.<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>(),<sp/>fout);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fout<sp/>!=<sp/>stdout)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fout);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>clearerr(fout);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>szAppName[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tesseract&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//app<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialized<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/>WinMain</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*<sp/>Main<sp/>function<sp/>for<sp/>a<sp/>windows<sp/>program.</highlight></codeline>
<codeline lineno="261"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WINAPI<sp/>WinMain(<sp/><sp/></highlight><highlight class="comment">//main<sp/>for<sp/>windows<sp/>//command<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HINSTANCE<sp/>hInstance,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HINSTANCE<sp/>hPrevInstance,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPSTR<sp/>lpszCmdLine,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCmdShow)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>WNDCLASS<sp/>wc;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>HWND<sp/>hwnd;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>MSG<sp/>msg;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argsin[2];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_code;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>wc.style<sp/>=<sp/>CS_NOCLOSE<sp/>|<sp/>CS_OWNDC;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>wc.lpfnWndProc<sp/>=<sp/>(WNDPROC)<sp/>WndProc;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>wc.cbClsExtra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>wc.cbWndExtra<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>wc.hInstance<sp/>=<sp/>hInstance;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>wc.hIcon<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LoadIcon<sp/>(NULL,<sp/>IDI_APPLICATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>wc.hCursor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LoadCursor<sp/>(NULL,<sp/>IDC_ARROW);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>wc.hbrBackground<sp/>=<sp/>(HBRUSH)<sp/>(COLOR_WINDOW<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>wc.lpszMenuName<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>wc.lpszClassName<sp/>=<sp/>szAppName;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>RegisterClass(&amp;wc);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>hwnd<sp/>=<sp/>CreateWindow<sp/>(szAppName,<sp/>szAppName,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WS_OVERLAPPEDWINDOW<sp/>|<sp/>WS_DISABLED,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CW_USEDEFAULT,<sp/>CW_USEDEFAULT,<sp/>CW_USEDEFAULT,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CW_USEDEFAULT,<sp/>HWND_DESKTOP,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>hInstance,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>argsin[0]<sp/>=<sp/>strdup<sp/>(szAppName);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>argsin[1]<sp/>=<sp/>strdup<sp/>(lpszCmdLine);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*allocate<sp/>memory<sp/>for<sp/>the<sp/>args.<sp/>There<sp/>can<sp/>never<sp/>be<sp/>more<sp/>than<sp/>half*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*the<sp/>total<sp/>number<sp/>of<sp/>characters<sp/>in<sp/>the<sp/>arguments.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>argv<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)malloc(((strlen(argsin[0])<sp/>+<sp/>strlen(argsin[1]))<sp/>/<sp/>2<sp/>+<sp/>1)<sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*now<sp/>construct<sp/>argv<sp/>as<sp/>it<sp/>should<sp/>be<sp/>for<sp/>C.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>argc<sp/>=<sp/>parse_args<sp/>(2,<sp/>argsin,<sp/>argv);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ShowWindow<sp/>(hwnd,<sp/>nCmdShow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>UpdateWindow<sp/>(hwnd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>exit_code<sp/>=<sp/><ref refid="tesseractmain_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(argsin[0]);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(argsin[1]);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>free(argv);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exit_code;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(GetMessage<sp/>(&amp;msg,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>TranslateMessage(&amp;msg);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>DispatchMessage(&amp;msg);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit_code<sp/>=<sp/><ref refid="tesseractmain_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit_code<sp/>=<sp/>msg.wParam;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>free<sp/>(argsin[0]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>free<sp/>(argsin[1]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>free(argv);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exit_code;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="333"><highlight class="comment">*<sp/>WndProc</highlight></codeline>
<codeline lineno="334"><highlight class="comment">*</highlight></codeline>
<codeline lineno="335"><highlight class="comment">*<sp/>Function<sp/>to<sp/>respond<sp/>to<sp/>messages.</highlight></codeline>
<codeline lineno="336"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">LONG<sp/>WINAPI<sp/>WndProc(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//message<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HWND<sp/>hwnd,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//window<sp/>with<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/>msg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//message<sp/>typ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WPARAM<sp/>wParam,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPARAM<sp/>lParam)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>HDC<sp/>hdc;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/>WM_CREATE)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>rendering<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>hdc<sp/>=<sp/>GetDC<sp/>(hwnd);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(hwnd,<sp/>hdc);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc<sp/>(hwnd,<sp/>msg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="359"><highlight class="comment">*<sp/>parse_args</highlight></codeline>
<codeline lineno="360"><highlight class="comment">*</highlight></codeline>
<codeline lineno="361"><highlight class="comment">*<sp/>Turn<sp/>a<sp/>list<sp/>of<sp/>args<sp/>into<sp/>a<sp/>new<sp/>list<sp/>of<sp/>args<sp/>with<sp/>each<sp/>separate</highlight></codeline>
<codeline lineno="362"><highlight class="comment">*<sp/>whitespace<sp/>spaced<sp/>string<sp/>being<sp/>an<sp/>arg.</highlight></codeline>
<codeline lineno="363"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">parse_args<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*refine<sp/>arg<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*no<sp/>of<sp/>input<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*input<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arglist[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*output<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argcount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*converted<sp/>argc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*testchar;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*char<sp/>in<sp/>option<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*current<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>argcount<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*no<sp/>of<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arg<sp/>=<sp/>0;<sp/>arg<sp/>&lt;<sp/>argc;<sp/>arg++)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>testchar<sp/>=<sp/>argv[arg];<sp/></highlight><highlight class="comment">/*start<sp/>of<sp/>arg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*testchar</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(*testchar<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*testchar<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>*testchar<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testchar++;<sp/></highlight><highlight class="comment">/*skip<sp/>white<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*testchar)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*new<sp/>arg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arglist[argcount++]<sp/>=<sp/>testchar;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*skip<sp/>to<sp/>white<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(testchar++;<sp/>*testchar<sp/>&amp;&amp;<sp/>*testchar<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*testchar<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*testchar<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;<sp/>testchar++)<sp/>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*testchar)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*testchar++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*turn<sp/>to<sp/>separate<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*testchar);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argcount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*new<sp/>number<sp/>of<sp/>args<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/api/tesseractmain.cpp"/>
  </compounddef>
</doxygen>
