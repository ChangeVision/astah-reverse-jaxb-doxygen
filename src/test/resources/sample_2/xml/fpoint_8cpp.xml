<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="fpoint_8cpp" kind="file">
    <compoundname>fpoint.cpp</compoundname>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="fpoint_8h" local="yes">fpoint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="24583">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="24586">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="24587" relation="include">
        </childnode>
      </node>
      <node id="24584">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="24585" relation="include">
        </childnode>
        <childnode refid="24588" relation="include">
        </childnode>
        <childnode refid="24589" relation="include">
        </childnode>
      </node>
      <node id="24587">
        <label>limits.h</label>
      </node>
      <node id="24589">
        <label>math.h</label>
      </node>
      <node id="24582">
        <label>classify/fpoint.cpp</label>
        <link refid="fpoint.cpp"/>
        <childnode refid="24583" relation="include">
        </childnode>
        <childnode refid="24584" relation="include">
        </childnode>
        <childnode refid="24588" relation="include">
        </childnode>
        <childnode refid="24589" relation="include">
        </childnode>
      </node>
      <node id="24585">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="24586" relation="include">
        </childnode>
      </node>
      <node id="24588">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="fpoint_8cpp_1a415c805f668844bd4e652968a7978c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 DistanceBetween</definition>
        <argsstring>(FPOINT A, FPOINT B)</argsstring>
        <name>DistanceBetween</name>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref></type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><heading level="2">Public Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/fpoint.cpp" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/fpoint.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="fpoint_8cpp_1a64d002c6db7589a73c3fcc0f2e80ad80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 NormalizedAngleFrom</definition>
        <argsstring>(FPOINT *Point1, FPOINT *Point2, FLOAT32 FullScale)</argsstring>
        <name>NormalizedAngleFrom</name>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> *</type>
          <declname>Point1</declname>
        </param>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> *</type>
          <declname>Point2</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>FullScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/fpoint.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/fpoint.cpp" bodystart="39" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>fpoint.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Abstract<sp/>data<sp/>type<sp/>for<sp/>a<sp/>2D<sp/>point<sp/>(floating<sp/>point<sp/>coords)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Apr<sp/>12<sp/>10:44:15<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fpoint_8h" kindref="compound">fpoint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="fpoint_8cpp_1a415c805f668844bd4e652968a7978c41" kindref="member">DistanceBetween</ref>(<ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>A,<sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>B)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xd<sp/>=<sp/><ref refid="fpoint_8h_1a3882f9c0c6c99c9bf796113a1524cba1" kindref="member">XDelta</ref>(A,<sp/>B);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yd<sp/>=<sp/><ref refid="fpoint_8h_1abeec3d0313052da8c1e239e64acaf5cd" kindref="member">YDelta</ref>(A,<sp/>B);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(static_cast&lt;double&gt;(xd<sp/>*<sp/>xd<sp/>+<sp/>yd<sp/>*<sp/>yd));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="fpoint_8cpp_1a64d002c6db7589a73c3fcc0f2e80ad80" kindref="member">NormalizedAngleFrom</ref>(<ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>*Point1,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>*Point2,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>FullScale)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Point1,<sp/>Point2<sp/><sp/>points<sp/>to<sp/>compute<sp/>angle<sp/>between</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>FullScale<sp/><sp/><sp/>value<sp/>to<sp/>associate<sp/>with<sp/>2*pi</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Return<sp/>the<sp/>angle<sp/>from<sp/>Point1<sp/>to<sp/>Point2<sp/>normalized<sp/>to</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>lie<sp/>in<sp/>the<sp/>range<sp/>0<sp/>to<sp/>FullScale<sp/>(where<sp/>FullScale<sp/>corresponds</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>to<sp/>2*pi<sp/>or<sp/>360<sp/>degrees).</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>**<sp/>History:<sp/>Wed<sp/>Mar<sp/>28<sp/>14:27:25<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Angle;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>NumRadsInCircle<sp/>=<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>Angle<sp/>=<sp/><ref refid="fpoint_8h_1ab2882d6616a94607705192ca8c484764" kindref="member">AngleFrom</ref><sp/>(*Point1,<sp/>*Point2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Angle<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Angle<sp/>+=<sp/>NumRadsInCircle;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>Angle<sp/>*=<sp/>FullScale<sp/>/<sp/>NumRadsInCircle;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Angle<sp/>&lt;<sp/>0.0<sp/>||<sp/>Angle<sp/>&gt;=<sp/>FullScale)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Angle<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Angle);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NormalizedAngleFrom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/fpoint.cpp"/>
  </compounddef>
</doxygen>
