<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="resultiterator_8h" kind="file">
    <compoundname>resultiterator.h</compoundname>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes refid="ltrresultiterator_8h" local="yes">ltrresultiterator.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includedby refid="baseapi_8h" local="yes">api/baseapi.h</includedby>
    <includedby refid="baseapi_8cpp" local="yes">api/baseapi.cpp</includedby>
    <includedby refid="capi_8h" local="yes">api/capi.h</includedby>
    <includedby refid="mutableiterator_8h" local="yes">ccmain/mutableiterator.h</includedby>
    <includedby refid="resultiterator_8cpp" local="yes">ccmain/resultiterator.cpp</includedby>
    <incdepgraph>
      <node id="4100">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="4099">
        <label>stdlib.h</label>
      </node>
      <node id="4080">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="4081" relation="include">
        </childnode>
      </node>
      <node id="4083">
        <label>pageiterator.h</label>
        <link refid="pageiterator_8h"/>
        <childnode refid="4084" relation="include">
        </childnode>
        <childnode refid="4080" relation="include">
        </childnode>
      </node>
      <node id="4079">
        <label>ccmain/resultiterator.h</label>
        <link refid="resultiterator.h"/>
        <childnode refid="4080" relation="include">
        </childnode>
        <childnode refid="4082" relation="include">
        </childnode>
        <childnode refid="4098" relation="include">
        </childnode>
      </node>
      <node id="4093">
        <label>stddef.h</label>
      </node>
      <node id="4096">
        <label>memory.h</label>
      </node>
      <node id="4086">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="4087" relation="include">
        </childnode>
      </node>
      <node id="4081">
        <label>limits.h</label>
      </node>
      <node id="4090">
        <label>string.h</label>
      </node>
      <node id="4097">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="4095" relation="include">
        </childnode>
      </node>
      <node id="4095">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="4096" relation="include">
        </childnode>
        <childnode refid="4090" relation="include">
        </childnode>
      </node>
      <node id="4094">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="4087" relation="include">
        </childnode>
      </node>
      <node id="4082">
        <label>ltrresultiterator.h</label>
        <link refid="ltrresultiterator_8h"/>
        <childnode refid="4080" relation="include">
        </childnode>
        <childnode refid="4083" relation="include">
        </childnode>
        <childnode refid="4085" relation="include">
        </childnode>
      </node>
      <node id="4084">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="4098">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="4089" relation="include">
        </childnode>
        <childnode refid="4099" relation="include">
        </childnode>
        <childnode refid="4094" relation="include">
        </childnode>
        <childnode refid="4086" relation="include">
        </childnode>
        <childnode refid="4088" relation="include">
        </childnode>
        <childnode refid="4100" relation="include">
        </childnode>
      </node>
      <node id="4092">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="4093" relation="include">
        </childnode>
        <childnode refid="4087" relation="include">
        </childnode>
      </node>
      <node id="4085">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="4086" relation="include">
        </childnode>
        <childnode refid="4088" relation="include">
        </childnode>
        <childnode refid="4091" relation="include">
        </childnode>
        <childnode refid="4094" relation="include">
        </childnode>
        <childnode refid="4095" relation="include">
        </childnode>
        <childnode refid="4097" relation="include">
        </childnode>
      </node>
      <node id="4087">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="4080" relation="include">
        </childnode>
      </node>
      <node id="4089">
        <label>stdio.h</label>
      </node>
      <node id="4091">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="4089" relation="include">
        </childnode>
        <childnode refid="4090" relation="include">
        </childnode>
        <childnode refid="4080" relation="include">
        </childnode>
        <childnode refid="4092" relation="include">
        </childnode>
      </node>
      <node id="4088">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="4089" relation="include">
        </childnode>
        <childnode refid="4090" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4110">
        <label>ccmain/paragraphs.cpp</label>
        <link refid="paragraphs_8cpp"/>
      </node>
      <node id="4109">
        <label>ccmain/mutableiterator.h</label>
        <link refid="mutableiterator_8h"/>
        <childnode refid="4103" relation="include">
        </childnode>
        <childnode refid="4110" relation="include">
        </childnode>
      </node>
      <node id="4105">
        <label>api/capi.cpp</label>
        <link refid="capi_8cpp"/>
      </node>
      <node id="4101">
        <label>ccmain/resultiterator.h</label>
        <link refid="resultiterator.h"/>
        <childnode refid="4102" relation="include">
        </childnode>
        <childnode refid="4103" relation="include">
        </childnode>
        <childnode refid="4104" relation="include">
        </childnode>
        <childnode refid="4109" relation="include">
        </childnode>
        <childnode refid="4111" relation="include">
        </childnode>
      </node>
      <node id="4102">
        <label>api/baseapi.h</label>
        <link refid="baseapi_8h"/>
        <childnode refid="4103" relation="include">
        </childnode>
        <childnode refid="4104" relation="include">
        </childnode>
        <childnode refid="4106" relation="include">
        </childnode>
        <childnode refid="4107" relation="include">
        </childnode>
        <childnode refid="4108" relation="include">
        </childnode>
      </node>
      <node id="4103">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="4106">
        <label>api/tesseractmain.cpp</label>
        <link refid="tesseractmain_8cpp"/>
      </node>
      <node id="4107">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="4104">
        <label>api/capi.h</label>
        <link refid="capi_8h"/>
        <childnode refid="4105" relation="include">
        </childnode>
      </node>
      <node id="4108">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="4111">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_result_iterator" prot="public">tesseract::ResultIterator</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultiterator.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Iterator<sp/>for<sp/>tesseract<sp/>results<sp/>that<sp/>is<sp/>capable<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterating<sp/>in<sp/>proper<sp/>reading<sp/>order<sp/>over<sp/>Bi<sp/>Directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>mixed<sp/>Hebrew<sp/>and<sp/>English)<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Eger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>May<sp/>27<sp/>13:58:06<sp/>PST<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2011,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCMAIN_RESULT_ITERATOR_H__</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCMAIN_RESULT_ITERATOR_H__</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ltrresultiterator_8h" kindref="compound">ltrresultiterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BLOB_CHOICE_IT;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tesseract;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classtesseract_1_1_result_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="platform_8h_1a86e51270628c53ce7e2c23b1c2b4490e" kindref="member">TESS_API</ref><sp/><ref refid="classtesseract_1_1_result_iterator" kindref="compound">ResultIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator" kindref="compound">ResultIterator</ref><sp/>*StartOfParagraph(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>&amp;resit);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classtesseract_1_1_result_iterator_1a15c5061a86ff73f0198a102e20f0d493" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator_1a15c5061a86ff73f0198a102e20f0d493" kindref="member">~ResultIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Moving<sp/>around<sp/>within<sp/>the<sp/>page<sp/>============.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Begin();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Next(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAtBeginningOf(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAtFinalElement(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>element)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Accessing<sp/>data<sp/>==============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetUTF8Text(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParagraphIsLtr()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Exposed<sp/>only<sp/>for<sp/>testing<sp/>=============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateTextlineOrder(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>&amp;word_dirs,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*reading_order);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classtesseract_1_1_result_iterator_1a1c97324553ea1b897dfb5404e0f9e315" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator_1a1c97324553ea1b897dfb5404e0f9e315" kindref="member">kMinorRunStart</ref>;</highlight></codeline>
<codeline lineno="128" refid="classtesseract_1_1_result_iterator_1a15e95d21ce320a7c282c5a8d61fe73ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator_1a15e95d21ce320a7c282c5a8d61fe73ee" kindref="member">kMinorRunEnd</ref>;</highlight></codeline>
<codeline lineno="129" refid="classtesseract_1_1_result_iterator_1ad23440ad1059127afadd17c18fbf93ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator_1ad23440ad1059127afadd17c18fbf93ad" kindref="member">kComplexWord</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_result_iterator" kindref="compound">ResultIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>&amp;resit);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CurrentParagraphIsLtr()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateTextlineOrder(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>&amp;resit,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateTextlineOrder(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>&amp;resit,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>*ssd,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LTRWordIndex()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateBlobOrder(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>*blob_indices)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MoveToLogicalStartOfWord();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAtFinalSymbolOfWord()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAtFirstSymbolOfWord()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendSuffixMarks(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendUTF8WordText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IterateAndAppendUTF8TextlineText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AppendUTF8ParagraphText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BidiDebug(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>current_paragraph_is_ltr_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_beginning_of_minor_run_;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_minor_direction_;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCMAIN_RESULT_ITERATOR_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/resultiterator.h"/>
  </compounddef>
</doxygen>
