<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="xform2d_8h" kind="file">
    <compoundname>xform2d.h</compoundname>
    <includes refid="fpoint_8h" local="yes">fpoint.h</includes>
    <includedby refid="mfdefs_8h" local="yes">classify/mfdefs.h</includedby>
    <includedby refid="xform2d_8cpp" local="yes">classify/xform2d.cpp</includedby>
    <incdepgraph>
      <node id="28233">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28234" relation="include">
        </childnode>
      </node>
      <node id="28230">
        <label>classify/xform2d.h</label>
        <link refid="xform2d.h"/>
        <childnode refid="28231" relation="include">
        </childnode>
      </node>
      <node id="28231">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="28232" relation="include">
        </childnode>
        <childnode refid="28235" relation="include">
        </childnode>
        <childnode refid="28236" relation="include">
        </childnode>
      </node>
      <node id="28234">
        <label>limits.h</label>
      </node>
      <node id="28236">
        <label>math.h</label>
      </node>
      <node id="28232">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28233" relation="include">
        </childnode>
      </node>
      <node id="28235">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28241">
        <label>classify/mfx.cpp</label>
        <link refid="mfx_8cpp"/>
      </node>
      <node id="28237">
        <label>classify/xform2d.h</label>
        <link refid="xform2d.h"/>
        <childnode refid="28238" relation="include">
        </childnode>
        <childnode refid="28242" relation="include">
        </childnode>
      </node>
      <node id="28239">
        <label>classify/mf.cpp</label>
        <link refid="mf_8cpp"/>
      </node>
      <node id="28240">
        <label>classify/mfdefs.cpp</label>
        <link refid="mfdefs_8cpp"/>
      </node>
      <node id="28238">
        <label>classify/mfdefs.h</label>
        <link refid="mfdefs_8h"/>
        <childnode refid="28239" relation="include">
        </childnode>
        <childnode refid="28240" relation="include">
        </childnode>
        <childnode refid="28241" relation="include">
        </childnode>
      </node>
      <node id="28242">
        <label>classify/xform2d.cpp</label>
        <link refid="xform2d_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_m_a_t_r_i_x__2_d" prot="public">MATRIX_2D</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="xform2d_8h_1a114c96e6deaff153d976d3375cc8d699" prot="public" static="no">
        <type>struct <ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
        <definition>typedef  struct MATRIX_2D * MATRIX_2D_PTR</definition>
        <argsstring></argsstring>
        <name>MATRIX_2D_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="32" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xform2d_8h_1a983dca2167a3fa13a47ce8f8afc9874c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitMatrix</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>InitMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Public Function Prototypes </heading>
</para><para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><heading level="2">Public Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1afb01a96226aa54c553816939a46f71d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CopyMatrix</definition>
        <argsstring>(MATRIX_2D *A, MATRIX_2D *B)</argsstring>
        <name>CopyMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1a5dfdad913065e96e4120269d50b11b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TranslateMatrix</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>TranslateMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1aad60f36ecc3638874dbc7cb9ee9d5122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScaleMatrix</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>ScaleMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1aa7a4efa6ff84f08eef1d5d3c1b170e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInX</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInX</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1a6cf55b08d011b62177650fb98c19de00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInY</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1ae04e670396a293337ac3b845536e1e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInXY</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInXY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1a1335bb880128d6e360a5702c677ed480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapX</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>MapX</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1a451bbe41416d7c3bcf8bb965089895b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapY</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>MapY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1ab61886eb17eda2b07ae28bc9e6b556d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MapPoint</definition>
        <argsstring>(MATRIX_2D *M, const FPOINT &amp;A, FPOINT *B)</argsstring>
        <name>MapPoint</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1a031c1472c778a7612699d81493bc71de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapDx</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 DX, FLOAT32 DY)</argsstring>
        <name>MapDx</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DX</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1adce5da6854329847a775d5a69d54f15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapDy</definition>
        <argsstring>(MATRIX_2D M, FLOAT32 DX, FLOAT32 DY)</argsstring>
        <name>MapDy</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DX</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8h_1aecb8f8611c656f76de3067fec1320ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RotateMatrix</definition>
        <argsstring>(MATRIX_2D_PTR Matrix, FLOAT32 Angle)</argsstring>
        <name>RotateMatrix</name>
        <param>
          <type><ref refid="xform2d_8h_1a114c96e6deaff153d976d3375cc8d699" kindref="member">MATRIX_2D_PTR</ref></type>
          <declname>Matrix</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="85" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>xform2d.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Definitions<sp/>for<sp/>using<sp/>2D<sp/>point<sp/>transformation<sp/>library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Sep<sp/>22<sp/>09:57:08<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/>XFORM2D_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>XFORM2D_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fpoint_8h" kindref="compound">fpoint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_m_a_t_r_i_x__2_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>tx,<sp/><ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref>,<sp/>*<ref refid="xform2d_8h_1a114c96e6deaff153d976d3375cc8d699" kindref="member">MATRIX_2D_PTR</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a983dca2167a3fa13a47ce8f8afc9874c" kindref="member">InitMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1afb01a96226aa54c553816939a46f71d9" kindref="member">CopyMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*A,<sp/><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*B);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>matrix<sp/>scaling,<sp/>translation,<sp/>rotation,<sp/>mirroring,<sp/>etc.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a5dfdad913065e96e4120269d50b11b57" kindref="member">TranslateMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" kindref="member">ScaleMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aa7a4efa6ff84f08eef1d5d3c1b170e7b" kindref="member">MirrorMatrixInX</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a6cf55b08d011b62177650fb98c19de00" kindref="member">MirrorMatrixInY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1ae04e670396a293337ac3b845536e1e65" kindref="member">MirrorMatrixInXY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>using<sp/>a<sp/>matrix<sp/>to<sp/>map<sp/>points*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a1335bb880128d6e360a5702c677ed480" kindref="member">MapX</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a451bbe41416d7c3bcf8bb965089895b4" kindref="member">MapY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1ab61886eb17eda2b07ae28bc9e6b556d6" kindref="member">MapPoint</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>&amp;A,<sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref>*<sp/>B);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a031c1472c778a7612699d81493bc71de" kindref="member">MapDx</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DX,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DY);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1aaebe54a22135fbb4b43ec263928eafb2" kindref="member">MapDy</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DX,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DY);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aecb8f8611c656f76de3067fec1320ba4" kindref="member">RotateMatrix</ref>(MATRIX_2D_PTR<sp/>Matrix,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Angle);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/xform2d.h"/>
  </compounddef>
</doxygen>
