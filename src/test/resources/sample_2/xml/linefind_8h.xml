<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="linefind_8h" kind="file">
    <compoundname>linefind.h</compoundname>
    <includedby refid="osdetect_8cpp" local="yes">ccmain/osdetect.cpp</includedby>
    <includedby refid="pagesegmain_8cpp" local="yes">ccmain/pagesegmain.cpp</includedby>
    <includedby refid="tabfind_8h" local="yes">textord/tabfind.h</includedby>
    <includedby refid="colfind_8cpp" local="yes">textord/colfind.cpp</includedby>
    <includedby refid="linefind_8cpp" local="yes">textord/linefind.cpp</includedby>
    <includedby refid="tabfind_8cpp" local="yes">textord/tabfind.cpp</includedby>
    <invincdepgraph>
      <node id="38556">
        <label>textord/ccnontextdetect.cpp</label>
        <link refid="ccnontextdetect_8cpp"/>
      </node>
      <node id="38555">
        <label>textord/strokewidth.h</label>
        <link refid="strokewidth_8h"/>
        <childnode refid="38556" relation="include">
        </childnode>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38558" relation="include">
        </childnode>
      </node>
      <node id="38559">
        <label>textord/colfind.h</label>
        <link refid="colfind_8h"/>
        <childnode refid="38549" relation="include">
        </childnode>
        <childnode refid="38550" relation="include">
        </childnode>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38560" relation="include">
        </childnode>
      </node>
      <node id="38549">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="38561">
        <label>textord/tablefind.h</label>
        <link refid="tablefind_8h"/>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38562" relation="include">
        </childnode>
        <childnode refid="38563" relation="include">
        </childnode>
      </node>
      <node id="38568">
        <label>textord/tablerecog.h</label>
        <link refid="tablerecog_8h"/>
        <childnode refid="38563" relation="include">
        </childnode>
        <childnode refid="38569" relation="include">
        </childnode>
      </node>
      <node id="38566">
        <label>textord/imagefind.cpp</label>
        <link refid="imagefind_8cpp"/>
      </node>
      <node id="38563">
        <label>textord/tablefind.cpp</label>
        <link refid="tablefind_8cpp"/>
      </node>
      <node id="38562">
        <label>textord/colpartitionset.cpp</label>
        <link refid="colpartitionset_8cpp"/>
      </node>
      <node id="38569">
        <label>textord/tablerecog.cpp</label>
        <link refid="tablerecog_8cpp"/>
      </node>
      <node id="38550">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
      <node id="38557">
        <label>textord/colfind.cpp</label>
        <link refid="colfind_8cpp"/>
      </node>
      <node id="38567">
        <label>textord/tabfind.cpp</label>
        <link refid="tabfind_8cpp"/>
      </node>
      <node id="38572">
        <label>textord/workingpartset.cpp</label>
        <link refid="workingpartset_8cpp"/>
      </node>
      <node id="38564">
        <label>textord/colpartition.cpp</label>
        <link refid="colpartition_8cpp"/>
      </node>
      <node id="38558">
        <label>textord/strokewidth.cpp</label>
        <link refid="strokewidth_8cpp"/>
      </node>
      <node id="38548">
        <label>textord/linefind.h</label>
        <link refid="linefind.h"/>
        <childnode refid="38549" relation="include">
        </childnode>
        <childnode refid="38550" relation="include">
        </childnode>
        <childnode refid="38551" relation="include">
        </childnode>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38574" relation="include">
        </childnode>
        <childnode refid="38567" relation="include">
        </childnode>
      </node>
      <node id="38560">
        <label>textord/tabvector.cpp</label>
        <link refid="tabvector_8cpp"/>
      </node>
      <node id="38554">
        <label>textord/colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="38553" relation="include">
        </childnode>
        <childnode refid="38555" relation="include">
        </childnode>
        <childnode refid="38559" relation="include">
        </childnode>
        <childnode refid="38561" relation="include">
        </childnode>
        <childnode refid="38564" relation="include">
        </childnode>
        <childnode refid="38565" relation="include">
        </childnode>
        <childnode refid="38566" relation="include">
        </childnode>
        <childnode refid="38558" relation="include">
        </childnode>
        <childnode refid="38567" relation="include">
        </childnode>
        <childnode refid="38568" relation="include">
        </childnode>
      </node>
      <node id="38571">
        <label>textord/workingpartset.h</label>
        <link refid="workingpartset_8h"/>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38564" relation="include">
        </childnode>
        <childnode refid="38562" relation="include">
        </childnode>
        <childnode refid="38572" relation="include">
        </childnode>
      </node>
      <node id="38574">
        <label>textord/linefind.cpp</label>
        <link refid="linefind_8cpp"/>
      </node>
      <node id="38551">
        <label>textord/tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="38552" relation="include">
        </childnode>
        <childnode refid="38559" relation="include">
        </childnode>
        <childnode refid="38558" relation="include">
        </childnode>
        <childnode refid="38567" relation="include">
        </childnode>
      </node>
      <node id="38565">
        <label>textord/colpartitiongrid.cpp</label>
        <link refid="colpartitiongrid_8cpp"/>
      </node>
      <node id="38553">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect_8cpp"/>
      </node>
      <node id="38552">
        <label>textord/colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="38553" relation="include">
        </childnode>
        <childnode refid="38554" relation="include">
        </childnode>
        <childnode refid="38570" relation="include">
        </childnode>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38571" relation="include">
        </childnode>
        <childnode refid="38564" relation="include">
        </childnode>
        <childnode refid="38558" relation="include">
        </childnode>
        <childnode refid="38573" relation="include">
        </childnode>
        <childnode refid="38572" relation="include">
        </childnode>
      </node>
      <node id="38570">
        <label>textord/colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="38553" relation="include">
        </childnode>
        <childnode refid="38554" relation="include">
        </childnode>
        <childnode refid="38559" relation="include">
        </childnode>
        <childnode refid="38557" relation="include">
        </childnode>
        <childnode refid="38564" relation="include">
        </childnode>
        <childnode refid="38565" relation="include">
        </childnode>
        <childnode refid="38562" relation="include">
        </childnode>
        <childnode refid="38563" relation="include">
        </childnode>
        <childnode refid="38560" relation="include">
        </childnode>
      </node>
      <node id="38573">
        <label>textord/textlineprojection.cpp</label>
        <link refid="textlineprojection_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_line_finder" prot="public">tesseract::LineFinder</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linefind.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>find<sp/>vertical<sp/>lines<sp/>in<sp/>an<sp/>image<sp/>and<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>corresponding<sp/>list<sp/>of<sp/>empty<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Mar<sp/>20<sp/>09:49:01<sp/>PDT<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_TEXTORD_LINEFIND_H__</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_TEXTORD_LINEFIND_H__</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Boxa;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Pix;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Pixa;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C_BLOB_LIST;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BLOBNBOX_LIST;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TabVector_LIST;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classtesseract_1_1_line_finder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_line_finder" kindref="compound">LineFinder</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_line_finder_1a3a72521c00cb7725b2282b7b3cc6e6b9" kindref="member">FindAndRemoveLines</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/>Pix*<sp/>pix,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_music_mask,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>v_lines,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>h_lines);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_line_finder_1a9d00a88e3c4d6e1b9c7b28c3f6825b88" kindref="member">ConvertBoxaToBlobs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>image_height,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boxa**<sp/>boxes,<sp/>C_BLOB_LIST*<sp/>blobs);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>vertical<sp/>line<sp/>objects<sp/>in<sp/>pix_vline<sp/>and<sp/>removes<sp/>them<sp/>from<sp/>src_pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>the<sp/>given<sp/>resolution<sp/>to<sp/>determine<sp/>size<sp/>thresholds<sp/>instead<sp/>of<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>may<sp/>be<sp/>present<sp/>in<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>vertical_x<sp/>and<sp/>vertical_y<sp/>contain<sp/>a<sp/>sum<sp/>of<sp/>the<sp/>output<sp/>vectors,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thereby<sp/>giving<sp/>the<sp/>mean<sp/>vertical<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>vectors<sp/>are<sp/>owned<sp/>by<sp/>the<sp/>list<sp/>and<sp/>Frozen<sp/>(cannot<sp/>refit)<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>having<sp/>no<sp/>boxes,<sp/>as<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>refit<sp/>or<sp/>merge<sp/>separator<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>good<sp/>lines<sp/>are<sp/>found,<sp/>pix_vline<sp/>is<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindAndRemoveVLines(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix_intersections,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_vline,<sp/>Pix*<sp/>pix_non_vline,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>src_pix,<sp/>TabVector_LIST*<sp/>vectors);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>horizontal<sp/>line<sp/>objects<sp/>in<sp/>pix_vline<sp/>and<sp/>removes<sp/>them<sp/>from<sp/>src_pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>the<sp/>given<sp/>resolution<sp/>to<sp/>determine<sp/>size<sp/>thresholds<sp/>instead<sp/>of<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>may<sp/>be<sp/>present<sp/>in<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>vertical_x<sp/>and<sp/>vertical_y<sp/>contain<sp/>a<sp/>sum<sp/>of<sp/>the<sp/>output<sp/>vectors,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thereby<sp/>giving<sp/>the<sp/>mean<sp/>vertical<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>vectors<sp/>are<sp/>owned<sp/>by<sp/>the<sp/>list<sp/>and<sp/>Frozen<sp/>(cannot<sp/>refit)<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>having<sp/>no<sp/>boxes,<sp/>as<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to<sp/>refit<sp/>or<sp/>merge<sp/>separator<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>good<sp/>lines<sp/>are<sp/>found,<sp/>pix_hline<sp/>is<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindAndRemoveHLines(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix_intersections,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_y,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_hline,<sp/>Pix*<sp/>pix_non_hline,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>src_pix,<sp/>TabVector_LIST*<sp/>vectors);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>vertical<sp/>lines<sp/>in<sp/>the<sp/>given<sp/>list<sp/>of<sp/>BLOBNBOXes.<sp/>bleft<sp/>and<sp/>tright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>image<sp/>on<sp/>which<sp/>the<sp/>input<sp/>line_bblobs<sp/>were<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>input<sp/>line_bblobs<sp/>list<sp/>is<sp/>const<sp/>really.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>vertical_x<sp/>and<sp/>vertical_y<sp/>are<sp/>the<sp/>total<sp/>of<sp/>all<sp/>the<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>list<sp/>of<sp/>TabVector<sp/>makes<sp/>no<sp/>reference<sp/>to<sp/>the<sp/>input<sp/>BLOBNBOXes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindLineVectors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>line_bblobs,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>vectors);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>the<sp/>heavy<sp/>lifting<sp/>of<sp/>line<sp/>finding.<sp/>Given<sp/>src_pix<sp/>and<sp/>its<sp/>separate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resolution,<sp/>returns<sp/>image<sp/>masks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>image<sp/>masks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_vline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate<sp/>vertical<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_non_vline<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>that<sp/>didn&apos;t<sp/>look<sp/>like<sp/>vertical<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_hline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidate<sp/>horizontal<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_non_hline<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels<sp/>that<sp/>didn&apos;t<sp/>look<sp/>like<sp/>horizontal<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_intersections<sp/><sp/><sp/>pixels<sp/>where<sp/>vertical<sp/>and<sp/>horizontal<sp/>lines<sp/>meet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pix_music_mask<sp/><sp/><sp/><sp/><sp/><sp/>candidate<sp/>music<sp/>staves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>promises<sp/>to<sp/>initialize<sp/>all<sp/>the<sp/>output<sp/>(2nd<sp/>level)<sp/>pointers,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>any<sp/>of<sp/>the<sp/>returns<sp/>that<sp/>are<sp/>empty<sp/>will<sp/>be<sp/>NULL<sp/>on<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>None<sp/>of<sp/>the<sp/>input<sp/>(1st<sp/>level)<sp/>pointers<sp/>may<sp/>be<sp/>NULL<sp/>except<sp/>pix_music_mask,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>disable<sp/>music<sp/>detection,<sp/>and<sp/>pixa_display,<sp/>which<sp/>is<sp/>for<sp/>debug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetLineMasks(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/>Pix*<sp/>src_pix,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_vline,<sp/>Pix**<sp/>pix_non_vline,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_hline,<sp/>Pix**<sp/>pix_non_hline,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix**<sp/>pix_intersections,<sp/>Pix**<sp/>pix_music_mask,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pixa*<sp/>pixa_display);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>boxes<sp/>corresponding<sp/>to<sp/>the<sp/>candidate<sp/>line<sp/>segments.<sp/>Sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>line_crossings<sp/>member<sp/>of<sp/>the<sp/>boxes<sp/>so<sp/>we<sp/>can<sp/>later<sp/>determin<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>intersections<sp/>touched<sp/>by<sp/>a<sp/>full<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetLineBoxes(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>horizontal_lines,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix_lines,<sp/>Pix*<sp/>pix_intersections,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_BLOB_LIST*<sp/>line_cblobs,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>line_bblobs);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_TEXTORD_LINEFIND_H__</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/linefind.h"/>
  </compounddef>
</doxygen>
